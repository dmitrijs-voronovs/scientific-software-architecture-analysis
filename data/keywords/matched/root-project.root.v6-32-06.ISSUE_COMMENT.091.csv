id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/14793:24,safety,updat,updated,24,Fair enough. #15006 was updated to add in the rootrc:. ```. # Force the producing of files forward compatible with (unpatched) version. # of ROOT older than v6.30 by recording the internal bits kIsOnHeap and. # kNotDeleted; Older releases were not explicitly setting those bits to the. # correct value but instead used verbatim the value stored in the file. # TFile.v630forwardCompatibility: no. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/issues/14793:24,security,updat,updated,24,Fair enough. #15006 was updated to add in the rootrc:. ```. # Force the producing of files forward compatible with (unpatched) version. # of ROOT older than v6.30 by recording the internal bits kIsOnHeap and. # kNotDeleted; Older releases were not explicitly setting those bits to the. # correct value but instead used verbatim the value stored in the file. # TFile.v630forwardCompatibility: no. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14793
https://github.com/root-project/root/pull/14794:132,availability,servic,services,132,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196397/console). Hi @bellenot, do you have a clue if that failure is related to this particular PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:248,availability,failur,failure,248,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196397/console). Hi @bellenot, do you have a clue if that failure is related to this particular PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:2,deployability,Build,Build,2,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196397/console). Hi @bellenot, do you have a clue if that failure is related to this particular PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:8,deployability,fail,failed,8,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196397/console). Hi @bellenot, do you have a clue if that failure is related to this particular PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:56,deployability,build,build,56,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196397/console). Hi @bellenot, do you have a clue if that failure is related to this particular PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:90,deployability,build,build,90,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196397/console). Hi @bellenot, do you have a clue if that failure is related to this particular PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:132,deployability,servic,services,132,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196397/console). Hi @bellenot, do you have a clue if that failure is related to this particular PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:184,deployability,build,build,184,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196397/console). Hi @bellenot, do you have a clue if that failure is related to this particular PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:248,deployability,fail,failure,248,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196397/console). Hi @bellenot, do you have a clue if that failure is related to this particular PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:132,integrability,servic,services,132,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196397/console). Hi @bellenot, do you have a clue if that failure is related to this particular PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:132,modifiability,servic,services,132,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196397/console). Hi @bellenot, do you have a clue if that failure is related to this particular PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:248,performance,failur,failure,248,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196397/console). Hi @bellenot, do you have a clue if that failure is related to this particular PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:8,reliability,fail,failed,8,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196397/console). Hi @bellenot, do you have a clue if that failure is related to this particular PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:248,reliability,fail,failure,248,"> Build failed on windows10/default. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196397/console). Hi @bellenot, do you have a clue if that failure is related to this particular PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:6,availability,failur,failures,6,These failures seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:6,deployability,fail,failures,6,These failures seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:6,performance,failur,failures,6,These failures seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:6,reliability,fail,failures,6,These failures seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:25,availability,failur,failures,25,Another set of unrelated failures. @guitargeek can we move forward here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:25,deployability,fail,failures,25,Another set of unrelated failures. @guitargeek can we move forward here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:25,performance,failur,failures,25,Another set of unrelated failures. @guitargeek can we move forward here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14794:25,reliability,fail,failures,25,Another set of unrelated failures. @guitargeek can we move forward here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14794
https://github.com/root-project/root/pull/14800:91,availability,down,downloading,91,> but Mac 12 and Mac 13 are still not happy! Tests on macs failing due to network problems downloading ROOT files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:59,deployability,fail,failing,59,> but Mac 12 and Mac 13 are still not happy! Tests on macs failing due to network problems downloading ROOT files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:74,performance,network,network,74,> but Mac 12 and Mac 13 are still not happy! Tests on macs failing due to network problems downloading ROOT files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:59,reliability,fail,failing,59,> but Mac 12 and Mac 13 are still not happy! Tests on macs failing due to network problems downloading ROOT files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:45,safety,Test,Tests,45,> but Mac 12 and Mac 13 are still not happy! Tests on macs failing due to network problems downloading ROOT files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:74,security,network,network,74,> but Mac 12 and Mac 13 are still not happy! Tests on macs failing due to network problems downloading ROOT files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:45,testability,Test,Tests,45,> but Mac 12 and Mac 13 are still not happy! Tests on macs failing due to network problems downloading ROOT files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:99,availability,down,downloading,99,"> > but Mac 12 and Mac 13 are still not happy! > . > Tests on macs failing due to network problems downloading ROOT files. Anyway, I would prefer to see them green. Why do they failed? Can I trigger a new build?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:67,deployability,fail,failing,67,"> > but Mac 12 and Mac 13 are still not happy! > . > Tests on macs failing due to network problems downloading ROOT files. Anyway, I would prefer to see them green. Why do they failed? Can I trigger a new build?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:177,deployability,fail,failed,177,"> > but Mac 12 and Mac 13 are still not happy! > . > Tests on macs failing due to network problems downloading ROOT files. Anyway, I would prefer to see them green. Why do they failed? Can I trigger a new build?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:205,deployability,build,build,205,"> > but Mac 12 and Mac 13 are still not happy! > . > Tests on macs failing due to network problems downloading ROOT files. Anyway, I would prefer to see them green. Why do they failed? Can I trigger a new build?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:158,energy efficiency,green,green,158,"> > but Mac 12 and Mac 13 are still not happy! > . > Tests on macs failing due to network problems downloading ROOT files. Anyway, I would prefer to see them green. Why do they failed? Can I trigger a new build?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:82,performance,network,network,82,"> > but Mac 12 and Mac 13 are still not happy! > . > Tests on macs failing due to network problems downloading ROOT files. Anyway, I would prefer to see them green. Why do they failed? Can I trigger a new build?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:67,reliability,fail,failing,67,"> > but Mac 12 and Mac 13 are still not happy! > . > Tests on macs failing due to network problems downloading ROOT files. Anyway, I would prefer to see them green. Why do they failed? Can I trigger a new build?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:177,reliability,fail,failed,177,"> > but Mac 12 and Mac 13 are still not happy! > . > Tests on macs failing due to network problems downloading ROOT files. Anyway, I would prefer to see them green. Why do they failed? Can I trigger a new build?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:53,safety,Test,Tests,53,"> > but Mac 12 and Mac 13 are still not happy! > . > Tests on macs failing due to network problems downloading ROOT files. Anyway, I would prefer to see them green. Why do they failed? Can I trigger a new build?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:82,security,network,network,82,"> > but Mac 12 and Mac 13 are still not happy! > . > Tests on macs failing due to network problems downloading ROOT files. Anyway, I would prefer to see them green. Why do they failed? Can I trigger a new build?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:53,testability,Test,Tests,53,"> > but Mac 12 and Mac 13 are still not happy! > . > Tests on macs failing due to network problems downloading ROOT files. Anyway, I would prefer to see them green. Why do they failed? Can I trigger a new build?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:139,usability,prefer,prefer,139,"> > but Mac 12 and Mac 13 are still not happy! > . > Tests on macs failing due to network problems downloading ROOT files. Anyway, I would prefer to see them green. Why do they failed? Can I trigger a new build?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:22,availability,failur,failures,22,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:220,availability,failur,failure,220,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:22,deployability,fail,failures,22,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:74,deployability,Fail,Failed,74,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:220,deployability,fail,failure,220,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:244,deployability,build,builds,244,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:11,energy efficiency,green,green,11,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:22,performance,failur,failures,22,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:155,performance,time,timeout,155,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:220,performance,failur,failure,220,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:22,reliability,fail,failures,22,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:74,reliability,Fail,Failed,74,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:220,reliability,fail,failure,220,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:155,safety,timeout,timeout,155,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:176,safety,test,test,176,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:128,security,auth,auth,128,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14800:176,testability,test,test,176,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14800
https://github.com/root-project/root/pull/14802:60,usability,help,help,60,"Hi @vepadulano , Great! Thanks! Please let me know if I can help with anything!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14802
https://github.com/root-project/root/pull/14802:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14802
https://github.com/root-project/root/pull/14803:16,availability,failur,failure,16,"Example nightly failure https://github.com/root-project/root/actions/runs/8013557655/job/21890781986. The failure is not visible in the PR builds because we build with `RelWithDebInfo`, whereas this needs `Release` to be visible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14803
https://github.com/root-project/root/pull/14803:106,availability,failur,failure,106,"Example nightly failure https://github.com/root-project/root/actions/runs/8013557655/job/21890781986. The failure is not visible in the PR builds because we build with `RelWithDebInfo`, whereas this needs `Release` to be visible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14803
https://github.com/root-project/root/pull/14803:16,deployability,fail,failure,16,"Example nightly failure https://github.com/root-project/root/actions/runs/8013557655/job/21890781986. The failure is not visible in the PR builds because we build with `RelWithDebInfo`, whereas this needs `Release` to be visible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14803
https://github.com/root-project/root/pull/14803:106,deployability,fail,failure,106,"Example nightly failure https://github.com/root-project/root/actions/runs/8013557655/job/21890781986. The failure is not visible in the PR builds because we build with `RelWithDebInfo`, whereas this needs `Release` to be visible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14803
https://github.com/root-project/root/pull/14803:139,deployability,build,builds,139,"Example nightly failure https://github.com/root-project/root/actions/runs/8013557655/job/21890781986. The failure is not visible in the PR builds because we build with `RelWithDebInfo`, whereas this needs `Release` to be visible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14803
https://github.com/root-project/root/pull/14803:157,deployability,build,build,157,"Example nightly failure https://github.com/root-project/root/actions/runs/8013557655/job/21890781986. The failure is not visible in the PR builds because we build with `RelWithDebInfo`, whereas this needs `Release` to be visible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14803
https://github.com/root-project/root/pull/14803:206,deployability,Releas,Release,206,"Example nightly failure https://github.com/root-project/root/actions/runs/8013557655/job/21890781986. The failure is not visible in the PR builds because we build with `RelWithDebInfo`, whereas this needs `Release` to be visible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14803
https://github.com/root-project/root/pull/14803:16,performance,failur,failure,16,"Example nightly failure https://github.com/root-project/root/actions/runs/8013557655/job/21890781986. The failure is not visible in the PR builds because we build with `RelWithDebInfo`, whereas this needs `Release` to be visible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14803
https://github.com/root-project/root/pull/14803:106,performance,failur,failure,106,"Example nightly failure https://github.com/root-project/root/actions/runs/8013557655/job/21890781986. The failure is not visible in the PR builds because we build with `RelWithDebInfo`, whereas this needs `Release` to be visible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14803
https://github.com/root-project/root/pull/14803:16,reliability,fail,failure,16,"Example nightly failure https://github.com/root-project/root/actions/runs/8013557655/job/21890781986. The failure is not visible in the PR builds because we build with `RelWithDebInfo`, whereas this needs `Release` to be visible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14803
https://github.com/root-project/root/pull/14803:106,reliability,fail,failure,106,"Example nightly failure https://github.com/root-project/root/actions/runs/8013557655/job/21890781986. The failure is not visible in the PR builds because we build with `RelWithDebInfo`, whereas this needs `Release` to be visible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14803
https://github.com/root-project/root/pull/14803:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14803
https://github.com/root-project/root/pull/14807:45,usability,interact,interaction,45,This is a delicate area and that affects the interaction with Frameworks. @Dr15Jones and @makortel would this change possitively or negatively affects `CMSSW` (and/or is neutral :) ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:328,availability,Servic,Services,328,"> This is a delicate area and that affects the interaction with Frameworks. @Dr15Jones and @makortel would this change possitively or negatively affects `CMSSW` (and/or is neutral :) ). As far as I can tell, CMSSW doesn't `EnableImplicitMT`:. https://github.com/cms-sw/cmssw/blob/1e2c4980d73549aad8a2c4db1034bd15d2468e0b/FWCore/Services/python/InitRootHandlers_cfi.py#L9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:328,deployability,Servic,Services,328,"> This is a delicate area and that affects the interaction with Frameworks. @Dr15Jones and @makortel would this change possitively or negatively affects `CMSSW` (and/or is neutral :) ). As far as I can tell, CMSSW doesn't `EnableImplicitMT`:. https://github.com/cms-sw/cmssw/blob/1e2c4980d73549aad8a2c4db1034bd15d2468e0b/FWCore/Services/python/InitRootHandlers_cfi.py#L9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:328,integrability,Servic,Services,328,"> This is a delicate area and that affects the interaction with Frameworks. @Dr15Jones and @makortel would this change possitively or negatively affects `CMSSW` (and/or is neutral :) ). As far as I can tell, CMSSW doesn't `EnableImplicitMT`:. https://github.com/cms-sw/cmssw/blob/1e2c4980d73549aad8a2c4db1034bd15d2468e0b/FWCore/Services/python/InitRootHandlers_cfi.py#L9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:328,modifiability,Servic,Services,328,"> This is a delicate area and that affects the interaction with Frameworks. @Dr15Jones and @makortel would this change possitively or negatively affects `CMSSW` (and/or is neutral :) ). As far as I can tell, CMSSW doesn't `EnableImplicitMT`:. https://github.com/cms-sw/cmssw/blob/1e2c4980d73549aad8a2c4db1034bd15d2468e0b/FWCore/Services/python/InitRootHandlers_cfi.py#L9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:214,reliability,doe,doesn,214,"> This is a delicate area and that affects the interaction with Frameworks. @Dr15Jones and @makortel would this change possitively or negatively affects `CMSSW` (and/or is neutral :) ). As far as I can tell, CMSSW doesn't `EnableImplicitMT`:. https://github.com/cms-sw/cmssw/blob/1e2c4980d73549aad8a2c4db1034bd15d2468e0b/FWCore/Services/python/InitRootHandlers_cfi.py#L9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:47,usability,interact,interaction,47,"> This is a delicate area and that affects the interaction with Frameworks. @Dr15Jones and @makortel would this change possitively or negatively affects `CMSSW` (and/or is neutral :) ). As far as I can tell, CMSSW doesn't `EnableImplicitMT`:. https://github.com/cms-sw/cmssw/blob/1e2c4980d73549aad8a2c4db1034bd15d2468e0b/FWCore/Services/python/InitRootHandlers_cfi.py#L9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:155,availability,Servic,Services,155,Our default really comes from the C++ code and that sets it to true . https://github.com/cms-sw/cmssw/blob/1e2c4980d73549aad8a2c4db1034bd15d2468e0b/FWCore/Services/plugins/InitRootHandlers.cc#L925,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:155,deployability,Servic,Services,155,Our default really comes from the C++ code and that sets it to true . https://github.com/cms-sw/cmssw/blob/1e2c4980d73549aad8a2c4db1034bd15d2468e0b/FWCore/Services/plugins/InitRootHandlers.cc#L925,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:155,integrability,Servic,Services,155,Our default really comes from the C++ code and that sets it to true . https://github.com/cms-sw/cmssw/blob/1e2c4980d73549aad8a2c4db1034bd15d2468e0b/FWCore/Services/plugins/InitRootHandlers.cc#L925,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:164,interoperability,plug,plugins,164,Our default really comes from the C++ code and that sets it to true . https://github.com/cms-sw/cmssw/blob/1e2c4980d73549aad8a2c4db1034bd15d2468e0b/FWCore/Services/plugins/InitRootHandlers.cc#L925,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:155,modifiability,Servic,Services,155,Our default really comes from the C++ code and that sets it to true . https://github.com/cms-sw/cmssw/blob/1e2c4980d73549aad8a2c4db1034bd15d2468e0b/FWCore/Services/plugins/InitRootHandlers.cc#L925,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:489,modifiability,interm,intermingled,489,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:614,modifiability,interm,intermingling,614,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:662,modifiability,concern,concerned,662,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:288,performance,I/O,I/O,288,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:456,performance,concurren,concurrently,456,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:743,performance,synch,synchronization,743,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:407,reliability,doe,does,407,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:295,safety,isol,isolated,295,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:340,safety,isol,isolate,340,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:587,safety,isol,isolate,587,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:868,safety,isol,isolate,868,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:295,security,iso,isolated,295,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:340,security,iso,isolate,340,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:587,security,iso,isolate,587,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:868,security,iso,isolate,868,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:295,testability,isol,isolated,295,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:340,testability,isol,isolate,340,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:587,testability,isol,isolate,587,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:662,testability,concern,concerned,662,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:868,testability,isol,isolate,868,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:95,usability,usab,usable,95,"In CMSSW. - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:404,availability,cluster,cluster,404,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:404,deployability,cluster,cluster,404,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:228,energy efficiency,idl,idle,228,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:464,energy efficiency,load,loading,464,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:660,energy efficiency,optim,optimizations,660,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:299,integrability,asynchron,asynchronous,299,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:228,interoperability,idl,idle,228,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:312,modifiability,deco,decompression,312,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:369,modifiability,deco,decompression,369,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:25,performance,perform,performance,25,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:299,performance,asynch,asynchronous,299,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:464,performance,load,loading,464,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:535,performance,perform,performance,535,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:660,performance,optimiz,optimizations,660,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:25,usability,perform,performance,25,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:97,usability,user,user,97,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:535,usability,perform,performance,535,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:585,usability,prefer,prefer,585,"So naturally, this has a performance impact: Obviously using only the number of threads that the user allowed ROOT to use will only be less than the entire machine (side note: this can also be a good thing because it means less idle threads if there isn't enough work...). Additionally removing the asynchronous decompression in `RClusterPool` isn't ideal (after this, decompression only starts when the cluster is actually requested instead of when it's done pre-loading and it's blocking the ""main"" thread) and it negatively impacts performance, but @jblomer and me discussed and we prefer going to a correct implementation first before re-introducing other optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1459,deployability,resourc,resources,1459,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1038,energy efficiency,schedul,scheduling,1038,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1459,energy efficiency,resourc,resources,1459,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:700,integrability,wrap,wrapped,700,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:531,modifiability,interm,intermingled,531,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:925,modifiability,interm,intermingling,925,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1132,modifiability,concern,concerned,1132,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:320,performance,I/O,I/O,320,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:498,performance,concurren,concurrently,498,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1038,performance,schedul,scheduling,1038,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1213,performance,synch,synchronization,1213,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1459,performance,resourc,resources,1459,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:449,reliability,doe,does,449,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:327,safety,isol,isolated,327,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:372,safety,isol,isolate,372,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:898,safety,isol,isolate,898,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1338,safety,isol,isolate,1338,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1400,safety,except,except,1400,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1459,safety,resourc,resources,1459,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:327,security,iso,isolated,327,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:372,security,iso,isolate,372,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:898,security,iso,isolate,898,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1338,security,iso,isolate,1338,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:327,testability,isol,isolated,327,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:372,testability,isol,isolate,372,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:898,testability,isol,isolate,898,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1132,testability,concern,concerned,1132,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1338,testability,isol,isolate,1338,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1459,testability,resourc,resources,1459,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:115,usability,usab,usable,115,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1496,usability,user,user,1496,"@makortel . > In CMSSW. > . > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB. > . > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call. > . > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. > . > . > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:663,deployability,resourc,resource,663,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:663,energy efficiency,resourc,resource,663,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:872,interoperability,semant,semantics,872,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:663,performance,resourc,resource,663,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:95,reliability,doe,doesn,95,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:521,reliability,doe,doesn,521,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:636,reliability,doe,doesn,636,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:966,reliability,doe,does,966,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:476,safety,isol,isolate,476,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:663,safety,resourc,resource,663,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:783,safety,isol,isolate,783,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:476,security,iso,isolate,476,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:783,security,iso,isolate,783,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:476,testability,isol,isolate,476,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:663,testability,resourc,resource,663,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:783,testability,isol,isolate,783,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:443,usability,interact,interacts,443,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:656,usability,user,user,656,"I had a deeper look here, and for the read path (via `TTreeCacheUnzip::CreateTasks()`) this PR doesn't change much because the created task just launches a `TThreadExecutor` which uses ROOT's global task arena anyway. For the writing path, `TBranch::WriteBasketImpl` will just enqueue tasks via `TBranchIMTHelper`. These will indeed now end up in the same task arena from multiple threads. @makortel did you have a chance to find out how this interacts with `this_task_arena::isolate()`? What is a path forward here that doesn't negatively impact the experiment frameworks? In general, I really want this changed because right now ROOT doesn't respect the user's resource argument passed to `EnableImplicitMT` and that's a bug. What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... (edit: now implemented; there's even a lengthy comment at the top of `TThreadExecutor.cxx`, d'oh)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:385,integrability,sub,submitting,385,"> What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... So this doesn't work (easily) from the ROOT side because we would need the same isolation tag when submitting tasks and when waiting for them. We could get this with an `isolated_task_group`, but this requires at least TBB 2020 and is still in preview... So I would first be very interested to hear if this change is actually expected to break isolation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:146,interoperability,semant,semantics,146,"> What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... So this doesn't work (easily) from the ROOT side because we would need the same isolation tag when submitting tasks and when waiting for them. We could get this with an `isolated_task_group`, but this requires at least TBB 2020 and is still in preview... So I would first be very interested to hear if this change is actually expected to break isolation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:240,reliability,doe,does,240,"> What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... So this doesn't work (easily) from the ROOT side because we would need the same isolation tag when submitting tasks and when waiting for them. We could get this with an `isolated_task_group`, but this requires at least TBB 2020 and is still in preview... So I would first be very interested to hear if this change is actually expected to break isolation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:294,reliability,doe,doesn,294,"> What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... So this doesn't work (easily) from the ROOT side because we would need the same isolation tag when submitting tasks and when waiting for them. We could get this with an `isolated_task_group`, but this requires at least TBB 2020 and is still in preview... So I would first be very interested to hear if this change is actually expected to break isolation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:57,safety,isol,isolate,57,"> What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... So this doesn't work (easily) from the ROOT side because we would need the same isolation tag when submitting tasks and when waiting for them. We could get this with an `isolated_task_group`, but this requires at least TBB 2020 and is still in preview... So I would first be very interested to hear if this change is actually expected to break isolation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:366,safety,isol,isolation,366,"> What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... So this doesn't work (easily) from the ROOT side because we would need the same isolation tag when submitting tasks and when waiting for them. We could get this with an `isolated_task_group`, but this requires at least TBB 2020 and is still in preview... So I would first be very interested to hear if this change is actually expected to break isolation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:630,safety,isol,isolation,630,"> What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... So this doesn't work (easily) from the ROOT side because we would need the same isolation tag when submitting tasks and when waiting for them. We could get this with an `isolated_task_group`, but this requires at least TBB 2020 and is still in preview... So I would first be very interested to hear if this change is actually expected to break isolation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:57,security,iso,isolate,57,"> What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... So this doesn't work (easily) from the ROOT side because we would need the same isolation tag when submitting tasks and when waiting for them. We could get this with an `isolated_task_group`, but this requires at least TBB 2020 and is still in preview... So I would first be very interested to hear if this change is actually expected to break isolation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:366,security,iso,isolation,366,"> What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... So this doesn't work (easily) from the ROOT side because we would need the same isolation tag when submitting tasks and when waiting for them. We could get this with an `isolated_task_group`, but this requires at least TBB 2020 and is still in preview... So I would first be very interested to hear if this change is actually expected to break isolation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:630,security,iso,isolation,630,"> What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... So this doesn't work (easily) from the ROOT side because we would need the same isolation tag when submitting tasks and when waiting for them. We could get this with an `isolated_task_group`, but this requires at least TBB 2020 and is still in preview... So I would first be very interested to hear if this change is actually expected to break isolation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:57,testability,isol,isolate,57,"> What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... So this doesn't work (easily) from the ROOT side because we would need the same isolation tag when submitting tasks and when waiting for them. We could get this with an `isolated_task_group`, but this requires at least TBB 2020 and is still in preview... So I would first be very interested to hear if this change is actually expected to break isolation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:366,testability,isol,isolation,366,"> What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... So this doesn't work (easily) from the ROOT side because we would need the same isolation tag when submitting tasks and when waiting for them. We could get this with an `isolated_task_group`, but this requires at least TBB 2020 and is still in preview... So I would first be very interested to hear if this change is actually expected to break isolation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:630,testability,isol,isolation,630,"> What we could maybe offer is calling `this_task_arena::isolate()` ourselves from `TTaskGroup::ExecuteInIsolation`. This should get you the same semantics even if ROOT uses its own task arena. Actually, this is also what `TThreadExecutor` does so that may be a good idea regardless... So this doesn't work (easily) from the ROOT side because we would need the same isolation tag when submitting tasks and when waiting for them. We could get this with an `isolated_task_group`, but this requires at least TBB 2020 and is still in preview... So I would first be very interested to hear if this change is actually expected to break isolation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2462,deployability,modul,modules,2462,"isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2556,deployability,modul,modules,2556,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2646,deployability,modul,module,2646,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2693,deployability,modul,module,2693,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2879,deployability,modul,module,2879,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1239,energy efficiency,load,load,1239,"<thread>. #include <atomic>. #include <array>. //#define OTHER . #if defined(OTHER_ISOLATE) and !defined(OTHER). #define OTHER. #endif. namespace {. int activity_group(int i) {. static thread_local int v=0;. if (i != 0) {. v = i;. } if ( i == 100) {. v=0;. }. return v;. }. std::atomic<int> activityID{0};. std::atomic<int> waitingToStart{2};. std::array<std::atomic<bool>, 2> otherThreadStarted ={false, false};. }. int main() {. #if defined(OTHER). std::cout <<""built with OTHER""<<std::endl;. #endif. #if defined(OTHER_ISOLATE). std::cout <<""built with OTHER_ISOLATE""<<std::endl;. #endif. #if defined(NO_ISOLATE). std::cout <<""built with NO_ISOLATE""<<std::endl;. #endif. oneapi::tbb::task_arena main_arena(4);. oneapi::tbb::task_arena other_arena(4);. oneapi::tbb::task_group other_group;. main_arena.execute([&other_arena, &other_group](). {. oneapi::tbb::task_group group;. auto activity = [&other_arena](). {. auto id = activity_group( ++activityID );. --waitingToStart;. while(waitingToStart.load() > 0);. #if !defined(NO_ISOLATE). oneapi::tbb::this_task_arena::isolate([id, &other_arena](). #endif. {. #if defined(OTHER). other_arena.execute([id]() {. #endif. #if defined(OTHER_ISOLATE). oneapi::tbb::this_task_arena::isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:3253,integrability,messag,message,3253,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:3253,interoperability,messag,message,3253,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2462,modifiability,modul,modules,2462,"isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2556,modifiability,modul,modules,2556,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2646,modifiability,modul,module,2646,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2693,modifiability,modul,module,2693,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2879,modifiability,modul,module,2879,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1239,performance,load,load,1239,"<thread>. #include <atomic>. #include <array>. //#define OTHER . #if defined(OTHER_ISOLATE) and !defined(OTHER). #define OTHER. #endif. namespace {. int activity_group(int i) {. static thread_local int v=0;. if (i != 0) {. v = i;. } if ( i == 100) {. v=0;. }. return v;. }. std::atomic<int> activityID{0};. std::atomic<int> waitingToStart{2};. std::array<std::atomic<bool>, 2> otherThreadStarted ={false, false};. }. int main() {. #if defined(OTHER). std::cout <<""built with OTHER""<<std::endl;. #endif. #if defined(OTHER_ISOLATE). std::cout <<""built with OTHER_ISOLATE""<<std::endl;. #endif. #if defined(NO_ISOLATE). std::cout <<""built with NO_ISOLATE""<<std::endl;. #endif. oneapi::tbb::task_arena main_arena(4);. oneapi::tbb::task_arena other_arena(4);. oneapi::tbb::task_group other_group;. main_arena.execute([&other_arena, &other_group](). {. oneapi::tbb::task_group group;. auto activity = [&other_arena](). {. auto id = activity_group( ++activityID );. --waitingToStart;. while(waitingToStart.load() > 0);. #if !defined(NO_ISOLATE). oneapi::tbb::this_task_arena::isolate([id, &other_arena](). #endif. {. #if defined(OTHER). other_arena.execute([id]() {. #endif. #if defined(OTHER_ISOLATE). oneapi::tbb::this_task_arena::isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2470,performance,concurren,concurrently,2470,"d](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:3267,performance,time,time,3267,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:3425,performance,time,time,3425,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:72,reliability,doe,does,72,"So I've created a test program that shows that the use of another arena does cause 'cross activity' contamination. The program is. ```C++. #include ""oneapi/tbb/task_arena.h"". #include ""oneapi/tbb/task_group.h"". #include <iostream>. #include <thread>. #include <atomic>. #include <array>. //#define OTHER . #if defined(OTHER_ISOLATE) and !defined(OTHER). #define OTHER. #endif. namespace {. int activity_group(int i) {. static thread_local int v=0;. if (i != 0) {. v = i;. } if ( i == 100) {. v=0;. }. return v;. }. std::atomic<int> activityID{0};. std::atomic<int> waitingToStart{2};. std::array<std::atomic<bool>, 2> otherThreadStarted ={false, false};. }. int main() {. #if defined(OTHER). std::cout <<""built with OTHER""<<std::endl;. #endif. #if defined(OTHER_ISOLATE). std::cout <<""built with OTHER_ISOLATE""<<std::endl;. #endif. #if defined(NO_ISOLATE). std::cout <<""built with NO_ISOLATE""<<std::endl;. #endif. oneapi::tbb::task_arena main_arena(4);. oneapi::tbb::task_arena other_arena(4);. oneapi::tbb::task_group other_group;. main_arena.execute([&other_arena, &other_group](). {. oneapi::tbb::task_group group;. auto activity = [&other_arena](). {. auto id = activity_group( ++activityID );. --waitingToStart;. while(waitingToStart.load() > 0);. #if !defined(NO_ISOLATE). oneapi::tbb::this_task_arena::isolate([id, &other_arena](). #endif. {. #if defined(OTHER). other_arena.execute([id]() {. #endif. #if defined(OTHER_ISOLATE). oneapi::tbb::this_task_arena::isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::end",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:3468,reliability,doe,does,3468,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:18,safety,test,test,18,"So I've created a test program that shows that the use of another arena does cause 'cross activity' contamination. The program is. ```C++. #include ""oneapi/tbb/task_arena.h"". #include ""oneapi/tbb/task_group.h"". #include <iostream>. #include <thread>. #include <atomic>. #include <array>. //#define OTHER . #if defined(OTHER_ISOLATE) and !defined(OTHER). #define OTHER. #endif. namespace {. int activity_group(int i) {. static thread_local int v=0;. if (i != 0) {. v = i;. } if ( i == 100) {. v=0;. }. return v;. }. std::atomic<int> activityID{0};. std::atomic<int> waitingToStart{2};. std::array<std::atomic<bool>, 2> otherThreadStarted ={false, false};. }. int main() {. #if defined(OTHER). std::cout <<""built with OTHER""<<std::endl;. #endif. #if defined(OTHER_ISOLATE). std::cout <<""built with OTHER_ISOLATE""<<std::endl;. #endif. #if defined(NO_ISOLATE). std::cout <<""built with NO_ISOLATE""<<std::endl;. #endif. oneapi::tbb::task_arena main_arena(4);. oneapi::tbb::task_arena other_arena(4);. oneapi::tbb::task_group other_group;. main_arena.execute([&other_arena, &other_group](). {. oneapi::tbb::task_group group;. auto activity = [&other_arena](). {. auto id = activity_group( ++activityID );. --waitingToStart;. while(waitingToStart.load() > 0);. #if !defined(NO_ISOLATE). oneapi::tbb::this_task_arena::isolate([id, &other_arena](). #endif. {. #if defined(OTHER). other_arena.execute([id]() {. #endif. #if defined(OTHER_ISOLATE). oneapi::tbb::this_task_arena::isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::end",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1309,safety,isol,isolate,1309,"ined(OTHER_ISOLATE) and !defined(OTHER). #define OTHER. #endif. namespace {. int activity_group(int i) {. static thread_local int v=0;. if (i != 0) {. v = i;. } if ( i == 100) {. v=0;. }. return v;. }. std::atomic<int> activityID{0};. std::atomic<int> waitingToStart{2};. std::array<std::atomic<bool>, 2> otherThreadStarted ={false, false};. }. int main() {. #if defined(OTHER). std::cout <<""built with OTHER""<<std::endl;. #endif. #if defined(OTHER_ISOLATE). std::cout <<""built with OTHER_ISOLATE""<<std::endl;. #endif. #if defined(NO_ISOLATE). std::cout <<""built with NO_ISOLATE""<<std::endl;. #endif. oneapi::tbb::task_arena main_arena(4);. oneapi::tbb::task_arena other_arena(4);. oneapi::tbb::task_group other_group;. main_arena.execute([&other_arena, &other_group](). {. oneapi::tbb::task_group group;. auto activity = [&other_arena](). {. auto id = activity_group( ++activityID );. --waitingToStart;. while(waitingToStart.load() > 0);. #if !defined(NO_ISOLATE). oneapi::tbb::this_task_arena::isolate([id, &other_arena](). #endif. {. #if defined(OTHER). other_arena.execute([id]() {. #endif. #if defined(OTHER_ISOLATE). oneapi::tbb::this_task_arena::isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1466,safety,isol,isolate,1466,". } if ( i == 100) {. v=0;. }. return v;. }. std::atomic<int> activityID{0};. std::atomic<int> waitingToStart{2};. std::array<std::atomic<bool>, 2> otherThreadStarted ={false, false};. }. int main() {. #if defined(OTHER). std::cout <<""built with OTHER""<<std::endl;. #endif. #if defined(OTHER_ISOLATE). std::cout <<""built with OTHER_ISOLATE""<<std::endl;. #endif. #if defined(NO_ISOLATE). std::cout <<""built with NO_ISOLATE""<<std::endl;. #endif. oneapi::tbb::task_arena main_arena(4);. oneapi::tbb::task_arena other_arena(4);. oneapi::tbb::task_group other_group;. main_arena.execute([&other_arena, &other_group](). {. oneapi::tbb::task_group group;. auto activity = [&other_arena](). {. auto id = activity_group( ++activityID );. --waitingToStart;. while(waitingToStart.load() > 0);. #if !defined(NO_ISOLATE). oneapi::tbb::this_task_arena::isolate([id, &other_arena](). #endif. {. #if defined(OTHER). other_arena.execute([id]() {. #endif. #if defined(OTHER_ISOLATE). oneapi::tbb::this_task_arena::isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2462,safety,modul,modules,2462,"isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2556,safety,modul,modules,2556,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2646,safety,modul,module,2646,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2693,safety,modul,module,2693,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2846,safety,isol,isolation,2846,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2879,safety,modul,module,2879,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2929,safety,isol,isolate,2929,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:3046,safety,isol,isolate,3046,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:3161,safety,isol,isolate,3161,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:3321,safety,isol,isolate,3321,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1309,security,iso,isolate,1309,"ined(OTHER_ISOLATE) and !defined(OTHER). #define OTHER. #endif. namespace {. int activity_group(int i) {. static thread_local int v=0;. if (i != 0) {. v = i;. } if ( i == 100) {. v=0;. }. return v;. }. std::atomic<int> activityID{0};. std::atomic<int> waitingToStart{2};. std::array<std::atomic<bool>, 2> otherThreadStarted ={false, false};. }. int main() {. #if defined(OTHER). std::cout <<""built with OTHER""<<std::endl;. #endif. #if defined(OTHER_ISOLATE). std::cout <<""built with OTHER_ISOLATE""<<std::endl;. #endif. #if defined(NO_ISOLATE). std::cout <<""built with NO_ISOLATE""<<std::endl;. #endif. oneapi::tbb::task_arena main_arena(4);. oneapi::tbb::task_arena other_arena(4);. oneapi::tbb::task_group other_group;. main_arena.execute([&other_arena, &other_group](). {. oneapi::tbb::task_group group;. auto activity = [&other_arena](). {. auto id = activity_group( ++activityID );. --waitingToStart;. while(waitingToStart.load() > 0);. #if !defined(NO_ISOLATE). oneapi::tbb::this_task_arena::isolate([id, &other_arena](). #endif. {. #if defined(OTHER). other_arena.execute([id]() {. #endif. #if defined(OTHER_ISOLATE). oneapi::tbb::this_task_arena::isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1466,security,iso,isolate,1466,". } if ( i == 100) {. v=0;. }. return v;. }. std::atomic<int> activityID{0};. std::atomic<int> waitingToStart{2};. std::array<std::atomic<bool>, 2> otherThreadStarted ={false, false};. }. int main() {. #if defined(OTHER). std::cout <<""built with OTHER""<<std::endl;. #endif. #if defined(OTHER_ISOLATE). std::cout <<""built with OTHER_ISOLATE""<<std::endl;. #endif. #if defined(NO_ISOLATE). std::cout <<""built with NO_ISOLATE""<<std::endl;. #endif. oneapi::tbb::task_arena main_arena(4);. oneapi::tbb::task_arena other_arena(4);. oneapi::tbb::task_group other_group;. main_arena.execute([&other_arena, &other_group](). {. oneapi::tbb::task_group group;. auto activity = [&other_arena](). {. auto id = activity_group( ++activityID );. --waitingToStart;. while(waitingToStart.load() > 0);. #if !defined(NO_ISOLATE). oneapi::tbb::this_task_arena::isolate([id, &other_arena](). #endif. {. #if defined(OTHER). other_arena.execute([id]() {. #endif. #if defined(OTHER_ISOLATE). oneapi::tbb::this_task_arena::isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2572,security,ident,identical,2572,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2846,security,iso,isolation,2846,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2929,security,iso,isolate,2929,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:3046,security,iso,isolate,3046,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:3161,security,iso,isolate,3161,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:3321,security,iso,isolate,3321,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:18,testability,test,test,18,"So I've created a test program that shows that the use of another arena does cause 'cross activity' contamination. The program is. ```C++. #include ""oneapi/tbb/task_arena.h"". #include ""oneapi/tbb/task_group.h"". #include <iostream>. #include <thread>. #include <atomic>. #include <array>. //#define OTHER . #if defined(OTHER_ISOLATE) and !defined(OTHER). #define OTHER. #endif. namespace {. int activity_group(int i) {. static thread_local int v=0;. if (i != 0) {. v = i;. } if ( i == 100) {. v=0;. }. return v;. }. std::atomic<int> activityID{0};. std::atomic<int> waitingToStart{2};. std::array<std::atomic<bool>, 2> otherThreadStarted ={false, false};. }. int main() {. #if defined(OTHER). std::cout <<""built with OTHER""<<std::endl;. #endif. #if defined(OTHER_ISOLATE). std::cout <<""built with OTHER_ISOLATE""<<std::endl;. #endif. #if defined(NO_ISOLATE). std::cout <<""built with NO_ISOLATE""<<std::endl;. #endif. oneapi::tbb::task_arena main_arena(4);. oneapi::tbb::task_arena other_arena(4);. oneapi::tbb::task_group other_group;. main_arena.execute([&other_arena, &other_group](). {. oneapi::tbb::task_group group;. auto activity = [&other_arena](). {. auto id = activity_group( ++activityID );. --waitingToStart;. while(waitingToStart.load() > 0);. #if !defined(NO_ISOLATE). oneapi::tbb::this_task_arena::isolate([id, &other_arena](). #endif. {. #if defined(OTHER). other_arena.execute([id]() {. #endif. #if defined(OTHER_ISOLATE). oneapi::tbb::this_task_arena::isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::end",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1309,testability,isol,isolate,1309,"ined(OTHER_ISOLATE) and !defined(OTHER). #define OTHER. #endif. namespace {. int activity_group(int i) {. static thread_local int v=0;. if (i != 0) {. v = i;. } if ( i == 100) {. v=0;. }. return v;. }. std::atomic<int> activityID{0};. std::atomic<int> waitingToStart{2};. std::array<std::atomic<bool>, 2> otherThreadStarted ={false, false};. }. int main() {. #if defined(OTHER). std::cout <<""built with OTHER""<<std::endl;. #endif. #if defined(OTHER_ISOLATE). std::cout <<""built with OTHER_ISOLATE""<<std::endl;. #endif. #if defined(NO_ISOLATE). std::cout <<""built with NO_ISOLATE""<<std::endl;. #endif. oneapi::tbb::task_arena main_arena(4);. oneapi::tbb::task_arena other_arena(4);. oneapi::tbb::task_group other_group;. main_arena.execute([&other_arena, &other_group](). {. oneapi::tbb::task_group group;. auto activity = [&other_arena](). {. auto id = activity_group( ++activityID );. --waitingToStart;. while(waitingToStart.load() > 0);. #if !defined(NO_ISOLATE). oneapi::tbb::this_task_arena::isolate([id, &other_arena](). #endif. {. #if defined(OTHER). other_arena.execute([id]() {. #endif. #if defined(OTHER_ISOLATE). oneapi::tbb::this_task_arena::isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:1466,testability,isol,isolate,1466,". } if ( i == 100) {. v=0;. }. return v;. }. std::atomic<int> activityID{0};. std::atomic<int> waitingToStart{2};. std::array<std::atomic<bool>, 2> otherThreadStarted ={false, false};. }. int main() {. #if defined(OTHER). std::cout <<""built with OTHER""<<std::endl;. #endif. #if defined(OTHER_ISOLATE). std::cout <<""built with OTHER_ISOLATE""<<std::endl;. #endif. #if defined(NO_ISOLATE). std::cout <<""built with NO_ISOLATE""<<std::endl;. #endif. oneapi::tbb::task_arena main_arena(4);. oneapi::tbb::task_arena other_arena(4);. oneapi::tbb::task_group other_group;. main_arena.execute([&other_arena, &other_group](). {. oneapi::tbb::task_group group;. auto activity = [&other_arena](). {. auto id = activity_group( ++activityID );. --waitingToStart;. while(waitingToStart.load() > 0);. #if !defined(NO_ISOLATE). oneapi::tbb::this_task_arena::isolate([id, &other_arena](). #endif. {. #if defined(OTHER). other_arena.execute([id]() {. #endif. #if defined(OTHER_ISOLATE). oneapi::tbb::this_task_arena::isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2408,testability,simul,simulates,2408,"efined(OTHER_ISOLATE). oneapi::tbb::this_task_arena::isolate([id](){. #endif. oneapi::tbb::task_group group;. for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG TH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2846,testability,isol,isolation,2846,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:2929,testability,isol,isolate,2929,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:3046,testability,isol,isolate,3046,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:3161,testability,isol,isolate,3161,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:3321,testability,isol,isolate,3321,". for( int i = 0; i < 10; ++i) {. group.run([id](). {. auto thread_id = activity_group(0);. if(thread_id == 0 or thread_id != id) {. otherThreadStarted[id-1]=true;. }. if (thread_id != 0 and thread_id != id) {. std::cout <<""WRONG THREAD""<<std::endl;. }. if (thread_id !=0 and thread_id == id) {. std::cout <<""on starting thread""<< id <<std::endl;. while( not otherThreadStarted[id-1]);. return;. }. using namespace std::chrono_literals;. std::cout <<""start sleep ""<<id<< std::endl;. std::this_thread::sleep_for(3000ms);. std::cout <<""end sleep""<<std::endl;. });. }. group.wait();. #if defined(OTHER_ISOLATE). });. #endif. #if defined(OTHER). });. #endif. }. #if !defined(NO_ISOLATE). );. #endif. activity_group(100);. };. group.run(activity);. group.run(activity);. group.wait();. });. std::cout <<""main_arena execute finished""<<std::endl;. other_group.wait();. return 0;. }. ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to. - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW). - Add another task arena (-DOTHER) which represents the global ROOT arena. - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are. - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate. - with no other option, 'WRONG THREAD' is never seen. - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does. - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:216,deployability,API,API,216,"Thanks @Dr15Jones for the nice reproducer! It confirms that this is a problem we need to handle, and that `tbb::isolated_task_group` is a solution (isolating into the IMT task arena will be quite hard for every ROOT API that might make use of IMT). As far as I can tell, CMSSW uses oneTBB 2021 so the latest commit should give us a path forward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:216,integrability,API,API,216,"Thanks @Dr15Jones for the nice reproducer! It confirms that this is a problem we need to handle, and that `tbb::isolated_task_group` is a solution (isolating into the IMT task arena will be quite hard for every ROOT API that might make use of IMT). As far as I can tell, CMSSW uses oneTBB 2021 so the latest commit should give us a path forward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:216,interoperability,API,API,216,"Thanks @Dr15Jones for the nice reproducer! It confirms that this is a problem we need to handle, and that `tbb::isolated_task_group` is a solution (isolating into the IMT task arena will be quite hard for every ROOT API that might make use of IMT). As far as I can tell, CMSSW uses oneTBB 2021 so the latest commit should give us a path forward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:148,safety,isol,isolating,148,"Thanks @Dr15Jones for the nice reproducer! It confirms that this is a problem we need to handle, and that `tbb::isolated_task_group` is a solution (isolating into the IMT task arena will be quite hard for every ROOT API that might make use of IMT). As far as I can tell, CMSSW uses oneTBB 2021 so the latest commit should give us a path forward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:148,security,iso,isolating,148,"Thanks @Dr15Jones for the nice reproducer! It confirms that this is a problem we need to handle, and that `tbb::isolated_task_group` is a solution (isolating into the IMT task arena will be quite hard for every ROOT API that might make use of IMT). As far as I can tell, CMSSW uses oneTBB 2021 so the latest commit should give us a path forward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:148,testability,isol,isolating,148,"Thanks @Dr15Jones for the nice reproducer! It confirms that this is a problem we need to handle, and that `tbb::isolated_task_group` is a solution (isolating into the IMT task arena will be quite hard for every ROOT API that might make use of IMT). As far as I can tell, CMSSW uses oneTBB 2021 so the latest commit should give us a path forward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:46,usability,confirm,confirms,46,"Thanks @Dr15Jones for the nice reproducer! It confirms that this is a problem we need to handle, and that `tbb::isolated_task_group` is a solution (isolating into the IMT task arena will be quite hard for every ROOT API that might make use of IMT). As far as I can tell, CMSSW uses oneTBB 2021 so the latest commit should give us a path forward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:72,deployability,stage,stage,72,"So this seems to work. We may require TBB 2020 as a minimum in a second stage (https://github.com/root-project/root/pull/14862), but for now the isolation guarantees are conditional on the TBB version used for building ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:193,deployability,version,version,193,"So this seems to work. We may require TBB 2020 as a minimum in a second stage (https://github.com/root-project/root/pull/14862), but for now the isolation guarantees are conditional on the TBB version used for building ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:210,deployability,build,building,210,"So this seems to work. We may require TBB 2020 as a minimum in a second stage (https://github.com/root-project/root/pull/14862), but for now the isolation guarantees are conditional on the TBB version used for building ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:193,integrability,version,version,193,"So this seems to work. We may require TBB 2020 as a minimum in a second stage (https://github.com/root-project/root/pull/14862), but for now the isolation guarantees are conditional on the TBB version used for building ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:193,modifiability,version,version,193,"So this seems to work. We may require TBB 2020 as a minimum in a second stage (https://github.com/root-project/root/pull/14862), but for now the isolation guarantees are conditional on the TBB version used for building ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:145,safety,isol,isolation,145,"So this seems to work. We may require TBB 2020 as a minimum in a second stage (https://github.com/root-project/root/pull/14862), but for now the isolation guarantees are conditional on the TBB version used for building ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:145,security,iso,isolation,145,"So this seems to work. We may require TBB 2020 as a minimum in a second stage (https://github.com/root-project/root/pull/14862), but for now the isolation guarantees are conditional on the TBB version used for building ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:145,testability,isol,isolation,145,"So this seems to work. We may require TBB 2020 as a minimum in a second stage (https://github.com/root-project/root/pull/14862), but for now the isolation guarantees are conditional on the TBB version used for building ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/pull/14807:52,usability,minim,minimum,52,"So this seems to work. We may require TBB 2020 as a minimum in a second stage (https://github.com/root-project/root/pull/14862), but for now the isolation guarantees are conditional on the TBB version used for building ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14807
https://github.com/root-project/root/issues/14809:137,usability,support,support,137,"It was unclear whether the issue was only ""throw when seeing unsplitable class in case split is requested"". or if it was more ""implement support for unsplit class (I.e. treat them properly)"". In the later case at least https://github.com/root-project/root/pull/14728 is needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14809
https://github.com/root-project/root/pull/14813:398,availability,failur,failure,398,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:398,deployability,fail,failure,398,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:484,deployability,fail,failing,484,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:219,energy efficiency,current,current,219,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:611,integrability,messag,messages,611,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:414,interoperability,platform,platforms,414,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:611,interoperability,messag,messages,611,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:398,performance,failur,failure,398,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:398,reliability,fail,failure,398,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:484,reliability,fail,failing,484,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:357,safety,review,review,357,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:393,safety,test,test,393,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:476,safety,test,test,476,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:635,safety,test,test,635,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:679,safety,test,tests,679,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:357,testability,review,review,357,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:393,testability,test,test,393,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:476,testability,test,test,476,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:635,testability,test,test,635,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:679,testability,test,tests,679,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:449,usability,help,help,449,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:598,usability,clear,clear,598,"Thanks for these changes. I apologise for coming back to them so late. . I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):. - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages? - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:13,safety,review,review,13,"Thanks 4 the review! Yep, I can take care of those points.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:13,testability,review,review,13,"Thanks 4 the review! Yep, I can take care of those points.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:22,availability,failur,failure,22,"> * There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? Just pushed a commit that tries to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:22,deployability,fail,failure,22,"> * There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? Just pushed a commit that tries to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:108,deployability,fail,failing,108,"> * There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? Just pushed a commit that tries to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:38,interoperability,platform,platforms,38,"> * There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? Just pushed a commit that tries to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:22,performance,failur,failure,22,"> * There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? Just pushed a commit that tries to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:22,reliability,fail,failure,22,"> * There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? Just pushed a commit that tries to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:108,reliability,fail,failing,108,"> * There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? Just pushed a commit that tries to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:17,safety,test,test,17,"> * There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? Just pushed a commit that tries to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:100,safety,test,test,100,"> * There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? Just pushed a commit that tries to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:17,testability,test,test,17,"> * There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? Just pushed a commit that tries to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:100,testability,test,test,100,"> * There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? Just pushed a commit that tries to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:73,usability,help,help,73,"> * There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing? Just pushed a commit that tries to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:107,deployability,updat,updated,107,"Thanks a lot! @ferdymercury, can this also be backported to 6.30? Now that we already closed the issue and updated the docs on the website, it would be nice if our next release actually supports this :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:169,deployability,releas,release,169,"Thanks a lot! @ferdymercury, can this also be backported to 6.30? Now that we already closed the issue and updated the docs on the website, it would be nice if our next release actually supports this :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:107,safety,updat,updated,107,"Thanks a lot! @ferdymercury, can this also be backported to 6.30? Now that we already closed the issue and updated the docs on the website, it would be nice if our next release actually supports this :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:107,security,updat,updated,107,"Thanks a lot! @ferdymercury, can this also be backported to 6.30? Now that we already closed the issue and updated the docs on the website, it would be nice if our next release actually supports this :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:86,usability,close,closed,86,"Thanks a lot! @ferdymercury, can this also be backported to 6.30? Now that we already closed the issue and updated the docs on the website, it would be nice if our next release actually supports this :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/pull/14813:186,usability,support,supports,186,"Thanks a lot! @ferdymercury, can this also be backported to 6.30? Now that we already closed the issue and updated the docs on the website, it would be nice if our next release actually supports this :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14813
https://github.com/root-project/root/issues/14815:97,deployability,build,build,97,"Dear @mholtrop ,. Thanks for your report. A fix is provided in the linked PR. If you are able to build ROOT from the branch of the PR, a confirmation of it fixing your issue would be appreciated, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14815
https://github.com/root-project/root/issues/14815:137,usability,confirm,confirmation,137,"Dear @mholtrop ,. Thanks for your report. A fix is provided in the linked PR. If you are able to build ROOT from the branch of the PR, a confirmation of it fixing your issue would be appreciated, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14815
https://github.com/root-project/root/issues/14815:613,availability,cluster,cluster,613,"Nice fast response! . I tested this from Python and it worked:. ```. file = R.TFile(""ele_2019_dfx_filtered.root"",""READ""). cut_flowx = file.Get(""cut_flow""). cut_flowx.Print(). ```. resulted in:. ```. Select only 1 Primary MC particle: pass=2012672 all=2012917 -- eff=99.99 % cumulative eff=99.99 %. Select only 1 KF track.: pass=952195 all=2012672 -- eff=47.31 % cumulative eff=47.30 %. Select only 1 Primary MC particle at ECal: pass=216318 all=952195 -- eff=22.72 % cumulative eff=10.75 %. Select only 1 Primary MC particle at SVT6: pass=38452 all=216318 -- eff=17.78 % cumulative eff=1.91 %. Select only 1 ECal cluster: pass=34566 all=38452 -- eff=89.89 % cumulative eff=1.72 %. ```. which was the expected output. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14815
https://github.com/root-project/root/issues/14815:613,deployability,cluster,cluster,613,"Nice fast response! . I tested this from Python and it worked:. ```. file = R.TFile(""ele_2019_dfx_filtered.root"",""READ""). cut_flowx = file.Get(""cut_flow""). cut_flowx.Print(). ```. resulted in:. ```. Select only 1 Primary MC particle: pass=2012672 all=2012917 -- eff=99.99 % cumulative eff=99.99 %. Select only 1 KF track.: pass=952195 all=2012672 -- eff=47.31 % cumulative eff=47.30 %. Select only 1 Primary MC particle at ECal: pass=216318 all=952195 -- eff=22.72 % cumulative eff=10.75 %. Select only 1 Primary MC particle at SVT6: pass=38452 all=216318 -- eff=17.78 % cumulative eff=1.91 %. Select only 1 ECal cluster: pass=34566 all=38452 -- eff=89.89 % cumulative eff=1.72 %. ```. which was the expected output. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14815
https://github.com/root-project/root/issues/14815:24,safety,test,tested,24,"Nice fast response! . I tested this from Python and it worked:. ```. file = R.TFile(""ele_2019_dfx_filtered.root"",""READ""). cut_flowx = file.Get(""cut_flow""). cut_flowx.Print(). ```. resulted in:. ```. Select only 1 Primary MC particle: pass=2012672 all=2012917 -- eff=99.99 % cumulative eff=99.99 %. Select only 1 KF track.: pass=952195 all=2012672 -- eff=47.31 % cumulative eff=47.30 %. Select only 1 Primary MC particle at ECal: pass=216318 all=952195 -- eff=22.72 % cumulative eff=10.75 %. Select only 1 Primary MC particle at SVT6: pass=38452 all=216318 -- eff=17.78 % cumulative eff=1.91 %. Select only 1 ECal cluster: pass=34566 all=38452 -- eff=89.89 % cumulative eff=1.72 %. ```. which was the expected output. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14815
https://github.com/root-project/root/issues/14815:24,testability,test,tested,24,"Nice fast response! . I tested this from Python and it worked:. ```. file = R.TFile(""ele_2019_dfx_filtered.root"",""READ""). cut_flowx = file.Get(""cut_flow""). cut_flowx.Print(). ```. resulted in:. ```. Select only 1 Primary MC particle: pass=2012672 all=2012917 -- eff=99.99 % cumulative eff=99.99 %. Select only 1 KF track.: pass=952195 all=2012672 -- eff=47.31 % cumulative eff=47.30 %. Select only 1 Primary MC particle at ECal: pass=216318 all=952195 -- eff=22.72 % cumulative eff=10.75 %. Select only 1 Primary MC particle at SVT6: pass=38452 all=216318 -- eff=17.78 % cumulative eff=1.91 %. Select only 1 ECal cluster: pass=34566 all=38452 -- eff=89.89 % cumulative eff=1.72 %. ```. which was the expected output. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14815
https://github.com/root-project/root/issues/14815:38,availability,avail,available,38,You are welcome! This feature will be available in the next stable release 6.32 :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14815
https://github.com/root-project/root/issues/14815:67,deployability,releas,release,67,You are welcome! This feature will be available in the next stable release 6.32 :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14815
https://github.com/root-project/root/issues/14815:38,reliability,availab,available,38,You are welcome! This feature will be available in the next stable release 6.32 :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14815
https://github.com/root-project/root/issues/14815:38,safety,avail,available,38,You are welcome! This feature will be available in the next stable release 6.32 :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14815
https://github.com/root-project/root/issues/14815:38,security,availab,available,38,You are welcome! This feature will be available in the next stable release 6.32 :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14815
https://github.com/root-project/root/pull/14817:7,safety,valid,validated,7,It was validated locally that the test now also passes with the CUDA backend.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14817
https://github.com/root-project/root/pull/14817:34,safety,test,test,34,It was validated locally that the test now also passes with the CUDA backend.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14817
https://github.com/root-project/root/pull/14817:7,security,validat,validated,7,It was validated locally that the test now also passes with the CUDA backend.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14817
https://github.com/root-project/root/pull/14817:34,testability,test,test,34,It was validated locally that the test now also passes with the CUDA backend.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14817
https://github.com/root-project/root/pull/14818:335,availability,cluster,cluster,335,> is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. However the change is surprising:. ```. -Estimate cluster size: 3. +Estimate cluster size: 3030. ```. does not seem like it is close to the limits and is unclear why it is changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:362,availability,cluster,cluster,362,> is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. However the change is surprising:. ```. -Estimate cluster size: 3. +Estimate cluster size: 3030. ```. does not seem like it is close to the limits and is unclear why it is changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:187,deployability,build,build,187,> is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. However the change is surprising:. ```. -Estimate cluster size: 3. +Estimate cluster size: 3030. ```. does not seem like it is close to the limits and is unclear why it is changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:335,deployability,cluster,cluster,335,> is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. However the change is surprising:. ```. -Estimate cluster size: 3. +Estimate cluster size: 3030. ```. does not seem like it is close to the limits and is unclear why it is changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:362,deployability,cluster,cluster,362,> is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. However the change is surprising:. ```. -Estimate cluster size: 3. +Estimate cluster size: 3030. ```. does not seem like it is close to the limits and is unclear why it is changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:326,energy efficiency,Estimat,Estimate,326,> is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. However the change is surprising:. ```. -Estimate cluster size: 3. +Estimate cluster size: 3030. ```. does not seem like it is close to the limits and is unclear why it is changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:353,energy efficiency,Estimat,Estimate,353,> is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. However the change is surprising:. ```. -Estimate cluster size: 3. +Estimate cluster size: 3030. ```. does not seem like it is close to the limits and is unclear why it is changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:387,reliability,doe,does,387,> is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. However the change is surprising:. ```. -Estimate cluster size: 3. +Estimate cluster size: 3030. ```. does not seem like it is close to the limits and is unclear why it is changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:412,usability,close,close,412,> is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. However the change is surprising:. ```. -Estimate cluster size: 3. +Estimate cluster size: 3030. ```. does not seem like it is close to the limits and is unclear why it is changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:357,availability,cluster,cluster,357,"> > is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). > . > If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. > . > However the change is surprising:. > . > ```. > -Estimate cluster size: 3. > +Estimate cluster size: 3030. > ```. > . > does not seem like it is close to the limits and is unclear why it is changed. This is because, there was some clamping happening, but the value of cacheSize was not being taken into account, as this line was missing in the code:. `cacheSize = pf->GetBufferSize();`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:386,availability,cluster,cluster,386,"> > is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). > . > If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. > . > However the change is surprising:. > . > ```. > -Estimate cluster size: 3. > +Estimate cluster size: 3030. > ```. > . > does not seem like it is close to the limits and is unclear why it is changed. This is because, there was some clamping happening, but the value of cacheSize was not being taken into account, as this line was missing in the code:. `cacheSize = pf->GetBufferSize();`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:195,deployability,build,build,195,"> > is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). > . > If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. > . > However the change is surprising:. > . > ```. > -Estimate cluster size: 3. > +Estimate cluster size: 3030. > ```. > . > does not seem like it is close to the limits and is unclear why it is changed. This is because, there was some clamping happening, but the value of cacheSize was not being taken into account, as this line was missing in the code:. `cacheSize = pf->GetBufferSize();`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:357,deployability,cluster,cluster,357,"> > is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). > . > If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. > . > However the change is surprising:. > . > ```. > -Estimate cluster size: 3. > +Estimate cluster size: 3030. > ```. > . > does not seem like it is close to the limits and is unclear why it is changed. This is because, there was some clamping happening, but the value of cacheSize was not being taken into account, as this line was missing in the code:. `cacheSize = pf->GetBufferSize();`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:386,deployability,cluster,cluster,386,"> > is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). > . > If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. > . > However the change is surprising:. > . > ```. > -Estimate cluster size: 3. > +Estimate cluster size: 3030. > ```. > . > does not seem like it is close to the limits and is unclear why it is changed. This is because, there was some clamping happening, but the value of cacheSize was not being taken into account, as this line was missing in the code:. `cacheSize = pf->GetBufferSize();`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:348,energy efficiency,Estimat,Estimate,348,"> > is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). > . > If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. > . > However the change is surprising:. > . > ```. > -Estimate cluster size: 3. > +Estimate cluster size: 3030. > ```. > . > does not seem like it is close to the limits and is unclear why it is changed. This is because, there was some clamping happening, but the value of cacheSize was not being taken into account, as this line was missing in the code:. `cacheSize = pf->GetBufferSize();`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:377,energy efficiency,Estimat,Estimate,377,"> > is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). > . > If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. > . > However the change is surprising:. > . > ```. > -Estimate cluster size: 3. > +Estimate cluster size: 3030. > ```. > . > does not seem like it is close to the limits and is unclear why it is changed. This is because, there was some clamping happening, but the value of cacheSize was not being taken into account, as this line was missing in the code:. `cacheSize = pf->GetBufferSize();`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:567,performance,cach,cacheSize,567,"> > is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). > . > If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. > . > However the change is surprising:. > . > ```. > -Estimate cluster size: 3. > +Estimate cluster size: 3030. > ```. > . > does not seem like it is close to the limits and is unclear why it is changed. This is because, there was some clamping happening, but the value of cacheSize was not being taken into account, as this line was missing in the code:. `cacheSize = pf->GetBufferSize();`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:651,performance,cach,cacheSize,651,"> > is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). > . > If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. > . > However the change is surprising:. > . > ```. > -Estimate cluster size: 3. > +Estimate cluster size: 3030. > ```. > . > does not seem like it is close to the limits and is unclear why it is changed. This is because, there was some clamping happening, but the value of cacheSize was not being taken into account, as this line was missing in the code:. `cacheSize = pf->GetBufferSize();`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:419,reliability,doe,does,419,"> > is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). > . > If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. > . > However the change is surprising:. > . > ```. > -Estimate cluster size: 3. > +Estimate cluster size: 3030. > ```. > . > does not seem like it is close to the limits and is unclear why it is changed. This is because, there was some clamping happening, but the value of cacheSize was not being taken into account, as this line was missing in the code:. `cacheSize = pf->GetBufferSize();`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:444,usability,close,close,444,"> > is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files). > . > If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch. > . > However the change is surprising:. > . > ```. > -Estimate cluster size: 3. > +Estimate cluster size: 3030. > ```. > . > does not seem like it is close to the limits and is unclear why it is changed. This is because, there was some clamping happening, but the value of cacheSize was not being taken into account, as this line was missing in the code:. `cacheSize = pf->GetBufferSize();`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:62,safety,test,test,62,"@pcanal, @ferdymercury, this PR caused a regression in a unit test that I see in other PRs, e.g.:. https://github.com/root-project/root/pull/15173",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:41,testability,regress,regression,41,"@pcanal, @ferdymercury, this PR caused a regression in a unit test that I see in other PRs, e.g.:. https://github.com/root-project/root/pull/15173",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:57,testability,unit,unit,57,"@pcanal, @ferdymercury, this PR caused a regression in a unit test that I see in other PRs, e.g.:. https://github.com/root-project/root/pull/15173",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:62,testability,test,test,62,"@pcanal, @ferdymercury, this PR caused a regression in a unit test that I see in other PRs, e.g.:. https://github.com/root-project/root/pull/15173",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:44,integrability,coupl,couple,44,"Yes, the companion roottest PR was merged a couple of hours ago. https://github.com/root-project/roottest/pull/1069",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:44,modifiability,coupl,couple,44,"Yes, the companion roottest PR was merged a couple of hours ago. https://github.com/root-project/roottest/pull/1069",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/pull/14818:44,testability,coupl,couple,44,"Yes, the companion roottest PR was merged a couple of hours ago. https://github.com/root-project/roottest/pull/1069",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14818
https://github.com/root-project/root/issues/14819:2,safety,Hot,Hot,2,"**Hot take** :fire:. A splash screen is so 90s :laughing: I would just get rid of it entirely. Why is it necessary? The Python interpreter also has none. At least I would keep it broken like this and *not* fix the issue, so there is one more argument for why it can be removed :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:32,deployability,log,logo,32,+1 about removing it heheh. The logo is cool though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:40,energy efficiency,cool,cool,40,+1 about removing it heheh. The logo is cool though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:32,safety,log,logo,32,+1 about removing it heheh. The logo is cool though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:32,security,log,logo,32,+1 about removing it heheh. The logo is cool though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:32,testability,log,logo,32,+1 about removing it heheh. The logo is cool though...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:17,deployability,log,logo,17,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:75,deployability,log,logo,75,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:142,deployability,depend,dependency,142,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:142,integrability,depend,dependency,142,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:142,modifiability,depend,dependency,142,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:17,safety,log,logo,17,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:75,safety,log,logo,75,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:142,safety,depend,dependency,142,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:17,security,log,logo,17,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:75,security,log,logo,75,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:17,testability,log,logo,17,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:75,testability,log,logo,75,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/issues/14819:142,testability,depend,dependency,142,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14819
https://github.com/root-project/root/pull/14822:5,availability,failur,failures,5,Test failures seem unrelated. @vepadulano @pcanal is there anything else before this can be merged?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14822
https://github.com/root-project/root/pull/14822:5,deployability,fail,failures,5,Test failures seem unrelated. @vepadulano @pcanal is there anything else before this can be merged?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14822
https://github.com/root-project/root/pull/14822:5,performance,failur,failures,5,Test failures seem unrelated. @vepadulano @pcanal is there anything else before this can be merged?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14822
https://github.com/root-project/root/pull/14822:5,reliability,fail,failures,5,Test failures seem unrelated. @vepadulano @pcanal is there anything else before this can be merged?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14822
https://github.com/root-project/root/pull/14822:0,safety,Test,Test,0,Test failures seem unrelated. @vepadulano @pcanal is there anything else before this can be merged?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14822
https://github.com/root-project/root/pull/14822:0,testability,Test,Test,0,Test failures seem unrelated. @vepadulano @pcanal is there anything else before this can be merged?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14822
https://github.com/root-project/root/pull/14823:28,safety,test,testing,28,"Too bad, I was using it for testing on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14823
https://github.com/root-project/root/pull/14823:28,testability,test,testing,28,"Too bad, I was using it for testing on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14823
https://github.com/root-project/root/pull/14823:24,safety,test,testing,24,@bellenot What were you testing through the use of Pythia6?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14823
https://github.com/root-project/root/pull/14823:24,testability,test,testing,24,@bellenot What were you testing through the use of Pythia6?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14823
https://github.com/root-project/root/pull/14823:26,safety,test,testing,26,> @bellenot What were you testing through the use of Pythia6? Pythia 6,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14823
https://github.com/root-project/root/pull/14823:26,testability,test,testing,26,> @bellenot What were you testing through the use of Pythia6? Pythia 6,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14823
https://github.com/root-project/root/issues/14824:75,deployability,instal,installation,75,"Hi @dvzrv, thanks for the heads up! None of these files end up in the ROOT installation. They are only there because the ROOT repo includes some copies of other repos like `cppyy` and `llvm-project`, but not all files from these repos are actually used. The files you linked are all examples of unused files. I hope this clarifies things! Or is this a problem for some Arch Linux policy that such files exist in the repo? Otherwise, I think the issue can be closed. I'm happy to hear that Arch moves forward to Python 3.12 by the way :+1:. Note that even if the code *would* be installed, at least the first case of `cppyy` would definitely be a false positive of warning about `import imp`. That code is only used when using the PyPy interpreter and not CPython, and PyPy doesn't even support Python 3.11 yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:578,deployability,instal,installed,578,"Hi @dvzrv, thanks for the heads up! None of these files end up in the ROOT installation. They are only there because the ROOT repo includes some copies of other repos like `cppyy` and `llvm-project`, but not all files from these repos are actually used. The files you linked are all examples of unused files. I hope this clarifies things! Or is this a problem for some Arch Linux policy that such files exist in the repo? Otherwise, I think the issue can be closed. I'm happy to hear that Arch moves forward to Python 3.12 by the way :+1:. Note that even if the code *would* be installed, at least the first case of `cppyy` would definitely be a false positive of warning about `import imp`. That code is only used when using the PyPy interpreter and not CPython, and PyPy doesn't even support Python 3.11 yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:773,reliability,doe,doesn,773,"Hi @dvzrv, thanks for the heads up! None of these files end up in the ROOT installation. They are only there because the ROOT repo includes some copies of other repos like `cppyy` and `llvm-project`, but not all files from these repos are actually used. The files you linked are all examples of unused files. I hope this clarifies things! Or is this a problem for some Arch Linux policy that such files exist in the repo? Otherwise, I think the issue can be closed. I'm happy to hear that Arch moves forward to Python 3.12 by the way :+1:. Note that even if the code *would* be installed, at least the first case of `cppyy` would definitely be a false positive of warning about `import imp`. That code is only used when using the PyPy interpreter and not CPython, and PyPy doesn't even support Python 3.11 yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:380,security,polic,policy,380,"Hi @dvzrv, thanks for the heads up! None of these files end up in the ROOT installation. They are only there because the ROOT repo includes some copies of other repos like `cppyy` and `llvm-project`, but not all files from these repos are actually used. The files you linked are all examples of unused files. I hope this clarifies things! Or is this a problem for some Arch Linux policy that such files exist in the repo? Otherwise, I think the issue can be closed. I'm happy to hear that Arch moves forward to Python 3.12 by the way :+1:. Note that even if the code *would* be installed, at least the first case of `cppyy` would definitely be a false positive of warning about `import imp`. That code is only used when using the PyPy interpreter and not CPython, and PyPy doesn't even support Python 3.11 yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:458,usability,close,closed,458,"Hi @dvzrv, thanks for the heads up! None of these files end up in the ROOT installation. They are only there because the ROOT repo includes some copies of other repos like `cppyy` and `llvm-project`, but not all files from these repos are actually used. The files you linked are all examples of unused files. I hope this clarifies things! Or is this a problem for some Arch Linux policy that such files exist in the repo? Otherwise, I think the issue can be closed. I'm happy to hear that Arch moves forward to Python 3.12 by the way :+1:. Note that even if the code *would* be installed, at least the first case of `cppyy` would definitely be a false positive of warning about `import imp`. That code is only used when using the PyPy interpreter and not CPython, and PyPy doesn't even support Python 3.11 yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:786,usability,support,support,786,"Hi @dvzrv, thanks for the heads up! None of these files end up in the ROOT installation. They are only there because the ROOT repo includes some copies of other repos like `cppyy` and `llvm-project`, but not all files from these repos are actually used. The files you linked are all examples of unused files. I hope this clarifies things! Or is this a problem for some Arch Linux policy that such files exist in the repo? Otherwise, I think the issue can be closed. I'm happy to hear that Arch moves forward to Python 3.12 by the way :+1:. Note that even if the code *would* be installed, at least the first case of `cppyy` would definitely be a false positive of warning about `import imp`. That code is only used when using the PyPy interpreter and not CPython, and PyPy doesn't even support Python 3.11 yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:10,deployability,version,version-checked,10,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:114,deployability,version,version,114,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:150,deployability,version,version,150,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:175,deployability,version,version,175,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:218,deployability,version,version,218,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:10,integrability,version,version-checked,10,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:114,integrability,version,version,114,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:150,integrability,version,version,150,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:175,integrability,version,version,175,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:218,integrability,version,version,218,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:87,interoperability,compatib,compatibility,87,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:10,modifiability,version,version-checked,10,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:101,modifiability,layer,layer,101,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:114,modifiability,version,version,114,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:150,modifiability,version,version,150,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:175,modifiability,version,version,175,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:218,modifiability,version,version,218,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:392,performance,time,time,392,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:348,safety,safe,safely,348,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:277,usability,support,supports,277,"It's also version-checked for precisely those older PyPy interpreters that require the compatibility layer:. ```. version = sys.pypy_version_info. if version[0] == 5:. if 6 < version[1] <= 8:. pypy58_57_compat(). elif version[1] == 9:. py59_compat(). ```. so even if/when PyPy supports 3.12, it's still a non-issue. At some point, this code may be safely removed, especially as I've had zero time to work on the PyPy end of things, but as-is, it's harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/issues/14824:48,usability,feedback,feedback,48,@guitargeek @wlav awesome! Thanks for the quick feedback on this! :). I'll mark that item as done! :tada:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14824
https://github.com/root-project/root/pull/14825:20,performance,I/O,I/O,20,Don't we allow such I/O through the (upcoming?) blob?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14825
https://github.com/root-project/root/pull/14825:22,performance,I/O,I/O,22,"> Don't we allow such I/O through the (upcoming?) blob? That's right, but until it is merged...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14825
https://github.com/root-project/root/pull/14826:62,deployability,version,version,62,"Do you mean that on Windows `COMMAND ""${CHROME_EXECUTABLE}"" --version` launches a new chrome window? Isn't there a way to get the version that doesn't launch the window?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:130,deployability,version,version,130,"Do you mean that on Windows `COMMAND ""${CHROME_EXECUTABLE}"" --version` launches a new chrome window? Isn't there a way to get the version that doesn't launch the window?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:62,integrability,version,version,62,"Do you mean that on Windows `COMMAND ""${CHROME_EXECUTABLE}"" --version` launches a new chrome window? Isn't there a way to get the version that doesn't launch the window?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:130,integrability,version,version,130,"Do you mean that on Windows `COMMAND ""${CHROME_EXECUTABLE}"" --version` launches a new chrome window? Isn't there a way to get the version that doesn't launch the window?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:62,modifiability,version,version,62,"Do you mean that on Windows `COMMAND ""${CHROME_EXECUTABLE}"" --version` launches a new chrome window? Isn't there a way to get the version that doesn't launch the window?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:130,modifiability,version,version,130,"Do you mean that on Windows `COMMAND ""${CHROME_EXECUTABLE}"" --version` launches a new chrome window? Isn't there a way to get the version that doesn't launch the window?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:143,reliability,doe,doesn,143,"Do you mean that on Windows `COMMAND ""${CHROME_EXECUTABLE}"" --version` launches a new chrome window? Isn't there a way to get the version that doesn't launch the window?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:29,usability,COMMAND,COMMAND,29,"Do you mean that on Windows `COMMAND ""${CHROME_EXECUTABLE}"" --version` launches a new chrome window? Isn't there a way to get the version that doesn't launch the window?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:41,deployability,version,version,41,"@vepadulano We could, but for the moment version is ignored on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:41,integrability,version,version,41,"@vepadulano We could, but for the moment version is ignored on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:41,modifiability,version,version,41,"@vepadulano We could, but for the moment version is ignored on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:42,deployability,stack,stackoverflow,42,Can we use the wisdom provided at https://stackoverflow.com/a/51773107 perhaps?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:43,deployability,version,version,43,"> @vepadulano We could, but for the moment version is ignored on Windows. Ok if it's not needed then fine for the moment. . And indeed, `chrome --version` on windows launches a new window, shameful",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:146,deployability,version,version,146,"> @vepadulano We could, but for the moment version is ignored on Windows. Ok if it's not needed then fine for the moment. . And indeed, `chrome --version` on windows launches a new window, shameful",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:43,integrability,version,version,43,"> @vepadulano We could, but for the moment version is ignored on Windows. Ok if it's not needed then fine for the moment. . And indeed, `chrome --version` on windows launches a new window, shameful",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:146,integrability,version,version,146,"> @vepadulano We could, but for the moment version is ignored on Windows. Ok if it's not needed then fine for the moment. . And indeed, `chrome --version` on windows launches a new window, shameful",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:43,modifiability,version,version,43,"> @vepadulano We could, but for the moment version is ignored on Windows. Ok if it's not needed then fine for the moment. . And indeed, `chrome --version` on windows launches a new window, shameful",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:146,modifiability,version,version,146,"> @vepadulano We could, but for the moment version is ignored on Windows. Ok if it's not needed then fine for the moment. . And indeed, `chrome --version` on windows launches a new window, shameful",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:44,deployability,stack,stackoverflow,44,"> Can we use the wisdom provided at https://stackoverflow.com/a/51773107 perhaps? I'm aware if it, but if it's not used on Windows, I'd prefer not bother with this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14826:136,usability,prefer,prefer,136,"> Can we use the wisdom provided at https://stackoverflow.com/a/51773107 perhaps? I'm aware if it, but if it's not used on Windows, I'd prefer not bother with this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14826
https://github.com/root-project/root/pull/14828:18,interoperability,conflict,conflicts,18,Just fixed merged conflicts.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14828
https://github.com/root-project/root/pull/14830:102,deployability,build,buildconfig,102,@guitargeek I think one also needs to take care of the option here: `.github/workflows/root-ci-config/buildconfig/global.txt`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14830
https://github.com/root-project/root/pull/14830:77,usability,workflow,workflows,77,@guitargeek I think one also needs to take care of the option here: `.github/workflows/root-ci-config/buildconfig/global.txt`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14830
https://github.com/root-project/root/pull/14830:104,deployability,build,buildconfig,104,> @guitargeek I think one also needs to take care of the option here: `.github/workflows/root-ci-config/buildconfig/global.txt`. Thanks for pointing that out!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14830
https://github.com/root-project/root/pull/14830:79,usability,workflow,workflows,79,> @guitargeek I think one also needs to take care of the option here: `.github/workflows/root-ci-config/buildconfig/global.txt`. Thanks for pointing that out!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14830
https://github.com/root-project/root/pull/14833:107,testability,simpl,simply,107,"And also, apologies for this, should we rename TCutInfo to RCutInfo before making it writeable? I think we simply forgot to rename that ancillary class when TDataFrame was renamed into RDataFrame...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14833
https://github.com/root-project/root/pull/14833:107,usability,simpl,simply,107,"And also, apologies for this, should we rename TCutInfo to RCutInfo before making it writeable? I think we simply forgot to rename that ancillary class when TDataFrame was renamed into RDataFrame...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14833
https://github.com/root-project/root/pull/14833:228,integrability,pub,public,228,"> And also, apologies for this, should we rename TCutInfo to RCutInfo before making it writeable? I think we simply forgot to rename that ancillary class when TDataFrame was renamed into RDataFrame... This class has been in the public namespace for years, so I don't think we can do that. What we can do is we can make an `RCutInfo` class, then alias `using TCutInfo = RCutInfo;`. How does that sound?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14833
https://github.com/root-project/root/pull/14833:385,reliability,doe,does,385,"> And also, apologies for this, should we rename TCutInfo to RCutInfo before making it writeable? I think we simply forgot to rename that ancillary class when TDataFrame was renamed into RDataFrame... This class has been in the public namespace for years, so I don't think we can do that. What we can do is we can make an `RCutInfo` class, then alias `using TCutInfo = RCutInfo;`. How does that sound?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14833
https://github.com/root-project/root/pull/14833:109,testability,simpl,simply,109,"> And also, apologies for this, should we rename TCutInfo to RCutInfo before making it writeable? I think we simply forgot to rename that ancillary class when TDataFrame was renamed into RDataFrame... This class has been in the public namespace for years, so I don't think we can do that. What we can do is we can make an `RCutInfo` class, then alias `using TCutInfo = RCutInfo;`. How does that sound?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14833
https://github.com/root-project/root/pull/14833:109,usability,simpl,simply,109,"> And also, apologies for this, should we rename TCutInfo to RCutInfo before making it writeable? I think we simply forgot to rename that ancillary class when TDataFrame was renamed into RDataFrame... This class has been in the public namespace for years, so I don't think we can do that. What we can do is we can make an `RCutInfo` class, then alias `using TCutInfo = RCutInfo;`. How does that sound?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14833
https://github.com/root-project/root/pull/14834:47,deployability,version,versions,47,I need to check it while here two different Qt versions may be tested in one cmake file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14834
https://github.com/root-project/root/pull/14834:47,integrability,version,versions,47,I need to check it while here two different Qt versions may be tested in one cmake file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14834
https://github.com/root-project/root/pull/14834:47,modifiability,version,versions,47,I need to check it while here two different Qt versions may be tested in one cmake file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14834
https://github.com/root-project/root/pull/14834:63,safety,test,tested,63,I need to check it while here two different Qt versions may be tested in one cmake file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14834
https://github.com/root-project/root/pull/14834:63,testability,test,tested,63,I need to check it while here two different Qt versions may be tested in one cmake file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14834
https://github.com/root-project/root/pull/14834:75,usability,help,help,75,"Thank you! Are you checking it yourself, or is there something I can do to help?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14834
https://github.com/root-project/root/pull/14834:132,deployability,instal,installed,132,"> Are you checking it yourself, or is there something I can do to help? I checking on my desktop machine where both Qt5 and Qt6 are installed and I always compiling both libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14834
https://github.com/root-project/root/pull/14834:66,usability,help,help,66,"> Are you checking it yourself, or is there something I can do to help? I checking on my desktop machine where both Qt5 and Qt6 are installed and I always compiling both libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14834
https://github.com/root-project/root/pull/14834:192,reliability,doe,doesn,192,"Ok, thanks for checking @linev! In that case, I'll remove the commit with the `Qt` detection from this PR. It was not so important for me anyway, the main motivation for this PR was that ROOT doesn't silently disable CUDA. Are you okay with how the PR is now, @linev?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14834
https://github.com/root-project/root/pull/14834:83,safety,detect,detection,83,"Ok, thanks for checking @linev! In that case, I'll remove the commit with the `Qt` detection from this PR. It was not so important for me anyway, the main motivation for this PR was that ROOT doesn't silently disable CUDA. Are you okay with how the PR is now, @linev?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14834
https://github.com/root-project/root/pull/14834:83,security,detect,detection,83,"Ok, thanks for checking @linev! In that case, I'll remove the commit with the `Qt` detection from this PR. It was not so important for me anyway, the main motivation for this PR was that ROOT doesn't silently disable CUDA. Are you okay with how the PR is now, @linev?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14834
https://github.com/root-project/root/pull/14837:0,availability,Failur,Failures,0,Failures on mac13/mac14 has nothing to do with the PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14837
https://github.com/root-project/root/pull/14837:0,deployability,Fail,Failures,0,Failures on mac13/mac14 has nothing to do with the PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14837
https://github.com/root-project/root/pull/14837:0,performance,Failur,Failures,0,Failures on mac13/mac14 has nothing to do with the PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14837
https://github.com/root-project/root/pull/14837:0,reliability,Fail,Failures,0,Failures on mac13/mac14 has nothing to do with the PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14837
https://github.com/root-project/root/issues/14842:11,interoperability,standard,standard,11,"When I run standard demos, I also see difference. But if I call `gRandom->SetSeed(1)` before filling histograms, I get similar results. `ratioplot1.C` with normal graphics:. ![C](https://github.com/root-project/root/assets/4936580/61e65f06-3658-4e80-a6ef-fcdb2cb5ff84). `ratioplot1.C` with web graphics:. ![Canvas](https://github.com/root-project/root/assets/4936580/f72eea64-8c23-4c88-96eb-0212c3850386). There is difference in axes labels size, but this I want to investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14842
https://github.com/root-project/root/issues/14842:71,energy efficiency,draw,drawing,71,Also labels sizes are clarified - now I understand how TRatioPlot axis drawing implemented in ROOT. I will submit PR which fixes several small issues around TRatioPlot,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14842
https://github.com/root-project/root/issues/14842:107,integrability,sub,submit,107,Also labels sizes are clarified - now I understand how TRatioPlot axis drawing implemented in ROOT. I will submit PR which fixes several small issues around TRatioPlot,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14842
https://github.com/root-project/root/issues/14842:40,testability,understand,understand,40,Also labels sizes are clarified - now I understand how TRatioPlot axis drawing implemented in ROOT. I will submit PR which fixes several small issues around TRatioPlot,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14842
https://github.com/root-project/root/pull/14843:398,deployability,version,version,398,"Hi @ferdymercury ! Thank you for digging a bit into the issue. Indeed, it seems that just changing the previous `ClassDef` to use the correct class name is already enough to make the issue reported by valgrind go away. That said, since you highlighted this problem, all these classes are using the wrong macro. They should be using `ClassDefOverride`. I applied that and I also increased the class version since it may have unexpected changes. Finally, I applied a full run of clang-format on all the touched files since the syntax used was pretty out of place. Let's see if the CI is happy, if so we can merge this PR and close the issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14843
https://github.com/root-project/root/pull/14843:398,integrability,version,version,398,"Hi @ferdymercury ! Thank you for digging a bit into the issue. Indeed, it seems that just changing the previous `ClassDef` to use the correct class name is already enough to make the issue reported by valgrind go away. That said, since you highlighted this problem, all these classes are using the wrong macro. They should be using `ClassDefOverride`. I applied that and I also increased the class version since it may have unexpected changes. Finally, I applied a full run of clang-format on all the touched files since the syntax used was pretty out of place. Let's see if the CI is happy, if so we can merge this PR and close the issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14843
https://github.com/root-project/root/pull/14843:483,interoperability,format,format,483,"Hi @ferdymercury ! Thank you for digging a bit into the issue. Indeed, it seems that just changing the previous `ClassDef` to use the correct class name is already enough to make the issue reported by valgrind go away. That said, since you highlighted this problem, all these classes are using the wrong macro. They should be using `ClassDefOverride`. I applied that and I also increased the class version since it may have unexpected changes. Finally, I applied a full run of clang-format on all the touched files since the syntax used was pretty out of place. Let's see if the CI is happy, if so we can merge this PR and close the issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14843
https://github.com/root-project/root/pull/14843:398,modifiability,version,version,398,"Hi @ferdymercury ! Thank you for digging a bit into the issue. Indeed, it seems that just changing the previous `ClassDef` to use the correct class name is already enough to make the issue reported by valgrind go away. That said, since you highlighted this problem, all these classes are using the wrong macro. They should be using `ClassDefOverride`. I applied that and I also increased the class version since it may have unexpected changes. Finally, I applied a full run of clang-format on all the touched files since the syntax used was pretty out of place. Let's see if the CI is happy, if so we can merge this PR and close the issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14843
https://github.com/root-project/root/pull/14843:623,usability,close,close,623,"Hi @ferdymercury ! Thank you for digging a bit into the issue. Indeed, it seems that just changing the previous `ClassDef` to use the correct class name is already enough to make the issue reported by valgrind go away. That said, since you highlighted this problem, all these classes are using the wrong macro. They should be using `ClassDefOverride`. I applied that and I also increased the class version since it may have unexpected changes. Finally, I applied a full run of clang-format on all the touched files since the syntax used was pretty out of place. Let's see if the CI is happy, if so we can merge this PR and close the issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14843
https://github.com/root-project/root/pull/14844:11,deployability,build,build,11,"@phsft-bot build just on ROOT-centos7/default, ROOT-ubuntu14/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14844
https://github.com/root-project/root/pull/14844:11,deployability,build,build,11,"@phsft-bot build just on ROOT-centos8/default, ROOT-ubuntu2204/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14844
https://github.com/root-project/root/pull/14844:31,deployability,fail,fails,31,@dpiparo can you review it? It fails again on Windows only (this time more test failing). I checked and the new tutorial runs successfully on the other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14844
https://github.com/root-project/root/pull/14844:80,deployability,fail,failing,80,@dpiparo can you review it? It fails again on Windows only (this time more test failing). I checked and the new tutorial runs successfully on the other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14844
https://github.com/root-project/root/pull/14844:152,interoperability,platform,platforms,152,@dpiparo can you review it? It fails again on Windows only (this time more test failing). I checked and the new tutorial runs successfully on the other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14844
https://github.com/root-project/root/pull/14844:65,performance,time,time,65,@dpiparo can you review it? It fails again on Windows only (this time more test failing). I checked and the new tutorial runs successfully on the other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14844
https://github.com/root-project/root/pull/14844:31,reliability,fail,fails,31,@dpiparo can you review it? It fails again on Windows only (this time more test failing). I checked and the new tutorial runs successfully on the other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14844
https://github.com/root-project/root/pull/14844:80,reliability,fail,failing,80,@dpiparo can you review it? It fails again on Windows only (this time more test failing). I checked and the new tutorial runs successfully on the other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14844
https://github.com/root-project/root/pull/14844:17,safety,review,review,17,@dpiparo can you review it? It fails again on Windows only (this time more test failing). I checked and the new tutorial runs successfully on the other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14844
https://github.com/root-project/root/pull/14844:75,safety,test,test,75,@dpiparo can you review it? It fails again on Windows only (this time more test failing). I checked and the new tutorial runs successfully on the other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14844
https://github.com/root-project/root/pull/14844:17,testability,review,review,17,@dpiparo can you review it? It fails again on Windows only (this time more test failing). I checked and the new tutorial runs successfully on the other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14844
https://github.com/root-project/root/pull/14844:75,testability,test,test,75,@dpiparo can you review it? It fails again on Windows only (this time more test failing). I checked and the new tutorial runs successfully on the other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14844
https://github.com/root-project/root/pull/14853:82,safety,test,test,82,Thanks for your work @vgvassilev ! Do you think it's possible to add a high level test of the code to check the original report of Alice is addressed?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14853
https://github.com/root-project/root/pull/14853:82,testability,test,test,82,Thanks for your work @vgvassilev ! Do you think it's possible to add a high level test of the code to check the original report of Alice is addressed?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14853
https://github.com/root-project/root/pull/14853:15,safety,test,testing,15,"Thanks! We are testing it in our own tag. Since it applies easily there and we have other changes in any case, no need to speedtrack the backport, if it works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14853
https://github.com/root-project/root/pull/14853:15,testability,test,testing,15,"Thanks! We are testing it in our own tag. Since it applies easily there and we have other changes in any case, no need to speedtrack the backport, if it works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14853
https://github.com/root-project/root/pull/14853:84,safety,test,test,84,> Thanks for your work @vgvassilev ! Do you think it's possible to add a high level test of the code to check the original report of Alice is addressed? The test I have is the minimal reproducer from this issue's test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14853
https://github.com/root-project/root/pull/14853:157,safety,test,test,157,> Thanks for your work @vgvassilev ! Do you think it's possible to add a high level test of the code to check the original report of Alice is addressed? The test I have is the minimal reproducer from this issue's test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14853
https://github.com/root-project/root/pull/14853:213,safety,test,test,213,> Thanks for your work @vgvassilev ! Do you think it's possible to add a high level test of the code to check the original report of Alice is addressed? The test I have is the minimal reproducer from this issue's test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14853
https://github.com/root-project/root/pull/14853:84,testability,test,test,84,> Thanks for your work @vgvassilev ! Do you think it's possible to add a high level test of the code to check the original report of Alice is addressed? The test I have is the minimal reproducer from this issue's test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14853
https://github.com/root-project/root/pull/14853:157,testability,test,test,157,> Thanks for your work @vgvassilev ! Do you think it's possible to add a high level test of the code to check the original report of Alice is addressed? The test I have is the minimal reproducer from this issue's test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14853
https://github.com/root-project/root/pull/14853:213,testability,test,test,213,> Thanks for your work @vgvassilev ! Do you think it's possible to add a high level test of the code to check the original report of Alice is addressed? The test I have is the minimal reproducer from this issue's test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14853
https://github.com/root-project/root/pull/14853:176,usability,minim,minimal,176,> Thanks for your work @vgvassilev ! Do you think it's possible to add a high level test of the code to check the original report of Alice is addressed? The test I have is the minimal reproducer from this issue's test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14853
https://github.com/root-project/root/pull/14853:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14853
https://github.com/root-project/root/pull/14853:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14853
https://github.com/root-project/root/pull/14853:18,usability,close,close,18,Github decided to close this PR. I've reopened it here: #14888,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14853
https://github.com/root-project/root/pull/14854:34,interoperability,standard,standard,34,This is a real pity since this is standard C++...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14854
https://github.com/root-project/root/pull/14854:36,interoperability,standard,standard,36,"> This is a real pity since this is standard C++... Right, but I'm sure it is coming from LLVM/Clang/Cling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14854
https://github.com/root-project/root/issues/14855:1671,availability,operat,operator,1671,"/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4150,availability,error,error,4150,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4643,availability,error,error,4643,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:24,deployability,stack,stack,24,"Same on Ubu22.04. Debug stack trace here:. ```. #0 0x00007fa201eea3ea in __GI___wait4 (pid=689394, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x56309240",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:579,deployability,build,build,579,"Same on Ubu22.04. Debug stack trace here:. ```. #0 0x00007fa201eea3ea in __GI___wait4 (pid=689394, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x56309240",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:585,deployability,build,build-root-Desktop-Debug,585,"Same on Ubu22.04. Debug stack trace here:. ```. #0 0x00007fa201eea3ea in __GI___wait4 (pid=689394, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x56309240",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:736,deployability,Stack,StackTrace,736,"Same on Ubu22.04. Debug stack trace here:. ```. #0 0x00007fa201eea3ea in __GI___wait4 (pid=689394, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x56309240",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:2718,deployability,build,build,2718,"644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:2724,deployability,build,build-root-Desktop-Debug,2724,"/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:2886,deployability,build,build,2886,"root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:2892,deployability,build,build-root-Desktop-Debug,2892,"/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:3183,deployability,build,build,3183,"t/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:3189,deployability,build,build-root-Desktop-Debug,3189,"on.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:3435,deployability,build,build,3435,"/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:3441,deployability,build,build-root-Desktop-Debug,3441,"#18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TAp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:3636,deployability,build,build,3636,"cutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:3642,deployability,build,build-root-Desktop-Debug,3642,"rapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ff",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:278,energy efficiency,optim,optimized,278,"Same on Ubu22.04. Debug stack trace here:. ```. #0 0x00007fa201eea3ea in __GI___wait4 (pid=689394, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x56309240",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:428,energy efficiency,optim,optimized,428,"Same on Ubu22.04. Debug stack trace here:. ```. #0 0x00007fa201eea3ea in __GI___wait4 (pid=689394, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x56309240",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:662,energy efficiency,core,core,662,"Same on Ubu22.04. Debug stack trace here:. ```. #0 0x00007fa201eea3ea in __GI___wait4 (pid=689394, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x56309240",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:786,energy efficiency,core,core,786,"Same on Ubu22.04. Debug stack trace here:. ```. #0 0x00007fa201eea3ea in __GI___wait4 (pid=689394, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x56309240",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:946,energy efficiency,core,core,946,"Same on Ubu22.04. Debug stack trace here:. ```. #0 0x00007fa201eea3ea in __GI___wait4 (pid=689394, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x56309240",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:1067,energy efficiency,core,core,1067," in __GI___wait4 (pid=689394, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:1164,energy efficiency,core,core,1164,"usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:1361,energy efficiency,core,core,1361," ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e65",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:1527,energy efficiency,core,core,1527,"56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:1865,energy efficiency,optim,optimized,1865,"gnals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:2017,energy efficiency,optim,optimized,2017,"=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_strin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:2178,energy efficiency,core,core,2178,"nixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:2317,energy efficiency,core,core,2317,"x::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:3059,energy efficiency,alloc,allocator,3059,"c/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:3347,energy efficiency,alloc,allocator,3347,"00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:3831,energy efficiency,Draw,Draw,3831,"nctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:3958,energy efficiency,core,core,3958,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4119,energy efficiency,Draw,Draw,4119,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4189,energy efficiency,core,core,4189,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4356,energy efficiency,Draw,Draw,4356,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4436,energy efficiency,core,core,4436,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4612,energy efficiency,Draw,Draw,4612,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4682,energy efficiency,core,core,4682,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4800,energy efficiency,core,core,4800,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:278,performance,optimiz,optimized,278,"Same on Ubu22.04. Debug stack trace here:. ```. #0 0x00007fa201eea3ea in __GI___wait4 (pid=689394, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x56309240",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:428,performance,optimiz,optimized,428,"Same on Ubu22.04. Debug stack trace here:. ```. #0 0x00007fa201eea3ea in __GI___wait4 (pid=689394, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x56309240",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:1865,performance,optimiz,optimized,1865,"gnals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:2017,performance,optimiz,optimized,2017,"=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_strin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4150,performance,error,error,4150,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4643,performance,error,error,4643,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4150,safety,error,error,4150,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4643,safety,error,error,4643,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:1333,security,sign,signum,1333,"ptions=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:1499,security,sign,signum,1499," TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:1588,security,sign,signal,1588,"root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:30,testability,trace,trace,30,"Same on Ubu22.04. Debug stack trace here:. ```. #0 0x00007fa201eea3ea in __GI___wait4 (pid=689394, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x56309240",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:574,usability,user,user,574,"Same on Ubu22.04. Debug stack trace here:. ```. #0 0x00007fa201eea3ea in __GI___wait4 (pid=689394, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007fa201eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffe8194a818, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007fa201e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007fa202ab531a in TUnixSystem::Exec (this=0x56308f7b6f60, shellcmd=0x56309242b640 ""/home/user/build/build-root-Desktop-Debug/etc/gdb-backtrace.sh 689371 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2125. #4 0x00007fa202ab5c3e in TUnixSystem::StackTrace (this=0x56308f7b6f60) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2416. #5 0x00007fa202ab9ac5 in TUnixSystem::DispatchSignals (this=0x56308f7b6f60, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3636. #6 0x00007fa202ab0cf2 in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:402. #7 0x00007fa202ab99c3 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3607. #8 0x00007fa202aa14a2 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x56309240",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:2246,usability,Clear,Clear,2246,"gUnix::HandleSignal (this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:2378,usability,Close,Close,2378,"extinput/TerminalConfigUnix.cpp:99. #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::V",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:2488,usability,Close,Close,2488,"Signal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36. #10 <signal handler called>. #11 0x00005630924075b0 in ?? (). #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:2713,usability,user,user,2713,"563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116. #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in Handl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:2881,usability,user,user,2881," /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119. #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139. #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:3178,usability,user,user,3178,"re/cont/src/TCollection.cxx:736. #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449. #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:3430,usability,user,user,3430,"ad/src/TPad.cxx:981. #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802. #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:3631,usability,user,user,3631,"talExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:3851,usability,Close,Close,3851,"ing::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4139,usability,Close,Close,4139,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4150,usability,error,error,4150,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4376,usability,Close,Close,4376,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4632,usability,Close,Close,4632,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:4643,usability,error,error,4643,"#21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #22 0x00007fa1faa381e8 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #23 0x00007fa1fab1ed17 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so. #24 0x00007fa1fa7e8eee in HandleInterpreterException (metaProcessor=0x5630904129e0, input_line=0x56309243fb60 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", compRes=. 0x7ffe8194da8c: cling::Interpreter::kSuccess, result=0x7ffe8194dad0) at /opt/root_src/core/metacling/src/TCling.cxx:2438. #25 0x00007fa1fa7e9b8b in TCling::ProcessLine (this=0x56308f842ce0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/metacling/src/TCling.cxx:2598. #26 0x00007fa2028f8786 in TApplication::ProcessLine (this=0x56308f808ef0, line=0x5630923e0630 ""#line 1 \""ROOT_cli_1\""\nratioplot1->Draw(); ratioplot1->Close();"", sync=false, err=0x7ffe8194e080) at /opt/root_src/core/base/src/TApplication.cxx:1732. #27 0x00007fa202faf2bc in TRint::ProcessLineNr (this=0x56308f808ef0, filestem=0x7fa202fc157a ""ROOT_cli_"", line=0x7ffe8194e0e0 ""ratioplot1->Draw(); ratioplot1->Close();"", error=0x7ffe8194e080) at /opt/root_src/core/rint/src/TRint.cxx:801. #28 0x00007fa202fadb8f in TRint::Run (this=0x56308f808ef0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:461. #29 0x000056308d8545e4 in main (argc=1, argv=0x7ffe81950288) at /opt/root_src/main/src/rmain.cxx:84. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:6,usability,clear,clear,6,It is clear ownership problem. @ferdymercury - you can try to fix it if you want.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:40,safety,safe,safeDelete,40,"I tried a bit but I'm confused with the safeDelete function, so I think I'll leave this one to someone else ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:6,usability,clear,clear,6,Is it clear what `ratioplot1->Close()` is supposed to mean?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:30,usability,Close,Close,30,Is it clear what `ratioplot1->Close()` is supposed to mean?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:224,availability,fault,fault,224,> Is it clear what ratioplot1->Close() is supposed to mean? It is just method which is called when canvas closed in interactive mode. I put it here to demonstrate problem. . Calling canvas destructor will cause the same seg fault. I tried to fix the problem in #14861 but facing much more problems. . `RecursiveRemove` is not a solution.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:224,energy efficiency,fault,fault,224,> Is it clear what ratioplot1->Close() is supposed to mean? It is just method which is called when canvas closed in interactive mode. I put it here to demonstrate problem. . Calling canvas destructor will cause the same seg fault. I tried to fix the problem in #14861 but facing much more problems. . `RecursiveRemove` is not a solution.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:224,performance,fault,fault,224,> Is it clear what ratioplot1->Close() is supposed to mean? It is just method which is called when canvas closed in interactive mode. I put it here to demonstrate problem. . Calling canvas destructor will cause the same seg fault. I tried to fix the problem in #14861 but facing much more problems. . `RecursiveRemove` is not a solution.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:224,reliability,fault,fault,224,> Is it clear what ratioplot1->Close() is supposed to mean? It is just method which is called when canvas closed in interactive mode. I put it here to demonstrate problem. . Calling canvas destructor will cause the same seg fault. I tried to fix the problem in #14861 but facing much more problems. . `RecursiveRemove` is not a solution.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:224,safety,fault,fault,224,> Is it clear what ratioplot1->Close() is supposed to mean? It is just method which is called when canvas closed in interactive mode. I put it here to demonstrate problem. . Calling canvas destructor will cause the same seg fault. I tried to fix the problem in #14861 but facing much more problems. . `RecursiveRemove` is not a solution.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:8,usability,clear,clear,8,> Is it clear what ratioplot1->Close() is supposed to mean? It is just method which is called when canvas closed in interactive mode. I put it here to demonstrate problem. . Calling canvas destructor will cause the same seg fault. I tried to fix the problem in #14861 but facing much more problems. . `RecursiveRemove` is not a solution.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:31,usability,Close,Close,31,> Is it clear what ratioplot1->Close() is supposed to mean? It is just method which is called when canvas closed in interactive mode. I put it here to demonstrate problem. . Calling canvas destructor will cause the same seg fault. I tried to fix the problem in #14861 but facing much more problems. . `RecursiveRemove` is not a solution.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:106,usability,close,closed,106,> Is it clear what ratioplot1->Close() is supposed to mean? It is just method which is called when canvas closed in interactive mode. I put it here to demonstrate problem. . Calling canvas destructor will cause the same seg fault. I tried to fix the problem in #14861 but facing much more problems. . `RecursiveRemove` is not a solution.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/issues/14855:116,usability,interact,interactive,116,> Is it clear what ratioplot1->Close() is supposed to mean? It is just method which is called when canvas closed in interactive mode. I put it here to demonstrate problem. . Calling canvas destructor will cause the same seg fault. I tried to fix the problem in #14861 but facing much more problems. . `RecursiveRemove` is not a solution.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14855
https://github.com/root-project/root/pull/14856:55,integrability,interfac,interfaces,55,"At the time, it was not clear how to introduce the new interfaces for the expression of parallelism within ROOT. This is also why the effort started from within the `Experimental` namespace. As correctly underlined above, the class is not really used nor needed, and it's good that these changes were proposed: thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14856
https://github.com/root-project/root/pull/14856:55,interoperability,interfac,interfaces,55,"At the time, it was not clear how to introduce the new interfaces for the expression of parallelism within ROOT. This is also why the effort started from within the `Experimental` namespace. As correctly underlined above, the class is not really used nor needed, and it's good that these changes were proposed: thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14856
https://github.com/root-project/root/pull/14856:55,modifiability,interfac,interfaces,55,"At the time, it was not clear how to introduce the new interfaces for the expression of parallelism within ROOT. This is also why the effort started from within the `Experimental` namespace. As correctly underlined above, the class is not really used nor needed, and it's good that these changes were proposed: thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14856
https://github.com/root-project/root/pull/14856:7,performance,time,time,7,"At the time, it was not clear how to introduce the new interfaces for the expression of parallelism within ROOT. This is also why the effort started from within the `Experimental` namespace. As correctly underlined above, the class is not really used nor needed, and it's good that these changes were proposed: thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14856
https://github.com/root-project/root/pull/14856:88,performance,parallel,parallelism,88,"At the time, it was not clear how to introduce the new interfaces for the expression of parallelism within ROOT. This is also why the effort started from within the `Experimental` namespace. As correctly underlined above, the class is not really used nor needed, and it's good that these changes were proposed: thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14856
https://github.com/root-project/root/pull/14856:24,usability,clear,clear,24,"At the time, it was not clear how to introduce the new interfaces for the expression of parallelism within ROOT. This is also why the effort started from within the `Experimental` namespace. As correctly underlined above, the class is not really used nor needed, and it's good that these changes were proposed: thanks for that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14856
https://github.com/root-project/root/pull/14859:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14859
https://github.com/root-project/root/pull/14859:5,availability,failur,failures,5,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14859
https://github.com/root-project/root/pull/14859:35,availability,failur,failures,35,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14859
https://github.com/root-project/root/pull/14859:5,deployability,fail,failures,5,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14859
https://github.com/root-project/root/pull/14859:35,deployability,fail,failures,35,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14859
https://github.com/root-project/root/pull/14859:71,deployability,contain,containing,71,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14859
https://github.com/root-project/root/pull/14859:27,energy efficiency,current,current,27,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14859
https://github.com/root-project/root/pull/14859:214,interoperability,platform,platforms,214,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14859
https://github.com/root-project/root/pull/14859:5,performance,failur,failures,5,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14859
https://github.com/root-project/root/pull/14859:35,performance,failur,failures,35,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14859
https://github.com/root-project/root/pull/14859:5,reliability,fail,failures,5,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14859
https://github.com/root-project/root/pull/14859:35,reliability,fail,failures,35,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14859
https://github.com/root-project/root/pull/14859:305,safety,test,test,305,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14859
https://github.com/root-project/root/pull/14859:305,testability,test,test,305,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14859
https://github.com/root-project/root/pull/14860:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14860
https://github.com/root-project/root/pull/14861:61,deployability,continu,continue,61,I create test for this problem and still see the crash. Will continue to investigate,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:9,safety,test,test,9,I create test for this problem and still see the crash. Will continue to investigate,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:9,testability,test,test,9,I create test for this problem and still see the crash. Will continue to investigate,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:5,reliability,doe,does,5,What does valgrind says about the crash?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:284,energy efficiency,draw,drawn,284,I rebase my commit - problem was little bit more complicated. One need to add `TRatioPlot` to list of cleanups also in default constructor - when it read from the file. And then correctly cleanup all refs. . Crash was already in the first `safeDelete(fRatioGraph);` - while graph was drawn in subpads. Workaround with `ROOT::Detail::HasBeenDeleted(obj)` was not really working here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:293,integrability,sub,subpads,293,I rebase my commit - problem was little bit more complicated. One need to add `TRatioPlot` to list of cleanups also in default constructor - when it read from the file. And then correctly cleanup all refs. . Crash was already in the first `safeDelete(fRatioGraph);` - while graph was drawn in subpads. Workaround with `ROOT::Detail::HasBeenDeleted(obj)` was not really working here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:49,safety,compl,complicated,49,I rebase my commit - problem was little bit more complicated. One need to add `TRatioPlot` to list of cleanups also in default constructor - when it read from the file. And then correctly cleanup all refs. . Crash was already in the first `safeDelete(fRatioGraph);` - while graph was drawn in subpads. Workaround with `ROOT::Detail::HasBeenDeleted(obj)` was not really working here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:240,safety,safe,safeDelete,240,I rebase my commit - problem was little bit more complicated. One need to add `TRatioPlot` to list of cleanups also in default constructor - when it read from the file. And then correctly cleanup all refs. . Crash was already in the first `safeDelete(fRatioGraph);` - while graph was drawn in subpads. Workaround with `ROOT::Detail::HasBeenDeleted(obj)` was not really working here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:49,security,compl,complicated,49,I rebase my commit - problem was little bit more complicated. One need to add `TRatioPlot` to list of cleanups also in default constructor - when it read from the file. And then correctly cleanup all refs. . Crash was already in the first `safeDelete(fRatioGraph);` - while graph was drawn in subpads. Workaround with `ROOT::Detail::HasBeenDeleted(obj)` was not really working here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:100,usability,custom,custom,100,Maybe it is not good idea with default constructor - but this is the only solution without creating custom streamer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:188,interoperability,registr,registration,188,> Maybe it is not good idea with default constructor - but this is the only solution without creating custom streamer. It is probably fine. The alternative is to use an I/O rule to do the registration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:169,performance,I/O,I/O,169,> Maybe it is not good idea with default constructor - but this is the only solution without creating custom streamer. It is probably fine. The alternative is to use an I/O rule to do the registration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:102,usability,custom,custom,102,> Maybe it is not good idea with default constructor - but this is the only solution without creating custom streamer. It is probably fine. The alternative is to use an I/O rule to do the registration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:256,availability,reliab,reliable,256,> Workaround with ROOT::Detail::HasBeenDeleted(obj) was not really working here. Indeed. `HasBeenDeleted` by definition reads 'previously deleted' memory that may have been re-used for another purpose between the deletion and its execution and thus is not reliable at all. (The main use for it is to issue diagnostic that a problem was detected but it can not be rely upon to actually avoid double deletion).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:147,performance,memor,memory,147,> Workaround with ROOT::Detail::HasBeenDeleted(obj) was not really working here. Indeed. `HasBeenDeleted` by definition reads 'previously deleted' memory that may have been re-used for another purpose between the deletion and its execution and thus is not reliable at all. (The main use for it is to issue diagnostic that a problem was detected but it can not be rely upon to actually avoid double deletion).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:256,reliability,reliab,reliable,256,> Workaround with ROOT::Detail::HasBeenDeleted(obj) was not really working here. Indeed. `HasBeenDeleted` by definition reads 'previously deleted' memory that may have been re-used for another purpose between the deletion and its execution and thus is not reliable at all. (The main use for it is to issue diagnostic that a problem was detected but it can not be rely upon to actually avoid double deletion).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:306,reliability,diagno,diagnostic,306,> Workaround with ROOT::Detail::HasBeenDeleted(obj) was not really working here. Indeed. `HasBeenDeleted` by definition reads 'previously deleted' memory that may have been re-used for another purpose between the deletion and its execution and thus is not reliable at all. (The main use for it is to issue diagnostic that a problem was detected but it can not be rely upon to actually avoid double deletion).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:336,safety,detect,detected,336,> Workaround with ROOT::Detail::HasBeenDeleted(obj) was not really working here. Indeed. `HasBeenDeleted` by definition reads 'previously deleted' memory that may have been re-used for another purpose between the deletion and its execution and thus is not reliable at all. (The main use for it is to issue diagnostic that a problem was detected but it can not be rely upon to actually avoid double deletion).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:385,safety,avoid,avoid,385,> Workaround with ROOT::Detail::HasBeenDeleted(obj) was not really working here. Indeed. `HasBeenDeleted` by definition reads 'previously deleted' memory that may have been re-used for another purpose between the deletion and its execution and thus is not reliable at all. (The main use for it is to issue diagnostic that a problem was detected but it can not be rely upon to actually avoid double deletion).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:336,security,detect,detected,336,> Workaround with ROOT::Detail::HasBeenDeleted(obj) was not really working here. Indeed. `HasBeenDeleted` by definition reads 'previously deleted' memory that may have been re-used for another purpose between the deletion and its execution and thus is not reliable at all. (The main use for it is to issue diagnostic that a problem was detected but it can not be rely upon to actually avoid double deletion).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:306,testability,diagno,diagnostic,306,> Workaround with ROOT::Detail::HasBeenDeleted(obj) was not really working here. Indeed. `HasBeenDeleted` by definition reads 'previously deleted' memory that may have been re-used for another purpose between the deletion and its execution and thus is not reliable at all. (The main use for it is to issue diagnostic that a problem was detected but it can not be rely upon to actually avoid double deletion).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:147,usability,memor,memory,147,> Workaround with ROOT::Detail::HasBeenDeleted(obj) was not really working here. Indeed. `HasBeenDeleted` by definition reads 'previously deleted' memory that may have been re-used for another purpose between the deletion and its execution and thus is not reliable at all. (The main use for it is to issue diagnostic that a problem was detected but it can not be rely upon to actually avoid double deletion).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:9,availability,error,errors,9,Too many errors and it is not easy to make TRatioPlot working after reading from the file. Need further investigations,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:9,performance,error,errors,9,Too many errors and it is not easy to make TRatioPlot working after reading from the file. Need further investigations,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:9,safety,error,errors,9,Too many errors and it is not easy to make TRatioPlot working after reading from the file. Need further investigations,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:9,usability,error,errors,9,Too many errors and it is not easy to make TRatioPlot working after reading from the file. Need further investigations,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/pull/14861:0,usability,Close,Close,0,Close in favor of https://github.com/root-project/root/pull/14881,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14861
https://github.com/root-project/root/issues/14863:58,deployability,updat,updated,58,"Indeed, you are correct. The PR you mentioned needs to be updated (https://github.com/root-project/root/pull/14713/files#r1508200980).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14863
https://github.com/root-project/root/issues/14863:58,safety,updat,updated,58,"Indeed, you are correct. The PR you mentioned needs to be updated (https://github.com/root-project/root/pull/14713/files#r1508200980).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14863
https://github.com/root-project/root/issues/14863:58,security,updat,updated,58,"Indeed, you are correct. The PR you mentioned needs to be updated (https://github.com/root-project/root/pull/14713/files#r1508200980).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14863
https://github.com/root-project/root/pull/14865:10,availability,error,errors,10,"Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:10,performance,error,errors,10,"Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:10,safety,error,errors,10,"Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:30,safety,valid,valid,30,"Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:110,security,access,access,110,"Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:10,usability,error,errors,10,"Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:79,usability,clear,clear,79,"Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:12,availability,error,errors,12,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:195,availability,error,error,195,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:293,availability,error,error,293,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:201,integrability,messag,message,201,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:253,integrability,messag,message,253,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:201,interoperability,messag,message,201,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:253,interoperability,messag,message,253,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:12,performance,error,errors,12,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:195,performance,error,error,195,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:293,performance,error,error,293,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:329,reliability,doe,doesn,329,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:12,safety,error,errors,12,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:32,safety,valid,valid,32,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:175,safety,compl,complains,175,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:195,safety,error,error,195,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:293,safety,error,error,293,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:112,security,access,access,112,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:175,security,compl,complains,175,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:12,usability,error,errors,12,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:81,usability,clear,clear,81,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:170,usability,user,user,170,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:195,usability,error,error,195,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:266,usability,help,help,266,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14865:293,usability,error,error,293,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar? The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14865
https://github.com/root-project/root/pull/14869:44,energy efficiency,core,core,44,"For the record, all occurrences here:. ```. core/base/inc/TFolder.h:62: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. core/base/inc/TVirtualPad.h:205: void SaveAs(const char *filename="""",Option_t *option="""") const override = 0;. core/base/inc/TObject.h:162: virtual void SaveAs(const char *filename="""",Option_t *option="""") const; // *MENU*. geom/geom/inc/TGeoVolume.h:209: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. graf2d/gpad/inc/TPaveClass.h:37: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TPad.h:320: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TClassTree.h:69: void SaveAs(const char *filename="""",Option_t *option="""") const override;. gui/gui/inc/TGObject.h:45: void SaveAs(const char* filename = """", Option_t* option = """") const override;. gui/gui/inc/TGFileDialog.h:77: ///< OR set on/off multiple file selection for SaveAs dialog. hist/hist/inc/TSpline.h:69: void SaveAs(const char * /*filename*/ = """",Option_t * /*option*/ = """") const override {}. hist/hist/inc/TSpline.h:246: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TSpline.h:309: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TH1.h:359: void SaveAs(const char *filename, Option_t *option) const override; // *MENU*. hist/hist/inc/TGraph.h:181: void SaveAs(const char *filename = ""graph"", Option_t *option = """") const override; // *MENU*. roofit/xroofit/inc/RooFit/xRooFit/xRooNode.h:407: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. tree/treeplayer/inc/TTreePerfStats.h:124: void SaveAs(const char *filename="""",Option_t *option="""") const override;. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14869
https://github.com/root-project/root/pull/14869:156,energy efficiency,core,core,156,"For the record, all occurrences here:. ```. core/base/inc/TFolder.h:62: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. core/base/inc/TVirtualPad.h:205: void SaveAs(const char *filename="""",Option_t *option="""") const override = 0;. core/base/inc/TObject.h:162: virtual void SaveAs(const char *filename="""",Option_t *option="""") const; // *MENU*. geom/geom/inc/TGeoVolume.h:209: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. graf2d/gpad/inc/TPaveClass.h:37: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TPad.h:320: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TClassTree.h:69: void SaveAs(const char *filename="""",Option_t *option="""") const override;. gui/gui/inc/TGObject.h:45: void SaveAs(const char* filename = """", Option_t* option = """") const override;. gui/gui/inc/TGFileDialog.h:77: ///< OR set on/off multiple file selection for SaveAs dialog. hist/hist/inc/TSpline.h:69: void SaveAs(const char * /*filename*/ = """",Option_t * /*option*/ = """") const override {}. hist/hist/inc/TSpline.h:246: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TSpline.h:309: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TH1.h:359: void SaveAs(const char *filename, Option_t *option) const override; // *MENU*. hist/hist/inc/TGraph.h:181: void SaveAs(const char *filename = ""graph"", Option_t *option = """") const override; // *MENU*. roofit/xroofit/inc/RooFit/xRooFit/xRooNode.h:407: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. tree/treeplayer/inc/TTreePerfStats.h:124: void SaveAs(const char *filename="""",Option_t *option="""") const override;. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14869
https://github.com/root-project/root/pull/14869:267,energy efficiency,core,core,267,"For the record, all occurrences here:. ```. core/base/inc/TFolder.h:62: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. core/base/inc/TVirtualPad.h:205: void SaveAs(const char *filename="""",Option_t *option="""") const override = 0;. core/base/inc/TObject.h:162: virtual void SaveAs(const char *filename="""",Option_t *option="""") const; // *MENU*. geom/geom/inc/TGeoVolume.h:209: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. graf2d/gpad/inc/TPaveClass.h:37: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TPad.h:320: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TClassTree.h:69: void SaveAs(const char *filename="""",Option_t *option="""") const override;. gui/gui/inc/TGObject.h:45: void SaveAs(const char* filename = """", Option_t* option = """") const override;. gui/gui/inc/TGFileDialog.h:77: ///< OR set on/off multiple file selection for SaveAs dialog. hist/hist/inc/TSpline.h:69: void SaveAs(const char * /*filename*/ = """",Option_t * /*option*/ = """") const override {}. hist/hist/inc/TSpline.h:246: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TSpline.h:309: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TH1.h:359: void SaveAs(const char *filename, Option_t *option) const override; // *MENU*. hist/hist/inc/TGraph.h:181: void SaveAs(const char *filename = ""graph"", Option_t *option = """") const override; // *MENU*. roofit/xroofit/inc/RooFit/xRooFit/xRooNode.h:407: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. tree/treeplayer/inc/TTreePerfStats.h:124: void SaveAs(const char *filename="""",Option_t *option="""") const override;. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14869
https://github.com/root-project/root/pull/14869:149,usability,MENU,MENU,149,"For the record, all occurrences here:. ```. core/base/inc/TFolder.h:62: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. core/base/inc/TVirtualPad.h:205: void SaveAs(const char *filename="""",Option_t *option="""") const override = 0;. core/base/inc/TObject.h:162: virtual void SaveAs(const char *filename="""",Option_t *option="""") const; // *MENU*. geom/geom/inc/TGeoVolume.h:209: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. graf2d/gpad/inc/TPaveClass.h:37: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TPad.h:320: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TClassTree.h:69: void SaveAs(const char *filename="""",Option_t *option="""") const override;. gui/gui/inc/TGObject.h:45: void SaveAs(const char* filename = """", Option_t* option = """") const override;. gui/gui/inc/TGFileDialog.h:77: ///< OR set on/off multiple file selection for SaveAs dialog. hist/hist/inc/TSpline.h:69: void SaveAs(const char * /*filename*/ = """",Option_t * /*option*/ = """") const override {}. hist/hist/inc/TSpline.h:246: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TSpline.h:309: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TH1.h:359: void SaveAs(const char *filename, Option_t *option) const override; // *MENU*. hist/hist/inc/TGraph.h:181: void SaveAs(const char *filename = ""graph"", Option_t *option = """") const override; // *MENU*. roofit/xroofit/inc/RooFit/xRooFit/xRooNode.h:407: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. tree/treeplayer/inc/TTreePerfStats.h:124: void SaveAs(const char *filename="""",Option_t *option="""") const override;. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14869
https://github.com/root-project/root/pull/14869:372,usability,MENU,MENU,372,"For the record, all occurrences here:. ```. core/base/inc/TFolder.h:62: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. core/base/inc/TVirtualPad.h:205: void SaveAs(const char *filename="""",Option_t *option="""") const override = 0;. core/base/inc/TObject.h:162: virtual void SaveAs(const char *filename="""",Option_t *option="""") const; // *MENU*. geom/geom/inc/TGeoVolume.h:209: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. graf2d/gpad/inc/TPaveClass.h:37: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TPad.h:320: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TClassTree.h:69: void SaveAs(const char *filename="""",Option_t *option="""") const override;. gui/gui/inc/TGObject.h:45: void SaveAs(const char* filename = """", Option_t* option = """") const override;. gui/gui/inc/TGFileDialog.h:77: ///< OR set on/off multiple file selection for SaveAs dialog. hist/hist/inc/TSpline.h:69: void SaveAs(const char * /*filename*/ = """",Option_t * /*option*/ = """") const override {}. hist/hist/inc/TSpline.h:246: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TSpline.h:309: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TH1.h:359: void SaveAs(const char *filename, Option_t *option) const override; // *MENU*. hist/hist/inc/TGraph.h:181: void SaveAs(const char *filename = ""graph"", Option_t *option = """") const override; // *MENU*. roofit/xroofit/inc/RooFit/xRooFit/xRooNode.h:407: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. tree/treeplayer/inc/TTreePerfStats.h:124: void SaveAs(const char *filename="""",Option_t *option="""") const override;. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14869
https://github.com/root-project/root/pull/14869:493,usability,MENU,MENU,493,"For the record, all occurrences here:. ```. core/base/inc/TFolder.h:62: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. core/base/inc/TVirtualPad.h:205: void SaveAs(const char *filename="""",Option_t *option="""") const override = 0;. core/base/inc/TObject.h:162: virtual void SaveAs(const char *filename="""",Option_t *option="""") const; // *MENU*. geom/geom/inc/TGeoVolume.h:209: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. graf2d/gpad/inc/TPaveClass.h:37: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TPad.h:320: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TClassTree.h:69: void SaveAs(const char *filename="""",Option_t *option="""") const override;. gui/gui/inc/TGObject.h:45: void SaveAs(const char* filename = """", Option_t* option = """") const override;. gui/gui/inc/TGFileDialog.h:77: ///< OR set on/off multiple file selection for SaveAs dialog. hist/hist/inc/TSpline.h:69: void SaveAs(const char * /*filename*/ = """",Option_t * /*option*/ = """") const override {}. hist/hist/inc/TSpline.h:246: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TSpline.h:309: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TH1.h:359: void SaveAs(const char *filename, Option_t *option) const override; // *MENU*. hist/hist/inc/TGraph.h:181: void SaveAs(const char *filename = ""graph"", Option_t *option = """") const override; // *MENU*. roofit/xroofit/inc/RooFit/xRooFit/xRooNode.h:407: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. tree/treeplayer/inc/TTreePerfStats.h:124: void SaveAs(const char *filename="""",Option_t *option="""") const override;. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14869
https://github.com/root-project/root/pull/14869:610,usability,MENU,MENU,610,"For the record, all occurrences here:. ```. core/base/inc/TFolder.h:62: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. core/base/inc/TVirtualPad.h:205: void SaveAs(const char *filename="""",Option_t *option="""") const override = 0;. core/base/inc/TObject.h:162: virtual void SaveAs(const char *filename="""",Option_t *option="""") const; // *MENU*. geom/geom/inc/TGeoVolume.h:209: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. graf2d/gpad/inc/TPaveClass.h:37: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TPad.h:320: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TClassTree.h:69: void SaveAs(const char *filename="""",Option_t *option="""") const override;. gui/gui/inc/TGObject.h:45: void SaveAs(const char* filename = """", Option_t* option = """") const override;. gui/gui/inc/TGFileDialog.h:77: ///< OR set on/off multiple file selection for SaveAs dialog. hist/hist/inc/TSpline.h:69: void SaveAs(const char * /*filename*/ = """",Option_t * /*option*/ = """") const override {}. hist/hist/inc/TSpline.h:246: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TSpline.h:309: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TH1.h:359: void SaveAs(const char *filename, Option_t *option) const override; // *MENU*. hist/hist/inc/TGraph.h:181: void SaveAs(const char *filename = ""graph"", Option_t *option = """") const override; // *MENU*. roofit/xroofit/inc/RooFit/xRooFit/xRooNode.h:407: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. tree/treeplayer/inc/TTreePerfStats.h:124: void SaveAs(const char *filename="""",Option_t *option="""") const override;. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14869
https://github.com/root-project/root/pull/14869:722,usability,MENU,MENU,722,"For the record, all occurrences here:. ```. core/base/inc/TFolder.h:62: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. core/base/inc/TVirtualPad.h:205: void SaveAs(const char *filename="""",Option_t *option="""") const override = 0;. core/base/inc/TObject.h:162: virtual void SaveAs(const char *filename="""",Option_t *option="""") const; // *MENU*. geom/geom/inc/TGeoVolume.h:209: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. graf2d/gpad/inc/TPaveClass.h:37: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TPad.h:320: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TClassTree.h:69: void SaveAs(const char *filename="""",Option_t *option="""") const override;. gui/gui/inc/TGObject.h:45: void SaveAs(const char* filename = """", Option_t* option = """") const override;. gui/gui/inc/TGFileDialog.h:77: ///< OR set on/off multiple file selection for SaveAs dialog. hist/hist/inc/TSpline.h:69: void SaveAs(const char * /*filename*/ = """",Option_t * /*option*/ = """") const override {}. hist/hist/inc/TSpline.h:246: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TSpline.h:309: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TH1.h:359: void SaveAs(const char *filename, Option_t *option) const override; // *MENU*. hist/hist/inc/TGraph.h:181: void SaveAs(const char *filename = ""graph"", Option_t *option = """") const override; // *MENU*. roofit/xroofit/inc/RooFit/xRooFit/xRooNode.h:407: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. tree/treeplayer/inc/TTreePerfStats.h:124: void SaveAs(const char *filename="""",Option_t *option="""") const override;. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14869
https://github.com/root-project/root/pull/14869:1027,usability,dialog,dialog,1027,"For the record, all occurrences here:. ```. core/base/inc/TFolder.h:62: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. core/base/inc/TVirtualPad.h:205: void SaveAs(const char *filename="""",Option_t *option="""") const override = 0;. core/base/inc/TObject.h:162: virtual void SaveAs(const char *filename="""",Option_t *option="""") const; // *MENU*. geom/geom/inc/TGeoVolume.h:209: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. graf2d/gpad/inc/TPaveClass.h:37: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TPad.h:320: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TClassTree.h:69: void SaveAs(const char *filename="""",Option_t *option="""") const override;. gui/gui/inc/TGObject.h:45: void SaveAs(const char* filename = """", Option_t* option = """") const override;. gui/gui/inc/TGFileDialog.h:77: ///< OR set on/off multiple file selection for SaveAs dialog. hist/hist/inc/TSpline.h:69: void SaveAs(const char * /*filename*/ = """",Option_t * /*option*/ = """") const override {}. hist/hist/inc/TSpline.h:246: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TSpline.h:309: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TH1.h:359: void SaveAs(const char *filename, Option_t *option) const override; // *MENU*. hist/hist/inc/TGraph.h:181: void SaveAs(const char *filename = ""graph"", Option_t *option = """") const override; // *MENU*. roofit/xroofit/inc/RooFit/xRooFit/xRooNode.h:407: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. tree/treeplayer/inc/TTreePerfStats.h:124: void SaveAs(const char *filename="""",Option_t *option="""") const override;. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14869
https://github.com/root-project/root/pull/14869:1456,usability,MENU,MENU,1456,"For the record, all occurrences here:. ```. core/base/inc/TFolder.h:62: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. core/base/inc/TVirtualPad.h:205: void SaveAs(const char *filename="""",Option_t *option="""") const override = 0;. core/base/inc/TObject.h:162: virtual void SaveAs(const char *filename="""",Option_t *option="""") const; // *MENU*. geom/geom/inc/TGeoVolume.h:209: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. graf2d/gpad/inc/TPaveClass.h:37: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TPad.h:320: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TClassTree.h:69: void SaveAs(const char *filename="""",Option_t *option="""") const override;. gui/gui/inc/TGObject.h:45: void SaveAs(const char* filename = """", Option_t* option = """") const override;. gui/gui/inc/TGFileDialog.h:77: ///< OR set on/off multiple file selection for SaveAs dialog. hist/hist/inc/TSpline.h:69: void SaveAs(const char * /*filename*/ = """",Option_t * /*option*/ = """") const override {}. hist/hist/inc/TSpline.h:246: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TSpline.h:309: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TH1.h:359: void SaveAs(const char *filename, Option_t *option) const override; // *MENU*. hist/hist/inc/TGraph.h:181: void SaveAs(const char *filename = ""graph"", Option_t *option = """") const override; // *MENU*. roofit/xroofit/inc/RooFit/xRooFit/xRooNode.h:407: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. tree/treeplayer/inc/TTreePerfStats.h:124: void SaveAs(const char *filename="""",Option_t *option="""") const override;. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14869
https://github.com/root-project/root/pull/14869:1578,usability,MENU,MENU,1578,"For the record, all occurrences here:. ```. core/base/inc/TFolder.h:62: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. core/base/inc/TVirtualPad.h:205: void SaveAs(const char *filename="""",Option_t *option="""") const override = 0;. core/base/inc/TObject.h:162: virtual void SaveAs(const char *filename="""",Option_t *option="""") const; // *MENU*. geom/geom/inc/TGeoVolume.h:209: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. graf2d/gpad/inc/TPaveClass.h:37: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TPad.h:320: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TClassTree.h:69: void SaveAs(const char *filename="""",Option_t *option="""") const override;. gui/gui/inc/TGObject.h:45: void SaveAs(const char* filename = """", Option_t* option = """") const override;. gui/gui/inc/TGFileDialog.h:77: ///< OR set on/off multiple file selection for SaveAs dialog. hist/hist/inc/TSpline.h:69: void SaveAs(const char * /*filename*/ = """",Option_t * /*option*/ = """") const override {}. hist/hist/inc/TSpline.h:246: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TSpline.h:309: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TH1.h:359: void SaveAs(const char *filename, Option_t *option) const override; // *MENU*. hist/hist/inc/TGraph.h:181: void SaveAs(const char *filename = ""graph"", Option_t *option = """") const override; // *MENU*. roofit/xroofit/inc/RooFit/xRooFit/xRooNode.h:407: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. tree/treeplayer/inc/TTreePerfStats.h:124: void SaveAs(const char *filename="""",Option_t *option="""") const override;. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14869
https://github.com/root-project/root/pull/14869:1717,usability,MENU,MENU,1717,"For the record, all occurrences here:. ```. core/base/inc/TFolder.h:62: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. core/base/inc/TVirtualPad.h:205: void SaveAs(const char *filename="""",Option_t *option="""") const override = 0;. core/base/inc/TObject.h:162: virtual void SaveAs(const char *filename="""",Option_t *option="""") const; // *MENU*. geom/geom/inc/TGeoVolume.h:209: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. graf2d/gpad/inc/TPaveClass.h:37: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TPad.h:320: void SaveAs(const char *filename="""",Option_t *option="""") const override; // *MENU*. graf2d/gpad/inc/TClassTree.h:69: void SaveAs(const char *filename="""",Option_t *option="""") const override;. gui/gui/inc/TGObject.h:45: void SaveAs(const char* filename = """", Option_t* option = """") const override;. gui/gui/inc/TGFileDialog.h:77: ///< OR set on/off multiple file selection for SaveAs dialog. hist/hist/inc/TSpline.h:69: void SaveAs(const char * /*filename*/ = """",Option_t * /*option*/ = """") const override {}. hist/hist/inc/TSpline.h:246: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TSpline.h:309: void SaveAs(const char *filename="""",Option_t *option="""") const override;. hist/hist/inc/TH1.h:359: void SaveAs(const char *filename, Option_t *option) const override; // *MENU*. hist/hist/inc/TGraph.h:181: void SaveAs(const char *filename = ""graph"", Option_t *option = """") const override; // *MENU*. roofit/xroofit/inc/RooFit/xRooFit/xRooNode.h:407: void SaveAs(const char *filename = """", Option_t *option = """") const override; // *MENU*. tree/treeplayer/inc/TTreePerfStats.h:124: void SaveAs(const char *filename="""",Option_t *option="""") const override;. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14869
https://github.com/root-project/root/pull/14869:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14869
https://github.com/root-project/root/pull/14873:12,deployability,log,logic,12,"> Maybe the logic in hadd was misguided by the parameter name. Indeed, way-back in 2011 the semantic of the compress parameter of `TFile::Open` was updated by that was not propagated to the name/doc of `hadd/TFileMerger`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14873
https://github.com/root-project/root/pull/14873:148,deployability,updat,updated,148,"> Maybe the logic in hadd was misguided by the parameter name. Indeed, way-back in 2011 the semantic of the compress parameter of `TFile::Open` was updated by that was not propagated to the name/doc of `hadd/TFileMerger`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14873
https://github.com/root-project/root/pull/14873:92,interoperability,semant,semantic,92,"> Maybe the logic in hadd was misguided by the parameter name. Indeed, way-back in 2011 the semantic of the compress parameter of `TFile::Open` was updated by that was not propagated to the name/doc of `hadd/TFileMerger`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14873
https://github.com/root-project/root/pull/14873:47,modifiability,paramet,parameter,47,"> Maybe the logic in hadd was misguided by the parameter name. Indeed, way-back in 2011 the semantic of the compress parameter of `TFile::Open` was updated by that was not propagated to the name/doc of `hadd/TFileMerger`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14873
https://github.com/root-project/root/pull/14873:117,modifiability,paramet,parameter,117,"> Maybe the logic in hadd was misguided by the parameter name. Indeed, way-back in 2011 the semantic of the compress parameter of `TFile::Open` was updated by that was not propagated to the name/doc of `hadd/TFileMerger`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14873
https://github.com/root-project/root/pull/14873:12,safety,log,logic,12,"> Maybe the logic in hadd was misguided by the parameter name. Indeed, way-back in 2011 the semantic of the compress parameter of `TFile::Open` was updated by that was not propagated to the name/doc of `hadd/TFileMerger`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14873
https://github.com/root-project/root/pull/14873:148,safety,updat,updated,148,"> Maybe the logic in hadd was misguided by the parameter name. Indeed, way-back in 2011 the semantic of the compress parameter of `TFile::Open` was updated by that was not propagated to the name/doc of `hadd/TFileMerger`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14873
https://github.com/root-project/root/pull/14873:12,security,log,logic,12,"> Maybe the logic in hadd was misguided by the parameter name. Indeed, way-back in 2011 the semantic of the compress parameter of `TFile::Open` was updated by that was not propagated to the name/doc of `hadd/TFileMerger`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14873
https://github.com/root-project/root/pull/14873:148,security,updat,updated,148,"> Maybe the logic in hadd was misguided by the parameter name. Indeed, way-back in 2011 the semantic of the compress parameter of `TFile::Open` was updated by that was not propagated to the name/doc of `hadd/TFileMerger`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14873
https://github.com/root-project/root/pull/14873:12,testability,log,logic,12,"> Maybe the logic in hadd was misguided by the parameter name. Indeed, way-back in 2011 the semantic of the compress parameter of `TFile::Open` was updated by that was not propagated to the name/doc of `hadd/TFileMerger`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14873
https://github.com/root-project/root/pull/14873:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14873
https://github.com/root-project/root/pull/14874:390,deployability,fail,fail,390,"> LGTM! Do we also want to use this in case someone attempts to create a `std::unique_ptr` field of a cyclic class? Or is this already handled in some other way? Thanks! Yep, the `unique_ptr` case is handled in the same way than the unit-tested vector case: `RFieldBase::Create` will construct the unique_ptr from a `RUniquePtrField` with an inner field of the actual type. And, if cyclic, fail on the construction of that inner type.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14874
https://github.com/root-project/root/pull/14874:390,reliability,fail,fail,390,"> LGTM! Do we also want to use this in case someone attempts to create a `std::unique_ptr` field of a cyclic class? Or is this already handled in some other way? Thanks! Yep, the `unique_ptr` case is handled in the same way than the unit-tested vector case: `RFieldBase::Create` will construct the unique_ptr from a `RUniquePtrField` with an inner field of the actual type. And, if cyclic, fail on the construction of that inner type.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14874
https://github.com/root-project/root/pull/14874:238,safety,test,tested,238,"> LGTM! Do we also want to use this in case someone attempts to create a `std::unique_ptr` field of a cyclic class? Or is this already handled in some other way? Thanks! Yep, the `unique_ptr` case is handled in the same way than the unit-tested vector case: `RFieldBase::Create` will construct the unique_ptr from a `RUniquePtrField` with an inner field of the actual type. And, if cyclic, fail on the construction of that inner type.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14874
https://github.com/root-project/root/pull/14874:233,testability,unit,unit-tested,233,"> LGTM! Do we also want to use this in case someone attempts to create a `std::unique_ptr` field of a cyclic class? Or is this already handled in some other way? Thanks! Yep, the `unique_ptr` case is handled in the same way than the unit-tested vector case: `RFieldBase::Create` will construct the unique_ptr from a `RUniquePtrField` with an inner field of the actual type. And, if cyclic, fail on the construction of that inner type.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14874
https://github.com/root-project/root/pull/14877:4,availability,failur,failures,4,"The failures on Windows Jenkins are the occasional out-of-heap-space of the compiler. It has nothing to do with this PR, and the new CI is green for Windows 32 bit and 64 bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14877
https://github.com/root-project/root/pull/14877:4,deployability,fail,failures,4,"The failures on Windows Jenkins are the occasional out-of-heap-space of the compiler. It has nothing to do with this PR, and the new CI is green for Windows 32 bit and 64 bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14877
https://github.com/root-project/root/pull/14877:139,energy efficiency,green,green,139,"The failures on Windows Jenkins are the occasional out-of-heap-space of the compiler. It has nothing to do with this PR, and the new CI is green for Windows 32 bit and 64 bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14877
https://github.com/root-project/root/pull/14877:4,performance,failur,failures,4,"The failures on Windows Jenkins are the occasional out-of-heap-space of the compiler. It has nothing to do with this PR, and the new CI is green for Windows 32 bit and 64 bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14877
https://github.com/root-project/root/pull/14877:4,reliability,fail,failures,4,"The failures on Windows Jenkins are the occasional out-of-heap-space of the compiler. It has nothing to do with this PR, and the new CI is green for Windows 32 bit and 64 bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14877
https://github.com/root-project/root/pull/14878:53,deployability,build,buildconfig,53,Please also delete `.github/workflows/root-ci-config/buildconfig/ubuntu2304.txt` :smiley:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14878
https://github.com/root-project/root/pull/14878:28,usability,workflow,workflows,28,Please also delete `.github/workflows/root-ci-config/buildconfig/ubuntu2304.txt` :smiley:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14878
https://github.com/root-project/root/pull/14879:148,energy efficiency,core,core,148,"> 🤞 This is something that hopefully helps us. I would try, if possible and not too difficult, to do the 3rd and 4th retry _sequentially_ i.e. on 1 core only. Not sure that CMake offers this functionality...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14879
https://github.com/root-project/root/pull/14879:37,usability,help,helps,37,"> 🤞 This is something that hopefully helps us. I would try, if possible and not too difficult, to do the 3rd and 4th retry _sequentially_ i.e. on 1 core only. Not sure that CMake offers this functionality...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14879
https://github.com/root-project/root/pull/14883:20,availability,error,error,20,"I think there is an error in the building job now due to this change, see: https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/3248/console",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14883
https://github.com/root-project/root/pull/14883:90,availability,servic,services,90,"I think there is an error in the building job now due to this change, see: https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/3248/console",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14883
https://github.com/root-project/root/pull/14883:33,deployability,build,building,33,"I think there is an error in the building job now due to this change, see: https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/3248/console",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14883
https://github.com/root-project/root/pull/14883:90,deployability,servic,services,90,"I think there is an error in the building job now due to this change, see: https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/3248/console",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14883
https://github.com/root-project/root/pull/14883:90,integrability,servic,services,90,"I think there is an error in the building job now due to this change, see: https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/3248/console",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14883
https://github.com/root-project/root/pull/14883:90,modifiability,servic,services,90,"I think there is an error in the building job now due to this change, see: https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/3248/console",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14883
https://github.com/root-project/root/pull/14883:20,performance,error,error,20,"I think there is an error in the building job now due to this change, see: https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/3248/console",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14883
https://github.com/root-project/root/pull/14883:20,safety,error,error,20,"I think there is an error in the building job now due to this change, see: https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/3248/console",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14883
https://github.com/root-project/root/pull/14883:20,usability,error,error,20,"I think there is an error in the building job now due to this change, see: https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/3248/console",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14883
https://github.com/root-project/root/pull/14887:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:24,safety,test,test,24,We should really have a test for this...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:24,testability,test,test,24,We should really have a test for this...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:173,availability,down,down,173,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:97,deployability,fail,failing,97,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:97,reliability,fail,failing,97,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:26,safety,test,test,26,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:105,safety,test,test,105,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:150,safety,compl,complicated,150,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:150,security,compl,complicated,150,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:26,testability,test,test,26,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:105,testability,test,test,105,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:183,testability,simpl,simple,183,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:183,usability,simpl,simple,183,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:220,usability,help,helpful,220,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:304,usability,close,closely,304,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:172,availability,consist,consists,172,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:24,deployability,fail,failing,24,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:357,deployability,contain,containing,357,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:136,integrability,event,events,136,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:368,integrability,schema,schema,368,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:24,reliability,fail,failing,24,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:220,reliability,doe,does,220,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:10,safety,test,test,10,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:66,safety,test,test,66,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:76,safety,test,test,76,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:97,safety,test,testing,97,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:167,safety,test,test,167,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:10,testability,test,test,10,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:66,testability,test,test,66,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:76,testability,test,test,76,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:97,testability,test,testing,97,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:167,testability,test,test,167,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:300,testability,verif,verify,300,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:172,usability,consist,consists,172,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file. The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:17,safety,test,test,17,"For a standalone test, it's like enough to just write a long string into a `root` file and read it back",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:17,testability,test,test,17,"For a standalone test, it's like enough to just write a long string into a `root` file and read it back",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:17,deployability,contain,contain,17,"Does your branch contain TStrings or Char_t ? Maybe a test like this could work:. ```. {. const char *n = ""longstring.root"";. Char_t longString[3000] {};. Char_t checkString[3000] {};. TFile *f;. TTree *t;. TString ts, *ps;. // create and fill the tree. f = TFile::Open(n, ""recreate"");. t = new TTree(""t"", ""t"");. t->Branch(""ts"", &ts);. t->Branch(""longString"", longString, ""longString/C"");. for (Int_t i = 0; i < 2999; i++) { longString[i] = i%100 + 5; }. longString[2999] = '\0';. for (Int_t i = 1; i <= 3000; i++) { ts += i; }. t->Fill();. t->Write();. delete f; // automatically deletes t, too. // retrieve and dump the tree. f = TFile::Open(n, ""read"");. f->GetObject(""t"", t);. t->Print(); t->Scan(); // () or (""*"") or (""s"") or (""s.Data()""). ps = nullptr; // make sure it is initialized. t->SetBranchAddress(""ts"", &ps);. t->SetBranchAddress(""longString"", &checkString);. t->GetEntry(0);. assert(*ps == ts);. for (Int_t i = 0; i < 3000; i++) { assert(longString[i] = checkString[i]); }. delete f; // automatically deletes t, too. delete ps; // cleanup. }. ```. Inspired by https://root-forum.cern.ch/t/writing-a-tstring-into-a-ttree/48886/9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:567,deployability,automat,automatically,567,"Does your branch contain TStrings or Char_t ? Maybe a test like this could work:. ```. {. const char *n = ""longstring.root"";. Char_t longString[3000] {};. Char_t checkString[3000] {};. TFile *f;. TTree *t;. TString ts, *ps;. // create and fill the tree. f = TFile::Open(n, ""recreate"");. t = new TTree(""t"", ""t"");. t->Branch(""ts"", &ts);. t->Branch(""longString"", longString, ""longString/C"");. for (Int_t i = 0; i < 2999; i++) { longString[i] = i%100 + 5; }. longString[2999] = '\0';. for (Int_t i = 1; i <= 3000; i++) { ts += i; }. t->Fill();. t->Write();. delete f; // automatically deletes t, too. // retrieve and dump the tree. f = TFile::Open(n, ""read"");. f->GetObject(""t"", t);. t->Print(); t->Scan(); // () or (""*"") or (""s"") or (""s.Data()""). ps = nullptr; // make sure it is initialized. t->SetBranchAddress(""ts"", &ps);. t->SetBranchAddress(""longString"", &checkString);. t->GetEntry(0);. assert(*ps == ts);. for (Int_t i = 0; i < 3000; i++) { assert(longString[i] = checkString[i]); }. delete f; // automatically deletes t, too. delete ps; // cleanup. }. ```. Inspired by https://root-forum.cern.ch/t/writing-a-tstring-into-a-ttree/48886/9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:1001,deployability,automat,automatically,1001,"Does your branch contain TStrings or Char_t ? Maybe a test like this could work:. ```. {. const char *n = ""longstring.root"";. Char_t longString[3000] {};. Char_t checkString[3000] {};. TFile *f;. TTree *t;. TString ts, *ps;. // create and fill the tree. f = TFile::Open(n, ""recreate"");. t = new TTree(""t"", ""t"");. t->Branch(""ts"", &ts);. t->Branch(""longString"", longString, ""longString/C"");. for (Int_t i = 0; i < 2999; i++) { longString[i] = i%100 + 5; }. longString[2999] = '\0';. for (Int_t i = 1; i <= 3000; i++) { ts += i; }. t->Fill();. t->Write();. delete f; // automatically deletes t, too. // retrieve and dump the tree. f = TFile::Open(n, ""read"");. f->GetObject(""t"", t);. t->Print(); t->Scan(); // () or (""*"") or (""s"") or (""s.Data()""). ps = nullptr; // make sure it is initialized. t->SetBranchAddress(""ts"", &ps);. t->SetBranchAddress(""longString"", &checkString);. t->GetEntry(0);. assert(*ps == ts);. for (Int_t i = 0; i < 3000; i++) { assert(longString[i] = checkString[i]); }. delete f; // automatically deletes t, too. delete ps; // cleanup. }. ```. Inspired by https://root-forum.cern.ch/t/writing-a-tstring-into-a-ttree/48886/9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:0,reliability,Doe,Does,0,"Does your branch contain TStrings or Char_t ? Maybe a test like this could work:. ```. {. const char *n = ""longstring.root"";. Char_t longString[3000] {};. Char_t checkString[3000] {};. TFile *f;. TTree *t;. TString ts, *ps;. // create and fill the tree. f = TFile::Open(n, ""recreate"");. t = new TTree(""t"", ""t"");. t->Branch(""ts"", &ts);. t->Branch(""longString"", longString, ""longString/C"");. for (Int_t i = 0; i < 2999; i++) { longString[i] = i%100 + 5; }. longString[2999] = '\0';. for (Int_t i = 1; i <= 3000; i++) { ts += i; }. t->Fill();. t->Write();. delete f; // automatically deletes t, too. // retrieve and dump the tree. f = TFile::Open(n, ""read"");. f->GetObject(""t"", t);. t->Print(); t->Scan(); // () or (""*"") or (""s"") or (""s.Data()""). ps = nullptr; // make sure it is initialized. t->SetBranchAddress(""ts"", &ps);. t->SetBranchAddress(""longString"", &checkString);. t->GetEntry(0);. assert(*ps == ts);. for (Int_t i = 0; i < 3000; i++) { assert(longString[i] = checkString[i]); }. delete f; // automatically deletes t, too. delete ps; // cleanup. }. ```. Inspired by https://root-forum.cern.ch/t/writing-a-tstring-into-a-ttree/48886/9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:54,safety,test,test,54,"Does your branch contain TStrings or Char_t ? Maybe a test like this could work:. ```. {. const char *n = ""longstring.root"";. Char_t longString[3000] {};. Char_t checkString[3000] {};. TFile *f;. TTree *t;. TString ts, *ps;. // create and fill the tree. f = TFile::Open(n, ""recreate"");. t = new TTree(""t"", ""t"");. t->Branch(""ts"", &ts);. t->Branch(""longString"", longString, ""longString/C"");. for (Int_t i = 0; i < 2999; i++) { longString[i] = i%100 + 5; }. longString[2999] = '\0';. for (Int_t i = 1; i <= 3000; i++) { ts += i; }. t->Fill();. t->Write();. delete f; // automatically deletes t, too. // retrieve and dump the tree. f = TFile::Open(n, ""read"");. f->GetObject(""t"", t);. t->Print(); t->Scan(); // () or (""*"") or (""s"") or (""s.Data()""). ps = nullptr; // make sure it is initialized. t->SetBranchAddress(""ts"", &ps);. t->SetBranchAddress(""longString"", &checkString);. t->GetEntry(0);. assert(*ps == ts);. for (Int_t i = 0; i < 3000; i++) { assert(longString[i] = checkString[i]); }. delete f; // automatically deletes t, too. delete ps; // cleanup. }. ```. Inspired by https://root-forum.cern.ch/t/writing-a-tstring-into-a-ttree/48886/9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:54,testability,test,test,54,"Does your branch contain TStrings or Char_t ? Maybe a test like this could work:. ```. {. const char *n = ""longstring.root"";. Char_t longString[3000] {};. Char_t checkString[3000] {};. TFile *f;. TTree *t;. TString ts, *ps;. // create and fill the tree. f = TFile::Open(n, ""recreate"");. t = new TTree(""t"", ""t"");. t->Branch(""ts"", &ts);. t->Branch(""longString"", longString, ""longString/C"");. for (Int_t i = 0; i < 2999; i++) { longString[i] = i%100 + 5; }. longString[2999] = '\0';. for (Int_t i = 1; i <= 3000; i++) { ts += i; }. t->Fill();. t->Write();. delete f; // automatically deletes t, too. // retrieve and dump the tree. f = TFile::Open(n, ""read"");. f->GetObject(""t"", t);. t->Print(); t->Scan(); // () or (""*"") or (""s"") or (""s.Data()""). ps = nullptr; // make sure it is initialized. t->SetBranchAddress(""ts"", &ps);. t->SetBranchAddress(""longString"", &checkString);. t->GetEntry(0);. assert(*ps == ts);. for (Int_t i = 0; i < 3000; i++) { assert(longString[i] = checkString[i]); }. delete f; // automatically deletes t, too. delete ps; // cleanup. }. ```. Inspired by https://root-forum.cern.ch/t/writing-a-tstring-into-a-ttree/48886/9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:567,testability,automat,automatically,567,"Does your branch contain TStrings or Char_t ? Maybe a test like this could work:. ```. {. const char *n = ""longstring.root"";. Char_t longString[3000] {};. Char_t checkString[3000] {};. TFile *f;. TTree *t;. TString ts, *ps;. // create and fill the tree. f = TFile::Open(n, ""recreate"");. t = new TTree(""t"", ""t"");. t->Branch(""ts"", &ts);. t->Branch(""longString"", longString, ""longString/C"");. for (Int_t i = 0; i < 2999; i++) { longString[i] = i%100 + 5; }. longString[2999] = '\0';. for (Int_t i = 1; i <= 3000; i++) { ts += i; }. t->Fill();. t->Write();. delete f; // automatically deletes t, too. // retrieve and dump the tree. f = TFile::Open(n, ""read"");. f->GetObject(""t"", t);. t->Print(); t->Scan(); // () or (""*"") or (""s"") or (""s.Data()""). ps = nullptr; // make sure it is initialized. t->SetBranchAddress(""ts"", &ps);. t->SetBranchAddress(""longString"", &checkString);. t->GetEntry(0);. assert(*ps == ts);. for (Int_t i = 0; i < 3000; i++) { assert(longString[i] = checkString[i]); }. delete f; // automatically deletes t, too. delete ps; // cleanup. }. ```. Inspired by https://root-forum.cern.ch/t/writing-a-tstring-into-a-ttree/48886/9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:890,testability,assert,assert,890,"Does your branch contain TStrings or Char_t ? Maybe a test like this could work:. ```. {. const char *n = ""longstring.root"";. Char_t longString[3000] {};. Char_t checkString[3000] {};. TFile *f;. TTree *t;. TString ts, *ps;. // create and fill the tree. f = TFile::Open(n, ""recreate"");. t = new TTree(""t"", ""t"");. t->Branch(""ts"", &ts);. t->Branch(""longString"", longString, ""longString/C"");. for (Int_t i = 0; i < 2999; i++) { longString[i] = i%100 + 5; }. longString[2999] = '\0';. for (Int_t i = 1; i <= 3000; i++) { ts += i; }. t->Fill();. t->Write();. delete f; // automatically deletes t, too. // retrieve and dump the tree. f = TFile::Open(n, ""read"");. f->GetObject(""t"", t);. t->Print(); t->Scan(); // () or (""*"") or (""s"") or (""s.Data()""). ps = nullptr; // make sure it is initialized. t->SetBranchAddress(""ts"", &ps);. t->SetBranchAddress(""longString"", &checkString);. t->GetEntry(0);. assert(*ps == ts);. for (Int_t i = 0; i < 3000; i++) { assert(longString[i] = checkString[i]); }. delete f; // automatically deletes t, too. delete ps; // cleanup. }. ```. Inspired by https://root-forum.cern.ch/t/writing-a-tstring-into-a-ttree/48886/9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:945,testability,assert,assert,945,"Does your branch contain TStrings or Char_t ? Maybe a test like this could work:. ```. {. const char *n = ""longstring.root"";. Char_t longString[3000] {};. Char_t checkString[3000] {};. TFile *f;. TTree *t;. TString ts, *ps;. // create and fill the tree. f = TFile::Open(n, ""recreate"");. t = new TTree(""t"", ""t"");. t->Branch(""ts"", &ts);. t->Branch(""longString"", longString, ""longString/C"");. for (Int_t i = 0; i < 2999; i++) { longString[i] = i%100 + 5; }. longString[2999] = '\0';. for (Int_t i = 1; i <= 3000; i++) { ts += i; }. t->Fill();. t->Write();. delete f; // automatically deletes t, too. // retrieve and dump the tree. f = TFile::Open(n, ""read"");. f->GetObject(""t"", t);. t->Print(); t->Scan(); // () or (""*"") or (""s"") or (""s.Data()""). ps = nullptr; // make sure it is initialized. t->SetBranchAddress(""ts"", &ps);. t->SetBranchAddress(""longString"", &checkString);. t->GetEntry(0);. assert(*ps == ts);. for (Int_t i = 0; i < 3000; i++) { assert(longString[i] = checkString[i]); }. delete f; // automatically deletes t, too. delete ps; // cleanup. }. ```. Inspired by https://root-forum.cern.ch/t/writing-a-tstring-into-a-ttree/48886/9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:1001,testability,automat,automatically,1001,"Does your branch contain TStrings or Char_t ? Maybe a test like this could work:. ```. {. const char *n = ""longstring.root"";. Char_t longString[3000] {};. Char_t checkString[3000] {};. TFile *f;. TTree *t;. TString ts, *ps;. // create and fill the tree. f = TFile::Open(n, ""recreate"");. t = new TTree(""t"", ""t"");. t->Branch(""ts"", &ts);. t->Branch(""longString"", longString, ""longString/C"");. for (Int_t i = 0; i < 2999; i++) { longString[i] = i%100 + 5; }. longString[2999] = '\0';. for (Int_t i = 1; i <= 3000; i++) { ts += i; }. t->Fill();. t->Write();. delete f; // automatically deletes t, too. // retrieve and dump the tree. f = TFile::Open(n, ""read"");. f->GetObject(""t"", t);. t->Print(); t->Scan(); // () or (""*"") or (""s"") or (""s.Data()""). ps = nullptr; // make sure it is initialized. t->SetBranchAddress(""ts"", &ps);. t->SetBranchAddress(""longString"", &checkString);. t->GetEntry(0);. assert(*ps == ts);. for (Int_t i = 0; i < 3000; i++) { assert(longString[i] = checkString[i]); }. delete f; // automatically deletes t, too. delete ps; // cleanup. }. ```. Inspired by https://root-forum.cern.ch/t/writing-a-tstring-into-a-ttree/48886/9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:145,availability,failur,failure,145,Char_t. I think it's only in the POOL metadata that strings get written like this in ATLAS data --- that's probably why we only saw the one test failure. Here is the structure of the TTree:. ```. >>> t.Print(). ******************************************************************************. *Tree :##Shapes : ##Shapes *. *Entries : 140 : Total = 32791 bytes File Size = 10070 *. * : : Tree compression factor = 3.30 *. ******************************************************************************. *Br 0 :db_string : db_string/C *. *Entries : 140 : Total Size= 30717 bytes File Size = 9226 *. *Baskets : 8 : Basket Size= 4096 bytes Compression= 3.28 *. *............................................................................*. *Br 1 :index_ref : index_ref/L *. *Entries : 140 : Total Size= 1709 bytes File Size = 301 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 3.99 *. *............................................................................*. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:145,deployability,fail,failure,145,Char_t. I think it's only in the POOL metadata that strings get written like this in ATLAS data --- that's probably why we only saw the one test failure. Here is the structure of the TTree:. ```. >>> t.Print(). ******************************************************************************. *Tree :##Shapes : ##Shapes *. *Entries : 140 : Total = 32791 bytes File Size = 10070 *. * : : Tree compression factor = 3.30 *. ******************************************************************************. *Br 0 :db_string : db_string/C *. *Entries : 140 : Total Size= 30717 bytes File Size = 9226 *. *Baskets : 8 : Basket Size= 4096 bytes Compression= 3.28 *. *............................................................................*. *Br 1 :index_ref : index_ref/L *. *Entries : 140 : Total Size= 1709 bytes File Size = 301 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 3.99 *. *............................................................................*. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:145,performance,failur,failure,145,Char_t. I think it's only in the POOL metadata that strings get written like this in ATLAS data --- that's probably why we only saw the one test failure. Here is the structure of the TTree:. ```. >>> t.Print(). ******************************************************************************. *Tree :##Shapes : ##Shapes *. *Entries : 140 : Total = 32791 bytes File Size = 10070 *. * : : Tree compression factor = 3.30 *. ******************************************************************************. *Br 0 :db_string : db_string/C *. *Entries : 140 : Total Size= 30717 bytes File Size = 9226 *. *Baskets : 8 : Basket Size= 4096 bytes Compression= 3.28 *. *............................................................................*. *Br 1 :index_ref : index_ref/L *. *Entries : 140 : Total Size= 1709 bytes File Size = 301 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 3.99 *. *............................................................................*. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:145,reliability,fail,failure,145,Char_t. I think it's only in the POOL metadata that strings get written like this in ATLAS data --- that's probably why we only saw the one test failure. Here is the structure of the TTree:. ```. >>> t.Print(). ******************************************************************************. *Tree :##Shapes : ##Shapes *. *Entries : 140 : Total = 32791 bytes File Size = 10070 *. * : : Tree compression factor = 3.30 *. ******************************************************************************. *Br 0 :db_string : db_string/C *. *Entries : 140 : Total Size= 30717 bytes File Size = 9226 *. *Baskets : 8 : Basket Size= 4096 bytes Compression= 3.28 *. *............................................................................*. *Br 1 :index_ref : index_ref/L *. *Entries : 140 : Total Size= 1709 bytes File Size = 301 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 3.99 *. *............................................................................*. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:140,safety,test,test,140,Char_t. I think it's only in the POOL metadata that strings get written like this in ATLAS data --- that's probably why we only saw the one test failure. Here is the structure of the TTree:. ```. >>> t.Print(). ******************************************************************************. *Tree :##Shapes : ##Shapes *. *Entries : 140 : Total = 32791 bytes File Size = 10070 *. * : : Tree compression factor = 3.30 *. ******************************************************************************. *Br 0 :db_string : db_string/C *. *Entries : 140 : Total Size= 30717 bytes File Size = 9226 *. *Baskets : 8 : Basket Size= 4096 bytes Compression= 3.28 *. *............................................................................*. *Br 1 :index_ref : index_ref/L *. *Entries : 140 : Total Size= 1709 bytes File Size = 301 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 3.99 *. *............................................................................*. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:140,testability,test,test,140,Char_t. I think it's only in the POOL metadata that strings get written like this in ATLAS data --- that's probably why we only saw the one test failure. Here is the structure of the TTree:. ```. >>> t.Print(). ******************************************************************************. *Tree :##Shapes : ##Shapes *. *Entries : 140 : Total = 32791 bytes File Size = 10070 *. * : : Tree compression factor = 3.30 *. ******************************************************************************. *Br 0 :db_string : db_string/C *. *Entries : 140 : Total Size= 30717 bytes File Size = 9226 *. *Baskets : 8 : Basket Size= 4096 bytes Compression= 3.28 *. *............................................................................*. *Br 1 :index_ref : index_ref/L *. *Entries : 140 : Total Size= 1709 bytes File Size = 301 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 3.99 *. *............................................................................*. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:99,safety,test,test,99,I just had @Nowakus ask me about this; what's the status? Is somebody working with priority on the test case so that we can merge this fix?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:99,testability,test,test,99,I just had @Nowakus ask me about this; what's the status? Is somebody working with priority on the test case so that we can merge this fix?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:50,usability,statu,status,50,I just had @Nowakus ask me about this; what's the status? Is somebody working with priority on the test case so that we can merge this fix?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:37,deployability,fail,failing,37,Right - it's not just a test that is failing - Athena DAOD files created with ROOT 6.31 can not be read back because information is missing and that stops our RNTuple developments too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:37,reliability,fail,failing,37,Right - it's not just a test that is failing - Athena DAOD files created with ROOT 6.31 can not be read back because information is missing and that stops our RNTuple developments too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:24,safety,test,test,24,Right - it's not just a test that is failing - Athena DAOD files created with ROOT 6.31 can not be read back because information is missing and that stops our RNTuple developments too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:24,testability,test,test,24,Right - it's not just a test that is failing - Athena DAOD files created with ROOT 6.31 can not be read back because information is missing and that stops our RNTuple developments too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:149,usability,stop,stops,149,Right - it's not just a test that is failing - Athena DAOD files created with ROOT 6.31 can not be read back because information is missing and that stops our RNTuple developments too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:43,safety,test,test,43,> Is somebody working with priority on the test case so that we can merge this fix? I attempted to create one but didn't succeed (https://github.com/root-project/root/pull/14887#issuecomment-1981644071) so I abandoned it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:43,testability,test,test,43,> Is somebody working with priority on the test case so that we can merge this fix? I attempted to create one but didn't succeed (https://github.com/root-project/root/pull/14887#issuecomment-1981644071) so I abandoned it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:396,deployability,depend,depending,396,"> > Is somebody working with priority on the test case so that we can merge this fix? > . > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:396,integrability,depend,depending,396,"> > Is somebody working with priority on the test case so that we can merge this fix? > . > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:396,modifiability,depend,depending,396,"> > Is somebody working with priority on the test case so that we can merge this fix? > . > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:369,reliability,doe,doesn,369,"> > Is somebody working with priority on the test case so that we can merge this fix? > . > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:45,safety,test,test,45,"> > Is somebody working with priority on the test case so that we can merge this fix? > . > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:262,safety,test,test,262,"> > Is somebody working with priority on the test case so that we can merge this fix? > . > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:285,safety,except,except,285,"> > Is somebody working with priority on the test case so that we can merge this fix? > . > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:396,safety,depend,depending,396,"> > Is somebody working with priority on the test case so that we can merge this fix? > . > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:45,testability,test,test,45,"> > Is somebody working with priority on the test case so that we can merge this fix? > . > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:262,testability,test,test,262,"> > Is somebody working with priority on the test case so that we can merge this fix? > . > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:297,testability,assert,assert,297,"> > Is somebody working with priority on the test case so that we can merge this fix? > . > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:361,testability,assert,assert,361,"> > Is somebody working with priority on the test case so that we can merge this fix? > . > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:396,testability,depend,depending,396,"> > Is somebody working with priority on the test case so that we can merge this fix? > . > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:382,usability,interact,interactively,382,"> > Is somebody working with priority on the test case so that we can merge this fix? > . > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:148,deployability,depend,depending,148,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:148,integrability,depend,depending,148,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:148,modifiability,depend,depending,148,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:121,reliability,doe,doesn,121,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:14,safety,test,test,14,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:37,safety,except,except,37,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:148,safety,depend,depending,148,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:14,testability,test,test,14,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:49,testability,assert,assert,49,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:113,testability,assert,assert,113,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:148,testability,depend,depending,148,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:360,testability,assert,assert,360,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:134,usability,interact,interactively,134,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14887:388,usability,interact,interactively,388,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14887
https://github.com/root-project/root/pull/14888:49,deployability,fail,fail,49,roottest-python-distrdf-common-test_all seems to fail but for unrelated reasons.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14888
https://github.com/root-project/root/pull/14888:49,reliability,fail,fail,49,roottest-python-distrdf-common-test_all seems to fail but for unrelated reasons.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14888
https://github.com/root-project/root/issues/14889:75,deployability,releas,release,75,"Thanks for the suggestion. I am however unsure on how it should handle the release notes, as they are 'different files', not just versions of the same file. See discussion here: https://github.com/root-project/root/issues/14439. See also https://github.com/sorenlouv/backport",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:130,deployability,version,versions,130,"Thanks for the suggestion. I am however unsure on how it should handle the release notes, as they are 'different files', not just versions of the same file. See discussion here: https://github.com/root-project/root/issues/14439. See also https://github.com/sorenlouv/backport",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:130,integrability,version,versions,130,"Thanks for the suggestion. I am however unsure on how it should handle the release notes, as they are 'different files', not just versions of the same file. See discussion here: https://github.com/root-project/root/issues/14439. See also https://github.com/sorenlouv/backport",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:130,modifiability,version,versions,130,"Thanks for the suggestion. I am however unsure on how it should handle the release notes, as they are 'different files', not just versions of the same file. See discussion here: https://github.com/root-project/root/issues/14439. See also https://github.com/sorenlouv/backport",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:77,deployability,releas,release,77,"> Thanks for the suggestion. I am however unsure on how it should handle the release notes, as they are 'different files', not just versions of the same file. See discussion here: #14439. Most of the backports are fixes that are not probably worth mentioning in the release notes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:132,deployability,version,versions,132,"> Thanks for the suggestion. I am however unsure on how it should handle the release notes, as they are 'different files', not just versions of the same file. See discussion here: #14439. Most of the backports are fixes that are not probably worth mentioning in the release notes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:266,deployability,releas,release,266,"> Thanks for the suggestion. I am however unsure on how it should handle the release notes, as they are 'different files', not just versions of the same file. See discussion here: #14439. Most of the backports are fixes that are not probably worth mentioning in the release notes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:132,integrability,version,versions,132,"> Thanks for the suggestion. I am however unsure on how it should handle the release notes, as they are 'different files', not just versions of the same file. See discussion here: #14439. Most of the backports are fixes that are not probably worth mentioning in the release notes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:132,modifiability,version,versions,132,"> Thanks for the suggestion. I am however unsure on how it should handle the release notes, as they are 'different files', not just versions of the same file. See discussion here: #14439. Most of the backports are fixes that are not probably worth mentioning in the release notes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:104,deployability,automat,automated,104,"Thanks for the proposal backed up by a concrete potential solution. I like the idea of having something automated that in case of problems, simply does nothing. One thing that changes though is the squashing. . This is something to discuss. In your opinion, @vgvassilev , what do we loose by automatically squashing commits intended for backports?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:292,deployability,automat,automatically,292,"Thanks for the proposal backed up by a concrete potential solution. I like the idea of having something automated that in case of problems, simply does nothing. One thing that changes though is the squashing. . This is something to discuss. In your opinion, @vgvassilev , what do we loose by automatically squashing commits intended for backports?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:147,reliability,doe,does,147,"Thanks for the proposal backed up by a concrete potential solution. I like the idea of having something automated that in case of problems, simply does nothing. One thing that changes though is the squashing. . This is something to discuss. In your opinion, @vgvassilev , what do we loose by automatically squashing commits intended for backports?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:104,testability,automat,automated,104,"Thanks for the proposal backed up by a concrete potential solution. I like the idea of having something automated that in case of problems, simply does nothing. One thing that changes though is the squashing. . This is something to discuss. In your opinion, @vgvassilev , what do we loose by automatically squashing commits intended for backports?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:140,testability,simpl,simply,140,"Thanks for the proposal backed up by a concrete potential solution. I like the idea of having something automated that in case of problems, simply does nothing. One thing that changes though is the squashing. . This is something to discuss. In your opinion, @vgvassilev , what do we loose by automatically squashing commits intended for backports?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:292,testability,automat,automatically,292,"Thanks for the proposal backed up by a concrete potential solution. I like the idea of having something automated that in case of problems, simply does nothing. One thing that changes though is the squashing. . This is something to discuss. In your opinion, @vgvassilev , what do we loose by automatically squashing commits intended for backports?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:140,usability,simpl,simply,140,"Thanks for the proposal backed up by a concrete potential solution. I like the idea of having something automated that in case of problems, simply does nothing. One thing that changes though is the squashing. . This is something to discuss. In your opinion, @vgvassilev , what do we loose by automatically squashing commits intended for backports?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:83,usability,help,help,83,"I was reading the doc of the action _""It can backport [rebased and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#rebase-and-merge-your-pull-request-commits) pull requests with a single commit and [squashed and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#squash-and-merge-your-pull-request-commits) pull requests.""_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:292,usability,help,help,292,"I was reading the doc of the action _""It can backport [rebased and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#rebase-and-merge-your-pull-request-commits) pull requests with a single commit and [squashed and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#squash-and-merge-your-pull-request-commits) pull requests.""_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:602,deployability,log,logic,602,"> I was reading the doc of the action _""It can backport [rebased and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#rebase-and-merge-your-pull-request-commits) pull requests with a single commit and [squashed and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#squash-and-merge-your-pull-request-commits) pull requests.""_. Ah, ok, well. At that point if we want the bot to help us we should probably do 1 commit by PR for backports. Alternatively, we can implement our own logic - should be no more than 2-3 git commands...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:602,safety,log,logic,602,"> I was reading the doc of the action _""It can backport [rebased and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#rebase-and-merge-your-pull-request-commits) pull requests with a single commit and [squashed and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#squash-and-merge-your-pull-request-commits) pull requests.""_. Ah, ok, well. At that point if we want the bot to help us we should probably do 1 commit by PR for backports. Alternatively, we can implement our own logic - should be no more than 2-3 git commands...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:602,security,log,logic,602,"> I was reading the doc of the action _""It can backport [rebased and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#rebase-and-merge-your-pull-request-commits) pull requests with a single commit and [squashed and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#squash-and-merge-your-pull-request-commits) pull requests.""_. Ah, ok, well. At that point if we want the bot to help us we should probably do 1 commit by PR for backports. Alternatively, we can implement our own logic - should be no more than 2-3 git commands...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:602,testability,log,logic,602,"> I was reading the doc of the action _""It can backport [rebased and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#rebase-and-merge-your-pull-request-commits) pull requests with a single commit and [squashed and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#squash-and-merge-your-pull-request-commits) pull requests.""_. Ah, ok, well. At that point if we want the bot to help us we should probably do 1 commit by PR for backports. Alternatively, we can implement our own logic - should be no more than 2-3 git commands...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:85,usability,help,help,85,"> I was reading the doc of the action _""It can backport [rebased and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#rebase-and-merge-your-pull-request-commits) pull requests with a single commit and [squashed and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#squash-and-merge-your-pull-request-commits) pull requests.""_. Ah, ok, well. At that point if we want the bot to help us we should probably do 1 commit by PR for backports. Alternatively, we can implement our own logic - should be no more than 2-3 git commands...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:294,usability,help,help,294,"> I was reading the doc of the action _""It can backport [rebased and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#rebase-and-merge-your-pull-request-commits) pull requests with a single commit and [squashed and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#squash-and-merge-your-pull-request-commits) pull requests.""_. Ah, ok, well. At that point if we want the bot to help us we should probably do 1 commit by PR for backports. Alternatively, we can implement our own logic - should be no more than 2-3 git commands...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:502,usability,help,help,502,"> I was reading the doc of the action _""It can backport [rebased and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#rebase-and-merge-your-pull-request-commits) pull requests with a single commit and [squashed and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#squash-and-merge-your-pull-request-commits) pull requests.""_. Ah, ok, well. At that point if we want the bot to help us we should probably do 1 commit by PR for backports. Alternatively, we can implement our own logic - should be no more than 2-3 git commands...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:641,usability,command,commands,641,"> I was reading the doc of the action _""It can backport [rebased and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#rebase-and-merge-your-pull-request-commits) pull requests with a single commit and [squashed and merged](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#squash-and-merge-your-pull-request-commits) pull requests.""_. Ah, ok, well. At that point if we want the bot to help us we should probably do 1 commit by PR for backports. Alternatively, we can implement our own logic - should be no more than 2-3 git commands...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:236,security,team,team,236,"I think the squashing of commits is simply a change with respect to what is being done today, it's not negative or a regression per se. I even could see an advantage in having one backport per commit. A good item to be discussed in the team I guess, but this action could be really help us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:36,testability,simpl,simply,36,"I think the squashing of commits is simply a change with respect to what is being done today, it's not negative or a regression per se. I even could see an advantage in having one backport per commit. A good item to be discussed in the team I guess, but this action could be really help us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:117,testability,regress,regression,117,"I think the squashing of commits is simply a change with respect to what is being done today, it's not negative or a regression per se. I even could see an advantage in having one backport per commit. A good item to be discussed in the team I guess, but this action could be really help us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:36,usability,simpl,simply,36,"I think the squashing of commits is simply a change with respect to what is being done today, it's not negative or a regression per se. I even could see an advantage in having one backport per commit. A good item to be discussed in the team I guess, but this action could be really help us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:282,usability,help,help,282,"I think the squashing of commits is simply a change with respect to what is being done today, it's not negative or a regression per se. I even could see an advantage in having one backport per commit. A good item to be discussed in the team I guess, but this action could be really help us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14889:177,interoperability,specif,specific,177,Having different granularity of commits in the main branch and the backport branch may make it harder to do forensic. For example to find out if a change/commit is present in a specific branch or when it was introduced there.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14889
https://github.com/root-project/root/issues/14890:41,deployability,deploy,deployment,41,"Hi @don4get ,. Yes indeed, having a ROOT deployment on pip would ease the integration with the rest of the Python packaging ecosystem. It is definitely not trivial, but it's on our radar. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14890
https://github.com/root-project/root/issues/14890:74,deployability,integr,integration,74,"Hi @don4get ,. Yes indeed, having a ROOT deployment on pip would ease the integration with the rest of the Python packaging ecosystem. It is definitely not trivial, but it's on our radar. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14890
https://github.com/root-project/root/issues/14890:74,integrability,integr,integration,74,"Hi @don4get ,. Yes indeed, having a ROOT deployment on pip would ease the integration with the rest of the Python packaging ecosystem. It is definitely not trivial, but it's on our radar. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14890
https://github.com/root-project/root/issues/14890:74,interoperability,integr,integration,74,"Hi @don4get ,. Yes indeed, having a ROOT deployment on pip would ease the integration with the rest of the Python packaging ecosystem. It is definitely not trivial, but it's on our radar. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14890
https://github.com/root-project/root/issues/14890:74,modifiability,integr,integration,74,"Hi @don4get ,. Yes indeed, having a ROOT deployment on pip would ease the integration with the rest of the Python packaging ecosystem. It is definitely not trivial, but it's on our radar. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14890
https://github.com/root-project/root/issues/14890:114,modifiability,pac,packaging,114,"Hi @don4get ,. Yes indeed, having a ROOT deployment on pip would ease the integration with the rest of the Python packaging ecosystem. It is definitely not trivial, but it's on our radar. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14890
https://github.com/root-project/root/issues/14890:74,reliability,integr,integration,74,"Hi @don4get ,. Yes indeed, having a ROOT deployment on pip would ease the integration with the rest of the Python packaging ecosystem. It is definitely not trivial, but it's on our radar. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14890
https://github.com/root-project/root/issues/14890:74,security,integr,integration,74,"Hi @don4get ,. Yes indeed, having a ROOT deployment on pip would ease the integration with the rest of the Python packaging ecosystem. It is definitely not trivial, but it's on our radar. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14890
https://github.com/root-project/root/issues/14890:74,testability,integr,integration,74,"Hi @don4get ,. Yes indeed, having a ROOT deployment on pip would ease the integration with the rest of the Python packaging ecosystem. It is definitely not trivial, but it's on our radar. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14890
https://github.com/root-project/root/pull/14897:19,availability,error,error,19,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:361,availability,Error,Error,361,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:136,deployability,build,build,136,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:189,deployability,build,build,189,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:238,deployability,build,building,238,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:247,deployability,modul,module,247,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:295,deployability,build,build,295,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:331,deployability,build,build,331,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:368,deployability,Build,Building,368,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:377,deployability,modul,module,377,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:464,deployability,build,build,464,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:470,deployability,depend,dependency,470,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:496,deployability,depend,depends,496,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:470,integrability,depend,dependency,470,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:496,integrability,depend,depends,496,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:456,interoperability,specif,specify,456,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:532,interoperability,specif,specify,532,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:247,modifiability,modul,module,247,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:377,modifiability,modul,module,377,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:470,modifiability,depend,dependency,470,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:496,modifiability,depend,depends,496,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:19,performance,error,error,19,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:361,performance,Error,Error,361,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:581,reliability,diagno,diagnostic,581,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:19,safety,error,error,19,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:247,safety,modul,module,247,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:361,safety,Error,Error,361,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:377,safety,modul,module,377,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:470,safety,depend,dependency,470,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:496,safety,depend,depends,496,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:470,testability,depend,dependency,470,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:496,testability,depend,depends,496,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:581,testability,diagno,diagnostic,581,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:19,usability,error,error,19,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:113,usability,User,Users,113,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:166,usability,User,Users,166,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:272,usability,User,Users,272,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14897:361,usability,Error,Error,361,"This now shows the error that we know about:. ```. In file included from input_line_3:2:. In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:. /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]. #include <vector>. ^. Error: Building module 'std_vector' implicitly. If 'std_vector' requires a . dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'. Otherwise, specify '-mByproduct std_vector' to disable this diagnostic. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14897
https://github.com/root-project/root/pull/14898:85,modifiability,variab,variables,85,"Ok I get it now. This is still needed to support re-assigning *already existing* C++ variables from Python:. ```python. ROOT.gInterpreter.Declare(""int gMyOwnGlobal2 = 1;""). self.assertEqual(ROOT.gMyOwnGlobal2, 1). ROOT.gMyOwnGlobal2 = -1. self.assertTrue(gROOT.ProcessLine('gMyOwnGlobal2 == -1')). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14898
https://github.com/root-project/root/pull/14898:178,testability,assert,assertEqual,178,"Ok I get it now. This is still needed to support re-assigning *already existing* C++ variables from Python:. ```python. ROOT.gInterpreter.Declare(""int gMyOwnGlobal2 = 1;""). self.assertEqual(ROOT.gMyOwnGlobal2, 1). ROOT.gMyOwnGlobal2 = -1. self.assertTrue(gROOT.ProcessLine('gMyOwnGlobal2 == -1')). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14898
https://github.com/root-project/root/pull/14898:244,testability,assert,assertTrue,244,"Ok I get it now. This is still needed to support re-assigning *already existing* C++ variables from Python:. ```python. ROOT.gInterpreter.Declare(""int gMyOwnGlobal2 = 1;""). self.assertEqual(ROOT.gMyOwnGlobal2, 1). ROOT.gMyOwnGlobal2 = -1. self.assertTrue(gROOT.ProcessLine('gMyOwnGlobal2 == -1')). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14898
https://github.com/root-project/root/pull/14898:41,usability,support,support,41,"Ok I get it now. This is still needed to support re-assigning *already existing* C++ variables from Python:. ```python. ROOT.gInterpreter.Declare(""int gMyOwnGlobal2 = 1;""). self.assertEqual(ROOT.gMyOwnGlobal2, 1). ROOT.gMyOwnGlobal2 = -1. self.assertTrue(gROOT.ProcessLine('gMyOwnGlobal2 == -1')). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14898
https://github.com/root-project/root/pull/14900:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14900
https://github.com/root-project/root/pull/14901:15,safety,review,review,15,"Thanks for the review! Yes, I checked that it works both with `builtin_xrootd=ON` and `OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14901
https://github.com/root-project/root/pull/14901:15,testability,review,review,15,"Thanks for the review! Yes, I checked that it works both with `builtin_xrootd=ON` and `OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14901
https://github.com/root-project/root/pull/14901:29,deployability,build,builds,29,"Seems like this PR made some builds fail temporarily until the artifacts are updated (that's also the reason why I had to add the ""clean build"" flag to the PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14901
https://github.com/root-project/root/pull/14901:36,deployability,fail,fail,36,"Seems like this PR made some builds fail temporarily until the artifacts are updated (that's also the reason why I had to add the ""clean build"" flag to the PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14901
https://github.com/root-project/root/pull/14901:63,deployability,artifact,artifacts,63,"Seems like this PR made some builds fail temporarily until the artifacts are updated (that's also the reason why I had to add the ""clean build"" flag to the PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14901
https://github.com/root-project/root/pull/14901:77,deployability,updat,updated,77,"Seems like this PR made some builds fail temporarily until the artifacts are updated (that's also the reason why I had to add the ""clean build"" flag to the PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14901
https://github.com/root-project/root/pull/14901:137,deployability,build,build,137,"Seems like this PR made some builds fail temporarily until the artifacts are updated (that's also the reason why I had to add the ""clean build"" flag to the PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14901
https://github.com/root-project/root/pull/14901:36,reliability,fail,fail,36,"Seems like this PR made some builds fail temporarily until the artifacts are updated (that's also the reason why I had to add the ""clean build"" flag to the PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14901
https://github.com/root-project/root/pull/14901:77,safety,updat,updated,77,"Seems like this PR made some builds fail temporarily until the artifacts are updated (that's also the reason why I had to add the ""clean build"" flag to the PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14901
https://github.com/root-project/root/pull/14901:77,security,updat,updated,77,"Seems like this PR made some builds fail temporarily until the artifacts are updated (that's also the reason why I had to add the ""clean build"" flag to the PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14901
https://github.com/root-project/root/issues/14902:211,deployability,updat,update,211,"Dear @theayon ,. Thanks for this bug report. I am sorry you are experiencing this problem. We are aware of this issue and are working on a fix. The current workaround, if that can work for you, is to revert the update, until the fix is merged in the repository. Or, and this is a really a kludge, you could try to configure ROOT without modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:337,deployability,modul,modules,337,"Dear @theayon ,. Thanks for this bug report. I am sorry you are experiencing this problem. We are aware of this issue and are working on a fix. The current workaround, if that can work for you, is to revert the update, until the fix is merged in the repository. Or, and this is a really a kludge, you could try to configure ROOT without modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:148,energy efficiency,current,current,148,"Dear @theayon ,. Thanks for this bug report. I am sorry you are experiencing this problem. We are aware of this issue and are working on a fix. The current workaround, if that can work for you, is to revert the update, until the fix is merged in the repository. Or, and this is a really a kludge, you could try to configure ROOT without modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:250,integrability,repositor,repository,250,"Dear @theayon ,. Thanks for this bug report. I am sorry you are experiencing this problem. We are aware of this issue and are working on a fix. The current workaround, if that can work for you, is to revert the update, until the fix is merged in the repository. Or, and this is a really a kludge, you could try to configure ROOT without modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:314,integrability,configur,configure,314,"Dear @theayon ,. Thanks for this bug report. I am sorry you are experiencing this problem. We are aware of this issue and are working on a fix. The current workaround, if that can work for you, is to revert the update, until the fix is merged in the repository. Or, and this is a really a kludge, you could try to configure ROOT without modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:250,interoperability,repositor,repository,250,"Dear @theayon ,. Thanks for this bug report. I am sorry you are experiencing this problem. We are aware of this issue and are working on a fix. The current workaround, if that can work for you, is to revert the update, until the fix is merged in the repository. Or, and this is a really a kludge, you could try to configure ROOT without modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:314,modifiability,configur,configure,314,"Dear @theayon ,. Thanks for this bug report. I am sorry you are experiencing this problem. We are aware of this issue and are working on a fix. The current workaround, if that can work for you, is to revert the update, until the fix is merged in the repository. Or, and this is a really a kludge, you could try to configure ROOT without modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:337,modifiability,modul,modules,337,"Dear @theayon ,. Thanks for this bug report. I am sorry you are experiencing this problem. We are aware of this issue and are working on a fix. The current workaround, if that can work for you, is to revert the update, until the fix is merged in the repository. Or, and this is a really a kludge, you could try to configure ROOT without modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:211,safety,updat,update,211,"Dear @theayon ,. Thanks for this bug report. I am sorry you are experiencing this problem. We are aware of this issue and are working on a fix. The current workaround, if that can work for you, is to revert the update, until the fix is merged in the repository. Or, and this is a really a kludge, you could try to configure ROOT without modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:337,safety,modul,modules,337,"Dear @theayon ,. Thanks for this bug report. I am sorry you are experiencing this problem. We are aware of this issue and are working on a fix. The current workaround, if that can work for you, is to revert the update, until the fix is merged in the repository. Or, and this is a really a kludge, you could try to configure ROOT without modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:211,security,updat,update,211,"Dear @theayon ,. Thanks for this bug report. I am sorry you are experiencing this problem. We are aware of this issue and are working on a fix. The current workaround, if that can work for you, is to revert the update, until the fix is merged in the repository. Or, and this is a really a kludge, you could try to configure ROOT without modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:314,security,configur,configure,314,"Dear @theayon ,. Thanks for this bug report. I am sorry you are experiencing this problem. We are aware of this issue and are working on a fix. The current workaround, if that can work for you, is to revert the update, until the fix is merged in the repository. Or, and this is a really a kludge, you could try to configure ROOT without modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:64,usability,experien,experiencing,64,"Dear @theayon ,. Thanks for this bug report. I am sorry you are experiencing this problem. We are aware of this issue and are working on a fix. The current workaround, if that can work for you, is to revert the update, until the fix is merged in the repository. Or, and this is a really a kludge, you could try to configure ROOT without modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:14,availability,ping,pinging,14,"Hi @theayon , pinging you directly. Thanks again for this report. As you can see from the link above, thanks to @vgvassilev, we have a solution in the master branch of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:32,deployability,updat,update,32,"Hi @dpiparo,. Thank you for the update and @vgvassilev for the solution. I will clone and check it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:32,safety,updat,update,32,"Hi @dpiparo,. Thank you for the update and @vgvassilev for the solution. I will clone and check it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/issues/14902:32,security,updat,update,32,"Hi @dpiparo,. Thank you for the update and @vgvassilev for the solution. I will clone and check it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14902
https://github.com/root-project/root/pull/14903:26,deployability,patch,patch,26,Thanks for preparing this patch so quickly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:26,safety,patch,patch,26,Thanks for preparing this patch so quickly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:26,security,patch,patch,26,Thanks for preparing this patch so quickly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:117,availability,error,error,117,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:124,deployability,modul,module,124,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:161,deployability,build,build,161,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:299,deployability,modul,module,299,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:349,deployability,build,build,349,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:505,deployability,fail,failed,505,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:230,interoperability,mismatch,mismatch,230,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:124,modifiability,modul,module,124,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:299,modifiability,modul,module,299,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:117,performance,error,error,117,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:505,reliability,fail,failed,505,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:117,safety,error,error,117,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:124,safety,modul,module,124,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:299,safety,modul,module,299,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:370,safety,test,test,370,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:220,security,sign,signature,220,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:370,testability,test,test,370,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:409,testability,assert,assertions,409,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:495,testability,Assert,Assertion,495,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:546,testability,trace,trace,546,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:80,usability,interact,interactive,80,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:117,usability,error,error,117,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:138,usability,User,Users,138,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:250,usability,interact,interactive,250,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:307,usability,Custom,CustomStruct,307,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:326,usability,User,Users,326,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:375,usability,Custom,CustomStruct,375,"Unfortunately this only solves half of the problem, now we have. ```. <<< cling interactive line includer >>>: fatal error: module file '/Users/sftnight/ROOT-CI/build/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. <<< cling interactive line includer >>>: note: imported by module 'CustomStruct' in '/Users/sftnight/ROOT-CI/build/tree/ntuple/v7/test/CustomStruct.pcm'. ```. If we had assertions enabled (we probably should for `mac-beta`...), we would instead see. ```. Assertion failed: (decl.isFirstDecl() && ""Couldn't trace back include from a decl"" "" that is not from an AST file""), function GetFileName, file TClingUtils.cxx, line 3361. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:117,deployability,build,building,117,"While this doesn't give us full compatibility with XCode 15.3, I think it's a correct first step and at least solves building `Core` and `std` modules; I propose we merge this already now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:143,deployability,modul,modules,143,"While this doesn't give us full compatibility with XCode 15.3, I think it's a correct first step and at least solves building `Core` and `std` modules; I propose we merge this already now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:127,energy efficiency,Core,Core,127,"While this doesn't give us full compatibility with XCode 15.3, I think it's a correct first step and at least solves building `Core` and `std` modules; I propose we merge this already now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:32,interoperability,compatib,compatibility,32,"While this doesn't give us full compatibility with XCode 15.3, I think it's a correct first step and at least solves building `Core` and `std` modules; I propose we merge this already now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:143,modifiability,modul,modules,143,"While this doesn't give us full compatibility with XCode 15.3, I think it's a correct first step and at least solves building `Core` and `std` modules; I propose we merge this already now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:11,reliability,doe,doesn,11,"While this doesn't give us full compatibility with XCode 15.3, I think it's a correct first step and at least solves building `Core` and `std` modules; I propose we merge this already now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:143,safety,modul,modules,143,"While this doesn't give us full compatibility with XCode 15.3, I think it's a correct first step and at least solves building `Core` and `std` modules; I propose we merge this already now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:45,deployability,modul,modules,45,Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:67,deployability,modul,modules,67,Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:154,deployability,artifact,artifacts,154,Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:210,deployability,instal,install,210,Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:45,modifiability,modul,modules,45,Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:67,modifiability,modul,modules,67,Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:45,safety,modul,modules,45,Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:67,safety,modul,modules,67,Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:47,deployability,modul,modules,47,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:69,deployability,modul,modules,69,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:156,deployability,artifact,artifacts,156,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:212,deployability,instal,install,212,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:291,deployability,modul,modules,291,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:308,deployability,modul,module,308,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:461,deployability,version,version,461,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:529,deployability,upgrad,upgrade,529,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:453,energy efficiency,current,current,453,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:265,integrability,messag,message,265,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:319,integrability,pub,public,319,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:461,integrability,version,version,461,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:265,interoperability,messag,message,265,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:47,modifiability,modul,modules,47,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:69,modifiability,modul,modules,69,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:291,modifiability,modul,modules,291,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:308,modifiability,modul,module,308,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:461,modifiability,version,version,461,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:529,modifiability,upgrad,upgrade,529,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:47,safety,modul,modules,47,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:69,safety,modul,modules,69,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:291,safety,modul,modules,291,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:308,safety,modul,module,308,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:49,deployability,modul,modules,49,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:71,deployability,modul,modules,71,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:158,deployability,artifact,artifacts,158,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:214,deployability,instal,install,214,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:299,deployability,modul,modules,299,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:316,deployability,modul,module,316,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:498,deployability,version,version,498,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:566,deployability,upgrad,upgrade,566,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:622,deployability,patch,patch,622,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:686,deployability,modul,modules,686,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:809,deployability,modul,modules,809,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:945,deployability,modul,modulemap,945,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1024,deployability,modul,modules,1024,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1097,deployability,modul,modules,1097,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:490,energy efficiency,current,current,490,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:273,integrability,messag,message,273,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:327,integrability,pub,public,327,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:498,integrability,version,version,498,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:273,interoperability,messag,message,273,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:49,modifiability,modul,modules,49,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:71,modifiability,modul,modules,71,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:299,modifiability,modul,modules,299,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:316,modifiability,modul,module,316,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:498,modifiability,version,version,498,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:566,modifiability,upgrad,upgrade,566,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:686,modifiability,modul,modules,686,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:809,modifiability,modul,modules,809,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:945,modifiability,modul,modulemap,945,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1024,modifiability,modul,modules,1024,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1097,modifiability,modul,modules,1097,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:628,reliability,doe,does,628,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:49,safety,modul,modules,49,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:71,safety,modul,modules,71,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:299,safety,modul,modules,299,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:316,safety,modul,module,316,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:622,safety,patch,patch,622,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:686,safety,modul,modules,686,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:809,safety,modul,modules,809,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:945,safety,modul,modulemap,945,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1024,safety,modul,modules,1024,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1097,safety,modul,modules,1097,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:622,security,patch,patch,622,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > . > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:51,deployability,modul,modules,51,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:73,deployability,modul,modules,73,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:160,deployability,artifact,artifacts,160,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:216,deployability,instal,install,216,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:311,deployability,modul,modules,311,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:328,deployability,modul,module,328,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:510,deployability,version,version,510,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:578,deployability,upgrad,upgrade,578,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:640,deployability,patch,patch,640,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:704,deployability,modul,modules,704,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:827,deployability,modul,modules,827,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:963,deployability,modul,modulemap,963,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1042,deployability,modul,modules,1042,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1115,deployability,modul,modules,1115,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1192,deployability,scale,scales,1192,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1293,deployability,depend,depend,1293,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:502,energy efficiency,current,current,502,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1192,energy efficiency,scale,scales,1192,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:285,integrability,messag,message,285,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:339,integrability,pub,public,339,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:510,integrability,version,version,510,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1293,integrability,depend,depend,1293,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:285,interoperability,messag,message,285,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:51,modifiability,modul,modules,51,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:73,modifiability,modul,modules,73,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:311,modifiability,modul,modules,311,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:328,modifiability,modul,module,328,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:510,modifiability,version,version,510,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:578,modifiability,upgrad,upgrade,578,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:704,modifiability,modul,modules,704,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:827,modifiability,modul,modules,827,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:963,modifiability,modul,modulemap,963,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1042,modifiability,modul,modules,1042,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1115,modifiability,modul,modules,1115,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1192,modifiability,scal,scales,1192,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1293,modifiability,depend,depend,1293,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1192,performance,scale,scales,1192,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1218,performance,perform,performance,1218,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1256,performance,content,content,1256,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:646,reliability,doe,does,646,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:51,safety,modul,modules,51,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:73,safety,modul,modules,73,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:311,safety,modul,modules,311,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:328,safety,modul,module,328,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:640,safety,patch,patch,640,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:704,safety,modul,modules,704,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:827,safety,modul,modules,827,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:963,safety,modul,modulemap,963,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1042,safety,modul,modules,1042,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1115,safety,modul,modules,1115,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1293,safety,depend,depend,1293,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:640,security,patch,patch,640,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1293,testability,depend,depend,1293,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1218,usability,perform,performance,1218,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. > > . > > . > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. > . > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:7,deployability,patch,patch,7,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:71,deployability,modul,modules,71,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:155,deployability,modul,modules,155,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:379,deployability,modul,modules,379,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:475,deployability,modul,modules,475,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:611,deployability,modul,modulemap,611,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:709,deployability,version,version,709,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:855,deployability,modul,modules,855,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:709,integrability,version,version,709,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:71,modifiability,modul,modules,71,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:155,modifiability,modul,modules,155,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:379,modifiability,modul,modules,379,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:475,modifiability,modul,modules,475,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:611,modifiability,modul,modulemap,611,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:709,modifiability,version,version,709,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:855,modifiability,modul,modules,855,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:13,reliability,doe,does,13,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:7,safety,patch,patch,7,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:71,safety,modul,modules,71,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:155,safety,modul,modules,155,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:379,safety,modul,modules,379,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:475,safety,modul,modules,475,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:611,safety,modul,modulemap,611,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:855,safety,modul,modules,855,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:7,security,patch,patch,7,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:211,testability,understand,understand,211,"> That patch does not enable the feature for libc++ but for all system modules. Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? > You are right we will need to change this only when a new top-level header shows up which is very rarely. Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:38,deployability,scale,scales,38,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:139,deployability,depend,depend,139,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:400,deployability,updat,update,400,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:583,deployability,modul,modules,583,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:38,energy efficiency,scale,scales,38,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:139,integrability,depend,depend,139,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:38,modifiability,scal,scales,38,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:139,modifiability,depend,depend,139,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:322,modifiability,maintain,maintainers,322,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:583,modifiability,modul,modules,583,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:38,performance,scale,scales,38,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:64,performance,perform,performance,64,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:102,performance,content,content,102,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:535,reliability,doe,doesn,535,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:139,safety,depend,depend,139,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:322,safety,maintain,maintainers,322,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:400,safety,updat,update,400,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:583,safety,modul,modules,583,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:400,security,updat,update,400,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:139,testability,depend,depend,139,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:64,usability,perform,performance,64,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:9,deployability,patch,patch,9,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:73,deployability,modul,modules,73,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:163,deployability,modul,modules,163,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:264,deployability,modul,modules,264,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:393,deployability,modul,modules,393,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:455,deployability,modul,module,455,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:661,deployability,modul,modules,661,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:782,deployability,modul,modulemap,782,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:858,deployability,modul,modules,858,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:994,deployability,modul,modulemap,994,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1098,deployability,version,version,1098,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1244,deployability,modul,modules,1244,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1372,deployability,deploy,deployment,1372,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1098,integrability,version,version,1098,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:73,modifiability,modul,modules,73,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:163,modifiability,modul,modules,163,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:264,modifiability,modul,modules,264,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:393,modifiability,modul,modules,393,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:455,modifiability,modul,module,455,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:661,modifiability,modul,modules,661,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:782,modifiability,modul,modulemap,782,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:858,modifiability,modul,modules,858,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:994,modifiability,modul,modulemap,994,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1098,modifiability,version,version,1098,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1244,modifiability,modul,modules,1244,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1355,performance,overhead,overhead,1355,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:15,reliability,doe,does,15,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:9,safety,patch,patch,9,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:73,safety,modul,modules,73,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:163,safety,modul,modules,163,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:264,safety,modul,modules,264,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:393,safety,modul,modules,393,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:455,safety,modul,module,455,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:661,safety,modul,modules,661,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:782,safety,modul,modulemap,782,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:858,safety,modul,modules,858,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:994,safety,modul,modulemap,994,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:1244,safety,modul,modules,1244,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:9,security,patch,patch,9,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:219,testability,understand,understand,219,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:775,usability,custom,custom,775,"> > That patch does not enable the feature for libc++ but for all system modules. > . > Yes, this is why I propose here to allow implicit generation of all system modules. This is only for `libc` and `std`, as far as I understand, right? No, that will include all modules marked as `[system]` which any project can do since the compiler has several tweaks on that attribute. This will include modules that we marked as system too. One such example is the module for `cuda` and `tbb` that we provide. > . > > You are right we will need to change this only when a new top-level header shows up which is very rarely. > . > Note quite: we also have `std_private_*` modules. I expect these to change quite frequently, as the libc++ developers see fit. Another reason to provide a custom modulemap and do not use the one that comes now for libc++. > . > > The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. > . > Yes, and it's quite fragile with every new version of libstdc++. I think using what libc++ already provides makes the most sense, and the cost of this ""sledgehammer"" is allowing all system modules to be implicit byproducts. This is exactly what I am explaining we should not do because of the larger overhead and the deployment problems that would introduce in clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:40,deployability,scale,scales,40,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:141,deployability,depend,depend,141,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:408,deployability,updat,update,408,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:591,deployability,modul,modules,591,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:636,deployability,version,version,636,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:651,deployability,modul,modulemap,651,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:778,deployability,modul,modules,778,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:40,energy efficiency,scale,scales,40,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:141,integrability,depend,depend,141,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:636,integrability,version,version,636,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:40,modifiability,scal,scales,40,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:141,modifiability,depend,depend,141,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:330,modifiability,maintain,maintainers,330,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:591,modifiability,modul,modules,591,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:636,modifiability,version,version,636,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:651,modifiability,modul,modulemap,651,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:778,modifiability,modul,modules,778,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:40,performance,scale,scales,40,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:66,performance,perform,performance,66,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:104,performance,content,content,104,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:543,reliability,doe,doesn,543,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:141,safety,depend,depend,141,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:330,safety,maintain,maintainers,330,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:408,safety,updat,update,408,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:591,safety,modul,modules,591,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:651,safety,modul,modulemap,651,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:778,safety,modul,modules,778,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:793,safety,compl,completely,793,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:408,security,updat,update,408,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:793,security,compl,completely,793,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:141,testability,depend,depend,141,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:66,usability,perform,performance,66,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. > . > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:158,deployability,version,version,158,@vgvassilev @hahnjo thanks a lot for looking into this. Let's find a pragmatic way to move forward as this issue is preventing using ROOT on the newest macos version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:158,integrability,version,version,158,@vgvassilev @hahnjo thanks a lot for looking into this. Let's find a pragmatic way to move forward as this issue is preventing using ROOT on the newest macos version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:158,modifiability,version,version,158,@vgvassilev @hahnjo thanks a lot for looking into this. Let's find a pragmatic way to move forward as this issue is preventing using ROOT on the newest macos version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:69,reliability,pra,pragmatic,69,@vgvassilev @hahnjo thanks a lot for looking into this. Let's find a pragmatic way to move forward as this issue is preventing using ROOT on the newest macos version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:116,safety,prevent,preventing,116,@vgvassilev @hahnjo thanks a lot for looking into this. Let's find a pragmatic way to move forward as this issue is preventing using ROOT on the newest macos version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/pull/14903:116,security,preven,preventing,116,@vgvassilev @hahnjo thanks a lot for looking into this. Let's find a pragmatic way to move forward as this issue is preventing using ROOT on the newest macos version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14903
https://github.com/root-project/root/issues/14904:32,usability,close,closed,32,"@andresailer, can this issue be closed now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14904
https://github.com/root-project/root/issues/14904:69,deployability,build,builds,69,"Give me few more hours, I don't yet have the tests reports for debug builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14904
https://github.com/root-project/root/issues/14904:45,safety,test,tests,45,"Give me few more hours, I don't yet have the tests reports for debug builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14904
https://github.com/root-project/root/issues/14904:45,testability,test,tests,45,"Give me few more hours, I don't yet have the tests reports for debug builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14904
https://github.com/root-project/root/issues/14904:0,safety,Test,Tested,0,"Tested on lxplus today, with `devswan`, `dev3` and `dev4`. All work correctly, so we can close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14904
https://github.com/root-project/root/issues/14904:0,testability,Test,Tested,0,"Tested on lxplus today, with `devswan`, `dev3` and `dev4`. All work correctly, so we can close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14904
https://github.com/root-project/root/issues/14904:89,usability,close,close,89,"Tested on lxplus today, with `devswan`, `dev3` and `dev4`. All work correctly, so we can close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14904
https://github.com/root-project/root/pull/14908:19,safety,except,except,19,"> Looks good to me except for macOS, which apparently should use arc4random_buf(). I prefer to use same method on Mac - just excluding flag which is not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:85,usability,prefer,prefer,85,"> Looks good to me except for macOS, which apparently should use arc4random_buf(). I prefer to use same method on Mac - just excluding flag which is not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:153,usability,support,supported,153,"> Looks good to me except for macOS, which apparently should use arc4random_buf(). I prefer to use same method on Mac - just excluding flag which is not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:212,interoperability,platform,platforms,212,"@jblomer @bellenot . `arc4random_buf()` looks like preferable method to get cryptographic random numbers and on newer Linux it provided with `<stdlib.h>`. But on Mac or Ubuntu or alma it is not a case. . On some platforms (including Mac) one can use `libbsd` - but again not always. And finally there is `read_random` function. . Seems to be, one need to test all them one after another with `CHECK_CXX_SOURCE_COMPILES` to be able use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:355,safety,test,test,355,"@jblomer @bellenot . `arc4random_buf()` looks like preferable method to get cryptographic random numbers and on newer Linux it provided with `<stdlib.h>`. But on Mac or Ubuntu or alma it is not a case. . On some platforms (including Mac) one can use `libbsd` - but again not always. And finally there is `read_random` function. . Seems to be, one need to test all them one after another with `CHECK_CXX_SOURCE_COMPILES` to be able use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:76,security,cryptograph,cryptographic,76,"@jblomer @bellenot . `arc4random_buf()` looks like preferable method to get cryptographic random numbers and on newer Linux it provided with `<stdlib.h>`. But on Mac or Ubuntu or alma it is not a case. . On some platforms (including Mac) one can use `libbsd` - but again not always. And finally there is `read_random` function. . Seems to be, one need to test all them one after another with `CHECK_CXX_SOURCE_COMPILES` to be able use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:355,testability,test,test,355,"@jblomer @bellenot . `arc4random_buf()` looks like preferable method to get cryptographic random numbers and on newer Linux it provided with `<stdlib.h>`. But on Mac or Ubuntu or alma it is not a case. . On some platforms (including Mac) one can use `libbsd` - but again not always. And finally there is `read_random` function. . Seems to be, one need to test all them one after another with `CHECK_CXX_SOURCE_COMPILES` to be able use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:51,usability,prefer,preferable,51,"@jblomer @bellenot . `arc4random_buf()` looks like preferable method to get cryptographic random numbers and on newer Linux it provided with `<stdlib.h>`. But on Mac or Ubuntu or alma it is not a case. . On some platforms (including Mac) one can use `libbsd` - but again not always. And finally there is `read_random` function. . Seems to be, one need to test all them one after another with `CHECK_CXX_SOURCE_COMPILES` to be able use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:57,testability,simpl,simpler,57,"@linev I could check how to do that, but isn't there any simpler solution?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:57,usability,simpl,simpler,57,"@linev I could check how to do that, but isn't there any simpler solution?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:85,interoperability,standard,standard,85,"@bellenot . > isn't there any simpler solution. I have no idea. While it is not real standard, each linux/mac flawor has own way to provide function to read `/dev/random` or . `/dev/urandom`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:30,testability,simpl,simpler,30,"@bellenot . > isn't there any simpler solution. I have no idea. While it is not real standard, each linux/mac flawor has own way to provide function to read `/dev/random` or . `/dev/urandom`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:30,usability,simpl,simpler,30,"@bellenot . > isn't there any simpler solution. I have no idea. While it is not real standard, each linux/mac flawor has own way to provide function to read `/dev/random` or . `/dev/urandom`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:23,availability,error,errors,23,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:47,availability,error,errors,47,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:69,availability,error,errors,69,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:105,availability,error,errors,105,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:40,interoperability,format,format,40,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:23,performance,error,errors,23,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:47,performance,error,errors,47,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:69,performance,error,errors,69,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:105,performance,error,errors,105,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:18,safety,test,test,18,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:23,safety,error,errors,23,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:47,safety,error,errors,47,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:69,safety,error,errors,69,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:105,safety,error,errors,105,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:18,testability,test,test,18,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:23,usability,error,errors,23,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:47,usability,error,errors,47,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:69,usability,error,errors,69,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:105,usability,error,errors,105,> There are still test errors and clang-format errors to handle. All errors are not related to PR. clang-errors I will check,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:26,interoperability,format,format,26,> but see remaining clang-format issues. Most of clang format warnings about header files. We need to reformat all ROOT headers to avoid them.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:55,interoperability,format,format,55,> but see remaining clang-format issues. Most of clang format warnings about header files. We need to reformat all ROOT headers to avoid them.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:131,safety,avoid,avoid,131,> but see remaining clang-format issues. Most of clang format warnings about header files. We need to reformat all ROOT headers to avoid them.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:51,interoperability,format,formatting,51,"Right, my understanding is that we want to fix the formatting as we go, incrementally. So that over time the situation improves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:100,performance,time,time,100,"Right, my understanding is that we want to fix the formatting as we go, incrementally. So that over time the situation improves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:10,testability,understand,understanding,10,"Right, my understanding is that we want to fix the formatting as we go, incrementally. So that over time the situation improves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:84,interoperability,format,formatting,84,> So that over time the situation improves. It doing this on PR basis we will break formatting of header files - different lines will have different format. One should do it once for all headers and probably for all source files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:149,interoperability,format,format,149,> So that over time the situation improves. It doing this on PR basis we will break formatting of header files - different lines will have different format. One should do it once for all headers and probably for all source files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/pull/14908:15,performance,time,time,15,> So that over time the situation improves. It doing this on PR basis we will break formatting of header files - different lines will have different format. One should do it once for all headers and probably for all source files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14908
https://github.com/root-project/root/issues/14910:22,deployability,patch,patch,22,Feel free to try this patch: https://github.com/root-project/root/pull/14913,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:22,safety,patch,patch,22,Feel free to try this patch: https://github.com/root-project/root/pull/14913,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:22,security,patch,patch,22,Feel free to try this patch: https://github.com/root-project/root/pull/14913,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:132,deployability,patch,patch,132,"Hi @ferdymercury , thank you for your prompt answer. Maybe I'm doing something wrong, but I wasn't able to get the target file. The patch seems to correctly trigger the parallelization execution:. `Parallelizing with 10 processes. hadd Target file: /afs/cern.ch/work/m/mlizzo/mkShapesRDF_el9/PlotsConfigurationsRun3/VBS_OS_pol/ttHMVA_Full2018_v9/rootFiles__RDF_2018_v9_emu_ttHMVA/mkShapes__RDF_2018_v9_emu_ttHMVA.root. hadd compression setting for all output: 101` // compression level is different, don't know why. but then I get:. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/ttHMVASF_LepWP`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/ttHMVASF_LepWP`. `hadd failed at the parallel stage`. Were you able to properly merge root files? I compiled the hadd.cxx macro with the following command:. `c++ hadd.cxx -o hadd $(root-config --cflags --libs)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1239,deployability,fail,failed,1239,"Hi @ferdymercury , thank you for your prompt answer. Maybe I'm doing something wrong, but I wasn't able to get the target file. The patch seems to correctly trigger the parallelization execution:. `Parallelizing with 10 processes. hadd Target file: /afs/cern.ch/work/m/mlizzo/mkShapesRDF_el9/PlotsConfigurationsRun3/VBS_OS_pol/ttHMVA_Full2018_v9/rootFiles__RDF_2018_v9_emu_ttHMVA/mkShapes__RDF_2018_v9_emu_ttHMVA.root. hadd compression setting for all output: 101` // compression level is different, don't know why. but then I get:. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/ttHMVASF_LepWP`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/ttHMVASF_LepWP`. `hadd failed at the parallel stage`. Were you able to properly merge root files? I compiled the hadd.cxx macro with the following command:. `c++ hadd.cxx -o hadd $(root-config --cflags --libs)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1262,deployability,stage,stage,1262,"Hi @ferdymercury , thank you for your prompt answer. Maybe I'm doing something wrong, but I wasn't able to get the target file. The patch seems to correctly trigger the parallelization execution:. `Parallelizing with 10 processes. hadd Target file: /afs/cern.ch/work/m/mlizzo/mkShapesRDF_el9/PlotsConfigurationsRun3/VBS_OS_pol/ttHMVA_Full2018_v9/rootFiles__RDF_2018_v9_emu_ttHMVA/mkShapes__RDF_2018_v9_emu_ttHMVA.root. hadd compression setting for all output: 101` // compression level is different, don't know why. but then I get:. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/ttHMVASF_LepWP`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/ttHMVASF_LepWP`. `hadd failed at the parallel stage`. Were you able to properly merge root files? I compiled the hadd.cxx macro with the following command:. `c++ hadd.cxx -o hadd $(root-config --cflags --libs)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:807,integrability,event,events,807,"Hi @ferdymercury , thank you for your prompt answer. Maybe I'm doing something wrong, but I wasn't able to get the target file. The patch seems to correctly trigger the parallelization execution:. `Parallelizing with 10 processes. hadd Target file: /afs/cern.ch/work/m/mlizzo/mkShapesRDF_el9/PlotsConfigurationsRun3/VBS_OS_pol/ttHMVA_Full2018_v9/rootFiles__RDF_2018_v9_emu_ttHMVA/mkShapes__RDF_2018_v9_emu_ttHMVA.root. hadd compression setting for all output: 101` // compression level is different, don't know why. but then I get:. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/ttHMVASF_LepWP`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/ttHMVASF_LepWP`. `hadd failed at the parallel stage`. Were you able to properly merge root files? I compiled the hadd.cxx macro with the following command:. `c++ hadd.cxx -o hadd $(root-config --cflags --libs)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1114,integrability,event,events,1114,"Hi @ferdymercury , thank you for your prompt answer. Maybe I'm doing something wrong, but I wasn't able to get the target file. The patch seems to correctly trigger the parallelization execution:. `Parallelizing with 10 processes. hadd Target file: /afs/cern.ch/work/m/mlizzo/mkShapesRDF_el9/PlotsConfigurationsRun3/VBS_OS_pol/ttHMVA_Full2018_v9/rootFiles__RDF_2018_v9_emu_ttHMVA/mkShapes__RDF_2018_v9_emu_ttHMVA.root. hadd compression setting for all output: 101` // compression level is different, don't know why. but then I get:. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/ttHMVASF_LepWP`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/ttHMVASF_LepWP`. `hadd failed at the parallel stage`. Were you able to properly merge root files? I compiled the hadd.cxx macro with the following command:. `c++ hadd.cxx -o hadd $(root-config --cflags --libs)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:169,performance,parallel,parallelization,169,"Hi @ferdymercury , thank you for your prompt answer. Maybe I'm doing something wrong, but I wasn't able to get the target file. The patch seems to correctly trigger the parallelization execution:. `Parallelizing with 10 processes. hadd Target file: /afs/cern.ch/work/m/mlizzo/mkShapesRDF_el9/PlotsConfigurationsRun3/VBS_OS_pol/ttHMVA_Full2018_v9/rootFiles__RDF_2018_v9_emu_ttHMVA/mkShapes__RDF_2018_v9_emu_ttHMVA.root. hadd compression setting for all output: 101` // compression level is different, don't know why. but then I get:. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/ttHMVASF_LepWP`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/ttHMVASF_LepWP`. `hadd failed at the parallel stage`. Were you able to properly merge root files? I compiled the hadd.cxx macro with the following command:. `c++ hadd.cxx -o hadd $(root-config --cflags --libs)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:198,performance,Parallel,Parallelizing,198,"Hi @ferdymercury , thank you for your prompt answer. Maybe I'm doing something wrong, but I wasn't able to get the target file. The patch seems to correctly trigger the parallelization execution:. `Parallelizing with 10 processes. hadd Target file: /afs/cern.ch/work/m/mlizzo/mkShapesRDF_el9/PlotsConfigurationsRun3/VBS_OS_pol/ttHMVA_Full2018_v9/rootFiles__RDF_2018_v9_emu_ttHMVA/mkShapes__RDF_2018_v9_emu_ttHMVA.root. hadd compression setting for all output: 101` // compression level is different, don't know why. but then I get:. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/ttHMVASF_LepWP`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/ttHMVASF_LepWP`. `hadd failed at the parallel stage`. Were you able to properly merge root files? I compiled the hadd.cxx macro with the following command:. `c++ hadd.cxx -o hadd $(root-config --cflags --libs)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1253,performance,parallel,parallel,1253,"Hi @ferdymercury , thank you for your prompt answer. Maybe I'm doing something wrong, but I wasn't able to get the target file. The patch seems to correctly trigger the parallelization execution:. `Parallelizing with 10 processes. hadd Target file: /afs/cern.ch/work/m/mlizzo/mkShapesRDF_el9/PlotsConfigurationsRun3/VBS_OS_pol/ttHMVA_Full2018_v9/rootFiles__RDF_2018_v9_emu_ttHMVA/mkShapes__RDF_2018_v9_emu_ttHMVA.root. hadd compression setting for all output: 101` // compression level is different, don't know why. but then I get:. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/ttHMVASF_LepWP`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/ttHMVASF_LepWP`. `hadd failed at the parallel stage`. Were you able to properly merge root files? I compiled the hadd.cxx macro with the following command:. `c++ hadd.cxx -o hadd $(root-config --cflags --libs)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1239,reliability,fail,failed,1239,"Hi @ferdymercury , thank you for your prompt answer. Maybe I'm doing something wrong, but I wasn't able to get the target file. The patch seems to correctly trigger the parallelization execution:. `Parallelizing with 10 processes. hadd Target file: /afs/cern.ch/work/m/mlizzo/mkShapesRDF_el9/PlotsConfigurationsRun3/VBS_OS_pol/ttHMVA_Full2018_v9/rootFiles__RDF_2018_v9_emu_ttHMVA/mkShapes__RDF_2018_v9_emu_ttHMVA.root. hadd compression setting for all output: 101` // compression level is different, don't know why. but then I get:. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/ttHMVASF_LepWP`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/ttHMVASF_LepWP`. `hadd failed at the parallel stage`. Were you able to properly merge root files? I compiled the hadd.cxx macro with the following command:. `c++ hadd.cxx -o hadd $(root-config --cflags --libs)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:132,safety,patch,patch,132,"Hi @ferdymercury , thank you for your prompt answer. Maybe I'm doing something wrong, but I wasn't able to get the target file. The patch seems to correctly trigger the parallelization execution:. `Parallelizing with 10 processes. hadd Target file: /afs/cern.ch/work/m/mlizzo/mkShapesRDF_el9/PlotsConfigurationsRun3/VBS_OS_pol/ttHMVA_Full2018_v9/rootFiles__RDF_2018_v9_emu_ttHMVA/mkShapes__RDF_2018_v9_emu_ttHMVA.root. hadd compression setting for all output: 101` // compression level is different, don't know why. but then I get:. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/ttHMVASF_LepWP`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/ttHMVASF_LepWP`. `hadd failed at the parallel stage`. Were you able to properly merge root files? I compiled the hadd.cxx macro with the following command:. `c++ hadd.cxx -o hadd $(root-config --cflags --libs)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:132,security,patch,patch,132,"Hi @ferdymercury , thank you for your prompt answer. Maybe I'm doing something wrong, but I wasn't able to get the target file. The patch seems to correctly trigger the parallelization execution:. `Parallelizing with 10 processes. hadd Target file: /afs/cern.ch/work/m/mlizzo/mkShapesRDF_el9/PlotsConfigurationsRun3/VBS_OS_pol/ttHMVA_Full2018_v9/rootFiles__RDF_2018_v9_emu_ttHMVA/mkShapes__RDF_2018_v9_emu_ttHMVA.root. hadd compression setting for all output: 101` // compression level is different, don't know why. but then I get:. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/ttHMVASF_LepWP`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/ttHMVASF_LepWP`. `hadd failed at the parallel stage`. Were you able to properly merge root files? I compiled the hadd.cxx macro with the following command:. `c++ hadd.cxx -o hadd $(root-config --cflags --libs)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1363,usability,command,command,1363,"Hi @ferdymercury , thank you for your prompt answer. Maybe I'm doing something wrong, but I wasn't able to get the target file. The patch seems to correctly trigger the parallelization execution:. `Parallelizing with 10 processes. hadd Target file: /afs/cern.ch/work/m/mlizzo/mkShapesRDF_el9/PlotsConfigurationsRun3/VBS_OS_pol/ttHMVA_Full2018_v9/rootFiles__RDF_2018_v9_emu_ttHMVA/mkShapes__RDF_2018_v9_emu_ttHMVA.root. hadd compression setting for all output: 101` // compression level is different, don't know why. but then I get:. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/VBS_2j_em/ttHMVASF_LepWP`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/events`. `hadd Target path: /tmp/mlizzo/partial0_088bf922-dd2d-11ee-b92d-3f4eb9bcbeef.root:/top_2j_em/ttHMVASF_LepWP`. `hadd failed at the parallel stage`. Were you able to properly merge root files? I compiled the hadd.cxx macro with the following command:. `c++ hadd.cxx -o hadd $(root-config --cflags --libs)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:85,usability,help,help,85,"wrt compression level, did you check the flags to set the compression? see:. `hadd --help`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:196,deployability,instal,installed,196,"Unfortunately I had to comment out `#include haddCommandLineOptionsHelp.h` and the corresponding print, I don't know why that header could not be found - the ""standard"" hadd executable is the one installed in lxplus (CERN) and to be honest I have no idea how that is compiled. In any case, I'm using default options, I just noticed that it changed (101) with respect to what was set before (1), can this play a role? Did you manage to merge input files eventually? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:425,deployability,manag,manage,425,"Unfortunately I had to comment out `#include haddCommandLineOptionsHelp.h` and the corresponding print, I don't know why that header could not be found - the ""standard"" hadd executable is the one installed in lxplus (CERN) and to be honest I have no idea how that is compiled. In any case, I'm using default options, I just noticed that it changed (101) with respect to what was set before (1), can this play a role? Did you manage to merge input files eventually? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:425,energy efficiency,manag,manage,425,"Unfortunately I had to comment out `#include haddCommandLineOptionsHelp.h` and the corresponding print, I don't know why that header could not be found - the ""standard"" hadd executable is the one installed in lxplus (CERN) and to be honest I have no idea how that is compiled. In any case, I'm using default options, I just noticed that it changed (101) with respect to what was set before (1), can this play a role? Did you manage to merge input files eventually? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:453,integrability,event,eventually,453,"Unfortunately I had to comment out `#include haddCommandLineOptionsHelp.h` and the corresponding print, I don't know why that header could not be found - the ""standard"" hadd executable is the one installed in lxplus (CERN) and to be honest I have no idea how that is compiled. In any case, I'm using default options, I just noticed that it changed (101) with respect to what was set before (1), can this play a role? Did you manage to merge input files eventually? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:159,interoperability,standard,standard,159,"Unfortunately I had to comment out `#include haddCommandLineOptionsHelp.h` and the corresponding print, I don't know why that header could not be found - the ""standard"" hadd executable is the one installed in lxplus (CERN) and to be honest I have no idea how that is compiled. In any case, I'm using default options, I just noticed that it changed (101) with respect to what was set before (1), can this play a role? Did you manage to merge input files eventually? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:425,safety,manag,manage,425,"Unfortunately I had to comment out `#include haddCommandLineOptionsHelp.h` and the corresponding print, I don't know why that header could not be found - the ""standard"" hadd executable is the one installed in lxplus (CERN) and to be honest I have no idea how that is compiled. In any case, I'm using default options, I just noticed that it changed (101) with respect to what was set before (1), can this play a role? Did you manage to merge input files eventually? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:441,safety,input,input,441,"Unfortunately I had to comment out `#include haddCommandLineOptionsHelp.h` and the corresponding print, I don't know why that header could not be found - the ""standard"" hadd executable is the one installed in lxplus (CERN) and to be honest I have no idea how that is compiled. In any case, I'm using default options, I just noticed that it changed (101) with respect to what was set before (1), can this play a role? Did you manage to merge input files eventually? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:441,usability,input,input,441,"Unfortunately I had to comment out `#include haddCommandLineOptionsHelp.h` and the corresponding print, I don't know why that header could not be found - the ""standard"" hadd executable is the one installed in lxplus (CERN) and to be honest I have no idea how that is compiled. In any case, I'm using default options, I just noticed that it changed (101) with respect to what was set before (1), can this play a role? Did you manage to merge input files eventually? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1906,availability,operat,operations,1906,"el of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 1073741824. (1GiB), etc. The prefix can be optionally followed by B whose casing. is ignored, eg. 1k, 1K, 1Kb and 1KB are the same. ```. No, I also get a ""failed"" error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:2201,availability,slo,slower,2201,"el of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 1073741824. (1GiB), etc. The prefix can be optionally followed by B whose casing. is ignored, eg. 1k, 1K, 1Kb and 1KB are the same. ```. No, I also get a ""failed"" error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:2709,availability,error,error,2709,"el of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 1073741824. (1GiB), etc. The prefix can be optionally followed by B whose casing. is ignored, eg. 1k, 1K, 1Kb and 1KB are the same. ```. No, I also get a ""failed"" error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:939,deployability,contain,contain,939,"If you do not specify anything, you will get:. ```. /// Use the compile-time default setting. kUseCompiledDefault = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:2701,deployability,fail,failed,2701,"el of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 1073741824. (1GiB), etc. The prefix can be optionally followed by B whose casing. is ignored, eg. 1k, 1K, 1Kb and 1KB are the same. ```. No, I also get a ""failed"" error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1317,energy efficiency,optim,optimize,1317,"RES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:14,interoperability,specif,specify,14,"If you do not specify anything, you will get:. ```. /// Use the compile-time default setting. kUseCompiledDefault = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:688,interoperability,specif,specify,688,"If you do not specify anything, you will get:. ```. /// Use the compile-time default setting. kUseCompiledDefault = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:859,interoperability,specif,specify,859,"If you do not specify anything, you will get:. ```. /// Use the compile-time default setting. kUseCompiledDefault = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1019,interoperability,specif,specified,1019,"ything, you will get:. ```. /// Use the compile-time default setting. kUseCompiledDefault = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1085,interoperability,specif,specified,1085,"ng. kUseCompiledDefault = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1229,interoperability,specif,specified,1229," [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For optio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1543,interoperability,specif,specified,1543," must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1611,interoperability,specif,specified,1611,"tput. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 1073741824. (1GiB), etc. The prefix can be optionally followed by B wh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1743,interoperability,specif,specified,1743,"el of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 1073741824. (1GiB), etc. The prefix can be optionally followed by B whose casing. is ignored, eg. 1k, 1K, 1Kb and 1KB are the same. ```. No, I also get a ""failed"" error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:72,performance,time,time,72,"If you do not specify anything, you will get:. ```. /// Use the compile-time default setting. kUseCompiledDefault = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:251,performance,cach,cachesize,251,"If you do not specify anything, you will get:. ```. /// Use the compile-time default setting. kUseCompiledDefault = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:261,performance,CACH,CACHESIZE,261,"If you do not specify anything, you will get:. ```. /// Use the compile-time default setting. kUseCompiledDefault = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1317,performance,optimiz,optimize,1317,"RES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1464,performance,Parallel,Parallelize,1464,"target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1847,performance,cach,cachesize,1847,"el of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 1073741824. (1GiB), etc. The prefix can be optionally followed by B whose casing. is ignored, eg. 1k, 1K, 1Kb and 1KB are the same. ```. No, I also get a ""failed"" error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1880,performance,cach,cache,1880,"el of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 1073741824. (1GiB), etc. The prefix can be optionally followed by B whose casing. is ignored, eg. 1k, 1K, 1Kb and 1KB are the same. ```. No, I also get a ""failed"" error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1902,performance,I/O,I/O,1902,"el of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 1073741824. (1GiB), etc. The prefix can be optionally followed by B whose casing. is ignored, eg. 1k, 1K, 1Kb and 1KB are the same. ```. No, I also get a ""failed"" error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:2709,performance,error,error,2709,"el of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 1073741824. (1GiB), etc. The prefix can be optionally followed by B whose casing. is ignored, eg. 1k, 1K, 1Kb and 1KB are the same. ```. No, I also get a ""failed"" error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:2201,reliability,slo,slower,2201,"el of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 1073741824. (1GiB), etc. The prefix can be optionally followed by B whose casing. is ignored, eg. 1k, 1K, 1Kb and 1KB are the same. ```. No, I also get a ""failed"" error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:2701,reliability,fail,failed,2701,"el of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 1073741824. (1GiB), etc. The prefix can be optionally followed by B whose casing. is ignored, eg. 1k, 1K, 1Kb and 1KB are the same. ```. No, I also get a ""failed"" error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:993,safety,input,input,993,"If you do not specify anything, you will get:. ```. /// Use the compile-time default setting. kUseCompiledDefault = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1108,safety,input,input,1108,"lt = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Targe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1252,safety,input,input,1252,"esize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:2709,safety,error,error,2709,"el of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 1073741824. (1GiB), etc. The prefix can be optionally followed by B whose casing. is ignored, eg. 1k, 1K, 1Kb and 1KB are the same. ```. No, I also get a ""failed"" error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:142,usability,help,help,142,"If you do not specify anything, you will get:. ```. /// Use the compile-time default setting. kUseCompiledDefault = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:830,usability,document,documentation,830,"If you do not specify anything, you will get:. ```. /// Use the compile-time default setting. kUseCompiledDefault = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:993,usability,input,input,993,"If you do not specify anything, you will get:. ```. /// Use the compile-time default setting. kUseCompiledDefault = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1108,usability,input,input,1108,"lt = 101,. ``` . Here the full help:. ```. usage: hadd [-a] [-f] [-f[0-9]] [-fk] [-ff] [-k] [-O] [-T] [-v V] [-j J]. [-dbg] [-d D] [-n N] [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Targe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:1252,usability,input,input,1252,"esize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES]. TARGET SOURCES. This program will add histograms, trees and other objects from a list. of ROOT files and write them to a target ROOT file. The target file is. newly created and must not exist, or if -f (""force"") is given, must. not be one of the source files. OPTIONS:. -a Append to the output. -f Force overwriting of output file. -f[0-9] Gives the ability to specify the compression level of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:2709,usability,error,error,2709,"el of the target file. Default is 1 (kDefaultZLIB), 0 is uncompressed, 9 is maximum. compression (see TFile::TFile documentation). You can also specify the. full compresion algorithm, e.g. -f206. -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -k Skip corrupt or non-existent files, do not exit. -O Re-optimize basket size when merging TTree. -T Do not merge Trees. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in 'J' processes. If the number of processes. is not specified, use the system maximum. -dbg Enable verbosity. If -j was specified, do not not delete partial files. stored inside working directory. -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'N' files at once (use 0 to request to use the system. maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. See ROOT::Experimental::EIOFeatures. TARGET Target file. SOURCES Source files. If TARGET and SOURCES have different compression settings a slower. method is used. For options that takes a size as argument, a decimal. number of bytes is expected. If the number ends with a ``k'', ``m'',. ``g'', etc., the number is multiplied by 1000 (1K), 1000000 (1MB),. 1000000000 (1G), etc. If this prefix is followed by i, the number is. multiplied by the traditional 1024 (1KiB), 1048576 (1MiB), 1073741824. (1GiB), etc. The prefix can be optionally followed by B whose casing. is ignored, eg. 1k, 1K, 1Kb and 1KB are the same. ```. No, I also get a ""failed"" error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:60,availability,error,error,60,"Hi @ferdymercury , I think I have found what is causing the error. I believe that [here](https://github.com/root-project/root/blob/47ab543e812553fd5404bd7e34e27b905a66e581/main/src/hadd.cxx#L546C12-L546C17) the `argc` argument must be replaced with `filesToProcess` when an indirect file is present. I made a quick test and it worked fine, but maybe it's better if you experts could take a closer look into that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:60,performance,error,error,60,"Hi @ferdymercury , I think I have found what is causing the error. I believe that [here](https://github.com/root-project/root/blob/47ab543e812553fd5404bd7e34e27b905a66e581/main/src/hadd.cxx#L546C12-L546C17) the `argc` argument must be replaced with `filesToProcess` when an indirect file is present. I made a quick test and it worked fine, but maybe it's better if you experts could take a closer look into that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:60,safety,error,error,60,"Hi @ferdymercury , I think I have found what is causing the error. I believe that [here](https://github.com/root-project/root/blob/47ab543e812553fd5404bd7e34e27b905a66e581/main/src/hadd.cxx#L546C12-L546C17) the `argc` argument must be replaced with `filesToProcess` when an indirect file is present. I made a quick test and it worked fine, but maybe it's better if you experts could take a closer look into that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:315,safety,test,test,315,"Hi @ferdymercury , I think I have found what is causing the error. I believe that [here](https://github.com/root-project/root/blob/47ab543e812553fd5404bd7e34e27b905a66e581/main/src/hadd.cxx#L546C12-L546C17) the `argc` argument must be replaced with `filesToProcess` when an indirect file is present. I made a quick test and it worked fine, but maybe it's better if you experts could take a closer look into that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:315,testability,test,test,315,"Hi @ferdymercury , I think I have found what is causing the error. I believe that [here](https://github.com/root-project/root/blob/47ab543e812553fd5404bd7e34e27b905a66e581/main/src/hadd.cxx#L546C12-L546C17) the `argc` argument must be replaced with `filesToProcess` when an indirect file is present. I made a quick test and it worked fine, but maybe it's better if you experts could take a closer look into that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:60,usability,error,error,60,"Hi @ferdymercury , I think I have found what is causing the error. I believe that [here](https://github.com/root-project/root/blob/47ab543e812553fd5404bd7e34e27b905a66e581/main/src/hadd.cxx#L546C12-L546C17) the `argc` argument must be replaced with `filesToProcess` when an indirect file is present. I made a quick test and it worked fine, but maybe it's better if you experts could take a closer look into that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:390,usability,close,closer,390,"Hi @ferdymercury , I think I have found what is causing the error. I believe that [here](https://github.com/root-project/root/blob/47ab543e812553fd5404bd7e34e27b905a66e581/main/src/hadd.cxx#L546C12-L546C17) the `argc` argument must be replaced with `filesToProcess` when an indirect file is present. I made a quick test and it worked fine, but maybe it's better if you experts could take a closer look into that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:18,deployability,patch,patch,18,"I just edited the patch, try again ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:18,safety,patch,patch,18,"I just edited the patch, try again ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:18,security,patch,patch,18,"I just edited the patch, try again ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:80,availability,avail,available,80,"It seems to work properly now, thanks! For which ROOT versions will this fix be available eventually? I was wondering if this modification could be pushed to the LCG release in `/cvmfs/sft.cern.ch` as well, but I don't know if this is feasible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:54,deployability,version,versions,54,"It seems to work properly now, thanks! For which ROOT versions will this fix be available eventually? I was wondering if this modification could be pushed to the LCG release in `/cvmfs/sft.cern.ch` as well, but I don't know if this is feasible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:166,deployability,releas,release,166,"It seems to work properly now, thanks! For which ROOT versions will this fix be available eventually? I was wondering if this modification could be pushed to the LCG release in `/cvmfs/sft.cern.ch` as well, but I don't know if this is feasible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:54,integrability,version,versions,54,"It seems to work properly now, thanks! For which ROOT versions will this fix be available eventually? I was wondering if this modification could be pushed to the LCG release in `/cvmfs/sft.cern.ch` as well, but I don't know if this is feasible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:90,integrability,event,eventually,90,"It seems to work properly now, thanks! For which ROOT versions will this fix be available eventually? I was wondering if this modification could be pushed to the LCG release in `/cvmfs/sft.cern.ch` as well, but I don't know if this is feasible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:54,modifiability,version,versions,54,"It seems to work properly now, thanks! For which ROOT versions will this fix be available eventually? I was wondering if this modification could be pushed to the LCG release in `/cvmfs/sft.cern.ch` as well, but I don't know if this is feasible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:80,reliability,availab,available,80,"It seems to work properly now, thanks! For which ROOT versions will this fix be available eventually? I was wondering if this modification could be pushed to the LCG release in `/cvmfs/sft.cern.ch` as well, but I don't know if this is feasible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:80,safety,avail,available,80,"It seems to work properly now, thanks! For which ROOT versions will this fix be available eventually? I was wondering if this modification could be pushed to the LCG release in `/cvmfs/sft.cern.ch` as well, but I don't know if this is feasible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:80,security,availab,available,80,"It seems to work properly now, thanks! For which ROOT versions will this fix be available eventually? I was wondering if this modification could be pushed to the LCG release in `/cvmfs/sft.cern.ch` as well, but I don't know if this is feasible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:126,security,modif,modification,126,"It seems to work properly now, thanks! For which ROOT versions will this fix be available eventually? I was wondering if this modification could be pushed to the LCG release in `/cvmfs/sft.cern.ch` as well, but I don't know if this is feasible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:27,deployability,patch,patch,27,"As soon as the PR with the patch is merged in master, you will find it in the LCG release of the following day (i.e. at `/cvmfs/sft.cern.ch/lcg/views/dev3/...`). Afterwards, you will find it in the next ROOT release 6.32 (a couple months from now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:82,deployability,releas,release,82,"As soon as the PR with the patch is merged in master, you will find it in the LCG release of the following day (i.e. at `/cvmfs/sft.cern.ch/lcg/views/dev3/...`). Afterwards, you will find it in the next ROOT release 6.32 (a couple months from now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:208,deployability,releas,release,208,"As soon as the PR with the patch is merged in master, you will find it in the LCG release of the following day (i.e. at `/cvmfs/sft.cern.ch/lcg/views/dev3/...`). Afterwards, you will find it in the next ROOT release 6.32 (a couple months from now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:224,integrability,coupl,couple,224,"As soon as the PR with the patch is merged in master, you will find it in the LCG release of the following day (i.e. at `/cvmfs/sft.cern.ch/lcg/views/dev3/...`). Afterwards, you will find it in the next ROOT release 6.32 (a couple months from now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:224,modifiability,coupl,couple,224,"As soon as the PR with the patch is merged in master, you will find it in the LCG release of the following day (i.e. at `/cvmfs/sft.cern.ch/lcg/views/dev3/...`). Afterwards, you will find it in the next ROOT release 6.32 (a couple months from now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:27,safety,patch,patch,27,"As soon as the PR with the patch is merged in master, you will find it in the LCG release of the following day (i.e. at `/cvmfs/sft.cern.ch/lcg/views/dev3/...`). Afterwards, you will find it in the next ROOT release 6.32 (a couple months from now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:27,security,patch,patch,27,"As soon as the PR with the patch is merged in master, you will find it in the LCG release of the following day (i.e. at `/cvmfs/sft.cern.ch/lcg/views/dev3/...`). Afterwards, you will find it in the next ROOT release 6.32 (a couple months from now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/issues/14910:224,testability,coupl,couple,224,"As soon as the PR with the patch is merged in master, you will find it in the LCG release of the following day (i.e. at `/cvmfs/sft.cern.ch/lcg/views/dev3/...`). Afterwards, you will find it in the next ROOT release 6.32 (a couple months from now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14910
https://github.com/root-project/root/pull/14912:34,deployability,contain,contains,34,@linev Please look at PR. This PR contains change for rendering of digits. The only commit it is not related to it is https://github.com/root-project/root/pull/14912/commits/8687719dcb3cf6b0d62147063d6b4d369ca8be17. I have added here a utility function to enable remote multiple connections. It is not used anywhere except in my local test macros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14912
https://github.com/root-project/root/pull/14912:316,safety,except,except,316,@linev Please look at PR. This PR contains change for rendering of digits. The only commit it is not related to it is https://github.com/root-project/root/pull/14912/commits/8687719dcb3cf6b0d62147063d6b4d369ca8be17. I have added here a utility function to enable remote multiple connections. It is not used anywhere except in my local test macros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14912
https://github.com/root-project/root/pull/14912:335,safety,test,test,335,@linev Please look at PR. This PR contains change for rendering of digits. The only commit it is not related to it is https://github.com/root-project/root/pull/14912/commits/8687719dcb3cf6b0d62147063d6b4d369ca8be17. I have added here a utility function to enable remote multiple connections. It is not used anywhere except in my local test macros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14912
https://github.com/root-project/root/pull/14912:335,testability,test,test,335,@linev Please look at PR. This PR contains change for rendering of digits. The only commit it is not related to it is https://github.com/root-project/root/pull/14912/commits/8687719dcb3cf6b0d62147063d6b4d369ca8be17. I have added here a utility function to enable remote multiple connections. It is not used anywhere except in my local test macros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14912
https://github.com/root-project/root/pull/14912:42,modifiability,pac,packed,42,@dpiparo In the RenderCore sources I have packed the MIT licence which the RenderCore project choose to have.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14912
https://github.com/root-project/root/pull/14912:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14912
https://github.com/root-project/root/pull/14912:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14912
https://github.com/root-project/root/pull/14912:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14912
https://github.com/root-project/root/pull/14913:213,performance,time,time,213,> I believe the changes make sense and the user reports correctness on the original issue. It would be nice to add the reproducer as a test (probably in roottest under `root/io/hadd`). This can be done at a later time. Added to https://github.com/root-project/root/issues/14319,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14913
https://github.com/root-project/root/pull/14913:135,safety,test,test,135,> I believe the changes make sense and the user reports correctness on the original issue. It would be nice to add the reproducer as a test (probably in roottest under `root/io/hadd`). This can be done at a later time. Added to https://github.com/root-project/root/issues/14319,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14913
https://github.com/root-project/root/pull/14913:135,testability,test,test,135,> I believe the changes make sense and the user reports correctness on the original issue. It would be nice to add the reproducer as a test (probably in roottest under `root/io/hadd`). This can be done at a later time. Added to https://github.com/root-project/root/issues/14319,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14913
https://github.com/root-project/root/pull/14913:43,usability,user,user,43,> I believe the changes make sense and the user reports correctness on the original issue. It would be nice to add the reproducer as a test (probably in roottest under `root/io/hadd`). This can be done at a later time. Added to https://github.com/root-project/root/issues/14319,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14913
https://github.com/root-project/root/pull/14913:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14913
https://github.com/root-project/root/pull/14915:24,deployability,patch,patch,24,@arizzi Thanks for this patch! Could you also add a test for this here https://github.com/root-project/root/blob/master/math/vecops/test/vecops_rvec.cxx ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:24,safety,patch,patch,24,@arizzi Thanks for this patch! Could you also add a test for this here https://github.com/root-project/root/blob/master/math/vecops/test/vecops_rvec.cxx ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:52,safety,test,test,52,@arizzi Thanks for this patch! Could you also add a test for this here https://github.com/root-project/root/blob/master/math/vecops/test/vecops_rvec.cxx ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:132,safety,test,test,132,@arizzi Thanks for this patch! Could you also add a test for this here https://github.com/root-project/root/blob/master/math/vecops/test/vecops_rvec.cxx ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:24,security,patch,patch,24,@arizzi Thanks for this patch! Could you also add a test for this here https://github.com/root-project/root/blob/master/math/vecops/test/vecops_rvec.cxx ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:52,testability,test,test,52,@arizzi Thanks for this patch! Could you also add a test for this here https://github.com/root-project/root/blob/master/math/vecops/test/vecops_rvec.cxx ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:132,testability,test,test,132,@arizzi Thanks for this patch! Could you also add a test for this here https://github.com/root-project/root/blob/master/math/vecops/test/vecops_rvec.cxx ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:72,deployability,version,version,72,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug. https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:216,deployability,patch,patch-,216,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug. https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:72,integrability,version,version,72,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug. https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:72,modifiability,version,version,72,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug. https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:9,safety,test,test,9,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug. https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:87,safety,test,test,87,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug. https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:134,safety,detect,detect,134,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug. https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:216,safety,patch,patch-,216,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug. https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:113,security,modif,modified,113,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug. https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:134,security,detect,detect,134,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug. https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:216,security,patch,patch-,216,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug. https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:4,testability,unit,unit,4,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug. https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:9,testability,test,test,9,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug. https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:87,testability,test,test,87,the unit test was already there but the bug was passing that particular version of the test by chance. it can be modified this way to detect the bug. https://github.com/root-project/root/compare/master...arizzi:root:patch-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:80,deployability,patch,patch-,80,"yes, good idea: thanks! Could you force push that change in your branch [arizzi:patch-1](https://github.com/arizzi/root/tree/patch-1)>? the PR will self update itself and I can rerun the tests before merging, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:125,deployability,patch,patch-,125,"yes, good idea: thanks! Could you force push that change in your branch [arizzi:patch-1](https://github.com/arizzi/root/tree/patch-1)>? the PR will self update itself and I can rerun the tests before merging, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:153,deployability,updat,update,153,"yes, good idea: thanks! Could you force push that change in your branch [arizzi:patch-1](https://github.com/arizzi/root/tree/patch-1)>? the PR will self update itself and I can rerun the tests before merging, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:80,safety,patch,patch-,80,"yes, good idea: thanks! Could you force push that change in your branch [arizzi:patch-1](https://github.com/arizzi/root/tree/patch-1)>? the PR will self update itself and I can rerun the tests before merging, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:125,safety,patch,patch-,125,"yes, good idea: thanks! Could you force push that change in your branch [arizzi:patch-1](https://github.com/arizzi/root/tree/patch-1)>? the PR will self update itself and I can rerun the tests before merging, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:153,safety,updat,update,153,"yes, good idea: thanks! Could you force push that change in your branch [arizzi:patch-1](https://github.com/arizzi/root/tree/patch-1)>? the PR will self update itself and I can rerun the tests before merging, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:187,safety,test,tests,187,"yes, good idea: thanks! Could you force push that change in your branch [arizzi:patch-1](https://github.com/arizzi/root/tree/patch-1)>? the PR will self update itself and I can rerun the tests before merging, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:80,security,patch,patch-,80,"yes, good idea: thanks! Could you force push that change in your branch [arizzi:patch-1](https://github.com/arizzi/root/tree/patch-1)>? the PR will self update itself and I can rerun the tests before merging, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:125,security,patch,patch-,125,"yes, good idea: thanks! Could you force push that change in your branch [arizzi:patch-1](https://github.com/arizzi/root/tree/patch-1)>? the PR will self update itself and I can rerun the tests before merging, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:153,security,updat,update,153,"yes, good idea: thanks! Could you force push that change in your branch [arizzi:patch-1](https://github.com/arizzi/root/tree/patch-1)>? the PR will self update itself and I can rerun the tests before merging, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:187,testability,test,tests,187,"yes, good idea: thanks! Could you force push that change in your branch [arizzi:patch-1](https://github.com/arizzi/root/tree/patch-1)>? the PR will self update itself and I can rerun the tests before merging, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:8,safety,Test,Tests,8,Thanks. Tests started!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/pull/14915:8,testability,Test,Tests,8,Thanks. Tests started!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14915
https://github.com/root-project/root/issues/14917:109,deployability,manag,manager,109,"Actually, there are also symlinks for cppyy with the same problem, they are just not reported by the package manager:. ```. # qlist root | grep libcppyy | grep site-packages. /usr/lib/python3.11/site-packages/libcppyy_backend3_11.so. /usr/lib/python3.11/site-packages/libcppyy3_11.so. ```. XRootD installs:. ```. # qlist xrootd | grep site-packages | grep \.so. /usr/lib/python3.11/site-packages/pyxrootd/client.cpython-311-x86_64-linux-gnu.so. ```. which can be imported as `from pyxrootd import client` from Python. Maybe the same approach would work for ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:297,deployability,instal,installs,297,"Actually, there are also symlinks for cppyy with the same problem, they are just not reported by the package manager:. ```. # qlist root | grep libcppyy | grep site-packages. /usr/lib/python3.11/site-packages/libcppyy_backend3_11.so. /usr/lib/python3.11/site-packages/libcppyy3_11.so. ```. XRootD installs:. ```. # qlist xrootd | grep site-packages | grep \.so. /usr/lib/python3.11/site-packages/pyxrootd/client.cpython-311-x86_64-linux-gnu.so. ```. which can be imported as `from pyxrootd import client` from Python. Maybe the same approach would work for ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:109,energy efficiency,manag,manager,109,"Actually, there are also symlinks for cppyy with the same problem, they are just not reported by the package manager:. ```. # qlist root | grep libcppyy | grep site-packages. /usr/lib/python3.11/site-packages/libcppyy_backend3_11.so. /usr/lib/python3.11/site-packages/libcppyy3_11.so. ```. XRootD installs:. ```. # qlist xrootd | grep site-packages | grep \.so. /usr/lib/python3.11/site-packages/pyxrootd/client.cpython-311-x86_64-linux-gnu.so. ```. which can be imported as `from pyxrootd import client` from Python. Maybe the same approach would work for ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:101,modifiability,pac,package,101,"Actually, there are also symlinks for cppyy with the same problem, they are just not reported by the package manager:. ```. # qlist root | grep libcppyy | grep site-packages. /usr/lib/python3.11/site-packages/libcppyy_backend3_11.so. /usr/lib/python3.11/site-packages/libcppyy3_11.so. ```. XRootD installs:. ```. # qlist xrootd | grep site-packages | grep \.so. /usr/lib/python3.11/site-packages/pyxrootd/client.cpython-311-x86_64-linux-gnu.so. ```. which can be imported as `from pyxrootd import client` from Python. Maybe the same approach would work for ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:165,modifiability,pac,packages,165,"Actually, there are also symlinks for cppyy with the same problem, they are just not reported by the package manager:. ```. # qlist root | grep libcppyy | grep site-packages. /usr/lib/python3.11/site-packages/libcppyy_backend3_11.so. /usr/lib/python3.11/site-packages/libcppyy3_11.so. ```. XRootD installs:. ```. # qlist xrootd | grep site-packages | grep \.so. /usr/lib/python3.11/site-packages/pyxrootd/client.cpython-311-x86_64-linux-gnu.so. ```. which can be imported as `from pyxrootd import client` from Python. Maybe the same approach would work for ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:200,modifiability,pac,packages,200,"Actually, there are also symlinks for cppyy with the same problem, they are just not reported by the package manager:. ```. # qlist root | grep libcppyy | grep site-packages. /usr/lib/python3.11/site-packages/libcppyy_backend3_11.so. /usr/lib/python3.11/site-packages/libcppyy3_11.so. ```. XRootD installs:. ```. # qlist xrootd | grep site-packages | grep \.so. /usr/lib/python3.11/site-packages/pyxrootd/client.cpython-311-x86_64-linux-gnu.so. ```. which can be imported as `from pyxrootd import client` from Python. Maybe the same approach would work for ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:259,modifiability,pac,packages,259,"Actually, there are also symlinks for cppyy with the same problem, they are just not reported by the package manager:. ```. # qlist root | grep libcppyy | grep site-packages. /usr/lib/python3.11/site-packages/libcppyy_backend3_11.so. /usr/lib/python3.11/site-packages/libcppyy3_11.so. ```. XRootD installs:. ```. # qlist xrootd | grep site-packages | grep \.so. /usr/lib/python3.11/site-packages/pyxrootd/client.cpython-311-x86_64-linux-gnu.so. ```. which can be imported as `from pyxrootd import client` from Python. Maybe the same approach would work for ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:340,modifiability,pac,packages,340,"Actually, there are also symlinks for cppyy with the same problem, they are just not reported by the package manager:. ```. # qlist root | grep libcppyy | grep site-packages. /usr/lib/python3.11/site-packages/libcppyy_backend3_11.so. /usr/lib/python3.11/site-packages/libcppyy3_11.so. ```. XRootD installs:. ```. # qlist xrootd | grep site-packages | grep \.so. /usr/lib/python3.11/site-packages/pyxrootd/client.cpython-311-x86_64-linux-gnu.so. ```. which can be imported as `from pyxrootd import client` from Python. Maybe the same approach would work for ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:387,modifiability,pac,packages,387,"Actually, there are also symlinks for cppyy with the same problem, they are just not reported by the package manager:. ```. # qlist root | grep libcppyy | grep site-packages. /usr/lib/python3.11/site-packages/libcppyy_backend3_11.so. /usr/lib/python3.11/site-packages/libcppyy3_11.so. ```. XRootD installs:. ```. # qlist xrootd | grep site-packages | grep \.so. /usr/lib/python3.11/site-packages/pyxrootd/client.cpython-311-x86_64-linux-gnu.so. ```. which can be imported as `from pyxrootd import client` from Python. Maybe the same approach would work for ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:109,safety,manag,manager,109,"Actually, there are also symlinks for cppyy with the same problem, they are just not reported by the package manager:. ```. # qlist root | grep libcppyy | grep site-packages. /usr/lib/python3.11/site-packages/libcppyy_backend3_11.so. /usr/lib/python3.11/site-packages/libcppyy3_11.so. ```. XRootD installs:. ```. # qlist xrootd | grep site-packages | grep \.so. /usr/lib/python3.11/site-packages/pyxrootd/client.cpython-311-x86_64-linux-gnu.so. ```. which can be imported as `from pyxrootd import client` from Python. Maybe the same approach would work for ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:41,safety,isol,isolating,41,I agree that this should be done. Better isolating ROOTs cppyy would also help us to fix this issue:. * https://github.com/root-project/root/issues/12635. So there is the potential to kill two birds with one stone here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:41,security,iso,isolating,41,I agree that this should be done. Better isolating ROOTs cppyy would also help us to fix this issue:. * https://github.com/root-project/root/issues/12635. So there is the potential to kill two birds with one stone here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:41,testability,isol,isolating,41,I agree that this should be done. Better isolating ROOTs cppyy would also help us to fix this issue:. * https://github.com/root-project/root/issues/12635. So there is the potential to kill two birds with one stone here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:74,usability,help,help,74,I agree that this should be done. Better isolating ROOTs cppyy would also help us to fix this issue:. * https://github.com/root-project/root/issues/12635. So there is the potential to kill two birds with one stone here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:461,deployability,instal,install,461,"Thank you again for you input @amadio! I have opened a PR to implement your suggestion: https://github.com/root-project/root/pull/15310. Concerning cppyy: it would be better to improve this upstream first. Maybe you can also open an issue there? https://github.com/wlav/cppyy. As someone who knows more about Gentoo than I, you are probably the better person to initiate that discussion on the cppyy side. For the record, that's how a virtualenv with just `pip install cppyy` looks like:. ```bash. ls /home/rembserj/.virtualenvs/cppyy/lib/python3.11/site-packages. ```. ```. cppyy libcppyy.cpython-311-x86_64-linux-gnu.so setuptools-69.5.1.virtualenv. cppyy-3.1.2.dist-info pip _virtualenv.pth. cppyy_backend pip-24.0.dist-info _virtualenv.py. cppyy_backend-1.15.2.dist-info pip-24.0.virtualenv wheel. cppyy_cling-6.30.0.dist-info pkg_resources wheel-0.43.0.dist-info. CPyCppyy-1.12.16.dist-info __pycache__ wheel-0.43.0.virtualenv. _distutils_hack setuptools. distutils-precedence.pth setuptools-69.5.1.dist-info. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:137,modifiability,Concern,Concerning,137,"Thank you again for you input @amadio! I have opened a PR to implement your suggestion: https://github.com/root-project/root/pull/15310. Concerning cppyy: it would be better to improve this upstream first. Maybe you can also open an issue there? https://github.com/wlav/cppyy. As someone who knows more about Gentoo than I, you are probably the better person to initiate that discussion on the cppyy side. For the record, that's how a virtualenv with just `pip install cppyy` looks like:. ```bash. ls /home/rembserj/.virtualenvs/cppyy/lib/python3.11/site-packages. ```. ```. cppyy libcppyy.cpython-311-x86_64-linux-gnu.so setuptools-69.5.1.virtualenv. cppyy-3.1.2.dist-info pip _virtualenv.pth. cppyy_backend pip-24.0.dist-info _virtualenv.py. cppyy_backend-1.15.2.dist-info pip-24.0.virtualenv wheel. cppyy_cling-6.30.0.dist-info pkg_resources wheel-0.43.0.dist-info. CPyCppyy-1.12.16.dist-info __pycache__ wheel-0.43.0.virtualenv. _distutils_hack setuptools. distutils-precedence.pth setuptools-69.5.1.dist-info. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:555,modifiability,pac,packages,555,"Thank you again for you input @amadio! I have opened a PR to implement your suggestion: https://github.com/root-project/root/pull/15310. Concerning cppyy: it would be better to improve this upstream first. Maybe you can also open an issue there? https://github.com/wlav/cppyy. As someone who knows more about Gentoo than I, you are probably the better person to initiate that discussion on the cppyy side. For the record, that's how a virtualenv with just `pip install cppyy` looks like:. ```bash. ls /home/rembserj/.virtualenvs/cppyy/lib/python3.11/site-packages. ```. ```. cppyy libcppyy.cpython-311-x86_64-linux-gnu.so setuptools-69.5.1.virtualenv. cppyy-3.1.2.dist-info pip _virtualenv.pth. cppyy_backend pip-24.0.dist-info _virtualenv.py. cppyy_backend-1.15.2.dist-info pip-24.0.virtualenv wheel. cppyy_cling-6.30.0.dist-info pkg_resources wheel-0.43.0.dist-info. CPyCppyy-1.12.16.dist-info __pycache__ wheel-0.43.0.virtualenv. _distutils_hack setuptools. distutils-precedence.pth setuptools-69.5.1.dist-info. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:24,safety,input,input,24,"Thank you again for you input @amadio! I have opened a PR to implement your suggestion: https://github.com/root-project/root/pull/15310. Concerning cppyy: it would be better to improve this upstream first. Maybe you can also open an issue there? https://github.com/wlav/cppyy. As someone who knows more about Gentoo than I, you are probably the better person to initiate that discussion on the cppyy side. For the record, that's how a virtualenv with just `pip install cppyy` looks like:. ```bash. ls /home/rembserj/.virtualenvs/cppyy/lib/python3.11/site-packages. ```. ```. cppyy libcppyy.cpython-311-x86_64-linux-gnu.so setuptools-69.5.1.virtualenv. cppyy-3.1.2.dist-info pip _virtualenv.pth. cppyy_backend pip-24.0.dist-info _virtualenv.py. cppyy_backend-1.15.2.dist-info pip-24.0.virtualenv wheel. cppyy_cling-6.30.0.dist-info pkg_resources wheel-0.43.0.dist-info. CPyCppyy-1.12.16.dist-info __pycache__ wheel-0.43.0.virtualenv. _distutils_hack setuptools. distutils-precedence.pth setuptools-69.5.1.dist-info. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:137,testability,Concern,Concerning,137,"Thank you again for you input @amadio! I have opened a PR to implement your suggestion: https://github.com/root-project/root/pull/15310. Concerning cppyy: it would be better to improve this upstream first. Maybe you can also open an issue there? https://github.com/wlav/cppyy. As someone who knows more about Gentoo than I, you are probably the better person to initiate that discussion on the cppyy side. For the record, that's how a virtualenv with just `pip install cppyy` looks like:. ```bash. ls /home/rembserj/.virtualenvs/cppyy/lib/python3.11/site-packages. ```. ```. cppyy libcppyy.cpython-311-x86_64-linux-gnu.so setuptools-69.5.1.virtualenv. cppyy-3.1.2.dist-info pip _virtualenv.pth. cppyy_backend pip-24.0.dist-info _virtualenv.py. cppyy_backend-1.15.2.dist-info pip-24.0.virtualenv wheel. cppyy_cling-6.30.0.dist-info pkg_resources wheel-0.43.0.dist-info. CPyCppyy-1.12.16.dist-info __pycache__ wheel-0.43.0.virtualenv. _distutils_hack setuptools. distutils-precedence.pth setuptools-69.5.1.dist-info. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:24,usability,input,input,24,"Thank you again for you input @amadio! I have opened a PR to implement your suggestion: https://github.com/root-project/root/pull/15310. Concerning cppyy: it would be better to improve this upstream first. Maybe you can also open an issue there? https://github.com/wlav/cppyy. As someone who knows more about Gentoo than I, you are probably the better person to initiate that discussion on the cppyy side. For the record, that's how a virtualenv with just `pip install cppyy` looks like:. ```bash. ls /home/rembserj/.virtualenvs/cppyy/lib/python3.11/site-packages. ```. ```. cppyy libcppyy.cpython-311-x86_64-linux-gnu.so setuptools-69.5.1.virtualenv. cppyy-3.1.2.dist-info pip _virtualenv.pth. cppyy_backend pip-24.0.dist-info _virtualenv.py. cppyy_backend-1.15.2.dist-info pip-24.0.virtualenv wheel. cppyy_cling-6.30.0.dist-info pkg_resources wheel-0.43.0.dist-info. CPyCppyy-1.12.16.dist-info __pycache__ wheel-0.43.0.virtualenv. _distutils_hack setuptools. distutils-precedence.pth setuptools-69.5.1.dist-info. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/issues/14917:352,usability,person,person,352,"Thank you again for you input @amadio! I have opened a PR to implement your suggestion: https://github.com/root-project/root/pull/15310. Concerning cppyy: it would be better to improve this upstream first. Maybe you can also open an issue there? https://github.com/wlav/cppyy. As someone who knows more about Gentoo than I, you are probably the better person to initiate that discussion on the cppyy side. For the record, that's how a virtualenv with just `pip install cppyy` looks like:. ```bash. ls /home/rembserj/.virtualenvs/cppyy/lib/python3.11/site-packages. ```. ```. cppyy libcppyy.cpython-311-x86_64-linux-gnu.so setuptools-69.5.1.virtualenv. cppyy-3.1.2.dist-info pip _virtualenv.pth. cppyy_backend pip-24.0.dist-info _virtualenv.py. cppyy_backend-1.15.2.dist-info pip-24.0.virtualenv wheel. cppyy_cling-6.30.0.dist-info pkg_resources wheel-0.43.0.dist-info. CPyCppyy-1.12.16.dist-info __pycache__ wheel-0.43.0.virtualenv. _distutils_hack setuptools. distutils-precedence.pth setuptools-69.5.1.dist-info. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14917
https://github.com/root-project/root/pull/14920:34,safety,test,test,34,Looks like the machine we want to test on has died.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:34,testability,test,test,34,Looks like the machine we want to test on has died.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:66,energy efficiency,core,core,66,"I tested on my setup and I still need to have:. ```. diff --git a/core/CMakeLists.txt b/core/CMakeLists.txt. index 44f26c73ff..5f428fdc76 100644. --- a/core/CMakeLists.txt. +++ b/core/CMakeLists.txt. @@ -120,6 +120,9 @@ if (runtime_cxxmodules). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Foundation_Stage1_NoRTTI""). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Foundation_C""). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Rtypes""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_list""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_vector""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_condition_variable""). endif(runtime_cxxmodules). ```. on top of current master and your fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:88,energy efficiency,core,core,88,"I tested on my setup and I still need to have:. ```. diff --git a/core/CMakeLists.txt b/core/CMakeLists.txt. index 44f26c73ff..5f428fdc76 100644. --- a/core/CMakeLists.txt. +++ b/core/CMakeLists.txt. @@ -120,6 +120,9 @@ if (runtime_cxxmodules). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Foundation_Stage1_NoRTTI""). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Foundation_C""). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Rtypes""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_list""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_vector""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_condition_variable""). endif(runtime_cxxmodules). ```. on top of current master and your fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:152,energy efficiency,core,core,152,"I tested on my setup and I still need to have:. ```. diff --git a/core/CMakeLists.txt b/core/CMakeLists.txt. index 44f26c73ff..5f428fdc76 100644. --- a/core/CMakeLists.txt. +++ b/core/CMakeLists.txt. @@ -120,6 +120,9 @@ if (runtime_cxxmodules). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Foundation_Stage1_NoRTTI""). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Foundation_C""). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Rtypes""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_list""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_vector""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_condition_variable""). endif(runtime_cxxmodules). ```. on top of current master and your fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:179,energy efficiency,core,core,179,"I tested on my setup and I still need to have:. ```. diff --git a/core/CMakeLists.txt b/core/CMakeLists.txt. index 44f26c73ff..5f428fdc76 100644. --- a/core/CMakeLists.txt. +++ b/core/CMakeLists.txt. @@ -120,6 +120,9 @@ if (runtime_cxxmodules). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Foundation_Stage1_NoRTTI""). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Foundation_C""). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Rtypes""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_list""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_vector""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_condition_variable""). endif(runtime_cxxmodules). ```. on top of current master and your fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:708,energy efficiency,current,current,708,"I tested on my setup and I still need to have:. ```. diff --git a/core/CMakeLists.txt b/core/CMakeLists.txt. index 44f26c73ff..5f428fdc76 100644. --- a/core/CMakeLists.txt. +++ b/core/CMakeLists.txt. @@ -120,6 +120,9 @@ if (runtime_cxxmodules). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Foundation_Stage1_NoRTTI""). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Foundation_C""). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Rtypes""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_list""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_vector""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_condition_variable""). endif(runtime_cxxmodules). ```. on top of current master and your fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2,safety,test,tested,2,"I tested on my setup and I still need to have:. ```. diff --git a/core/CMakeLists.txt b/core/CMakeLists.txt. index 44f26c73ff..5f428fdc76 100644. --- a/core/CMakeLists.txt. +++ b/core/CMakeLists.txt. @@ -120,6 +120,9 @@ if (runtime_cxxmodules). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Foundation_Stage1_NoRTTI""). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Foundation_C""). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Rtypes""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_list""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_vector""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_condition_variable""). endif(runtime_cxxmodules). ```. on top of current master and your fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2,testability,test,tested,2,"I tested on my setup and I still need to have:. ```. diff --git a/core/CMakeLists.txt b/core/CMakeLists.txt. index 44f26c73ff..5f428fdc76 100644. --- a/core/CMakeLists.txt. +++ b/core/CMakeLists.txt. @@ -120,6 +120,9 @@ if (runtime_cxxmodules). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Foundation_Stage1_NoRTTI""). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Foundation_C""). list(APPEND core_implicit_modules ""-mByproduct"" ""ROOT_Rtypes""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_list""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_vector""). + list(APPEND core_implicit_modules ""-mByproduct"" ""std_condition_variable""). endif(runtime_cxxmodules). ```. on top of current master and your fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:21,deployability,build,building,21,"I also have troubles building SOFIE, but that's probably unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:60,deployability,patch,patch,60,Did you get a std.pcm file in the lib folder? I suspect the patch did not trigger for your platform. What’s your sdk version?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:117,deployability,version,version,117,Did you get a std.pcm file in the lib folder? I suspect the patch did not trigger for your platform. What’s your sdk version?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:117,integrability,version,version,117,Did you get a std.pcm file in the lib folder? I suspect the patch did not trigger for your platform. What’s your sdk version?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:91,interoperability,platform,platform,91,Did you get a std.pcm file in the lib folder? I suspect the patch did not trigger for your platform. What’s your sdk version?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:117,modifiability,version,version,117,Did you get a std.pcm file in the lib folder? I suspect the patch did not trigger for your platform. What’s your sdk version?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:60,safety,patch,patch,60,Did you get a std.pcm file in the lib folder? I suspect the patch did not trigger for your platform. What’s your sdk version?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:60,security,patch,patch,60,Did you get a std.pcm file in the lib folder? I suspect the patch did not trigger for your platform. What’s your sdk version?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:26,deployability,build,building,26,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:132,interoperability,Platform,Platforms,132,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:149,interoperability,platform,platform,149,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:306,interoperability,Platform,Platforms,306,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:323,interoperability,platform,platform,323,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:453,interoperability,Platform,Platforms,453,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:470,interoperability,platform,platform,470,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:617,interoperability,Platform,Platforms,617,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:634,interoperability,platform,platform,634,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:742,interoperability,Platform,Platforms,742,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:759,interoperability,platform,platform,759,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:985,interoperability,Platform,Platforms,985,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1002,interoperability,platform,platform,1002, in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1131,interoperability,Platform,Platforms,1131,forms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1148,interoperability,platform,platform,1148,tform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1270,interoperability,Platform,Platforms,1270,s/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1287,interoperability,platform,platform,1287,ents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIB,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1414,interoperability,Platform,Platforms,1414,ions/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1431,interoperability,platform,platform,1431,ontents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1584,interoperability,Platform,Platforms,1584,code.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1601,interoperability,platform,platform,1601,s/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1755,interoperability,Platform,Platforms,1755,latform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1772,interoperability,platform,platform,1772,r/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Application,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1920,interoperability,Platform,Platforms,1920,LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1937,interoperability,platform,platform,1937,=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2070,interoperability,Platform,Platforms,2070,DE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2087,interoperability,platform,platform,2087,plications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2214,interoperability,Platform,Platforms,2214,ILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2231,interoperability,platform,platform,2231,tions/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2356,interoperability,Platform,Platforms,2356,_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platfo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2373,interoperability,platform,platform,2373,cations/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDK,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2499,interoperability,Platform,Platforms,2499,ramework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sd,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2516,interoperability,platform,platform,2516,_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2652,interoperability,Platform,Platforms,2652,ameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Deve,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2669,interoperability,platform,platform,2669,framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2807,interoperability,Platform,Platforms,2807,ystem/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_D,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2824,interoperability,platform,platform,2824,ameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:IN,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2971,interoperability,Platform,Platforms,2971,usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framewor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2988,interoperability,platform,platform,2988,s.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3173,interoperability,Platform,Platforms,3173,ations/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3190,interoperability,platform,platform,3190,/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3338,interoperability,Platform,Platforms,3338,ts/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3355,interoperability,platform,platform,3355,tforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/App,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3450,interoperability,Platform,Platforms,3450,=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/u,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3467,interoperability,platform,platform,3467,code.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3627,interoperability,Platform,Platforms,3627,/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3644,interoperability,platform,platform,3644,per/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3879,interoperability,Platform,Platforms,3879,FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3896,interoperability,platform,platform,3896,SAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/includ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4022,interoperability,Platform,Platforms,4022,System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTE,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4039,interoperability,platform,platform,4039,rameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4223,interoperability,Platform,Platforms,4223,/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4240,interoperability,platform,platform,4240,)]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDED,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4398,interoperability,Platform,Platforms,4398,de][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4415,interoperability,platform,platform,4415,s/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. ```. Weirdl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4515,interoperability,Platform,Platforms,4515,t.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. ```. Weirdly enough there is some MacOS12.sdk which gets picked up for some reason. I also confirm that `std.pcm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4532,interoperability,platform,platform,4532, FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. ```. Weirdly enough there is some MacOS12.sdk which gets picked up for some reason. I also confirm that `std.pcm` is not there:.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:113,performance,Content,Contents,113,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:287,performance,Content,Contents,287,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:434,performance,Content,Contents,434,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:598,performance,Content,Contents,598,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:723,performance,Content,Contents,723,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:966,performance,Content,Contents,966,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1112,performance,Content,Contents,1112,tents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1251,performance,Content,Contents,1251,ILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1395,performance,Content,Contents,1395,E_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/Ma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1565,performance,Content,Contents,1565,PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1736,performance,Content,Contents,1736,r/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:1901,performance,Content,Contents,1901,de/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2051,performance,Content,Contents,2051,2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Ac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2195,performance,Content,Contents,2195, LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2337,performance,Content,Contents,2337,.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Pla,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2480,performance,Content,Contents,2480,/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Develope,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2633,performance,Content,Contents,2633,dk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2788,performance,Content,Contents,2788,DKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:2952,performance,Content,Contents,2952,SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. Terminfo_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Framew,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3154,performance,Content,Contents,3154,UDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3319,performance,Content,Contents,3319,ons/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd. pkgcfg_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3431,performance,Content,Contents,3431,g_lib_GSL_m:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libm.tbd. pkgcfg_lib_PC_LIBEDIT_edit:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/S,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3608,performance,Content,Contents,3608,plications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3860,performance,Content,Contents,3860,sr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4003,performance,Content,Contents,4003,SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4204,performance,Content,Contents,4204,/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4379,performance,Content,Contents,4379,SX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTool,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4496,performance,Content,Contents,4496,4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. ```. Weirdly enough there is some MacOS12.sdk which gets picked up for some reason. I also c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:536,usability,indicat,indicated,536,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:861,usability,Command,CommandLineTools,861,I have in CMakeCache.txt (building from scratch):. ```. BLAS_Accelerate_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework. BLAS_blas_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libblas.tbd. Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. // inside the indicated SDK. CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk. DL_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libdl.tbd. LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2. LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. LibEdit_INCLUDE_DIRS:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include. LibEdit_LIBRARIES:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd. OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework. TERMINFO_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:3723,usability,Command,CommandLineTools,3723,gcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd. FIND_PACKAGE_MESSAGE_DETAILS_BLAS:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/Accelerate.framework][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][v()]. FIND_PACKAGE_MESSAGE_DETAILS_LibEdit:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libedit.tbd][v2.11()]. FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTE,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4648,usability,Command,CommandLineTools,4648,".platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. ```. Weirdly enough there is some MacOS12.sdk which gets picked up for some reason. I also confirm that `std.pcm` is not there:. ```. → find . -name ""std.pcm"" | wc -l. 0. ```. however:. ```. → find . -name ""std*.pcm"" | wc -l. 927. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4755,usability,Command,CommandLineTools,4755,".platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. ```. Weirdly enough there is some MacOS12.sdk which gets picked up for some reason. I also confirm that `std.pcm` is not there:. ```. → find . -name ""std.pcm"" | wc -l. 0. ```. however:. ```. → find . -name ""std*.pcm"" | wc -l. 927. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4855,usability,Command,CommandLineTools,4855,".platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. ```. Weirdly enough there is some MacOS12.sdk which gets picked up for some reason. I also confirm that `std.pcm` is not there:. ```. → find . -name ""std.pcm"" | wc -l. 0. ```. however:. ```. → find . -name ""std*.pcm"" | wc -l. 927. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:4958,usability,Command,CommandLineTools,4958,".platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. ```. Weirdly enough there is some MacOS12.sdk which gets picked up for some reason. I also confirm that `std.pcm` is not there:. ```. → find . -name ""std.pcm"" | wc -l. 0. ```. however:. ```. → find . -name ""std*.pcm"" | wc -l. 927. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:5053,usability,Command,CommandLineTools,5053,".platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. ```. Weirdly enough there is some MacOS12.sdk which gets picked up for some reason. I also confirm that `std.pcm` is not there:. ```. → find . -name ""std.pcm"" | wc -l. 0. ```. however:. ```. → find . -name ""std*.pcm"" | wc -l. 927. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:5169,usability,Command,CommandLineTools,5169,".platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. ```. Weirdly enough there is some MacOS12.sdk which gets picked up for some reason. I also confirm that `std.pcm` is not there:. ```. → find . -name ""std.pcm"" | wc -l. 0. ```. however:. ```. → find . -name ""std*.pcm"" | wc -l. 927. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:5275,usability,Command,CommandLineTools,5275,".platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. ```. Weirdly enough there is some MacOS12.sdk which gets picked up for some reason. I also confirm that `std.pcm` is not there:. ```. → find . -name ""std.pcm"" | wc -l. 0. ```. however:. ```. → find . -name ""std*.pcm"" | wc -l. 927. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:5368,usability,Command,CommandLineTools,5368,".platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. ```. Weirdly enough there is some MacOS12.sdk which gets picked up for some reason. I also confirm that `std.pcm` is not there:. ```. → find . -name ""std.pcm"" | wc -l. 0. ```. however:. ```. → find . -name ""std*.pcm"" | wc -l. 927. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:5499,usability,confirm,confirm,5499,".platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libxml2.tbd][/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2][v2.9.4()]. FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/System/Library/Frameworks/OpenGL.framework][c ][v()]. FIND_PACKAGE_MESSAGE_DETAILS_Terminfo:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libcurses.tbd][1][v()]. FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/lib/libz.tbd][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include][c ][v1.2.12()]. PC_LIBEDIT_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBEDIT_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=-I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBEDIT_STATIC_INCLUDE_DIRS:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline. PC_LIBXML_INCLUDEDIR:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include. PC_LIBXML_PREFIX:INTERNAL=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr. ```. Weirdly enough there is some MacOS12.sdk which gets picked up for some reason. I also confirm that `std.pcm` is not there:. ```. → find . -name ""std.pcm"" | wc -l. 0. ```. however:. ```. → find . -name ""std*.pcm"" | wc -l. 927. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:15,deployability,patch,patching,15,"I tried monkey patching CMakeCache.txt, forcing MacOSX14.4.sdk everywhere. It still fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:84,deployability,fail,fails,84,"I tried monkey patching CMakeCache.txt, forcing MacOSX14.4.sdk everywhere. It still fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:84,reliability,fail,fails,84,"I tried monkey patching CMakeCache.txt, forcing MacOSX14.4.sdk everywhere. It still fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:15,safety,patch,patching,15,"I tried monkey patching CMakeCache.txt, forcing MacOSX14.4.sdk everywhere. It still fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:15,security,patch,patching,15,"I tried monkey patching CMakeCache.txt, forcing MacOSX14.4.sdk everywhere. It still fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:14,deployability,updat,update,14,Now trying to update to macOS 14.4...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:14,safety,updat,update,14,Now trying to update to macOS 14.4...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:14,security,updat,update,14,Now trying to update to macOS 14.4...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:76,deployability,updat,updated,76,"Indeed, it looks like ROOT was still behaving in the wrong way if XCode was updated to 15.3 but macOS was still 14.2.1. Is that expected?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:76,safety,updat,updated,76,"Indeed, it looks like ROOT was still behaving in the wrong way if XCode was updated to 15.3 but macOS was still 14.2.1. Is that expected?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:76,security,updat,updated,76,"Indeed, it looks like ROOT was still behaving in the wrong way if XCode was updated to 15.3 but macOS was still 14.2.1. Is that expected?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:37,usability,behavi,behaving,37,"Indeed, it looks like ROOT was still behaving in the wrong way if XCode was updated to 15.3 but macOS was still 14.2.1. Is that expected?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:114,usability,behavi,behaviour,114,is this https://github.com/root-project/root/actions/runs/8223087282/job/22485345002?pr=14926 the reason for this behaviour? It's not 14.3 but (also) xcode 15.3 the issue here? @vgvassilev,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:222,deployability,version,version,222,> is this https://github.com/root-project/root/actions/runs/8223087282/job/22485345002?pr=14926 the reason for this behaviour? It's not 14.3 but (also) xcode 15.3 the issue here? @vgvassilev. I think the PR checks the sdk version. I will need a machine to debug if something does not work there..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:222,integrability,version,version,222,> is this https://github.com/root-project/root/actions/runs/8223087282/job/22485345002?pr=14926 the reason for this behaviour? It's not 14.3 but (also) xcode 15.3 the issue here? @vgvassilev. I think the PR checks the sdk version. I will need a machine to debug if something does not work there..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:222,modifiability,version,version,222,> is this https://github.com/root-project/root/actions/runs/8223087282/job/22485345002?pr=14926 the reason for this behaviour? It's not 14.3 but (also) xcode 15.3 the issue here? @vgvassilev. I think the PR checks the sdk version. I will need a machine to debug if something does not work there..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:275,reliability,doe,does,275,> is this https://github.com/root-project/root/actions/runs/8223087282/job/22485345002?pr=14926 the reason for this behaviour? It's not 14.3 but (also) xcode 15.3 the issue here? @vgvassilev. I think the PR checks the sdk version. I will need a machine to debug if something does not work there..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:116,usability,behavi,behaviour,116,> is this https://github.com/root-project/root/actions/runs/8223087282/job/22485345002?pr=14926 the reason for this behaviour? It's not 14.3 but (also) xcode 15.3 the issue here? @vgvassilev. I think the PR checks the sdk version. I will need a machine to debug if something does not work there..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:32,deployability,version,version,32,Does it check the sdk or the OS version? . ```. if (CMAKE_SYSTEM_NAME MATCHES Darwin AND MACOSX_VERSION VERSION_GREATER 14.3). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:32,integrability,version,version,32,Does it check the sdk or the OS version? . ```. if (CMAKE_SYSTEM_NAME MATCHES Darwin AND MACOSX_VERSION VERSION_GREATER 14.3). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:32,modifiability,version,version,32,Does it check the sdk or the OS version? . ```. if (CMAKE_SYSTEM_NAME MATCHES Darwin AND MACOSX_VERSION VERSION_GREATER 14.3). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/pull/14920:0,reliability,Doe,Does,0,Does it check the sdk or the OS version? . ```. if (CMAKE_SYSTEM_NAME MATCHES Darwin AND MACOSX_VERSION VERSION_GREATER 14.3). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14920
https://github.com/root-project/root/issues/14921:37,deployability,modul,module,37,A workaround is to configure without module support: `-Druntime_cxxmodule=OFF`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14921
https://github.com/root-project/root/issues/14921:19,integrability,configur,configure,19,A workaround is to configure without module support: `-Druntime_cxxmodule=OFF`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14921
https://github.com/root-project/root/issues/14921:19,modifiability,configur,configure,19,A workaround is to configure without module support: `-Druntime_cxxmodule=OFF`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14921
https://github.com/root-project/root/issues/14921:37,modifiability,modul,module,37,A workaround is to configure without module support: `-Druntime_cxxmodule=OFF`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14921
https://github.com/root-project/root/issues/14921:37,safety,modul,module,37,A workaround is to configure without module support: `-Druntime_cxxmodule=OFF`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14921
https://github.com/root-project/root/issues/14921:19,security,configur,configure,19,A workaround is to configure without module support: `-Druntime_cxxmodule=OFF`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14921
https://github.com/root-project/root/issues/14921:44,usability,support,support,44,A workaround is to configure without module support: `-Druntime_cxxmodule=OFF`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14921
https://github.com/root-project/root/pull/14922:44,reliability,pra,practically,44,Apologies for being blunt here but that has practically no impact. We should make sure we do not have `using namespace std` in header files because that can break code silently. What's probably worse is that we do `using namespace std` when starting ROOT. We have tried to work on this and remove/deprecate that behavior but we did not have enough bandwidth. Maybe it's worth having a look here: https://github.com/root-project/root/pull/2561,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14922
https://github.com/root-project/root/pull/14922:312,usability,behavi,behavior,312,Apologies for being blunt here but that has practically no impact. We should make sure we do not have `using namespace std` in header files because that can break code silently. What's probably worse is that we do `using namespace std` when starting ROOT. We have tried to work on this and remove/deprecate that behavior but we did not have enough bandwidth. Maybe it's worth having a look here: https://github.com/root-project/root/pull/2561,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14922
https://github.com/root-project/root/pull/14922:114,interoperability,standard,standard,114,"Thanks for the review. Yes, I agree that this has no impact. As said, it was more about aligning with that coding standard in the very few places that are missing in ROOT (apart from the more challenging step you mention in the interpreter). A bit like clang format, it has no impact but enforces good practices for the future. That being said, I am happy to close this PR if you think this change is pedantic :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14922
https://github.com/root-project/root/pull/14922:259,interoperability,format,format,259,"Thanks for the review. Yes, I agree that this has no impact. As said, it was more about aligning with that coding standard in the very few places that are missing in ROOT (apart from the more challenging step you mention in the interpreter). A bit like clang format, it has no impact but enforces good practices for the future. That being said, I am happy to close this PR if you think this change is pedantic :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14922
https://github.com/root-project/root/pull/14922:302,reliability,pra,practices,302,"Thanks for the review. Yes, I agree that this has no impact. As said, it was more about aligning with that coding standard in the very few places that are missing in ROOT (apart from the more challenging step you mention in the interpreter). A bit like clang format, it has no impact but enforces good practices for the future. That being said, I am happy to close this PR if you think this change is pedantic :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14922
https://github.com/root-project/root/pull/14922:15,safety,review,review,15,"Thanks for the review. Yes, I agree that this has no impact. As said, it was more about aligning with that coding standard in the very few places that are missing in ROOT (apart from the more challenging step you mention in the interpreter). A bit like clang format, it has no impact but enforces good practices for the future. That being said, I am happy to close this PR if you think this change is pedantic :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14922
https://github.com/root-project/root/pull/14922:15,testability,review,review,15,"Thanks for the review. Yes, I agree that this has no impact. As said, it was more about aligning with that coding standard in the very few places that are missing in ROOT (apart from the more challenging step you mention in the interpreter). A bit like clang format, it has no impact but enforces good practices for the future. That being said, I am happy to close this PR if you think this change is pedantic :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14922
https://github.com/root-project/root/pull/14922:359,usability,close,close,359,"Thanks for the review. Yes, I agree that this has no impact. As said, it was more about aligning with that coding standard in the very few places that are missing in ROOT (apart from the more challenging step you mention in the interpreter). A bit like clang format, it has no impact but enforces good practices for the future. That being said, I am happy to close this PR if you think this change is pedantic :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14922
https://github.com/root-project/root/pull/14922:146,performance,time,time,146,"> That being said, I am happy to close this PR if you think this change is pedantic :). I was not suggesting that. I offered something where your time and efforts will make greater impact.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14922
https://github.com/root-project/root/pull/14922:33,usability,close,close,33,"> That being said, I am happy to close this PR if you think this change is pedantic :). I was not suggesting that. I offered something where your time and efforts will make greater impact.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14922
https://github.com/root-project/root/pull/14929:80,deployability,version,version,80,"Hi @vepadulano , I just built the corresponding documentation of this new TFile version. It uses the tag `<details>` which is not used in ROOT except in a few places in `interpreter/llvm-project/clang/www/`. This tag allows to hide a part of the doc and make it visible only when clicking on the text given in `<summary>`. The other new bits are the two `\sa` which seem fine too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14929
https://github.com/root-project/root/pull/14929:80,integrability,version,version,80,"Hi @vepadulano , I just built the corresponding documentation of this new TFile version. It uses the tag `<details>` which is not used in ROOT except in a few places in `interpreter/llvm-project/clang/www/`. This tag allows to hide a part of the doc and make it visible only when clicking on the text given in `<summary>`. The other new bits are the two `\sa` which seem fine too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14929
https://github.com/root-project/root/pull/14929:80,modifiability,version,version,80,"Hi @vepadulano , I just built the corresponding documentation of this new TFile version. It uses the tag `<details>` which is not used in ROOT except in a few places in `interpreter/llvm-project/clang/www/`. This tag allows to hide a part of the doc and make it visible only when clicking on the text given in `<summary>`. The other new bits are the two `\sa` which seem fine too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14929
https://github.com/root-project/root/pull/14929:143,safety,except,except,143,"Hi @vepadulano , I just built the corresponding documentation of this new TFile version. It uses the tag `<details>` which is not used in ROOT except in a few places in `interpreter/llvm-project/clang/www/`. This tag allows to hide a part of the doc and make it visible only when clicking on the text given in `<summary>`. The other new bits are the two `\sa` which seem fine too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14929
https://github.com/root-project/root/pull/14929:48,usability,document,documentation,48,"Hi @vepadulano , I just built the corresponding documentation of this new TFile version. It uses the tag `<details>` which is not used in ROOT except in a few places in `interpreter/llvm-project/clang/www/`. This tag allows to hide a part of the doc and make it visible only when clicking on the text given in `<summary>`. The other new bits are the two `\sa` which seem fine too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14929
https://github.com/root-project/root/pull/14929:105,reliability,doe,does,105,"@couet It seems the root-makedoc-master bot is dead, as these changes are not yet visible in the Web? Or does it only rebuild weekly? thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14929
https://github.com/root-project/root/pull/14930:65,safety,test,tests,65,I can't figure out which is the class giving the problems in the tests. Candidates could be:. ```. TRefTable. TRefCnt. TRefArrayProxy. ```. or that somehow the `type` pointer is not correct. I'll try now with TRefArrayProxy,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:65,testability,test,tests,65,I can't figure out which is the class giving the problems in the tests. Candidates could be:. ```. TRefTable. TRefCnt. TRefArrayProxy. ```. or that somehow the `type` pointer is not correct. I'll try now with TRefArrayProxy,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:41,availability,failur,failure,41,"> No luck. Are you able to reproduce the failure locally? If not, you can use something like:. ```. //check if element is a TRef or TRefArray. const bool originalTest = (strncmp(fTypeName.Data(),""TRef"",4) != 0);. TClass* const type = GetClassPointer();. const bool newTest = (!type || !(type->InheritsFrom(TRef::Class()) || type->InheritsFrom(TRefArray::Class()) || type->InheritsFrom(""TVirtualRefProxy"")). if (originalTest != newTest). 		Fatal(""GetExecID"", ""Problem with type %s original test %d, new test %d\n"", . fTypeName.Data(), originalTest, newTest);. if (originalTest) return 0;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:41,deployability,fail,failure,41,"> No luck. Are you able to reproduce the failure locally? If not, you can use something like:. ```. //check if element is a TRef or TRefArray. const bool originalTest = (strncmp(fTypeName.Data(),""TRef"",4) != 0);. TClass* const type = GetClassPointer();. const bool newTest = (!type || !(type->InheritsFrom(TRef::Class()) || type->InheritsFrom(TRefArray::Class()) || type->InheritsFrom(""TVirtualRefProxy"")). if (originalTest != newTest). 		Fatal(""GetExecID"", ""Problem with type %s original test %d, new test %d\n"", . fTypeName.Data(), originalTest, newTest);. if (originalTest) return 0;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:293,modifiability,Inherit,InheritsFrom,293,"> No luck. Are you able to reproduce the failure locally? If not, you can use something like:. ```. //check if element is a TRef or TRefArray. const bool originalTest = (strncmp(fTypeName.Data(),""TRef"",4) != 0);. TClass* const type = GetClassPointer();. const bool newTest = (!type || !(type->InheritsFrom(TRef::Class()) || type->InheritsFrom(TRefArray::Class()) || type->InheritsFrom(""TVirtualRefProxy"")). if (originalTest != newTest). 		Fatal(""GetExecID"", ""Problem with type %s original test %d, new test %d\n"", . fTypeName.Data(), originalTest, newTest);. if (originalTest) return 0;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:330,modifiability,Inherit,InheritsFrom,330,"> No luck. Are you able to reproduce the failure locally? If not, you can use something like:. ```. //check if element is a TRef or TRefArray. const bool originalTest = (strncmp(fTypeName.Data(),""TRef"",4) != 0);. TClass* const type = GetClassPointer();. const bool newTest = (!type || !(type->InheritsFrom(TRef::Class()) || type->InheritsFrom(TRefArray::Class()) || type->InheritsFrom(""TVirtualRefProxy"")). if (originalTest != newTest). 		Fatal(""GetExecID"", ""Problem with type %s original test %d, new test %d\n"", . fTypeName.Data(), originalTest, newTest);. if (originalTest) return 0;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:372,modifiability,Inherit,InheritsFrom,372,"> No luck. Are you able to reproduce the failure locally? If not, you can use something like:. ```. //check if element is a TRef or TRefArray. const bool originalTest = (strncmp(fTypeName.Data(),""TRef"",4) != 0);. TClass* const type = GetClassPointer();. const bool newTest = (!type || !(type->InheritsFrom(TRef::Class()) || type->InheritsFrom(TRefArray::Class()) || type->InheritsFrom(""TVirtualRefProxy"")). if (originalTest != newTest). 		Fatal(""GetExecID"", ""Problem with type %s original test %d, new test %d\n"", . fTypeName.Data(), originalTest, newTest);. if (originalTest) return 0;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:41,performance,failur,failure,41,"> No luck. Are you able to reproduce the failure locally? If not, you can use something like:. ```. //check if element is a TRef or TRefArray. const bool originalTest = (strncmp(fTypeName.Data(),""TRef"",4) != 0);. TClass* const type = GetClassPointer();. const bool newTest = (!type || !(type->InheritsFrom(TRef::Class()) || type->InheritsFrom(TRefArray::Class()) || type->InheritsFrom(""TVirtualRefProxy"")). if (originalTest != newTest). 		Fatal(""GetExecID"", ""Problem with type %s original test %d, new test %d\n"", . fTypeName.Data(), originalTest, newTest);. if (originalTest) return 0;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:41,reliability,fail,failure,41,"> No luck. Are you able to reproduce the failure locally? If not, you can use something like:. ```. //check if element is a TRef or TRefArray. const bool originalTest = (strncmp(fTypeName.Data(),""TRef"",4) != 0);. TClass* const type = GetClassPointer();. const bool newTest = (!type || !(type->InheritsFrom(TRef::Class()) || type->InheritsFrom(TRefArray::Class()) || type->InheritsFrom(""TVirtualRefProxy"")). if (originalTest != newTest). 		Fatal(""GetExecID"", ""Problem with type %s original test %d, new test %d\n"", . fTypeName.Data(), originalTest, newTest);. if (originalTest) return 0;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:489,safety,test,test,489,"> No luck. Are you able to reproduce the failure locally? If not, you can use something like:. ```. //check if element is a TRef or TRefArray. const bool originalTest = (strncmp(fTypeName.Data(),""TRef"",4) != 0);. TClass* const type = GetClassPointer();. const bool newTest = (!type || !(type->InheritsFrom(TRef::Class()) || type->InheritsFrom(TRefArray::Class()) || type->InheritsFrom(""TVirtualRefProxy"")). if (originalTest != newTest). 		Fatal(""GetExecID"", ""Problem with type %s original test %d, new test %d\n"", . fTypeName.Data(), originalTest, newTest);. if (originalTest) return 0;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:502,safety,test,test,502,"> No luck. Are you able to reproduce the failure locally? If not, you can use something like:. ```. //check if element is a TRef or TRefArray. const bool originalTest = (strncmp(fTypeName.Data(),""TRef"",4) != 0);. TClass* const type = GetClassPointer();. const bool newTest = (!type || !(type->InheritsFrom(TRef::Class()) || type->InheritsFrom(TRefArray::Class()) || type->InheritsFrom(""TVirtualRefProxy"")). if (originalTest != newTest). 		Fatal(""GetExecID"", ""Problem with type %s original test %d, new test %d\n"", . fTypeName.Data(), originalTest, newTest);. if (originalTest) return 0;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:489,testability,test,test,489,"> No luck. Are you able to reproduce the failure locally? If not, you can use something like:. ```. //check if element is a TRef or TRefArray. const bool originalTest = (strncmp(fTypeName.Data(),""TRef"",4) != 0);. TClass* const type = GetClassPointer();. const bool newTest = (!type || !(type->InheritsFrom(TRef::Class()) || type->InheritsFrom(TRefArray::Class()) || type->InheritsFrom(""TVirtualRefProxy"")). if (originalTest != newTest). 		Fatal(""GetExecID"", ""Problem with type %s original test %d, new test %d\n"", . fTypeName.Data(), originalTest, newTest);. if (originalTest) return 0;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:502,testability,test,test,502,"> No luck. Are you able to reproduce the failure locally? If not, you can use something like:. ```. //check if element is a TRef or TRefArray. const bool originalTest = (strncmp(fTypeName.Data(),""TRef"",4) != 0);. TClass* const type = GetClassPointer();. const bool newTest = (!type || !(type->InheritsFrom(TRef::Class()) || type->InheritsFrom(TRefArray::Class()) || type->InheritsFrom(""TVirtualRefProxy"")). if (originalTest != newTest). 		Fatal(""GetExecID"", ""Problem with type %s original test %d, new test %d\n"", . fTypeName.Data(), originalTest, newTest);. if (originalTest) return 0;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:39,deployability,fail,failing,39,"It's looking better now, only 10 tests failing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:39,reliability,fail,failing,39,"It's looking better now, only 10 tests failing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:33,safety,test,tests,33,"It's looking better now, only 10 tests failing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:33,testability,test,tests,33,"It's looking better now, only 10 tests failing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:62,modifiability,Inherit,InheritsFrom,62,"@pcanal I found the problem. It seems that the calls to type->InheritsFrom does some autoloading behind the scenes that leads later to the crash in the tests. Even if originalTest and newTest always yield the same result, the newTest is non-const and thus affects those handful of tests. So not sure how to circumvent this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:75,reliability,doe,does,75,"@pcanal I found the problem. It seems that the calls to type->InheritsFrom does some autoloading behind the scenes that leads later to the crash in the tests. Even if originalTest and newTest always yield the same result, the newTest is non-const and thus affects those handful of tests. So not sure how to circumvent this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:152,safety,test,tests,152,"@pcanal I found the problem. It seems that the calls to type->InheritsFrom does some autoloading behind the scenes that leads later to the crash in the tests. Even if originalTest and newTest always yield the same result, the newTest is non-const and thus affects those handful of tests. So not sure how to circumvent this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:281,safety,test,tests,281,"@pcanal I found the problem. It seems that the calls to type->InheritsFrom does some autoloading behind the scenes that leads later to the crash in the tests. Even if originalTest and newTest always yield the same result, the newTest is non-const and thus affects those handful of tests. So not sure how to circumvent this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:152,testability,test,tests,152,"@pcanal I found the problem. It seems that the calls to type->InheritsFrom does some autoloading behind the scenes that leads later to the crash in the tests. Even if originalTest and newTest always yield the same result, the newTest is non-const and thus affects those handful of tests. So not sure how to circumvent this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:281,testability,test,tests,281,"@pcanal I found the problem. It seems that the calls to type->InheritsFrom does some autoloading behind the scenes that leads later to the crash in the tests. Even if originalTest and newTest always yield the same result, the newTest is non-const and thus affects those handful of tests. So not sure how to circumvent this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:16,deployability,fail,failing,16,"Now only 1 test failing, but I just noticed that setting load to false returns almost always a nullptr for type, so.... this is not a solution either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:57,energy efficiency,load,load,57,"Now only 1 test failing, but I just noticed that setting load to false returns almost always a nullptr for type, so.... this is not a solution either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:57,performance,load,load,57,"Now only 1 test failing, but I just noticed that setting load to false returns almost always a nullptr for type, so.... this is not a solution either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:16,reliability,fail,failing,16,"Now only 1 test failing, but I just noticed that setting load to false returns almost always a nullptr for type, so.... this is not a solution either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:11,safety,test,test,11,"Now only 1 test failing, but I just noticed that setting load to false returns almost always a nullptr for type, so.... this is not a solution either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:11,testability,test,test,11,"Now only 1 test failing, but I just noticed that setting load to false returns almost always a nullptr for type, so.... this is not a solution either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:146,deployability,fail,failing,146,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load... Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:197,deployability,unload,unload,197,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load... Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:235,deployability,fail,failing,235,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load... Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:105,energy efficiency,load,load,105,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load... Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:210,energy efficiency,load,load,210,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load... Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:105,performance,load,load,105,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load... Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:210,performance,load,load,210,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load... Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:146,reliability,fail,failing,146,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load... Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:235,reliability,fail,failing,235,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load... Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:140,safety,test,tests,140,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load... Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:243,safety,test,test,243,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load... Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:224,security,modif,modify,224,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load... Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:140,testability,test,tests,140,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load... Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:243,testability,test,test,243,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load... Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:54,availability,failur,failure,54,Unload is bad idea :). The fact that loading leads to failure seems to be an indication that having it happens 'here' leads to incorrect loading.(could be nesting of loading),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:0,deployability,Unload,Unload,0,Unload is bad idea :). The fact that loading leads to failure seems to be an indication that having it happens 'here' leads to incorrect loading.(could be nesting of loading),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:54,deployability,fail,failure,54,Unload is bad idea :). The fact that loading leads to failure seems to be an indication that having it happens 'here' leads to incorrect loading.(could be nesting of loading),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:37,energy efficiency,load,loading,37,Unload is bad idea :). The fact that loading leads to failure seems to be an indication that having it happens 'here' leads to incorrect loading.(could be nesting of loading),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:137,energy efficiency,load,loading,137,Unload is bad idea :). The fact that loading leads to failure seems to be an indication that having it happens 'here' leads to incorrect loading.(could be nesting of loading),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:166,energy efficiency,load,loading,166,Unload is bad idea :). The fact that loading leads to failure seems to be an indication that having it happens 'here' leads to incorrect loading.(could be nesting of loading),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:37,performance,load,loading,37,Unload is bad idea :). The fact that loading leads to failure seems to be an indication that having it happens 'here' leads to incorrect loading.(could be nesting of loading),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:54,performance,failur,failure,54,Unload is bad idea :). The fact that loading leads to failure seems to be an indication that having it happens 'here' leads to incorrect loading.(could be nesting of loading),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:137,performance,load,loading,137,Unload is bad idea :). The fact that loading leads to failure seems to be an indication that having it happens 'here' leads to incorrect loading.(could be nesting of loading),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:166,performance,load,loading,166,Unload is bad idea :). The fact that loading leads to failure seems to be an indication that having it happens 'here' leads to incorrect loading.(could be nesting of loading),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:54,reliability,fail,failure,54,Unload is bad idea :). The fact that loading leads to failure seems to be an indication that having it happens 'here' leads to incorrect loading.(could be nesting of loading),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:77,usability,indicat,indication,77,Unload is bad idea :). The fact that loading leads to failure seems to be an indication that having it happens 'here' leads to incorrect loading.(could be nesting of loading),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:5,availability,error,error,5,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:117,availability,error,error,117,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:140,availability,Error,Error,140,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:370,availability,avail,available,370,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:492,availability,avail,available,492,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:5,performance,error,error,5,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:117,performance,error,error,117,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:140,performance,Error,Error,140,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:370,reliability,availab,available,370,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:492,reliability,availab,available,492,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:5,safety,error,error,5,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:117,safety,error,error,117,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:140,safety,Error,Error,140,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:370,safety,avail,available,370,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:492,safety,avail,available,492,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:370,security,availab,available,370,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:492,security,availab,available,492,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:5,usability,error,error,5,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:117,usability,error,error,117,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:140,usability,Error,Error,140,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:392,usability,indicat,indicates,392,The [error](https://github.com/root-project/root/pull/14930#issuecomment-1992256961) is real and likely serious. Its error symptoms:. ```. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. ```. is a consequent of the earlier symptom:. ```. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. ```. which indicates that for some reason the system now believes that the dictionary for `HepMC::GenEvent` is available when it is not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:45,safety,test,tests,45,I closed-reopened to kick-off once again all tests @pcanal,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:45,testability,test,tests,45,I closed-reopened to kick-off once again all tests @pcanal,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2,usability,close,closed-reopened,2,I closed-reopened to kick-off once again all tests @pcanal,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:688,availability,avail,available,688,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:774,availability,avail,available,774,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:867,availability,avail,available,867,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:951,availability,avail,available,951,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1036,availability,avail,available,1036,"which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1124,availability,avail,available,1124,"................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1213,availability,avail,available,1213," cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1296,availability,avail,available,1296,"cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Er",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1383,availability,avail,available,1383," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1463,availability,avail,available,1463," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1548,availability,avail,available,1548," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1633,availability,Error,Error,1633," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1740,availability,Error,Error,1740," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2158,availability,ERROR,ERROR,2158," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2235,availability,Error,Error,2235," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2299,availability,Error,Error,2299," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:32,deployability,fail,failing,32,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:180,deployability,Fail,Failed,180,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:554,deployability,log,log,554,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1954,deployability,fail,failed,1954," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2188,deployability,build,build,2188," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:755,integrability,Event,EventProvenance,755,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1933,modifiability,Variab,Variable,1933," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:265,performance,time,timeout,265,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1633,performance,Error,Error,1633," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1740,performance,Error,Error,1740," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2158,performance,ERROR,ERROR,2158," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2235,performance,Error,Error,2235," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2299,performance,Error,Error,2299," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:32,reliability,fail,failing,32,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:180,reliability,Fail,Failed,180,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:688,reliability,availab,available,688,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:774,reliability,availab,available,774,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:867,reliability,availab,available,867,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:951,reliability,availab,available,951,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1036,reliability,availab,available,1036,"which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1124,reliability,availab,available,1124,"................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1213,reliability,availab,available,1213," cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1296,reliability,availab,available,1296,"cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Er",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1383,reliability,availab,available,1383," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1463,reliability,availab,available,1463," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1548,reliability,availab,available,1548," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1954,reliability,fail,failed,1954," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:27,safety,test,test,27,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:66,safety,Test,Test,66,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:201,safety,TEST,TEST,201,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:265,safety,timeout,timeout,265,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:321,safety,TEST,TEST,321,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:364,safety,test,test,364,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:554,safety,log,log,554,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:688,safety,avail,available,688,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:774,safety,avail,available,774,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:867,safety,avail,available,867,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:951,safety,avail,available,951,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1036,safety,avail,available,1036,"which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1124,safety,avail,available,1124,"................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1213,safety,avail,available,1213," cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1296,safety,avail,available,1296,"cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Er",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1383,safety,avail,available,1383," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1463,safety,avail,available,1463," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1548,safety,avail,available,1548," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1633,safety,Error,Error,1633," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1740,safety,Error,Error,1740," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2128,safety,TEST,TEST,2128," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2153,safety,TEST,TEST,2153," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2158,safety,ERROR,ERROR,2158," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2235,safety,Error,Error,2235," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2299,safety,Error,Error,2299," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:554,security,log,log,554,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:688,security,availab,available,688,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:774,security,availab,available,774,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:867,security,availab,available,867,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:951,security,availab,available,951,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1036,security,availab,available,1036,"which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1124,security,availab,available,1124,"................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1213,security,availab,available,1213," cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1296,security,availab,available,1296,"cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Er",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1383,security,availab,available,1383," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1463,security,availab,available,1463," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1548,security,availab,available,1548," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:27,testability,test,test,27,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:66,testability,Test,Test,66,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:201,testability,TEST,TEST,201,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:321,testability,TEST,TEST,321,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:364,testability,test,test,364,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:554,testability,log,log,554,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2128,testability,TEST,TEST,2128," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2153,testability,TEST,TEST,2153," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:206,usability,COMMAND,COMMAND,206,"Very interesting. Only one test failing, which is. ```. 2511/2561 Test #2554: roottest-root-treeformula-retobj-make .............................................................***Failed 22.15 sec. -- TEST COMMAND -- . cd roottest/root/treeformula/retobj. /usr/bin/timeout -s USR2 270s /usr/bin/gmake cleantest. -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1633,usability,Error,Error,1633," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:1740,usability,Error,Error,1740," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2158,usability,ERROR,ERROR,2158," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2235,usability,Error,Error,2235," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:2299,usability,Error,Error,2299," -- BEGIN TEST OUTPUT --. /usr/bin/gmake -f Makefile test. gmake[1]: Entering directory 'roottest/root/treeformula/retobj'. --- root/treeformula/retobj/retobjTest.ref	2024-06-24 18:56:47.431632484 +0000. +++ root/treeformula/retobj/retobjTest.log	2024-06-24 19:56:39.498105605 +0000. @@ -28,12 +28,10 @@. Warning in <TClass::Init>: no dictionary for class edm::HepMCProduct is available. Warning in <TClass::Init>: no dictionary for class edm::EventProvenance is available. Warning in <TClass::Init>: no dictionary for class edm::BranchEntryDescription is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenEvent is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenVertex is available. Warning in <TClass::Init>: no dictionary for class HepMC::WeightContainer is available. Warning in <TClass::Init>: no dictionary for class CLHEP::HepLorentzVector is available. Warning in <TClass::Init>: no dictionary for class CLHEP::Hep3Vector is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::GenParticle is available. -Warning in <TClass::TClass>: no dictionary for class HepMC::Flow is available. Warning in <TClass::Init>: no dictionary for class HepMC::Polarization is available. -Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. +Error in <TTreeFormula::DefinedVariable>: m_signal_process_vertex is not a datamember of HepMC::GenEvent. +Error in <TTreeFormula::Compile>: Bad numerical expression : ""HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size()"". +Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {HepMCProduct_PythiaInput__HepMC.obj.evt_.m_signal_process_vertex.@m_particles_out.size(),}. gmake[1]: Leaving directory 'roottest/root/treeformula/retobj'. . -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. --- Using ROOT from build. gmake[1]: *** [Makefile:31: retobjTest] Error 1. gmake: *** [roottest//scripts/Rules.mk:299: cleantest] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14930:19,security,assess,assessment,19,"Yep, here pcanal's assessment about it: https://github.com/root-project/root/pull/14930#issuecomment-1992633951. (I have no more ideas on what to do about it, thus I marked it as draft)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14930
https://github.com/root-project/root/pull/14934:31,deployability,build,build,31,"Sorry for killing the mac-beta build. We know already it would fail w/o the fix, which needs to be tested on mac-beta...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14934
https://github.com/root-project/root/pull/14934:63,deployability,fail,fail,63,"Sorry for killing the mac-beta build. We know already it would fail w/o the fix, which needs to be tested on mac-beta...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14934
https://github.com/root-project/root/pull/14934:63,reliability,fail,fail,63,"Sorry for killing the mac-beta build. We know already it would fail w/o the fix, which needs to be tested on mac-beta...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14934
https://github.com/root-project/root/pull/14934:99,safety,test,tested,99,"Sorry for killing the mac-beta build. We know already it would fail w/o the fix, which needs to be tested on mac-beta...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14934
https://github.com/root-project/root/pull/14934:99,testability,test,tested,99,"Sorry for killing the mac-beta build. We know already it would fail w/o the fix, which needs to be tested on mac-beta...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14934
https://github.com/root-project/root/pull/14937:0,availability,Failur,Failures,0,"Failures are unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14937
https://github.com/root-project/root/pull/14937:0,deployability,Fail,Failures,0,"Failures are unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14937
https://github.com/root-project/root/pull/14937:0,performance,Failur,Failures,0,"Failures are unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14937
https://github.com/root-project/root/pull/14937:0,reliability,Fail,Failures,0,"Failures are unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14937
https://github.com/root-project/root/pull/14938:0,availability,Failur,Failures,0,"Failures are unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14938
https://github.com/root-project/root/pull/14938:0,deployability,Fail,Failures,0,"Failures are unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14938
https://github.com/root-project/root/pull/14938:0,performance,Failur,Failures,0,"Failures are unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14938
https://github.com/root-project/root/pull/14938:0,reliability,Fail,Failures,0,"Failures are unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14938
https://github.com/root-project/root/pull/14939:96,energy efficiency,current,currently,96,"Of note, this has a reverse conflict with https://github.com/root-project/root/pull/15239 which currently documents that parallel writing is always buffered",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14939
https://github.com/root-project/root/pull/14939:148,integrability,buffer,buffered,148,"Of note, this has a reverse conflict with https://github.com/root-project/root/pull/15239 which currently documents that parallel writing is always buffered",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14939
https://github.com/root-project/root/pull/14939:28,interoperability,conflict,conflict,28,"Of note, this has a reverse conflict with https://github.com/root-project/root/pull/15239 which currently documents that parallel writing is always buffered",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14939
https://github.com/root-project/root/pull/14939:121,performance,parallel,parallel,121,"Of note, this has a reverse conflict with https://github.com/root-project/root/pull/15239 which currently documents that parallel writing is always buffered",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14939
https://github.com/root-project/root/pull/14939:106,usability,document,documents,106,"Of note, this has a reverse conflict with https://github.com/root-project/root/pull/15239 which currently documents that parallel writing is always buffered",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14939
https://github.com/root-project/root/pull/14939:51,integrability,buffer,buffered,51,"As discussed and mentioned before, we will require buffered writing with the `RNTupleParallelWriter` because of its better scalability and less fragmented output files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14939
https://github.com/root-project/root/pull/14939:123,modifiability,scal,scalability,123,"As discussed and mentioned before, we will require buffered writing with the `RNTupleParallelWriter` because of its better scalability and less fragmented output files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14939
https://github.com/root-project/root/pull/14939:123,performance,scalab,scalability,123,"As discussed and mentioned before, we will require buffered writing with the `RNTupleParallelWriter` because of its better scalability and less fragmented output files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14939
https://github.com/root-project/root/pull/14940:19,energy efficiency,green,green,19,Thanks! `mac12` is green now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14940
https://github.com/root-project/root/pull/14941:34,deployability,build,builds,34,"I am merging this PR to turn 6.30 builds green, which is a priority. Next week, we'll discuss how to properly handle the backports in the monorepo. We can always revert this PR or part of its commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14941
https://github.com/root-project/root/pull/14941:41,energy efficiency,green,green,41,"I am merging this PR to turn 6.30 builds green, which is a priority. Next week, we'll discuss how to properly handle the backports in the monorepo. We can always revert this PR or part of its commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14941
https://github.com/root-project/root/issues/14943:76,reliability,doe,doesn,76,"Ok, now the reproducer is the correct one. Adding `SetWebDisplay(""chrome"")` doesn't help (also it is already on Chrome).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14943
https://github.com/root-project/root/issues/14943:84,usability,help,help,84,"Ok, now the reproducer is the correct one. Adding `SetWebDisplay(""chrome"")` doesn't help (also it is already on Chrome).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14943
https://github.com/root-project/root/issues/14943:87,energy efficiency,draw,drawn,87,"It also does not work with `SetWebDisplay(""off"")`. . Canvas destroyed before it can be drawn. I have idea to provide special `TCanvas::Draw()` handling for python - but never find time for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14943
https://github.com/root-project/root/issues/14943:135,energy efficiency,Draw,Draw,135,"It also does not work with `SetWebDisplay(""off"")`. . Canvas destroyed before it can be drawn. I have idea to provide special `TCanvas::Draw()` handling for python - but never find time for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14943
https://github.com/root-project/root/issues/14943:180,performance,time,time,180,"It also does not work with `SetWebDisplay(""off"")`. . Canvas destroyed before it can be drawn. I have idea to provide special `TCanvas::Draw()` handling for python - but never find time for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14943
https://github.com/root-project/root/issues/14943:8,reliability,doe,does,8,"It also does not work with `SetWebDisplay(""off"")`. . Canvas destroyed before it can be drawn. I have idea to provide special `TCanvas::Draw()` handling for python - but never find time for this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14943
https://github.com/root-project/root/issues/14943:63,usability,document,documentation,63,"Right, thanks for pointing this out! I suggest a change to the documentation (e.g., this page: https://root.cern/manual/python/#interactive-graphics) that mentions that the canvas is better not in function-local scope but in global scope.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14943
https://github.com/root-project/root/issues/14943:128,usability,interact,interactive-graphics,128,"Right, thanks for pointing this out! I suggest a change to the documentation (e.g., this page: https://root.cern/manual/python/#interactive-graphics) that mentions that the canvas is better not in function-local scope but in global scope.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14943
https://github.com/root-project/root/issues/14943:136,safety,prevent,prevent,136,"One can use `ROOT.SetOwnership(c, False)` at the end of such function - as in `tutorials/dataframe/df103_NanoAODHiggsAnalysis.py`. This prevent PyROOT from canvas destroying at the end",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14943
https://github.com/root-project/root/issues/14943:136,security,preven,prevent,136,"One can use `ROOT.SetOwnership(c, False)` at the end of such function - as in `tutorials/dataframe/df103_NanoAODHiggsAnalysis.py`. This prevent PyROOT from canvas destroying at the end",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14943
https://github.com/root-project/root/pull/14948:74,availability,slo,sloppy,74,@lmoneta it seems all comments have been addressed (sorry for the initial sloppy implementation): do you think we can merge and close the issue?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14948
https://github.com/root-project/root/pull/14948:74,reliability,slo,sloppy,74,@lmoneta it seems all comments have been addressed (sorry for the initial sloppy implementation): do you think we can merge and close the issue?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14948
https://github.com/root-project/root/pull/14948:128,usability,close,close,128,@lmoneta it seems all comments have been addressed (sorry for the initial sloppy implementation): do you think we can merge and close the issue?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14948
https://github.com/root-project/root/issues/14949:276,energy efficiency,model,model,276,"This may be easier to discuss in the I/O meeting. AFAICS your comment in the UnROOT ticket is correct: the extension header only adds columns and fields (their IDs are larger than IDs from the real header). There is information on deferred columns, which come as part of late model extension:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#column-description. And of course the actual extension frame:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#schema-extension-record-frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:529,integrability,schema,schema-extension-record-frame,529,"This may be easier to discuss in the I/O meeting. AFAICS your comment in the UnROOT ticket is correct: the extension header only adds columns and fields (their IDs are larger than IDs from the real header). There is information on deferred columns, which come as part of late model extension:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#column-description. And of course the actual extension frame:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#schema-extension-record-frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:362,interoperability,specif,specifications,362,"This may be easier to discuss in the I/O meeting. AFAICS your comment in the UnROOT ticket is correct: the extension header only adds columns and fields (their IDs are larger than IDs from the real header). There is information on deferred columns, which come as part of late model extension:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#column-description. And of course the actual extension frame:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#schema-extension-record-frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:511,interoperability,specif,specifications,511,"This may be easier to discuss in the I/O meeting. AFAICS your comment in the UnROOT ticket is correct: the extension header only adds columns and fields (their IDs are larger than IDs from the real header). There is information on deferred columns, which come as part of late model extension:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#column-description. And of course the actual extension frame:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#schema-extension-record-frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:107,modifiability,extens,extension,107,"This may be easier to discuss in the I/O meeting. AFAICS your comment in the UnROOT ticket is correct: the extension header only adds columns and fields (their IDs are larger than IDs from the real header). There is information on deferred columns, which come as part of late model extension:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#column-description. And of course the actual extension frame:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#schema-extension-record-frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:282,modifiability,extens,extension,282,"This may be easier to discuss in the I/O meeting. AFAICS your comment in the UnROOT ticket is correct: the extension header only adds columns and fields (their IDs are larger than IDs from the real header). There is information on deferred columns, which come as part of late model extension:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#column-description. And of course the actual extension frame:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#schema-extension-record-frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:425,modifiability,extens,extension,425,"This may be easier to discuss in the I/O meeting. AFAICS your comment in the UnROOT ticket is correct: the extension header only adds columns and fields (their IDs are larger than IDs from the real header). There is information on deferred columns, which come as part of late model extension:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#column-description. And of course the actual extension frame:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#schema-extension-record-frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:536,modifiability,extens,extension-record-frame,536,"This may be easier to discuss in the I/O meeting. AFAICS your comment in the UnROOT ticket is correct: the extension header only adds columns and fields (their IDs are larger than IDs from the real header). There is information on deferred columns, which come as part of late model extension:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#column-description. And of course the actual extension frame:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#schema-extension-record-frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:37,performance,I/O,I/O,37,"This may be easier to discuss in the I/O meeting. AFAICS your comment in the UnROOT ticket is correct: the extension header only adds columns and fields (their IDs are larger than IDs from the real header). There is information on deferred columns, which come as part of late model extension:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#column-description. And of course the actual extension frame:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#schema-extension-record-frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:276,security,model,model,276,"This may be easier to discuss in the I/O meeting. AFAICS your comment in the UnROOT ticket is correct: the extension header only adds columns and fields (their IDs are larger than IDs from the real header). There is information on deferred columns, which come as part of late model extension:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#column-description. And of course the actual extension frame:. https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#schema-extension-record-frame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:133,integrability,Schema,Schema,133,"Ah, I think in my case I'm not doing anything for the 0x08 flag, and what I'm looking for here is if we can mention this flag in the Schema Extension section. Just to make the connection for the readers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:140,modifiability,Extens,Extension,140,"Ah, I think in my case I'm not doing anything for the 0x08 flag, and what I'm looking for here is if we can mention this flag in the Schema Extension section. Just to make the connection for the readers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:74,availability,down,down,74,"I'm not 100% sure if this is related to `0x08` flags, but I have narrowed down my problem a bit in https://github.com/JuliaHEP/UnROOT.jl/issues/312#issuecomment-1998723832. In summary, by using ROOT, I have confirmed that in the 2nd cluster I'm reading all the correct elements for. ```. ""AntiKt4TruthDressedWZJetsAux:.constituentLinks.:_0.m_persIndex"". ```. Both the content and the number of elements completely agree. The problem surfaces when I need to put this together with the `offset` vector, since the schema looks like this:. ```julia. └─ :constituentLinks ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=40). └─ :content ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41). └─ :content ⇒ Struct. └─ Symbol("":_0"") ⇒ Struct. ├─ :m_persKey ⇒ Leaf{UInt32}(col=42). └─ :m_persIndex ⇒ Leaf{UInt32}(col=43). ```. The ` :offset ⇒ Leaf{UnROOT.Index64}(col=40)` contains:. ```julia. 1432-element Vector{Int64}:. 9. 30. 36. 43. 57. 65. ⋮. 12906. 12919. 12930. ```. which means we expect outer vector to have 12930 elements. Then `├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41)`:. ```julia. 12930-element Vector{Int64}:. 30. 34. 52. 66. ... 209999. 210008. ```. It makes sense this contains 12930 elements, match one level above. But now we expect the innermost array to have 210008 elements. Now the innermost element `├─ :m_persKey ⇒ Leaf{UInt32}(col=42)`:. ```julia. 128584-element reinterpret(UInt32, ::Vector{UInt8}):. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. ```. which is far from the 210008 we expected. Any insight is much appreciated @jblomer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:233,availability,cluster,cluster,233,"I'm not 100% sure if this is related to `0x08` flags, but I have narrowed down my problem a bit in https://github.com/JuliaHEP/UnROOT.jl/issues/312#issuecomment-1998723832. In summary, by using ROOT, I have confirmed that in the 2nd cluster I'm reading all the correct elements for. ```. ""AntiKt4TruthDressedWZJetsAux:.constituentLinks.:_0.m_persIndex"". ```. Both the content and the number of elements completely agree. The problem surfaces when I need to put this together with the `offset` vector, since the schema looks like this:. ```julia. └─ :constituentLinks ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=40). └─ :content ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41). └─ :content ⇒ Struct. └─ Symbol("":_0"") ⇒ Struct. ├─ :m_persKey ⇒ Leaf{UInt32}(col=42). └─ :m_persIndex ⇒ Leaf{UInt32}(col=43). ```. The ` :offset ⇒ Leaf{UnROOT.Index64}(col=40)` contains:. ```julia. 1432-element Vector{Int64}:. 9. 30. 36. 43. 57. 65. ⋮. 12906. 12919. 12930. ```. which means we expect outer vector to have 12930 elements. Then `├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41)`:. ```julia. 12930-element Vector{Int64}:. 30. 34. 52. 66. ... 209999. 210008. ```. It makes sense this contains 12930 elements, match one level above. But now we expect the innermost array to have 210008 elements. Now the innermost element `├─ :m_persKey ⇒ Leaf{UInt32}(col=42)`:. ```julia. 128584-element reinterpret(UInt32, ::Vector{UInt8}):. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. ```. which is far from the 210008 we expected. Any insight is much appreciated @jblomer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:233,deployability,cluster,cluster,233,"I'm not 100% sure if this is related to `0x08` flags, but I have narrowed down my problem a bit in https://github.com/JuliaHEP/UnROOT.jl/issues/312#issuecomment-1998723832. In summary, by using ROOT, I have confirmed that in the 2nd cluster I'm reading all the correct elements for. ```. ""AntiKt4TruthDressedWZJetsAux:.constituentLinks.:_0.m_persIndex"". ```. Both the content and the number of elements completely agree. The problem surfaces when I need to put this together with the `offset` vector, since the schema looks like this:. ```julia. └─ :constituentLinks ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=40). └─ :content ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41). └─ :content ⇒ Struct. └─ Symbol("":_0"") ⇒ Struct. ├─ :m_persKey ⇒ Leaf{UInt32}(col=42). └─ :m_persIndex ⇒ Leaf{UInt32}(col=43). ```. The ` :offset ⇒ Leaf{UnROOT.Index64}(col=40)` contains:. ```julia. 1432-element Vector{Int64}:. 9. 30. 36. 43. 57. 65. ⋮. 12906. 12919. 12930. ```. which means we expect outer vector to have 12930 elements. Then `├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41)`:. ```julia. 12930-element Vector{Int64}:. 30. 34. 52. 66. ... 209999. 210008. ```. It makes sense this contains 12930 elements, match one level above. But now we expect the innermost array to have 210008 elements. Now the innermost element `├─ :m_persKey ⇒ Leaf{UInt32}(col=42)`:. ```julia. 128584-element reinterpret(UInt32, ::Vector{UInt8}):. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. ```. which is far from the 210008 we expected. Any insight is much appreciated @jblomer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:863,deployability,contain,contains,863,"I'm not 100% sure if this is related to `0x08` flags, but I have narrowed down my problem a bit in https://github.com/JuliaHEP/UnROOT.jl/issues/312#issuecomment-1998723832. In summary, by using ROOT, I have confirmed that in the 2nd cluster I'm reading all the correct elements for. ```. ""AntiKt4TruthDressedWZJetsAux:.constituentLinks.:_0.m_persIndex"". ```. Both the content and the number of elements completely agree. The problem surfaces when I need to put this together with the `offset` vector, since the schema looks like this:. ```julia. └─ :constituentLinks ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=40). └─ :content ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41). └─ :content ⇒ Struct. └─ Symbol("":_0"") ⇒ Struct. ├─ :m_persKey ⇒ Leaf{UInt32}(col=42). └─ :m_persIndex ⇒ Leaf{UInt32}(col=43). ```. The ` :offset ⇒ Leaf{UnROOT.Index64}(col=40)` contains:. ```julia. 1432-element Vector{Int64}:. 9. 30. 36. 43. 57. 65. ⋮. 12906. 12919. 12930. ```. which means we expect outer vector to have 12930 elements. Then `├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41)`:. ```julia. 12930-element Vector{Int64}:. 30. 34. 52. 66. ... 209999. 210008. ```. It makes sense this contains 12930 elements, match one level above. But now we expect the innermost array to have 210008 elements. Now the innermost element `├─ :m_persKey ⇒ Leaf{UInt32}(col=42)`:. ```julia. 128584-element reinterpret(UInt32, ::Vector{UInt8}):. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. ```. which is far from the 210008 we expected. Any insight is much appreciated @jblomer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:1176,deployability,contain,contains,1176,"I'm not 100% sure if this is related to `0x08` flags, but I have narrowed down my problem a bit in https://github.com/JuliaHEP/UnROOT.jl/issues/312#issuecomment-1998723832. In summary, by using ROOT, I have confirmed that in the 2nd cluster I'm reading all the correct elements for. ```. ""AntiKt4TruthDressedWZJetsAux:.constituentLinks.:_0.m_persIndex"". ```. Both the content and the number of elements completely agree. The problem surfaces when I need to put this together with the `offset` vector, since the schema looks like this:. ```julia. └─ :constituentLinks ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=40). └─ :content ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41). └─ :content ⇒ Struct. └─ Symbol("":_0"") ⇒ Struct. ├─ :m_persKey ⇒ Leaf{UInt32}(col=42). └─ :m_persIndex ⇒ Leaf{UInt32}(col=43). ```. The ` :offset ⇒ Leaf{UnROOT.Index64}(col=40)` contains:. ```julia. 1432-element Vector{Int64}:. 9. 30. 36. 43. 57. 65. ⋮. 12906. 12919. 12930. ```. which means we expect outer vector to have 12930 elements. Then `├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41)`:. ```julia. 12930-element Vector{Int64}:. 30. 34. 52. 66. ... 209999. 210008. ```. It makes sense this contains 12930 elements, match one level above. But now we expect the innermost array to have 210008 elements. Now the innermost element `├─ :m_persKey ⇒ Leaf{UInt32}(col=42)`:. ```julia. 128584-element reinterpret(UInt32, ::Vector{UInt8}):. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. ```. which is far from the 210008 we expected. Any insight is much appreciated @jblomer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:511,integrability,schema,schema,511,"I'm not 100% sure if this is related to `0x08` flags, but I have narrowed down my problem a bit in https://github.com/JuliaHEP/UnROOT.jl/issues/312#issuecomment-1998723832. In summary, by using ROOT, I have confirmed that in the 2nd cluster I'm reading all the correct elements for. ```. ""AntiKt4TruthDressedWZJetsAux:.constituentLinks.:_0.m_persIndex"". ```. Both the content and the number of elements completely agree. The problem surfaces when I need to put this together with the `offset` vector, since the schema looks like this:. ```julia. └─ :constituentLinks ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=40). └─ :content ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41). └─ :content ⇒ Struct. └─ Symbol("":_0"") ⇒ Struct. ├─ :m_persKey ⇒ Leaf{UInt32}(col=42). └─ :m_persIndex ⇒ Leaf{UInt32}(col=43). ```. The ` :offset ⇒ Leaf{UnROOT.Index64}(col=40)` contains:. ```julia. 1432-element Vector{Int64}:. 9. 30. 36. 43. 57. 65. ⋮. 12906. 12919. 12930. ```. which means we expect outer vector to have 12930 elements. Then `├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41)`:. ```julia. 12930-element Vector{Int64}:. 30. 34. 52. 66. ... 209999. 210008. ```. It makes sense this contains 12930 elements, match one level above. But now we expect the innermost array to have 210008 elements. Now the innermost element `├─ :m_persKey ⇒ Leaf{UInt32}(col=42)`:. ```julia. 128584-element reinterpret(UInt32, ::Vector{UInt8}):. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. ```. which is far from the 210008 we expected. Any insight is much appreciated @jblomer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:368,performance,content,content,368,"I'm not 100% sure if this is related to `0x08` flags, but I have narrowed down my problem a bit in https://github.com/JuliaHEP/UnROOT.jl/issues/312#issuecomment-1998723832. In summary, by using ROOT, I have confirmed that in the 2nd cluster I'm reading all the correct elements for. ```. ""AntiKt4TruthDressedWZJetsAux:.constituentLinks.:_0.m_persIndex"". ```. Both the content and the number of elements completely agree. The problem surfaces when I need to put this together with the `offset` vector, since the schema looks like this:. ```julia. └─ :constituentLinks ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=40). └─ :content ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41). └─ :content ⇒ Struct. └─ Symbol("":_0"") ⇒ Struct. ├─ :m_persKey ⇒ Leaf{UInt32}(col=42). └─ :m_persIndex ⇒ Leaf{UInt32}(col=43). ```. The ` :offset ⇒ Leaf{UnROOT.Index64}(col=40)` contains:. ```julia. 1432-element Vector{Int64}:. 9. 30. 36. 43. 57. 65. ⋮. 12906. 12919. 12930. ```. which means we expect outer vector to have 12930 elements. Then `├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41)`:. ```julia. 12930-element Vector{Int64}:. 30. 34. 52. 66. ... 209999. 210008. ```. It makes sense this contains 12930 elements, match one level above. But now we expect the innermost array to have 210008 elements. Now the innermost element `├─ :m_persKey ⇒ Leaf{UInt32}(col=42)`:. ```julia. 128584-element reinterpret(UInt32, ::Vector{UInt8}):. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. ```. which is far from the 210008 we expected. Any insight is much appreciated @jblomer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:624,performance,content,content,624,"I'm not 100% sure if this is related to `0x08` flags, but I have narrowed down my problem a bit in https://github.com/JuliaHEP/UnROOT.jl/issues/312#issuecomment-1998723832. In summary, by using ROOT, I have confirmed that in the 2nd cluster I'm reading all the correct elements for. ```. ""AntiKt4TruthDressedWZJetsAux:.constituentLinks.:_0.m_persIndex"". ```. Both the content and the number of elements completely agree. The problem surfaces when I need to put this together with the `offset` vector, since the schema looks like this:. ```julia. └─ :constituentLinks ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=40). └─ :content ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41). └─ :content ⇒ Struct. └─ Symbol("":_0"") ⇒ Struct. ├─ :m_persKey ⇒ Leaf{UInt32}(col=42). └─ :m_persIndex ⇒ Leaf{UInt32}(col=43). ```. The ` :offset ⇒ Leaf{UnROOT.Index64}(col=40)` contains:. ```julia. 1432-element Vector{Int64}:. 9. 30. 36. 43. 57. 65. ⋮. 12906. 12919. 12930. ```. which means we expect outer vector to have 12930 elements. Then `├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41)`:. ```julia. 12930-element Vector{Int64}:. 30. 34. 52. 66. ... 209999. 210008. ```. It makes sense this contains 12930 elements, match one level above. But now we expect the innermost array to have 210008 elements. Now the innermost element `├─ :m_persKey ⇒ Leaf{UInt32}(col=42)`:. ```julia. 128584-element reinterpret(UInt32, ::Vector{UInt8}):. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. ```. which is far from the 210008 we expected. Any insight is much appreciated @jblomer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:689,performance,content,content,689,"I'm not 100% sure if this is related to `0x08` flags, but I have narrowed down my problem a bit in https://github.com/JuliaHEP/UnROOT.jl/issues/312#issuecomment-1998723832. In summary, by using ROOT, I have confirmed that in the 2nd cluster I'm reading all the correct elements for. ```. ""AntiKt4TruthDressedWZJetsAux:.constituentLinks.:_0.m_persIndex"". ```. Both the content and the number of elements completely agree. The problem surfaces when I need to put this together with the `offset` vector, since the schema looks like this:. ```julia. └─ :constituentLinks ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=40). └─ :content ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41). └─ :content ⇒ Struct. └─ Symbol("":_0"") ⇒ Struct. ├─ :m_persKey ⇒ Leaf{UInt32}(col=42). └─ :m_persIndex ⇒ Leaf{UInt32}(col=43). ```. The ` :offset ⇒ Leaf{UnROOT.Index64}(col=40)` contains:. ```julia. 1432-element Vector{Int64}:. 9. 30. 36. 43. 57. 65. ⋮. 12906. 12919. 12930. ```. which means we expect outer vector to have 12930 elements. Then `├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41)`:. ```julia. 12930-element Vector{Int64}:. 30. 34. 52. 66. ... 209999. 210008. ```. It makes sense this contains 12930 elements, match one level above. But now we expect the innermost array to have 210008 elements. Now the innermost element `├─ :m_persKey ⇒ Leaf{UInt32}(col=42)`:. ```julia. 128584-element reinterpret(UInt32, ::Vector{UInt8}):. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. ```. which is far from the 210008 we expected. Any insight is much appreciated @jblomer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:403,safety,compl,completely,403,"I'm not 100% sure if this is related to `0x08` flags, but I have narrowed down my problem a bit in https://github.com/JuliaHEP/UnROOT.jl/issues/312#issuecomment-1998723832. In summary, by using ROOT, I have confirmed that in the 2nd cluster I'm reading all the correct elements for. ```. ""AntiKt4TruthDressedWZJetsAux:.constituentLinks.:_0.m_persIndex"". ```. Both the content and the number of elements completely agree. The problem surfaces when I need to put this together with the `offset` vector, since the schema looks like this:. ```julia. └─ :constituentLinks ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=40). └─ :content ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41). └─ :content ⇒ Struct. └─ Symbol("":_0"") ⇒ Struct. ├─ :m_persKey ⇒ Leaf{UInt32}(col=42). └─ :m_persIndex ⇒ Leaf{UInt32}(col=43). ```. The ` :offset ⇒ Leaf{UnROOT.Index64}(col=40)` contains:. ```julia. 1432-element Vector{Int64}:. 9. 30. 36. 43. 57. 65. ⋮. 12906. 12919. 12930. ```. which means we expect outer vector to have 12930 elements. Then `├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41)`:. ```julia. 12930-element Vector{Int64}:. 30. 34. 52. 66. ... 209999. 210008. ```. It makes sense this contains 12930 elements, match one level above. But now we expect the innermost array to have 210008 elements. Now the innermost element `├─ :m_persKey ⇒ Leaf{UInt32}(col=42)`:. ```julia. 128584-element reinterpret(UInt32, ::Vector{UInt8}):. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. ```. which is far from the 210008 we expected. Any insight is much appreciated @jblomer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:403,security,compl,completely,403,"I'm not 100% sure if this is related to `0x08` flags, but I have narrowed down my problem a bit in https://github.com/JuliaHEP/UnROOT.jl/issues/312#issuecomment-1998723832. In summary, by using ROOT, I have confirmed that in the 2nd cluster I'm reading all the correct elements for. ```. ""AntiKt4TruthDressedWZJetsAux:.constituentLinks.:_0.m_persIndex"". ```. Both the content and the number of elements completely agree. The problem surfaces when I need to put this together with the `offset` vector, since the schema looks like this:. ```julia. └─ :constituentLinks ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=40). └─ :content ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41). └─ :content ⇒ Struct. └─ Symbol("":_0"") ⇒ Struct. ├─ :m_persKey ⇒ Leaf{UInt32}(col=42). └─ :m_persIndex ⇒ Leaf{UInt32}(col=43). ```. The ` :offset ⇒ Leaf{UnROOT.Index64}(col=40)` contains:. ```julia. 1432-element Vector{Int64}:. 9. 30. 36. 43. 57. 65. ⋮. 12906. 12919. 12930. ```. which means we expect outer vector to have 12930 elements. Then `├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41)`:. ```julia. 12930-element Vector{Int64}:. 30. 34. 52. 66. ... 209999. 210008. ```. It makes sense this contains 12930 elements, match one level above. But now we expect the innermost array to have 210008 elements. Now the innermost element `├─ :m_persKey ⇒ Leaf{UInt32}(col=42)`:. ```julia. 128584-element reinterpret(UInt32, ::Vector{UInt8}):. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. ```. which is far from the 210008 we expected. Any insight is much appreciated @jblomer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:207,usability,confirm,confirmed,207,"I'm not 100% sure if this is related to `0x08` flags, but I have narrowed down my problem a bit in https://github.com/JuliaHEP/UnROOT.jl/issues/312#issuecomment-1998723832. In summary, by using ROOT, I have confirmed that in the 2nd cluster I'm reading all the correct elements for. ```. ""AntiKt4TruthDressedWZJetsAux:.constituentLinks.:_0.m_persIndex"". ```. Both the content and the number of elements completely agree. The problem surfaces when I need to put this together with the `offset` vector, since the schema looks like this:. ```julia. └─ :constituentLinks ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=40). └─ :content ⇒ Vector. ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41). └─ :content ⇒ Struct. └─ Symbol("":_0"") ⇒ Struct. ├─ :m_persKey ⇒ Leaf{UInt32}(col=42). └─ :m_persIndex ⇒ Leaf{UInt32}(col=43). ```. The ` :offset ⇒ Leaf{UnROOT.Index64}(col=40)` contains:. ```julia. 1432-element Vector{Int64}:. 9. 30. 36. 43. 57. 65. ⋮. 12906. 12919. 12930. ```. which means we expect outer vector to have 12930 elements. Then `├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41)`:. ```julia. 12930-element Vector{Int64}:. 30. 34. 52. 66. ... 209999. 210008. ```. It makes sense this contains 12930 elements, match one level above. But now we expect the innermost array to have 210008 elements. Now the innermost element `├─ :m_persKey ⇒ Leaf{UInt32}(col=42)`:. ```julia. 128584-element reinterpret(UInt32, ::Vector{UInt8}):. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. 0x2784318b. ```. which is far from the 210008 we expected. Any insight is much appreciated @jblomer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:132,availability,cluster,cluster,132,"ok, I have figured it out, it's because of. >0x01 	64 	Index64 	Mother columns of (nested) collections, counting is relative to the cluster. 0x02 	32 	Index32 	Mother columns of (nested) collections, counting is relative to the cluster. specifically, ""counting is relative to the cluster"" was not clear to me. But what it means is, if you have 2 pages of `Index64` for a column in this cluster, after ""de-split encoding"" you will get these two arrays:. ```julia. first page: [30, 4, 18, 14, 5, 8, 10, 7, 8, 18, ..., 22, 1, 16, 14, 14, 12, 4, 7, 15, 24]. first page after cumsum: [..., 81317, 81318, 81334, 81348, 81362, 81374, 81378, 81385, 81400, 81424]. second page: [81428, 13, 9, 7, 5, 20, 21, 4, 8, 6, ..., 128487, 128505, 128513, 128527, 128543, 128549, 128557, 128564, 128575, 128584]. ``` . you can see that the second page doesn't start with 4, instead, it starts with a huge number `81428`. I guess it means index pages are to be interpreted individually within the cluster.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:228,availability,cluster,cluster,228,"ok, I have figured it out, it's because of. >0x01 	64 	Index64 	Mother columns of (nested) collections, counting is relative to the cluster. 0x02 	32 	Index32 	Mother columns of (nested) collections, counting is relative to the cluster. specifically, ""counting is relative to the cluster"" was not clear to me. But what it means is, if you have 2 pages of `Index64` for a column in this cluster, after ""de-split encoding"" you will get these two arrays:. ```julia. first page: [30, 4, 18, 14, 5, 8, 10, 7, 8, 18, ..., 22, 1, 16, 14, 14, 12, 4, 7, 15, 24]. first page after cumsum: [..., 81317, 81318, 81334, 81348, 81362, 81374, 81378, 81385, 81400, 81424]. second page: [81428, 13, 9, 7, 5, 20, 21, 4, 8, 6, ..., 128487, 128505, 128513, 128527, 128543, 128549, 128557, 128564, 128575, 128584]. ``` . you can see that the second page doesn't start with 4, instead, it starts with a huge number `81428`. I guess it means index pages are to be interpreted individually within the cluster.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:280,availability,cluster,cluster,280,"ok, I have figured it out, it's because of. >0x01 	64 	Index64 	Mother columns of (nested) collections, counting is relative to the cluster. 0x02 	32 	Index32 	Mother columns of (nested) collections, counting is relative to the cluster. specifically, ""counting is relative to the cluster"" was not clear to me. But what it means is, if you have 2 pages of `Index64` for a column in this cluster, after ""de-split encoding"" you will get these two arrays:. ```julia. first page: [30, 4, 18, 14, 5, 8, 10, 7, 8, 18, ..., 22, 1, 16, 14, 14, 12, 4, 7, 15, 24]. first page after cumsum: [..., 81317, 81318, 81334, 81348, 81362, 81374, 81378, 81385, 81400, 81424]. second page: [81428, 13, 9, 7, 5, 20, 21, 4, 8, 6, ..., 128487, 128505, 128513, 128527, 128543, 128549, 128557, 128564, 128575, 128584]. ``` . you can see that the second page doesn't start with 4, instead, it starts with a huge number `81428`. I guess it means index pages are to be interpreted individually within the cluster.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:386,availability,cluster,cluster,386,"ok, I have figured it out, it's because of. >0x01 	64 	Index64 	Mother columns of (nested) collections, counting is relative to the cluster. 0x02 	32 	Index32 	Mother columns of (nested) collections, counting is relative to the cluster. specifically, ""counting is relative to the cluster"" was not clear to me. But what it means is, if you have 2 pages of `Index64` for a column in this cluster, after ""de-split encoding"" you will get these two arrays:. ```julia. first page: [30, 4, 18, 14, 5, 8, 10, 7, 8, 18, ..., 22, 1, 16, 14, 14, 12, 4, 7, 15, 24]. first page after cumsum: [..., 81317, 81318, 81334, 81348, 81362, 81374, 81378, 81385, 81400, 81424]. second page: [81428, 13, 9, 7, 5, 20, 21, 4, 8, 6, ..., 128487, 128505, 128513, 128527, 128543, 128549, 128557, 128564, 128575, 128584]. ``` . you can see that the second page doesn't start with 4, instead, it starts with a huge number `81428`. I guess it means index pages are to be interpreted individually within the cluster.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:976,availability,cluster,cluster,976,"ok, I have figured it out, it's because of. >0x01 	64 	Index64 	Mother columns of (nested) collections, counting is relative to the cluster. 0x02 	32 	Index32 	Mother columns of (nested) collections, counting is relative to the cluster. specifically, ""counting is relative to the cluster"" was not clear to me. But what it means is, if you have 2 pages of `Index64` for a column in this cluster, after ""de-split encoding"" you will get these two arrays:. ```julia. first page: [30, 4, 18, 14, 5, 8, 10, 7, 8, 18, ..., 22, 1, 16, 14, 14, 12, 4, 7, 15, 24]. first page after cumsum: [..., 81317, 81318, 81334, 81348, 81362, 81374, 81378, 81385, 81400, 81424]. second page: [81428, 13, 9, 7, 5, 20, 21, 4, 8, 6, ..., 128487, 128505, 128513, 128527, 128543, 128549, 128557, 128564, 128575, 128584]. ``` . you can see that the second page doesn't start with 4, instead, it starts with a huge number `81428`. I guess it means index pages are to be interpreted individually within the cluster.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:132,deployability,cluster,cluster,132,"ok, I have figured it out, it's because of. >0x01 	64 	Index64 	Mother columns of (nested) collections, counting is relative to the cluster. 0x02 	32 	Index32 	Mother columns of (nested) collections, counting is relative to the cluster. specifically, ""counting is relative to the cluster"" was not clear to me. But what it means is, if you have 2 pages of `Index64` for a column in this cluster, after ""de-split encoding"" you will get these two arrays:. ```julia. first page: [30, 4, 18, 14, 5, 8, 10, 7, 8, 18, ..., 22, 1, 16, 14, 14, 12, 4, 7, 15, 24]. first page after cumsum: [..., 81317, 81318, 81334, 81348, 81362, 81374, 81378, 81385, 81400, 81424]. second page: [81428, 13, 9, 7, 5, 20, 21, 4, 8, 6, ..., 128487, 128505, 128513, 128527, 128543, 128549, 128557, 128564, 128575, 128584]. ``` . you can see that the second page doesn't start with 4, instead, it starts with a huge number `81428`. I guess it means index pages are to be interpreted individually within the cluster.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:228,deployability,cluster,cluster,228,"ok, I have figured it out, it's because of. >0x01 	64 	Index64 	Mother columns of (nested) collections, counting is relative to the cluster. 0x02 	32 	Index32 	Mother columns of (nested) collections, counting is relative to the cluster. specifically, ""counting is relative to the cluster"" was not clear to me. But what it means is, if you have 2 pages of `Index64` for a column in this cluster, after ""de-split encoding"" you will get these two arrays:. ```julia. first page: [30, 4, 18, 14, 5, 8, 10, 7, 8, 18, ..., 22, 1, 16, 14, 14, 12, 4, 7, 15, 24]. first page after cumsum: [..., 81317, 81318, 81334, 81348, 81362, 81374, 81378, 81385, 81400, 81424]. second page: [81428, 13, 9, 7, 5, 20, 21, 4, 8, 6, ..., 128487, 128505, 128513, 128527, 128543, 128549, 128557, 128564, 128575, 128584]. ``` . you can see that the second page doesn't start with 4, instead, it starts with a huge number `81428`. I guess it means index pages are to be interpreted individually within the cluster.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:280,deployability,cluster,cluster,280,"ok, I have figured it out, it's because of. >0x01 	64 	Index64 	Mother columns of (nested) collections, counting is relative to the cluster. 0x02 	32 	Index32 	Mother columns of (nested) collections, counting is relative to the cluster. specifically, ""counting is relative to the cluster"" was not clear to me. But what it means is, if you have 2 pages of `Index64` for a column in this cluster, after ""de-split encoding"" you will get these two arrays:. ```julia. first page: [30, 4, 18, 14, 5, 8, 10, 7, 8, 18, ..., 22, 1, 16, 14, 14, 12, 4, 7, 15, 24]. first page after cumsum: [..., 81317, 81318, 81334, 81348, 81362, 81374, 81378, 81385, 81400, 81424]. second page: [81428, 13, 9, 7, 5, 20, 21, 4, 8, 6, ..., 128487, 128505, 128513, 128527, 128543, 128549, 128557, 128564, 128575, 128584]. ``` . you can see that the second page doesn't start with 4, instead, it starts with a huge number `81428`. I guess it means index pages are to be interpreted individually within the cluster.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:386,deployability,cluster,cluster,386,"ok, I have figured it out, it's because of. >0x01 	64 	Index64 	Mother columns of (nested) collections, counting is relative to the cluster. 0x02 	32 	Index32 	Mother columns of (nested) collections, counting is relative to the cluster. specifically, ""counting is relative to the cluster"" was not clear to me. But what it means is, if you have 2 pages of `Index64` for a column in this cluster, after ""de-split encoding"" you will get these two arrays:. ```julia. first page: [30, 4, 18, 14, 5, 8, 10, 7, 8, 18, ..., 22, 1, 16, 14, 14, 12, 4, 7, 15, 24]. first page after cumsum: [..., 81317, 81318, 81334, 81348, 81362, 81374, 81378, 81385, 81400, 81424]. second page: [81428, 13, 9, 7, 5, 20, 21, 4, 8, 6, ..., 128487, 128505, 128513, 128527, 128543, 128549, 128557, 128564, 128575, 128584]. ``` . you can see that the second page doesn't start with 4, instead, it starts with a huge number `81428`. I guess it means index pages are to be interpreted individually within the cluster.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:976,deployability,cluster,cluster,976,"ok, I have figured it out, it's because of. >0x01 	64 	Index64 	Mother columns of (nested) collections, counting is relative to the cluster. 0x02 	32 	Index32 	Mother columns of (nested) collections, counting is relative to the cluster. specifically, ""counting is relative to the cluster"" was not clear to me. But what it means is, if you have 2 pages of `Index64` for a column in this cluster, after ""de-split encoding"" you will get these two arrays:. ```julia. first page: [30, 4, 18, 14, 5, 8, 10, 7, 8, 18, ..., 22, 1, 16, 14, 14, 12, 4, 7, 15, 24]. first page after cumsum: [..., 81317, 81318, 81334, 81348, 81362, 81374, 81378, 81385, 81400, 81424]. second page: [81428, 13, 9, 7, 5, 20, 21, 4, 8, 6, ..., 128487, 128505, 128513, 128527, 128543, 128549, 128557, 128564, 128575, 128584]. ``` . you can see that the second page doesn't start with 4, instead, it starts with a huge number `81428`. I guess it means index pages are to be interpreted individually within the cluster.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:237,interoperability,specif,specifically,237,"ok, I have figured it out, it's because of. >0x01 	64 	Index64 	Mother columns of (nested) collections, counting is relative to the cluster. 0x02 	32 	Index32 	Mother columns of (nested) collections, counting is relative to the cluster. specifically, ""counting is relative to the cluster"" was not clear to me. But what it means is, if you have 2 pages of `Index64` for a column in this cluster, after ""de-split encoding"" you will get these two arrays:. ```julia. first page: [30, 4, 18, 14, 5, 8, 10, 7, 8, 18, ..., 22, 1, 16, 14, 14, 12, 4, 7, 15, 24]. first page after cumsum: [..., 81317, 81318, 81334, 81348, 81362, 81374, 81378, 81385, 81400, 81424]. second page: [81428, 13, 9, 7, 5, 20, 21, 4, 8, 6, ..., 128487, 128505, 128513, 128527, 128543, 128549, 128557, 128564, 128575, 128584]. ``` . you can see that the second page doesn't start with 4, instead, it starts with a huge number `81428`. I guess it means index pages are to be interpreted individually within the cluster.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:832,reliability,doe,doesn,832,"ok, I have figured it out, it's because of. >0x01 	64 	Index64 	Mother columns of (nested) collections, counting is relative to the cluster. 0x02 	32 	Index32 	Mother columns of (nested) collections, counting is relative to the cluster. specifically, ""counting is relative to the cluster"" was not clear to me. But what it means is, if you have 2 pages of `Index64` for a column in this cluster, after ""de-split encoding"" you will get these two arrays:. ```julia. first page: [30, 4, 18, 14, 5, 8, 10, 7, 8, 18, ..., 22, 1, 16, 14, 14, 12, 4, 7, 15, 24]. first page after cumsum: [..., 81317, 81318, 81334, 81348, 81362, 81374, 81378, 81385, 81400, 81424]. second page: [81428, 13, 9, 7, 5, 20, 21, 4, 8, 6, ..., 128487, 128505, 128513, 128527, 128543, 128549, 128557, 128564, 128575, 128584]. ``` . you can see that the second page doesn't start with 4, instead, it starts with a huge number `81428`. I guess it means index pages are to be interpreted individually within the cluster.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14949:297,usability,clear,clear,297,"ok, I have figured it out, it's because of. >0x01 	64 	Index64 	Mother columns of (nested) collections, counting is relative to the cluster. 0x02 	32 	Index32 	Mother columns of (nested) collections, counting is relative to the cluster. specifically, ""counting is relative to the cluster"" was not clear to me. But what it means is, if you have 2 pages of `Index64` for a column in this cluster, after ""de-split encoding"" you will get these two arrays:. ```julia. first page: [30, 4, 18, 14, 5, 8, 10, 7, 8, 18, ..., 22, 1, 16, 14, 14, 12, 4, 7, 15, 24]. first page after cumsum: [..., 81317, 81318, 81334, 81348, 81362, 81374, 81378, 81385, 81400, 81424]. second page: [81428, 13, 9, 7, 5, 20, 21, 4, 8, 6, ..., 128487, 128505, 128513, 128527, 128543, 128549, 128557, 128564, 128575, 128584]. ``` . you can see that the second page doesn't start with 4, instead, it starts with a huge number `81428`. I guess it means index pages are to be interpreted individually within the cluster.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14949
https://github.com/root-project/root/issues/14953:70,deployability,build,build,70,"One question, why copying and not just sym-linking? (At least for the build step, later install can do the copy)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:88,deployability,instal,install,88,"One question, why copying and not just sym-linking? (At least for the build step, later install can do the copy)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:18,deployability,instal,install,18,suppose we do not install and delete the src dir...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:82,energy efficiency,reduc,reduce,82,"@vgvassilev I have a doubt here. We can certainly copy individual directories and reduce the churn, but then how can we express that if a certain file, e.g. a tutorial, is modified it then needs to be recopied?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:172,security,modif,modified,172,"@vgvassilev I have a doubt here. We can certainly copy individual directories and reduce the churn, but then how can we express that if a certain file, e.g. a tutorial, is modified it then needs to be recopied?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:240,deployability,depend,depend,240,"> @vgvassilev I have a doubt here. We can certainly copy individual directories and reduce the churn, but then how can we express that if a certain file, e.g. a tutorial, is modified it then needs to be recopied? We can make a cmake target depend on multiple files. Then if one gets invalidated the target gets re-run. To avoid copying everything iirc cmake had some copy-if-different functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:84,energy efficiency,reduc,reduce,84,"> @vgvassilev I have a doubt here. We can certainly copy individual directories and reduce the churn, but then how can we express that if a certain file, e.g. a tutorial, is modified it then needs to be recopied? We can make a cmake target depend on multiple files. Then if one gets invalidated the target gets re-run. To avoid copying everything iirc cmake had some copy-if-different functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:240,integrability,depend,depend,240,"> @vgvassilev I have a doubt here. We can certainly copy individual directories and reduce the churn, but then how can we express that if a certain file, e.g. a tutorial, is modified it then needs to be recopied? We can make a cmake target depend on multiple files. Then if one gets invalidated the target gets re-run. To avoid copying everything iirc cmake had some copy-if-different functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:240,modifiability,depend,depend,240,"> @vgvassilev I have a doubt here. We can certainly copy individual directories and reduce the churn, but then how can we express that if a certain file, e.g. a tutorial, is modified it then needs to be recopied? We can make a cmake target depend on multiple files. Then if one gets invalidated the target gets re-run. To avoid copying everything iirc cmake had some copy-if-different functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:240,safety,depend,depend,240,"> @vgvassilev I have a doubt here. We can certainly copy individual directories and reduce the churn, but then how can we express that if a certain file, e.g. a tutorial, is modified it then needs to be recopied? We can make a cmake target depend on multiple files. Then if one gets invalidated the target gets re-run. To avoid copying everything iirc cmake had some copy-if-different functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:322,safety,avoid,avoid,322,"> @vgvassilev I have a doubt here. We can certainly copy individual directories and reduce the churn, but then how can we express that if a certain file, e.g. a tutorial, is modified it then needs to be recopied? We can make a cmake target depend on multiple files. Then if one gets invalidated the target gets re-run. To avoid copying everything iirc cmake had some copy-if-different functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:174,security,modif,modified,174,"> @vgvassilev I have a doubt here. We can certainly copy individual directories and reduce the churn, but then how can we express that if a certain file, e.g. a tutorial, is modified it then needs to be recopied? We can make a cmake target depend on multiple files. Then if one gets invalidated the target gets re-run. To avoid copying everything iirc cmake had some copy-if-different functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:240,testability,depend,depend,240,"> @vgvassilev I have a doubt here. We can certainly copy individual directories and reduce the churn, but then how can we express that if a certain file, e.g. a tutorial, is modified it then needs to be recopied? We can make a cmake target depend on multiple files. Then if one gets invalidated the target gets re-run. To avoid copying everything iirc cmake had some copy-if-different functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:194,deployability,build,build,194,"My suggestion is to first look into solutions which do not require copying anything. For example, you could run the tutorial located in the source directory, but with a working directory in the build directory and a full path. If that doesn't work, the whole directory could be copied in one go with `file(COPY ...)` or with `execute_process()` and calling `cmake -E copy_directory`. The other solution which may also work well is to turn it into a full subproject and just use `add_directory(tutorials)`. I worked a bit on this in the past and it was not that difficult to make it work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:454,integrability,sub,subproject,454,"My suggestion is to first look into solutions which do not require copying anything. For example, you could run the tutorial located in the source directory, but with a working directory in the build directory and a full path. If that doesn't work, the whole directory could be copied in one go with `file(COPY ...)` or with `execute_process()` and calling `cmake -E copy_directory`. The other solution which may also work well is to turn it into a full subproject and just use `add_directory(tutorials)`. I worked a bit on this in the past and it was not that difficult to make it work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:235,reliability,doe,doesn,235,"My suggestion is to first look into solutions which do not require copying anything. For example, you could run the tutorial located in the source directory, but with a working directory in the build directory and a full path. If that doesn't work, the whole directory could be copied in one go with `file(COPY ...)` or with `execute_process()` and calling `cmake -E copy_directory`. The other solution which may also work well is to turn it into a full subproject and just use `add_directory(tutorials)`. I worked a bit on this in the past and it was not that difficult to make it work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:49,availability,slo,slow,49,> When using the Makefile Generator that's quite slow for no good reason... Maybe related: https://github.com/root-project/root/issues/6432 https://github.com/root-project/root/issues/6432#issuecomment-2009372525,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:49,reliability,slo,slow,49,> When using the Makefile Generator that's quite slow for no good reason... Maybe related: https://github.com/root-project/root/issues/6432 https://github.com/root-project/root/issues/6432#issuecomment-2009372525,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:48,availability,slo,slow,48,"I'd like to take a step back here. . What does ""slow"" mean in this context? On a machine with a SSD it's not slow, but maybe it's just my perception.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:109,availability,slo,slow,109,"I'd like to take a step back here. . What does ""slow"" mean in this context? On a machine with a SSD it's not slow, but maybe it's just my perception.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:42,reliability,doe,does,42,"I'd like to take a step back here. . What does ""slow"" mean in this context? On a machine with a SSD it's not slow, but maybe it's just my perception.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:48,reliability,slo,slow,48,"I'd like to take a step back here. . What does ""slow"" mean in this context? On a machine with a SSD it's not slow, but maybe it's just my perception.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:109,reliability,slo,slow,109,"I'd like to take a step back here. . What does ""slow"" mean in this context? On a machine with a SSD it's not slow, but maybe it's just my perception.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:67,testability,context,context,67,"I'd like to take a step back here. . What does ""slow"" mean in this context? On a machine with a SSD it's not slow, but maybe it's just my perception.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:16,availability,slo,slow,16,It may not seem slow but could be done easily faster. Treating every single header separate has also impact on configure time I bet. we should not copy the header files but that’s a whole different story.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:111,integrability,configur,configure,111,It may not seem slow but could be done easily faster. Treating every single header separate has also impact on configure time I bet. we should not copy the header files but that’s a whole different story.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:111,modifiability,configur,configure,111,It may not seem slow but could be done easily faster. Treating every single header separate has also impact on configure time I bet. we should not copy the header files but that’s a whole different story.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:121,performance,time,time,121,It may not seem slow but could be done easily faster. Treating every single header separate has also impact on configure time I bet. we should not copy the header files but that’s a whole different story.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:16,reliability,slo,slow,16,It may not seem slow but could be done easily faster. Treating every single header separate has also impact on configure time I bet. we should not copy the header files but that’s a whole different story.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:111,security,configur,configure,111,It may not seem slow but could be done easily faster. Treating every single header separate has also impact on configure time I bet. we should not copy the header files but that’s a whole different story.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:66,deployability,build,build,66,"Is it really necessary to keep this possibility to abuse the root build directory as your working ROOT installation? If we relax this requirement, then many things would be much easier. We wouldn't have to copy or link the header files at all. Maybe something for ROOT 7?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/issues/14953:103,deployability,instal,installation,103,"Is it really necessary to keep this possibility to abuse the root build directory as your working ROOT installation? If we relax this requirement, then many things would be much easier. We wouldn't have to copy or link the header files at all. Maybe something for ROOT 7?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14953
https://github.com/root-project/root/pull/14957:12,availability,sli,slightly,12,"Tested with slightly edited script from Wile's (https://root-forum.cern.ch/t/reading-and-writing-thnsparse-to-file-with-variable-bin-size/15365):. ```. #include ""TCanvas.h"". #include ""TFile.h"". #include ""THnSparse.h"". #include ""TH1.h"". #include <iostream>. using std::cout, std::endl;. void writeSparse(bool useVarBins=false, bool draw=false). {. std::cout << ""... writeSparse ..."" << std::endl;. // Define the fixed bins for initialization. const int nDim = 3;. // Int_t nBins[nDim] = {10, 4, 4};. Int_t nBins[nDim] = {5, 2, 2};. Double_t min[nDim] = {0., 0., 0.};. Double_t max[nDim] = {5., 2., 2.};. TFile* f = new TFile(""testSparse.root"", ""recreate"");. THnSparseF* h = new THnSparseF(""sparseHist"", ""sparseHist"", nDim, nBins, min, max);. // Set variable bins. if(useVarBins){. const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:331,energy efficiency,draw,draw,331,"Tested with slightly edited script from Wile's (https://root-forum.cern.ch/t/reading-and-writing-thnsparse-to-file-with-variable-bin-size/15365):. ```. #include ""TCanvas.h"". #include ""TFile.h"". #include ""THnSparse.h"". #include ""TH1.h"". #include <iostream>. using std::cout, std::endl;. void writeSparse(bool useVarBins=false, bool draw=false). {. std::cout << ""... writeSparse ..."" << std::endl;. // Define the fixed bins for initialization. const int nDim = 3;. // Int_t nBins[nDim] = {10, 4, 4};. Int_t nBins[nDim] = {5, 2, 2};. Double_t min[nDim] = {0., 0., 0.};. Double_t max[nDim] = {5., 2., 2.};. TFile* f = new TFile(""testSparse.root"", ""recreate"");. THnSparseF* h = new THnSparseF(""sparseHist"", ""sparseHist"", nDim, nBins, min, max);. // Set variable bins. if(useVarBins){. const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:1642,energy efficiency,Draw,Draw,1642,"recreate"");. THnSparseF* h = new THnSparseF(""sparseHist"", ""sparseHist"", nDim, nBins, min, max);. // Set variable bins. if(useVarBins){. const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:1663,energy efficiency,draw,draw,1663,"eF* h = new THnSparseF(""sparseHist"", ""sparseHist"", nDim, nBins, min, max);. // Set variable bins. if(useVarBins){. const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:1739,energy efficiency,Draw,Draw,1739,"// Set variable bins. if(useVarBins){. const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:1816,energy efficiency,Draw,Draw,1816,"const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {. writeSparse();. readSparse();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:1893,energy efficiency,Draw,Draw,1893,"const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {. writeSparse();. readSparse();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:1923,energy efficiency,draw,draw,1923,"const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {. writeSparse();. readSparse();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:1964,energy efficiency,draw,draw,1964,"const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {. writeSparse();. readSparse();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:2434,energy efficiency,Draw,Draw,2434,"const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {. writeSparse();. readSparse();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:2455,energy efficiency,draw,draw,2455,"const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {. writeSparse();. readSparse();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:2531,energy efficiency,Draw,Draw,2531,"const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {. writeSparse();. readSparse();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:2608,energy efficiency,Draw,Draw,2608,"const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {. writeSparse();. readSparse();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:2685,energy efficiency,Draw,Draw,2685,"const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {. writeSparse();. readSparse();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:2702,energy efficiency,draw,draw,2702,"const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {. writeSparse();. readSparse();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:120,modifiability,variab,variable-bin-size,120,"Tested with slightly edited script from Wile's (https://root-forum.cern.ch/t/reading-and-writing-thnsparse-to-file-with-variable-bin-size/15365):. ```. #include ""TCanvas.h"". #include ""TFile.h"". #include ""THnSparse.h"". #include ""TH1.h"". #include <iostream>. using std::cout, std::endl;. void writeSparse(bool useVarBins=false, bool draw=false). {. std::cout << ""... writeSparse ..."" << std::endl;. // Define the fixed bins for initialization. const int nDim = 3;. // Int_t nBins[nDim] = {10, 4, 4};. Int_t nBins[nDim] = {5, 2, 2};. Double_t min[nDim] = {0., 0., 0.};. Double_t max[nDim] = {5., 2., 2.};. TFile* f = new TFile(""testSparse.root"", ""recreate"");. THnSparseF* h = new THnSparseF(""sparseHist"", ""sparseHist"", nDim, nBins, min, max);. // Set variable bins. if(useVarBins){. const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:748,modifiability,variab,variable,748,"Tested with slightly edited script from Wile's (https://root-forum.cern.ch/t/reading-and-writing-thnsparse-to-file-with-variable-bin-size/15365):. ```. #include ""TCanvas.h"". #include ""TFile.h"". #include ""THnSparse.h"". #include ""TH1.h"". #include <iostream>. using std::cout, std::endl;. void writeSparse(bool useVarBins=false, bool draw=false). {. std::cout << ""... writeSparse ..."" << std::endl;. // Define the fixed bins for initialization. const int nDim = 3;. // Int_t nBins[nDim] = {10, 4, 4};. Int_t nBins[nDim] = {5, 2, 2};. Double_t min[nDim] = {0., 0., 0.};. Double_t max[nDim] = {5., 2., 2.};. TFile* f = new TFile(""testSparse.root"", ""recreate"");. THnSparseF* h = new THnSparseF(""sparseHist"", ""sparseHist"", nDim, nBins, min, max);. // Set variable bins. if(useVarBins){. const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:12,reliability,sli,slightly,12,"Tested with slightly edited script from Wile's (https://root-forum.cern.ch/t/reading-and-writing-thnsparse-to-file-with-variable-bin-size/15365):. ```. #include ""TCanvas.h"". #include ""TFile.h"". #include ""THnSparse.h"". #include ""TH1.h"". #include <iostream>. using std::cout, std::endl;. void writeSparse(bool useVarBins=false, bool draw=false). {. std::cout << ""... writeSparse ..."" << std::endl;. // Define the fixed bins for initialization. const int nDim = 3;. // Int_t nBins[nDim] = {10, 4, 4};. Int_t nBins[nDim] = {5, 2, 2};. Double_t min[nDim] = {0., 0., 0.};. Double_t max[nDim] = {5., 2., 2.};. TFile* f = new TFile(""testSparse.root"", ""recreate"");. THnSparseF* h = new THnSparseF(""sparseHist"", ""sparseHist"", nDim, nBins, min, max);. // Set variable bins. if(useVarBins){. const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:0,safety,Test,Tested,0,"Tested with slightly edited script from Wile's (https://root-forum.cern.ch/t/reading-and-writing-thnsparse-to-file-with-variable-bin-size/15365):. ```. #include ""TCanvas.h"". #include ""TFile.h"". #include ""THnSparse.h"". #include ""TH1.h"". #include <iostream>. using std::cout, std::endl;. void writeSparse(bool useVarBins=false, bool draw=false). {. std::cout << ""... writeSparse ..."" << std::endl;. // Define the fixed bins for initialization. const int nDim = 3;. // Int_t nBins[nDim] = {10, 4, 4};. Int_t nBins[nDim] = {5, 2, 2};. Double_t min[nDim] = {0., 0., 0.};. Double_t max[nDim] = {5., 2., 2.};. TFile* f = new TFile(""testSparse.root"", ""recreate"");. THnSparseF* h = new THnSparseF(""sparseHist"", ""sparseHist"", nDim, nBins, min, max);. // Set variable bins. if(useVarBins){. const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:625,safety,test,testSparse,625,"Tested with slightly edited script from Wile's (https://root-forum.cern.ch/t/reading-and-writing-thnsparse-to-file-with-variable-bin-size/15365):. ```. #include ""TCanvas.h"". #include ""TFile.h"". #include ""THnSparse.h"". #include ""TH1.h"". #include <iostream>. using std::cout, std::endl;. void writeSparse(bool useVarBins=false, bool draw=false). {. std::cout << ""... writeSparse ..."" << std::endl;. // Define the fixed bins for initialization. const int nDim = 3;. // Int_t nBins[nDim] = {10, 4, 4};. Int_t nBins[nDim] = {5, 2, 2};. Double_t min[nDim] = {0., 0., 0.};. Double_t max[nDim] = {5., 2., 2.};. TFile* f = new TFile(""testSparse.root"", ""recreate"");. THnSparseF* h = new THnSparseF(""sparseHist"", ""sparseHist"", nDim, nBins, min, max);. // Set variable bins. if(useVarBins){. const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:2051,safety,test,testSparse,2051,"const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {. writeSparse();. readSparse();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:2727,safety,test,testSparse,2727,"const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {. writeSparse();. readSparse();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:0,testability,Test,Tested,0,"Tested with slightly edited script from Wile's (https://root-forum.cern.ch/t/reading-and-writing-thnsparse-to-file-with-variable-bin-size/15365):. ```. #include ""TCanvas.h"". #include ""TFile.h"". #include ""THnSparse.h"". #include ""TH1.h"". #include <iostream>. using std::cout, std::endl;. void writeSparse(bool useVarBins=false, bool draw=false). {. std::cout << ""... writeSparse ..."" << std::endl;. // Define the fixed bins for initialization. const int nDim = 3;. // Int_t nBins[nDim] = {10, 4, 4};. Int_t nBins[nDim] = {5, 2, 2};. Double_t min[nDim] = {0., 0., 0.};. Double_t max[nDim] = {5., 2., 2.};. TFile* f = new TFile(""testSparse.root"", ""recreate"");. THnSparseF* h = new THnSparseF(""sparseHist"", ""sparseHist"", nDim, nBins, min, max);. // Set variable bins. if(useVarBins){. const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:625,testability,test,testSparse,625,"Tested with slightly edited script from Wile's (https://root-forum.cern.ch/t/reading-and-writing-thnsparse-to-file-with-variable-bin-size/15365):. ```. #include ""TCanvas.h"". #include ""TFile.h"". #include ""THnSparse.h"". #include ""TH1.h"". #include <iostream>. using std::cout, std::endl;. void writeSparse(bool useVarBins=false, bool draw=false). {. std::cout << ""... writeSparse ..."" << std::endl;. // Define the fixed bins for initialization. const int nDim = 3;. // Int_t nBins[nDim] = {10, 4, 4};. Int_t nBins[nDim] = {5, 2, 2};. Double_t min[nDim] = {0., 0., 0.};. Double_t max[nDim] = {5., 2., 2.};. TFile* f = new TFile(""testSparse.root"", ""recreate"");. THnSparseF* h = new THnSparseF(""sparseHist"", ""sparseHist"", nDim, nBins, min, max);. // Set variable bins. if(useVarBins){. const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:2051,testability,test,testSparse,2051,"const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {. writeSparse();. readSparse();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:2727,testability,test,testSparse,2727,"const int nVarBins0 = 5; // 5. Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};. h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2. Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};. h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2. Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};. h->GetAxis(2)->Set(nVarBins2, varBins2);. }. // Fill 2 bins. Double_t val1[nDim] = {0, 1, 0};. Double_t val2[nDim] = {3, 0, 1};. h->Fill(val2);. h->Fill(val2);. h->Fill(val1);. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""0x"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. h->Write();. if (!draw) delete f;. }. void readSparse(bool draw=false). {. std::cout << ""... readSparse ..."" << std::endl;. TFile* f = new TFile(""testSparse.root"");. THnSparseF* h = (THnSparseF*) f->Get(""sparseHist"");. cout << ""printing entries with no options:"" << endl;. h->PrintEntries();. cout << ""printing entries with '0':"" << endl;. h->PrintEntries(0, -1, ""0"");. cout << ""printing entries with 'x':"" << endl;. h->PrintEntries(0, -1, ""x"");. cout << ""printing entries with 'x0':"" << endl;. h->PrintEntries(0, -1, ""x0"");. // Draw projections. if(draw){. TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);. h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);. h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);. h->Projection(2)->Draw();. }. if (!draw) delete f;. }. void testSparse() {. writeSparse();. readSparse();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:78,safety,test,test,78,"Hi @ferdymercury , thanks a lot for this code. Do you think we can also add a test for it in root or roottest?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:78,testability,test,test,78,"Hi @ferdymercury , thanks a lot for this code. Do you think we can also add a test for it in root or roottest?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:142,availability,consist,consistency,142,"> LGTM ! A small suggestion, I would not use C functions like strchr but a TString and TString::Contains. Thanks! wrt strchr: It was just for consistency with the rest of the file. There are 17x uses of strchr and I didn't feel like changing them all in this PR :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:96,deployability,Contain,Contains,96,"> LGTM ! A small suggestion, I would not use C functions like strchr but a TString and TString::Contains. Thanks! wrt strchr: It was just for consistency with the rest of the file. There are 17x uses of strchr and I didn't feel like changing them all in this PR :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/pull/14957:142,usability,consist,consistency,142,"> LGTM ! A small suggestion, I would not use C functions like strchr but a TString and TString::Contains. Thanks! wrt strchr: It was just for consistency with the rest of the file. There are 17x uses of strchr and I didn't feel like changing them all in this PR :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14957
https://github.com/root-project/root/issues/14958:81,availability,operat,operating-systems,81,"@cogevito , centos7 EOL is June 30th 2024 (see [here](https://endoflife.software/operating-systems/linux/centos)). What would be the cost/benefit ratio of the fix?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:219,energy efficiency,core,core,219,"@cogevito . For cryptographic random generator we try to use `arc4random_buf` function from `<stdlib.h>` and as fall-back - `getrandom` from `<sys/random.h>`. See here:. https://github.com/root-project/root/blob/master/core/unix/CMakeLists.txt. Seems to be, none of them presented on CentOS. Is there `libbsd` on this platform? . It also can be used to get `arc4random_buf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:318,interoperability,platform,platform,318,"@cogevito . For cryptographic random generator we try to use `arc4random_buf` function from `<stdlib.h>` and as fall-back - `getrandom` from `<sys/random.h>`. See here:. https://github.com/root-project/root/blob/master/core/unix/CMakeLists.txt. Seems to be, none of them presented on CentOS. Is there `libbsd` on this platform? . It also can be used to get `arc4random_buf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:16,security,cryptograph,cryptographic,16,"@cogevito . For cryptographic random generator we try to use `arc4random_buf` function from `<stdlib.h>` and as fall-back - `getrandom` from `<sys/random.h>`. See here:. https://github.com/root-project/root/blob/master/core/unix/CMakeLists.txt. Seems to be, none of them presented on CentOS. Is there `libbsd` on this platform? . It also can be used to get `arc4random_buf`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:27,deployability,instal,install,27,@cogevito . Can you try to install `libbsd-dev` on your node?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:500,deployability,instal,install,500,"Hello Sergey,, Danillo. Thank you for your suggestions (that we took into consideration ), feedback and prompt response. There is a new suggestion on how to solve this issue. Please check:. <https://its.cern.ch/jira/browse/SPI-2532>. its.cern.ch<https://its.cern.ch/jira/browse/SPI-2532>. [X]<https://its.cern.ch/jira/browse/SPI-2532>. We will keep you informed. Best regards,. Ilias. On 14 Mar 2024, at 09:32, Sergey Linev ***@***.***> wrote:. @cogevito<https://github.com/cogevito>. Can you try to install libbsd-dev on your node? —. Reply to this email directly, view it on GitHub<https://github.com/root-project/root/issues/14958#issuecomment-1996852848>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADMB4TR5V47G7UK252MEENDYYFODFAVCNFSM6AAAAABEUNYYK6VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSOJWHA2TEOBUHA>. You are receiving this because you were mentioned.Message ID: ***@***.***>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:884,integrability,Messag,Message,884,"Hello Sergey,, Danillo. Thank you for your suggestions (that we took into consideration ), feedback and prompt response. There is a new suggestion on how to solve this issue. Please check:. <https://its.cern.ch/jira/browse/SPI-2532>. its.cern.ch<https://its.cern.ch/jira/browse/SPI-2532>. [X]<https://its.cern.ch/jira/browse/SPI-2532>. We will keep you informed. Best regards,. Ilias. On 14 Mar 2024, at 09:32, Sergey Linev ***@***.***> wrote:. @cogevito<https://github.com/cogevito>. Can you try to install libbsd-dev on your node? —. Reply to this email directly, view it on GitHub<https://github.com/root-project/root/issues/14958#issuecomment-1996852848>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADMB4TR5V47G7UK252MEENDYYFODFAVCNFSM6AAAAABEUNYYK6VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSOJWHA2TEOBUHA>. You are receiving this because you were mentioned.Message ID: ***@***.***>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:884,interoperability,Messag,Message,884,"Hello Sergey,, Danillo. Thank you for your suggestions (that we took into consideration ), feedback and prompt response. There is a new suggestion on how to solve this issue. Please check:. <https://its.cern.ch/jira/browse/SPI-2532>. its.cern.ch<https://its.cern.ch/jira/browse/SPI-2532>. [X]<https://its.cern.ch/jira/browse/SPI-2532>. We will keep you informed. Best regards,. Ilias. On 14 Mar 2024, at 09:32, Sergey Linev ***@***.***> wrote:. @cogevito<https://github.com/cogevito>. Can you try to install libbsd-dev on your node? —. Reply to this email directly, view it on GitHub<https://github.com/root-project/root/issues/14958#issuecomment-1996852848>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADMB4TR5V47G7UK252MEENDYYFODFAVCNFSM6AAAAABEUNYYK6VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSOJWHA2TEOBUHA>. You are receiving this because you were mentioned.Message ID: ***@***.***>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:720,security,auth,auth,720,"Hello Sergey,, Danillo. Thank you for your suggestions (that we took into consideration ), feedback and prompt response. There is a new suggestion on how to solve this issue. Please check:. <https://its.cern.ch/jira/browse/SPI-2532>. its.cern.ch<https://its.cern.ch/jira/browse/SPI-2532>. [X]<https://its.cern.ch/jira/browse/SPI-2532>. We will keep you informed. Best regards,. Ilias. On 14 Mar 2024, at 09:32, Sergey Linev ***@***.***> wrote:. @cogevito<https://github.com/cogevito>. Can you try to install libbsd-dev on your node? —. Reply to this email directly, view it on GitHub<https://github.com/root-project/root/issues/14958#issuecomment-1996852848>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADMB4TR5V47G7UK252MEENDYYFODFAVCNFSM6AAAAABEUNYYK6VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSOJWHA2TEOBUHA>. You are receiving this because you were mentioned.Message ID: ***@***.***>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:91,usability,feedback,feedback,91,"Hello Sergey,, Danillo. Thank you for your suggestions (that we took into consideration ), feedback and prompt response. There is a new suggestion on how to solve this issue. Please check:. <https://its.cern.ch/jira/browse/SPI-2532>. its.cern.ch<https://its.cern.ch/jira/browse/SPI-2532>. [X]<https://its.cern.ch/jira/browse/SPI-2532>. We will keep you informed. Best regards,. Ilias. On 14 Mar 2024, at 09:32, Sergey Linev ***@***.***> wrote:. @cogevito<https://github.com/cogevito>. Can you try to install libbsd-dev on your node? —. Reply to this email directly, view it on GitHub<https://github.com/root-project/root/issues/14958#issuecomment-1996852848>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADMB4TR5V47G7UK252MEENDYYFODFAVCNFSM6AAAAABEUNYYK6VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSOJWHA2TEOBUHA>. You are receiving this because you were mentioned.Message ID: ***@***.***>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:56,availability,cluster,cluster,56,"I just encountered this issue as well on CentOS 7 (main cluster at Nikhef). I will look into the `libbsd-dev` solution mentioned above. > What would be the cost/benefit ratio of the fix? There is an upgrade path that will make Alma 9 the default from 15 May and phases out CentOS 7 fully from 30 May, so on first sight not much benefit. However, it is foreseen that some people in the late stages of their research won't be able to upgrade their toolchain before this date and some container-based CentOS 7 support will probably remain for some time. I don't know whether this justifies the cost, of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:56,deployability,cluster,cluster,56,"I just encountered this issue as well on CentOS 7 (main cluster at Nikhef). I will look into the `libbsd-dev` solution mentioned above. > What would be the cost/benefit ratio of the fix? There is an upgrade path that will make Alma 9 the default from 15 May and phases out CentOS 7 fully from 30 May, so on first sight not much benefit. However, it is foreseen that some people in the late stages of their research won't be able to upgrade their toolchain before this date and some container-based CentOS 7 support will probably remain for some time. I don't know whether this justifies the cost, of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:199,deployability,upgrad,upgrade,199,"I just encountered this issue as well on CentOS 7 (main cluster at Nikhef). I will look into the `libbsd-dev` solution mentioned above. > What would be the cost/benefit ratio of the fix? There is an upgrade path that will make Alma 9 the default from 15 May and phases out CentOS 7 fully from 30 May, so on first sight not much benefit. However, it is foreseen that some people in the late stages of their research won't be able to upgrade their toolchain before this date and some container-based CentOS 7 support will probably remain for some time. I don't know whether this justifies the cost, of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:390,deployability,stage,stages,390,"I just encountered this issue as well on CentOS 7 (main cluster at Nikhef). I will look into the `libbsd-dev` solution mentioned above. > What would be the cost/benefit ratio of the fix? There is an upgrade path that will make Alma 9 the default from 15 May and phases out CentOS 7 fully from 30 May, so on first sight not much benefit. However, it is foreseen that some people in the late stages of their research won't be able to upgrade their toolchain before this date and some container-based CentOS 7 support will probably remain for some time. I don't know whether this justifies the cost, of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:432,deployability,upgrad,upgrade,432,"I just encountered this issue as well on CentOS 7 (main cluster at Nikhef). I will look into the `libbsd-dev` solution mentioned above. > What would be the cost/benefit ratio of the fix? There is an upgrade path that will make Alma 9 the default from 15 May and phases out CentOS 7 fully from 30 May, so on first sight not much benefit. However, it is foreseen that some people in the late stages of their research won't be able to upgrade their toolchain before this date and some container-based CentOS 7 support will probably remain for some time. I don't know whether this justifies the cost, of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:446,deployability,toolchain,toolchain,446,"I just encountered this issue as well on CentOS 7 (main cluster at Nikhef). I will look into the `libbsd-dev` solution mentioned above. > What would be the cost/benefit ratio of the fix? There is an upgrade path that will make Alma 9 the default from 15 May and phases out CentOS 7 fully from 30 May, so on first sight not much benefit. However, it is foreseen that some people in the late stages of their research won't be able to upgrade their toolchain before this date and some container-based CentOS 7 support will probably remain for some time. I don't know whether this justifies the cost, of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:482,deployability,contain,container-based,482,"I just encountered this issue as well on CentOS 7 (main cluster at Nikhef). I will look into the `libbsd-dev` solution mentioned above. > What would be the cost/benefit ratio of the fix? There is an upgrade path that will make Alma 9 the default from 15 May and phases out CentOS 7 fully from 30 May, so on first sight not much benefit. However, it is foreseen that some people in the late stages of their research won't be able to upgrade their toolchain before this date and some container-based CentOS 7 support will probably remain for some time. I don't know whether this justifies the cost, of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:199,modifiability,upgrad,upgrade,199,"I just encountered this issue as well on CentOS 7 (main cluster at Nikhef). I will look into the `libbsd-dev` solution mentioned above. > What would be the cost/benefit ratio of the fix? There is an upgrade path that will make Alma 9 the default from 15 May and phases out CentOS 7 fully from 30 May, so on first sight not much benefit. However, it is foreseen that some people in the late stages of their research won't be able to upgrade their toolchain before this date and some container-based CentOS 7 support will probably remain for some time. I don't know whether this justifies the cost, of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:432,modifiability,upgrad,upgrade,432,"I just encountered this issue as well on CentOS 7 (main cluster at Nikhef). I will look into the `libbsd-dev` solution mentioned above. > What would be the cost/benefit ratio of the fix? There is an upgrade path that will make Alma 9 the default from 15 May and phases out CentOS 7 fully from 30 May, so on first sight not much benefit. However, it is foreseen that some people in the late stages of their research won't be able to upgrade their toolchain before this date and some container-based CentOS 7 support will probably remain for some time. I don't know whether this justifies the cost, of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:545,performance,time,time,545,"I just encountered this issue as well on CentOS 7 (main cluster at Nikhef). I will look into the `libbsd-dev` solution mentioned above. > What would be the cost/benefit ratio of the fix? There is an upgrade path that will make Alma 9 the default from 15 May and phases out CentOS 7 fully from 30 May, so on first sight not much benefit. However, it is foreseen that some people in the late stages of their research won't be able to upgrade their toolchain before this date and some container-based CentOS 7 support will probably remain for some time. I don't know whether this justifies the cost, of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:446,usability,tool,toolchain,446,"I just encountered this issue as well on CentOS 7 (main cluster at Nikhef). I will look into the `libbsd-dev` solution mentioned above. > What would be the cost/benefit ratio of the fix? There is an upgrade path that will make Alma 9 the default from 15 May and phases out CentOS 7 fully from 30 May, so on first sight not much benefit. However, it is foreseen that some people in the late stages of their research won't be able to upgrade their toolchain before this date and some container-based CentOS 7 support will probably remain for some time. I don't know whether this justifies the cost, of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:507,usability,support,support,507,"I just encountered this issue as well on CentOS 7 (main cluster at Nikhef). I will look into the `libbsd-dev` solution mentioned above. > What would be the cost/benefit ratio of the fix? There is an upgrade path that will make Alma 9 the default from 15 May and phases out CentOS 7 fully from 30 May, so on first sight not much benefit. However, it is foreseen that some people in the late stages of their research won't be able to upgrade their toolchain before this date and some container-based CentOS 7 support will probably remain for some time. I don't know whether this justifies the cost, of course.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:35,deployability,build,build,35,"I am trying to use a custom libbsd build, but there doesn't seem to be a way to indicate a path to search for this dependency. Would it be possible to add something like that in the CMakeLists?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:115,deployability,depend,dependency,115,"I am trying to use a custom libbsd build, but there doesn't seem to be a way to indicate a path to search for this dependency. Would it be possible to add something like that in the CMakeLists?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:115,integrability,depend,dependency,115,"I am trying to use a custom libbsd build, but there doesn't seem to be a way to indicate a path to search for this dependency. Would it be possible to add something like that in the CMakeLists?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:115,modifiability,depend,dependency,115,"I am trying to use a custom libbsd build, but there doesn't seem to be a way to indicate a path to search for this dependency. Would it be possible to add something like that in the CMakeLists?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:52,reliability,doe,doesn,52,"I am trying to use a custom libbsd build, but there doesn't seem to be a way to indicate a path to search for this dependency. Would it be possible to add something like that in the CMakeLists?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:115,safety,depend,dependency,115,"I am trying to use a custom libbsd build, but there doesn't seem to be a way to indicate a path to search for this dependency. Would it be possible to add something like that in the CMakeLists?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:115,testability,depend,dependency,115,"I am trying to use a custom libbsd build, but there doesn't seem to be a way to indicate a path to search for this dependency. Would it be possible to add something like that in the CMakeLists?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:21,usability,custom,custom,21,"I am trying to use a custom libbsd build, but there doesn't seem to be a way to indicate a path to search for this dependency. Would it be possible to add something like that in the CMakeLists?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:80,usability,indicat,indicate,80,"I am trying to use a custom libbsd build, but there doesn't seem to be a way to indicate a path to search for this dependency. Would it be possible to add something like that in the CMakeLists?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:86,usability,custom,custom,86,Can you try https://github.com/root-project/root/pull/15242. Provide -DLIBBSDINCPATH=/custom/path/to/bsd when invoking cmake.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:59,deployability,instal,install,59,That doesn't seem to work. I tried setting that var to the install prefix (i.e. my home dir) and to the include directory under that prefix.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/issues/14958:5,reliability,doe,doesn,5,That doesn't seem to work. I tried setting that var to the install prefix (i.e. my home dir) and to the include directory under that prefix.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14958
https://github.com/root-project/root/pull/14960:0,safety,Test,Test,0,Test added in roottest https://github.com/root-project/roottest/pull/1085.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14960
https://github.com/root-project/root/pull/14960:0,testability,Test,Test,0,Test added in roottest https://github.com/root-project/roottest/pull/1085.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14960
https://github.com/root-project/root/issues/14963:18,deployability,releas,release,18,Do you know which release/commit it last worked?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:24,usability,behavi,behavior,24,v6.28.00 shows the same behavior for me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:8,deployability,fail,fails,8,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:32,deployability,patch,patch,32,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:123,integrability,interfac,interface,123,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:146,integrability,wrap,wrapper,146,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:281,integrability,pub,public,281,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:123,interoperability,interfac,interface,123,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:146,interoperability,wrapper,wrapper,146,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:123,modifiability,interfac,interface,123,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:8,reliability,fail,fails,8,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:32,safety,patch,patch,32,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:32,security,patch,patch,32,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:162,security,access,access,162,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:118,deployability,log,logs,118,"Interesting that it never worked in the reproducer. It came in on our side at some point certainly. We don't have the logs of the earlier runs unfortunately. Philippe, do you think TFileMerger should fail fully instead of ""just"" printing the message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:200,deployability,fail,fail,200,"Interesting that it never worked in the reproducer. It came in on our side at some point certainly. We don't have the logs of the earlier runs unfortunately. Philippe, do you think TFileMerger should fail fully instead of ""just"" printing the message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:242,integrability,messag,message,242,"Interesting that it never worked in the reproducer. It came in on our side at some point certainly. We don't have the logs of the earlier runs unfortunately. Philippe, do you think TFileMerger should fail fully instead of ""just"" printing the message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:242,interoperability,messag,message,242,"Interesting that it never worked in the reproducer. It came in on our side at some point certainly. We don't have the logs of the earlier runs unfortunately. Philippe, do you think TFileMerger should fail fully instead of ""just"" printing the message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:200,reliability,fail,fail,200,"Interesting that it never worked in the reproducer. It came in on our side at some point certainly. We don't have the logs of the earlier runs unfortunately. Philippe, do you think TFileMerger should fail fully instead of ""just"" printing the message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:118,safety,log,logs,118,"Interesting that it never worked in the reproducer. It came in on our side at some point certainly. We don't have the logs of the earlier runs unfortunately. Philippe, do you think TFileMerger should fail fully instead of ""just"" printing the message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:118,security,log,logs,118,"Interesting that it never worked in the reproducer. It came in on our side at some point certainly. We don't have the logs of the earlier runs unfortunately. Philippe, do you think TFileMerger should fail fully instead of ""just"" printing the message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14963:118,testability,log,logs,118,"Interesting that it never worked in the reproducer. It came in on our side at some point certainly. We don't have the logs of the earlier runs unfortunately. Philippe, do you think TFileMerger should fail fully instead of ""just"" printing the message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14963
https://github.com/root-project/root/issues/14964:88,availability,error,errors,88,"I don't know how to debug this, but since it's related to modules and it looks like the errors we use to have on MacOS, could it be related to [this commit](https://github.com/root-project/root/commit/440c7303a95ad53ecd0e5ae7d6ebd0f29a733fa6) (@vgvassilev @dpiparo)? At least it's the only change I found so far that can be related to this issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:58,deployability,modul,modules,58,"I don't know how to debug this, but since it's related to modules and it looks like the errors we use to have on MacOS, could it be related to [this commit](https://github.com/root-project/root/commit/440c7303a95ad53ecd0e5ae7d6ebd0f29a733fa6) (@vgvassilev @dpiparo)? At least it's the only change I found so far that can be related to this issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:58,modifiability,modul,modules,58,"I don't know how to debug this, but since it's related to modules and it looks like the errors we use to have on MacOS, could it be related to [this commit](https://github.com/root-project/root/commit/440c7303a95ad53ecd0e5ae7d6ebd0f29a733fa6) (@vgvassilev @dpiparo)? At least it's the only change I found so far that can be related to this issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:88,performance,error,errors,88,"I don't know how to debug this, but since it's related to modules and it looks like the errors we use to have on MacOS, could it be related to [this commit](https://github.com/root-project/root/commit/440c7303a95ad53ecd0e5ae7d6ebd0f29a733fa6) (@vgvassilev @dpiparo)? At least it's the only change I found so far that can be related to this issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:58,safety,modul,modules,58,"I don't know how to debug this, but since it's related to modules and it looks like the errors we use to have on MacOS, could it be related to [this commit](https://github.com/root-project/root/commit/440c7303a95ad53ecd0e5ae7d6ebd0f29a733fa6) (@vgvassilev @dpiparo)? At least it's the only change I found so far that can be related to this issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:88,safety,error,errors,88,"I don't know how to debug this, but since it's related to modules and it looks like the errors we use to have on MacOS, could it be related to [this commit](https://github.com/root-project/root/commit/440c7303a95ad53ecd0e5ae7d6ebd0f29a733fa6) (@vgvassilev @dpiparo)? At least it's the only change I found so far that can be related to this issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:88,usability,error,errors,88,"I don't know how to debug this, but since it's related to modules and it looks like the errors we use to have on MacOS, could it be related to [this commit](https://github.com/root-project/root/commit/440c7303a95ad53ecd0e5ae7d6ebd0f29a733fa6) (@vgvassilev @dpiparo)? At least it's the only change I found so far that can be related to this issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:50,testability,understand,understand,50,"Yes, this is likely the cause. @vgvassilev do you understand why this is happening?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:94,availability,error,error,94,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:150,availability,servic,services,150,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:237,availability,servic,services,237,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:71,deployability,build,build,71,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:123,deployability,build,build,123,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:150,deployability,servic,services,150,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:203,deployability,build,build,203,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:237,deployability,servic,services,237,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:290,deployability,build,build,290,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:100,integrability,messag,message,100,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:150,integrability,servic,services,150,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:237,integrability,servic,services,237,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:100,interoperability,messag,message,100,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:150,modifiability,servic,services,150,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:237,modifiability,servic,services,237,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:94,performance,error,error,94,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:94,safety,error,error,94,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:173,safety,test,testDetails,173,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:189,safety,test,test,189,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:260,safety,test,testDetails,260,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:276,safety,test,test,276,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:173,testability,test,testDetails,173,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:189,testability,test,test,189,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:260,testability,test,testDetails,260,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:276,testability,test,test,276,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:94,usability,error,error,94,"We see more or less the same thing in dev4 now: . Ironically the ""opt"" build gives more of an error message than the debug build. opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763. dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:42,availability,error,error,42,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:257,availability,error,error,257,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:811,availability,error,error,811,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:883,availability,error,error,883,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:264,deployability,modul,module,264,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:278,deployability,build,build,278,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:323,deployability,build,build,323,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:362,deployability,build,build,362,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:391,deployability,modul,module,391,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:473,deployability,modul,module,473,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:597,deployability,Fail,Failed,597,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:612,deployability,modul,module,612,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:655,deployability,build,builds,655,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:737,deployability,build,build,737,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:761,deployability,build,builds,761,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:890,deployability,modul,module,890,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:904,deployability,build,build,904,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:949,deployability,build,build,949,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:988,deployability,build,build,988,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:607,energy efficiency,load,load,607,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:48,integrability,messag,message,48,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:817,integrability,messag,message,817,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:48,interoperability,messag,message,48,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:778,interoperability,platform,platforms,778,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:817,interoperability,messag,message,817,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:1056,interoperability,mismatch,mismatch,1056,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:264,modifiability,modul,module,264,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:391,modifiability,modul,module,391,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:473,modifiability,modul,module,473,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:612,modifiability,modul,module,612,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:890,modifiability,modul,module,890,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:42,performance,error,error,42,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:257,performance,error,error,257,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:607,performance,load,load,607,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:811,performance,error,error,811,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:883,performance,error,error,883,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:597,reliability,Fail,Failed,597,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:42,safety,error,error,42,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:257,safety,error,error,257,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:264,safety,modul,module,264,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:391,safety,modul,module,391,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:473,safety,modul,module,473,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:612,safety,modul,module,612,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:811,safety,error,error,811,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:883,safety,error,error,883,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:890,safety,modul,module,890,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:1046,security,sign,signature,1046,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:42,usability,error,error,42,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:220,usability,interact,interactive,220,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:257,usability,error,error,257,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:424,usability,interact,interactive,424,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:811,usability,error,error,811,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:846,usability,interact,interactive,846,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:883,usability,error,error,883,"Following #14974, we see no change in the error message today:. ```. lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh . lxplus966:~$ python -c ""import ROOT"". <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. [snip]. ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms... which results in an error message like. ```. <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch. ```. )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:114,deployability,patch,patches,114,"Yes, it also affects dev4 (cf. https://github.com/root-project/root/issues/14964#issuecomment-2003453893) == 6.30-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:114,safety,patch,patches,114,"Yes, it also affects dev4 (cf. https://github.com/root-project/root/issues/14964#issuecomment-2003453893) == 6.30-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:114,security,patch,patches,114,"Yes, it also affects dev4 (cf. https://github.com/root-project/root/issues/14964#issuecomment-2003453893) == 6.30-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:37,deployability,build,builds,37,I don't have anything right now that builds 6.28-patches,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:49,deployability,patch,patches,49,I don't have anything right now that builds 6.28-patches,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:49,safety,patch,patches,49,I don't have anything right now that builds 6.28-patches,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:49,security,patch,patches,49,I don't have anything right now that builds 6.28-patches,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:50,deployability,build,building,50,"I cannot reproduce the issue locally, do you mind building tonight with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:187,availability,servic,services,187,We don't do nightly builds on Sunday mornings. I am trying to get a special. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg. [build done now](https://lcgapp-services.cern.ch/spi-jenkins/job/lcg_nightly_pipeline/68885) which has the CMAKE and LLVM Debug build type.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:20,deployability,build,builds,20,We don't do nightly builds on Sunday mornings. I am trying to get a special. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg. [build done now](https://lcgapp-services.cern.ch/spi-jenkins/job/lcg_nightly_pipeline/68885) which has the CMAKE and LLVM Debug build type.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:156,deployability,build,build,156,We don't do nightly builds on Sunday mornings. I am trying to get a special. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg. [build done now](https://lcgapp-services.cern.ch/spi-jenkins/job/lcg_nightly_pipeline/68885) which has the CMAKE and LLVM Debug build type.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:187,deployability,servic,services,187,We don't do nightly builds on Sunday mornings. I am trying to get a special. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg. [build done now](https://lcgapp-services.cern.ch/spi-jenkins/job/lcg_nightly_pipeline/68885) which has the CMAKE and LLVM Debug build type.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:283,deployability,build,build,283,We don't do nightly builds on Sunday mornings. I am trying to get a special. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg. [build done now](https://lcgapp-services.cern.ch/spi-jenkins/job/lcg_nightly_pipeline/68885) which has the CMAKE and LLVM Debug build type.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:187,integrability,servic,services,187,We don't do nightly builds on Sunday mornings. I am trying to get a special. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg. [build done now](https://lcgapp-services.cern.ch/spi-jenkins/job/lcg_nightly_pipeline/68885) which has the CMAKE and LLVM Debug build type.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:187,modifiability,servic,services,187,We don't do nightly builds on Sunday mornings. I am trying to get a special. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg. [build done now](https://lcgapp-services.cern.ch/spi-jenkins/job/lcg_nightly_pipeline/68885) which has the CMAKE and LLVM Debug build type.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:16,deployability,instal,installation,16,@vgvassilev The installation with LLVM Debug is there now. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg/setup.sh. $ grep LLVM /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3debug/Sun/ROOT/HEAD/x86_64-el9-gcc13-dbg/logs/ROOT-HEAD-configure.log. -- Building LLVM in 'Debug' mode. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:260,deployability,log,logs,260,@vgvassilev The installation with LLVM Debug is there now. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg/setup.sh. $ grep LLVM /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3debug/Sun/ROOT/HEAD/x86_64-el9-gcc13-dbg/logs/ROOT-HEAD-configure.log. -- Building LLVM in 'Debug' mode. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:285,deployability,log,log,285,@vgvassilev The installation with LLVM Debug is there now. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg/setup.sh. $ grep LLVM /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3debug/Sun/ROOT/HEAD/x86_64-el9-gcc13-dbg/logs/ROOT-HEAD-configure.log. -- Building LLVM in 'Debug' mode. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:293,deployability,Build,Building,293,@vgvassilev The installation with LLVM Debug is there now. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg/setup.sh. $ grep LLVM /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3debug/Sun/ROOT/HEAD/x86_64-el9-gcc13-dbg/logs/ROOT-HEAD-configure.log. -- Building LLVM in 'Debug' mode. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:275,integrability,configur,configure,275,@vgvassilev The installation with LLVM Debug is there now. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg/setup.sh. $ grep LLVM /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3debug/Sun/ROOT/HEAD/x86_64-el9-gcc13-dbg/logs/ROOT-HEAD-configure.log. -- Building LLVM in 'Debug' mode. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:275,modifiability,configur,configure,275,@vgvassilev The installation with LLVM Debug is there now. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg/setup.sh. $ grep LLVM /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3debug/Sun/ROOT/HEAD/x86_64-el9-gcc13-dbg/logs/ROOT-HEAD-configure.log. -- Building LLVM in 'Debug' mode. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:260,safety,log,logs,260,@vgvassilev The installation with LLVM Debug is there now. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg/setup.sh. $ grep LLVM /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3debug/Sun/ROOT/HEAD/x86_64-el9-gcc13-dbg/logs/ROOT-HEAD-configure.log. -- Building LLVM in 'Debug' mode. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:285,safety,log,log,285,@vgvassilev The installation with LLVM Debug is there now. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg/setup.sh. $ grep LLVM /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3debug/Sun/ROOT/HEAD/x86_64-el9-gcc13-dbg/logs/ROOT-HEAD-configure.log. -- Building LLVM in 'Debug' mode. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:260,security,log,logs,260,@vgvassilev The installation with LLVM Debug is there now. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg/setup.sh. $ grep LLVM /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3debug/Sun/ROOT/HEAD/x86_64-el9-gcc13-dbg/logs/ROOT-HEAD-configure.log. -- Building LLVM in 'Debug' mode. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:275,security,configur,configure,275,@vgvassilev The installation with LLVM Debug is there now. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg/setup.sh. $ grep LLVM /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3debug/Sun/ROOT/HEAD/x86_64-el9-gcc13-dbg/logs/ROOT-HEAD-configure.log. -- Building LLVM in 'Debug' mode. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:285,security,log,log,285,@vgvassilev The installation with LLVM Debug is there now. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg/setup.sh. $ grep LLVM /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3debug/Sun/ROOT/HEAD/x86_64-el9-gcc13-dbg/logs/ROOT-HEAD-configure.log. -- Building LLVM in 'Debug' mode. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:260,testability,log,logs,260,@vgvassilev The installation with LLVM Debug is there now. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg/setup.sh. $ grep LLVM /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3debug/Sun/ROOT/HEAD/x86_64-el9-gcc13-dbg/logs/ROOT-HEAD-configure.log. -- Building LLVM in 'Debug' mode. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:285,testability,log,log,285,@vgvassilev The installation with LLVM Debug is there now. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3debug/latest/x86_64-el9-gcc13-dbg/setup.sh. $ grep LLVM /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3debug/Sun/ROOT/HEAD/x86_64-el9-gcc13-dbg/logs/ROOT-HEAD-configure.log. -- Building LLVM in 'Debug' mode. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:24,safety,test,test,24,"@andresailer, could you test this pr: https://github.com/root-project/root/pull/15043",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:24,testability,test,test,24,"@andresailer, could you test this pr: https://github.com/root-project/root/pull/15043",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:78,deployability,modul,modules,78,"I put the commit into the dev3debug of today, and it fixes the issue with the modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:78,modifiability,modul,modules,78,"I put the commit into the dev3debug of today, and it fixes the issue with the modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:78,safety,modul,modules,78,"I put the commit into the dev3debug of today, and it fixes the issue with the modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:33,usability,close,close,33,thanks @andresailer I propose to close only after we see a round of successful LCG nightlies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:102,deployability,patch,patches,102,Relevant PRs have been merged:. - master: https://github.com/root-project/root/pull/15043. - v6-30-00-patches: https://github.com/root-project/root/pull/15050. We'll see tomorrow how dev3 and dev4 go.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:102,safety,patch,patches,102,Relevant PRs have been merged:. - master: https://github.com/root-project/root/pull/15043. - v6-30-00-patches: https://github.com/root-project/root/pull/15050. We'll see tomorrow how dev3 and dev4 go.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:102,security,patch,patches,102,Relevant PRs have been merged:. - master: https://github.com/root-project/root/pull/15043. - v6-30-00-patches: https://github.com/root-project/root/pull/15050. We'll see tomorrow how dev3 and dev4 go.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:88,deployability,updat,updated,88,Thanks! Things are looking good for us in dev3 and dev4. (dev3debug is not going to get updated and will be removed from CVMFS again),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:88,safety,updat,updated,88,Thanks! Things are looking good for us in dev3 and dev4. (dev3debug is not going to get updated and will be removed from CVMFS again),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/issues/14964:88,security,updat,updated,88,Thanks! Things are looking good for us in dev3 and dev4. (dev3debug is not going to get updated and will be removed from CVMFS again),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14964
https://github.com/root-project/root/pull/14967:20,deployability,patch,patch,20,"The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:4,modifiability,concern,concern,4,"The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:60,reliability,pra,practically,60,"The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:178,reliability,doe,does,178,"The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:20,safety,patch,patch,20,"The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:91,safety,input,inputs,91,"The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:112,safety,input,inputs,112,"The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:20,security,patch,patch,20,"The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:4,testability,concern,concern,4,"The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:91,usability,input,inputs,91,"The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:112,usability,input,inputs,112,"The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:376,availability,consist,consistent,376,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:22,deployability,patch,patch,22,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:334,deployability,patch,patch,334,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:6,modifiability,concern,concern,6,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:62,reliability,pra,practically,62,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:180,reliability,doe,does,180,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:22,safety,patch,patch,22,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:93,safety,input,inputs,93,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:114,safety,input,inputs,114,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:334,safety,patch,patch,334,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:22,security,patch,patch,22,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:334,security,patch,patch,334,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:6,testability,concern,concern,6,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:93,usability,input,inputs,93,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:114,usability,input,inputs,114,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:376,usability,consist,consistent,376,"> The concern on this patch is that due to the ( `<<32` ) are practically limited to 32 bits inputs. Whenever the inputs goes past this, the result will become ambiguous. Related, does this fix the actual use (odd maybe unsupported) use case described in the report? Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. Also, it seems more consistent with the other function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:117,availability,error,error,117,"> Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. I guess we should warn or error out if `( minor> 2^32 and major != 0) || (major> 2^32)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:69,deployability,patch,patch,69,"> Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. I guess we should warn or error out if `( minor> 2^32 and major != 0) || (major> 2^32)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:117,performance,error,error,117,"> Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. I guess we should warn or error out if `( minor> 2^32 and major != 0) || (major> 2^32)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:69,safety,patch,patch,69,"> Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. I guess we should warn or error out if `( minor> 2^32 and major != 0) || (major> 2^32)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:117,safety,error,error,117,"> Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. I guess we should warn or error out if `( minor> 2^32 and major != 0) || (major> 2^32)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:69,security,patch,patch,69,"> Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. I guess we should warn or error out if `( minor> 2^32 and major != 0) || (major> 2^32)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:117,usability,error,error,117,"> Yep, I guess that if you use minor> 2^23 with major = 0, then this patch would solve it. I guess we should warn or error out if `( minor> 2^32 and major != 0) || (major> 2^32)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:128,availability,error,error-due-to-cast-long-int-t,128,@rdisipio do you have still by chance the ROOT file example from your post https://root-forum.cern.ch/t/ttree-getentrywithindex-error-due-to-cast-long-int-t/28316? That we could convert into a test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:128,performance,error,error-due-to-cast-long-int-t,128,@rdisipio do you have still by chance the ROOT file example from your post https://root-forum.cern.ch/t/ttree-getentrywithindex-error-due-to-cast-long-int-t/28316? That we could convert into a test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:128,safety,error,error-due-to-cast-long-int-t,128,@rdisipio do you have still by chance the ROOT file example from your post https://root-forum.cern.ch/t/ttree-getentrywithindex-error-due-to-cast-long-int-t/28316? That we could convert into a test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:193,safety,test,test,193,@rdisipio do you have still by chance the ROOT file example from your post https://root-forum.cern.ch/t/ttree-getentrywithindex-error-due-to-cast-long-int-t/28316? That we could convert into a test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:193,testability,test,test,193,@rdisipio do you have still by chance the ROOT file example from your post https://root-forum.cern.ch/t/ttree-getentrywithindex-error-due-to-cast-long-int-t/28316? That we could convert into a test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:128,usability,error,error-due-to-cast-long-int-t,128,@rdisipio do you have still by chance the ROOT file example from your post https://root-forum.cern.ch/t/ttree-getentrywithindex-error-due-to-cast-long-int-t/28316? That we could convert into a test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:166,modifiability,variab,variables,166,"@vepadulano @pcanal I just noticed that all the 31 bit ugly stuff was due to an outdated documentation. It's no longer the case, minor and major have now independent variables both 64-bits. So this simplifies things significantly. See https://github.com/root-project/root/commit/19b0ca55fe1643eb07c9bca362b64a4d2111674f.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:216,security,sign,significantly,216,"@vepadulano @pcanal I just noticed that all the 31 bit ugly stuff was due to an outdated documentation. It's no longer the case, minor and major have now independent variables both 64-bits. So this simplifies things significantly. See https://github.com/root-project/root/commit/19b0ca55fe1643eb07c9bca362b64a4d2111674f.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:198,testability,simpl,simplifies,198,"@vepadulano @pcanal I just noticed that all the 31 bit ugly stuff was due to an outdated documentation. It's no longer the case, minor and major have now independent variables both 64-bits. So this simplifies things significantly. See https://github.com/root-project/root/commit/19b0ca55fe1643eb07c9bca362b64a4d2111674f.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:89,usability,document,documentation,89,"@vepadulano @pcanal I just noticed that all the 31 bit ugly stuff was due to an outdated documentation. It's no longer the case, minor and major have now independent variables both 64-bits. So this simplifies things significantly. See https://github.com/root-project/root/commit/19b0ca55fe1643eb07c9bca362b64a4d2111674f.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:198,usability,simpl,simplifies,198,"@vepadulano @pcanal I just noticed that all the 31 bit ugly stuff was due to an outdated documentation. It's no longer the case, minor and major have now independent variables both 64-bits. So this simplifies things significantly. See https://github.com/root-project/root/commit/19b0ca55fe1643eb07c9bca362b64a4d2111674f.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:22,availability,failur,failures,22,"I believe the current failures are related to the roottest branch not being up-to-date with the latest master and the recently merged https://github.com/root-project/root/pull/15021 , other than the failures already present in the sibling roottest PR at https://github.com/root-project/roottest/pull/1090. I don't see the failures on a PR based on the latest master commit https://github.com/root-project/root/pull/15184",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:199,availability,failur,failures,199,"I believe the current failures are related to the roottest branch not being up-to-date with the latest master and the recently merged https://github.com/root-project/root/pull/15021 , other than the failures already present in the sibling roottest PR at https://github.com/root-project/roottest/pull/1090. I don't see the failures on a PR based on the latest master commit https://github.com/root-project/root/pull/15184",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:322,availability,failur,failures,322,"I believe the current failures are related to the roottest branch not being up-to-date with the latest master and the recently merged https://github.com/root-project/root/pull/15021 , other than the failures already present in the sibling roottest PR at https://github.com/root-project/roottest/pull/1090. I don't see the failures on a PR based on the latest master commit https://github.com/root-project/root/pull/15184",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:22,deployability,fail,failures,22,"I believe the current failures are related to the roottest branch not being up-to-date with the latest master and the recently merged https://github.com/root-project/root/pull/15021 , other than the failures already present in the sibling roottest PR at https://github.com/root-project/roottest/pull/1090. I don't see the failures on a PR based on the latest master commit https://github.com/root-project/root/pull/15184",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:199,deployability,fail,failures,199,"I believe the current failures are related to the roottest branch not being up-to-date with the latest master and the recently merged https://github.com/root-project/root/pull/15021 , other than the failures already present in the sibling roottest PR at https://github.com/root-project/roottest/pull/1090. I don't see the failures on a PR based on the latest master commit https://github.com/root-project/root/pull/15184",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:322,deployability,fail,failures,322,"I believe the current failures are related to the roottest branch not being up-to-date with the latest master and the recently merged https://github.com/root-project/root/pull/15021 , other than the failures already present in the sibling roottest PR at https://github.com/root-project/roottest/pull/1090. I don't see the failures on a PR based on the latest master commit https://github.com/root-project/root/pull/15184",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:14,energy efficiency,current,current,14,"I believe the current failures are related to the roottest branch not being up-to-date with the latest master and the recently merged https://github.com/root-project/root/pull/15021 , other than the failures already present in the sibling roottest PR at https://github.com/root-project/roottest/pull/1090. I don't see the failures on a PR based on the latest master commit https://github.com/root-project/root/pull/15184",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:22,performance,failur,failures,22,"I believe the current failures are related to the roottest branch not being up-to-date with the latest master and the recently merged https://github.com/root-project/root/pull/15021 , other than the failures already present in the sibling roottest PR at https://github.com/root-project/roottest/pull/1090. I don't see the failures on a PR based on the latest master commit https://github.com/root-project/root/pull/15184",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:199,performance,failur,failures,199,"I believe the current failures are related to the roottest branch not being up-to-date with the latest master and the recently merged https://github.com/root-project/root/pull/15021 , other than the failures already present in the sibling roottest PR at https://github.com/root-project/roottest/pull/1090. I don't see the failures on a PR based on the latest master commit https://github.com/root-project/root/pull/15184",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:322,performance,failur,failures,322,"I believe the current failures are related to the roottest branch not being up-to-date with the latest master and the recently merged https://github.com/root-project/root/pull/15021 , other than the failures already present in the sibling roottest PR at https://github.com/root-project/roottest/pull/1090. I don't see the failures on a PR based on the latest master commit https://github.com/root-project/root/pull/15184",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:22,reliability,fail,failures,22,"I believe the current failures are related to the roottest branch not being up-to-date with the latest master and the recently merged https://github.com/root-project/root/pull/15021 , other than the failures already present in the sibling roottest PR at https://github.com/root-project/roottest/pull/1090. I don't see the failures on a PR based on the latest master commit https://github.com/root-project/root/pull/15184",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:199,reliability,fail,failures,199,"I believe the current failures are related to the roottest branch not being up-to-date with the latest master and the recently merged https://github.com/root-project/root/pull/15021 , other than the failures already present in the sibling roottest PR at https://github.com/root-project/roottest/pull/1090. I don't see the failures on a PR based on the latest master commit https://github.com/root-project/root/pull/15184",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:322,reliability,fail,failures,322,"I believe the current failures are related to the roottest branch not being up-to-date with the latest master and the recently merged https://github.com/root-project/root/pull/15021 , other than the failures already present in the sibling roottest PR at https://github.com/root-project/roottest/pull/1090. I don't see the failures on a PR based on the latest master commit https://github.com/root-project/root/pull/15184",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:24,availability,failur,failures,24,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:24,deployability,fail,failures,24,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:395,deployability,build,build,395,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:16,energy efficiency,current,current,16,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:24,performance,failur,failures,24,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:24,reliability,fail,failures,24,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:180,safety,test,test,180,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:251,safety,test,test,251,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:284,safety,test,tests,284,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:180,testability,test,test,180,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:251,testability,test,test,251,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:264,testability,simpl,simply,264,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:284,testability,test,tests,284,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:113,usability,Close,Close,113,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:264,usability,simpl,simply,264,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14967:526,usability,Close,Close,526,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:. * Rebase the master onto the new PR branch. * Add a new commit to the PR branch. * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14967
https://github.com/root-project/root/pull/14968:47,safety,test,test,47,Thanks for this code. Could you also provide a test that highlights the problem being solved?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:47,testability,test,test,47,Thanks for this code. Could you also provide a test that highlights the problem being solved?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:39,energy efficiency,current,currently,39,"> Although root does not support C++20 currently. Sorry for the passing by question, but how did you come to this conclusion? ROOT does support C++20 since a while. Maybe you are not encountering a specific feature for your use case that makes things confusing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:198,interoperability,specif,specific,198,"> Although root does not support C++20 currently. Sorry for the passing by question, but how did you come to this conclusion? ROOT does support C++20 since a while. Maybe you are not encountering a specific feature for your use case that makes things confusing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:16,reliability,doe,does,16,"> Although root does not support C++20 currently. Sorry for the passing by question, but how did you come to this conclusion? ROOT does support C++20 since a while. Maybe you are not encountering a specific feature for your use case that makes things confusing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:131,reliability,doe,does,131,"> Although root does not support C++20 currently. Sorry for the passing by question, but how did you come to this conclusion? ROOT does support C++20 since a while. Maybe you are not encountering a specific feature for your use case that makes things confusing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:25,usability,support,support,25,"> Although root does not support C++20 currently. Sorry for the passing by question, but how did you come to this conclusion? ROOT does support C++20 since a while. Maybe you are not encountering a specific feature for your use case that makes things confusing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:136,usability,support,support,136,"> Although root does not support C++20 currently. Sorry for the passing by question, but how did you come to this conclusion? ROOT does support C++20 since a while. Maybe you are not encountering a specific feature for your use case that makes things confusing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:61,safety,test,test,61,This seems reasonable to me. Is there any chance on adding a test in `interpreter/cling/test`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:88,safety,test,test,88,This seems reasonable to me. Is there any chance on adding a test in `interpreter/cling/test`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:61,testability,test,test,61,This seems reasonable to me. Is there any chance on adding a test in `interpreter/cling/test`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:88,testability,test,test,88,This seems reasonable to me. Is there any chance on adding a test in `interpreter/cling/test`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:1017,availability,error,error,1017," . I've added the test to `Regression.C`. Would you please take a look? Below is result of the test when this patch is _not_ applied. ```. FAIL: Cling :: Prompt/ValuePrinter/Regression.C (10 of 11). ******************** TEST 'Cling :: Prompt/ValuePrinter/Regression.C' FAILED ********************. Script:. --. : 'RUN: at line 9'; cat /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/cling --nologo -I/Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/tools/clang/include -Xclang -verify 2>&1 | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/FileCheck /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. --. Exit Code: 1. Command Output (stderr):. --. /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C:206:11: error: CHECK: expected string not found in input. // CHECK: { 0, 1, 2, 3, 4 }. ^. <stdin>:35:28: note: scanning from here. (PR180::Foo &) @0x10cf6f060. ^. <stdin>:40:114: note: possible intended match here. File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here. ^. Input file: <stdin>. Check file: /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. -dump-input=help explains the following input dump. Input was:. <<<<<<. . . . 30: Using raw input . 31: Not using raw input . 32: (WithUnnamed::Y &) @0x10cf5b000 . 33: (WithUnnamed::Y &) @0x10cf61000 . 34: (X) @0x600000f337a0 . 35: (PR180::Foo &) @0x10cf6f060 . check:206'0 X error: no match found. 36: (PR14968::non_common_range) ERROR in cling's callPrintValue(): missing value string. . check:20",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:1898,availability,error,error,1898,"derr):. --. /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C:206:11: error: CHECK: expected string not found in input. // CHECK: { 0, 1, 2, 3, 4 }. ^. <stdin>:35:28: note: scanning from here. (PR180::Foo &) @0x10cf6f060. ^. <stdin>:40:114: note: possible intended match here. File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here. ^. Input file: <stdin>. Check file: /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. -dump-input=help explains the following input dump. Input was:. <<<<<<. . . . 30: Using raw input . 31: Not using raw input . 32: (WithUnnamed::Y &) @0x10cf5b000 . 33: (WithUnnamed::Y &) @0x10cf61000 . 34: (X) @0x600000f337a0 . 35: (PR180::Foo &) @0x10cf6f060 . check:206'0 X error: no match found. 36: (PR14968::non_common_range) ERROR in cling's callPrintValue(): missing value string. . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 37: error: 'error' diagnostics seen but not expected: . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 38: File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: 'auto' deduced as 'iterator' in declaration of 'iter' and deduced as 'sentinel' in declaration of 'iterEnd' . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 39: error: 'note' diagnostics seen but not expected: . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 40: File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/clin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:1953,availability,ERROR,ERROR,1953,"erpreter/cling/test/Prompt/ValuePrinter/Regression.C:206:11: error: CHECK: expected string not found in input. // CHECK: { 0, 1, 2, 3, 4 }. ^. <stdin>:35:28: note: scanning from here. (PR180::Foo &) @0x10cf6f060. ^. <stdin>:40:114: note: possible intended match here. File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here. ^. Input file: <stdin>. Check file: /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. -dump-input=help explains the following input dump. Input was:. <<<<<<. . . . 30: Using raw input . 31: Not using raw input . 32: (WithUnnamed::Y &) @0x10cf5b000 . 33: (WithUnnamed::Y &) @0x10cf61000 . 34: (X) @0x600000f337a0 . 35: (PR180::Foo &) @0x10cf6f060 . check:206'0 X error: no match found. 36: (PR14968::non_common_range) ERROR in cling's callPrintValue(): missing value string. . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 37: error: 'error' diagnostics seen but not expected: . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 38: File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: 'auto' deduced as 'iterator' in declaration of 'iter' and deduced as 'sentinel' in declaration of 'iterEnd' . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 39: error: 'note' diagnostics seen but not expected: . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 40: File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:2115,availability,error,error,2115,: scanning from here. (PR180::Foo &) @0x10cf6f060. ^. <stdin>:40:114: note: possible intended match here. File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here. ^. Input file: <stdin>. Check file: /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. -dump-input=help explains the following input dump. Input was:. <<<<<<. . . . 30: Using raw input . 31: Not using raw input . 32: (WithUnnamed::Y &) @0x10cf5b000 . 33: (WithUnnamed::Y &) @0x10cf61000 . 34: (X) @0x600000f337a0 . 35: (PR180::Foo &) @0x10cf6f060 . check:206'0 X error: no match found. 36: (PR14968::non_common_range) ERROR in cling's callPrintValue(): missing value string. . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 37: error: 'error' diagnostics seen but not expected: . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 38: File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: 'auto' deduced as 'iterator' in declaration of 'iter' and deduced as 'sentinel' in declaration of 'iterEnd' . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 39: error: 'note' diagnostics seen but not expected: . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 40: File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here . check:206'0 ~~~~~~~~~~~~~~,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:2123,availability,error,error,2123,ng from here. (PR180::Foo &) @0x10cf6f060. ^. <stdin>:40:114: note: possible intended match here. File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here. ^. Input file: <stdin>. Check file: /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. -dump-input=help explains the following input dump. Input was:. <<<<<<. . . . 30: Using raw input . 31: Not using raw input . 32: (WithUnnamed::Y &) @0x10cf5b000 . 33: (WithUnnamed::Y &) @0x10cf61000 . 34: (X) @0x600000f337a0 . 35: (PR180::Foo &) @0x10cf6f060 . check:206'0 X error: no match found. 36: (PR14968::non_common_range) ERROR in cling's callPrintValue(): missing value string. . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 37: error: 'error' diagnostics seen but not expected: . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 38: File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: 'auto' deduced as 'iterator' in declaration of 'iter' and deduced as 'sentinel' in declaration of 'iterEnd' . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 39: error: 'note' diagnostics seen but not expected: . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 40: File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:2707,availability,error,error,2707,raw input . 31: Not using raw input . 32: (WithUnnamed::Y &) @0x10cf5b000 . 33: (WithUnnamed::Y &) @0x10cf61000 . 34: (X) @0x600000f337a0 . 35: (PR180::Foo &) @0x10cf6f060 . check:206'0 X error: no match found. 36: (PR14968::non_common_range) ERROR in cling's callPrintValue(): missing value string. . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 37: error: 'error' diagnostics seen but not expected: . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 38: File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: 'auto' deduced as 'iterator' in declaration of 'iter' and deduced as 'sentinel' in declaration of 'iterEnd' . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 39: error: 'note' diagnostics seen but not expected: . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 40: File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. check:206'1 ? possible intended match. 41: (frontend): in instantiation of function template specialization 'cling::printValue<PR14968::non_common_range>' requested here . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. >>>>>>. --. *************,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:130,deployability,patch,patch,130,"@dpiparo @vgvassilev . I've added the test to `Regression.C`. Would you please take a look? Below is result of the test when this patch is _not_ applied. ```. FAIL: Cling :: Prompt/ValuePrinter/Regression.C (10 of 11). ******************** TEST 'Cling :: Prompt/ValuePrinter/Regression.C' FAILED ********************. Script:. --. : 'RUN: at line 9'; cat /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/cling --nologo -I/Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/tools/clang/include -Xclang -verify 2>&1 | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/FileCheck /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. --. Exit Code: 1. Command Output (stderr):. --. /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C:206:11: error: CHECK: expected string not found in input. // CHECK: { 0, 1, 2, 3, 4 }. ^. <stdin>:35:28: note: scanning from here. (PR180::Foo &) @0x10cf6f060. ^. <stdin>:40:114: note: possible intended match here. File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here. ^. Input file: <stdin>. Check file: /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. -dump-input=help explains the following input dump. Input was:. <<<<<<. . . . 30: Using raw input . 31: Not using raw input . 32: (WithUnnamed::Y &) @0x10cf5b000 . 33: (WithUnnamed::Y &) @0x10cf61000 . 34: (X) @0x600000f337a0 . 35: (PR180::Foo &) @0x10cf6f060 . check:206'0 X error: no match found. 36: (PR14968::non_common_range) ERROR in cling's callPrintValue(): missing valu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:159,deployability,FAIL,FAIL,159,"@dpiparo @vgvassilev . I've added the test to `Regression.C`. Would you please take a look? Below is result of the test when this patch is _not_ applied. ```. FAIL: Cling :: Prompt/ValuePrinter/Regression.C (10 of 11). ******************** TEST 'Cling :: Prompt/ValuePrinter/Regression.C' FAILED ********************. Script:. --. : 'RUN: at line 9'; cat /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/cling --nologo -I/Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/tools/clang/include -Xclang -verify 2>&1 | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/FileCheck /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. --. Exit Code: 1. Command Output (stderr):. --. /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C:206:11: error: CHECK: expected string not found in input. // CHECK: { 0, 1, 2, 3, 4 }. ^. <stdin>:35:28: note: scanning from here. (PR180::Foo &) @0x10cf6f060. ^. <stdin>:40:114: note: possible intended match here. File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here. ^. Input file: <stdin>. Check file: /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. -dump-input=help explains the following input dump. Input was:. <<<<<<. . . . 30: Using raw input . 31: Not using raw input . 32: (WithUnnamed::Y &) @0x10cf5b000 . 33: (WithUnnamed::Y &) @0x10cf61000 . 34: (X) @0x600000f337a0 . 35: (PR180::Foo &) @0x10cf6f060 . check:206'0 X error: no match found. 36: (PR14968::non_common_range) ERROR in cling's callPrintValue(): missing valu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:289,deployability,FAIL,FAILED,289,"@dpiparo @vgvassilev . I've added the test to `Regression.C`. Would you please take a look? Below is result of the test when this patch is _not_ applied. ```. FAIL: Cling :: Prompt/ValuePrinter/Regression.C (10 of 11). ******************** TEST 'Cling :: Prompt/ValuePrinter/Regression.C' FAILED ********************. Script:. --. : 'RUN: at line 9'; cat /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/cling --nologo -I/Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/tools/clang/include -Xclang -verify 2>&1 | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/FileCheck /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. --. Exit Code: 1. Command Output (stderr):. --. /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C:206:11: error: CHECK: expected string not found in input. // CHECK: { 0, 1, 2, 3, 4 }. ^. <stdin>:35:28: note: scanning from here. (PR180::Foo &) @0x10cf6f060. ^. <stdin>:40:114: note: possible intended match here. File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here. ^. Input file: <stdin>. Check file: /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. -dump-input=help explains the following input dump. Input was:. <<<<<<. . . . 30: Using raw input . 31: Not using raw input . 32: (WithUnnamed::Y &) @0x10cf5b000 . 33: (WithUnnamed::Y &) @0x10cf61000 . 34: (X) @0x600000f337a0 . 35: (PR180::Foo &) @0x10cf6f060 . check:206'0 X error: no match found. 36: (PR14968::non_common_range) ERROR in cling's callPrintValue(): missing valu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:496,deployability,build,build,496,"@dpiparo @vgvassilev . I've added the test to `Regression.C`. Would you please take a look? Below is result of the test when this patch is _not_ applied. ```. FAIL: Cling :: Prompt/ValuePrinter/Regression.C (10 of 11). ******************** TEST 'Cling :: Prompt/ValuePrinter/Regression.C' FAILED ********************. Script:. --. : 'RUN: at line 9'; cat /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/cling --nologo -I/Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/tools/clang/include -Xclang -verify 2>&1 | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/FileCheck /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. --. Exit Code: 1. Command Output (stderr):. --. /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C:206:11: error: CHECK: expected string not found in input. // CHECK: { 0, 1, 2, 3, 4 }. ^. <stdin>:35:28: note: scanning from here. (PR180::Foo &) @0x10cf6f060. ^. <stdin>:40:114: note: possible intended match here. File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here. ^. Input file: <stdin>. Check file: /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. -dump-input=help explains the following input dump. Input was:. <<<<<<. . . . 30: Using raw input . 31: Not using raw input . 32: (WithUnnamed::Y &) @0x10cf5b000 . 33: (WithUnnamed::Y &) @0x10cf61000 . 34: (X) @0x600000f337a0 . 35: (PR180::Foo &) @0x10cf6f060 . check:206'0 X error: no match found. 36: (PR14968::non_common_range) ERROR in cling's callPrintValue(): missing valu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:596,deployability,build,build,596,"@dpiparo @vgvassilev . I've added the test to `Regression.C`. Would you please take a look? Below is result of the test when this patch is _not_ applied. ```. FAIL: Cling :: Prompt/ValuePrinter/Regression.C (10 of 11). ******************** TEST 'Cling :: Prompt/ValuePrinter/Regression.C' FAILED ********************. Script:. --. : 'RUN: at line 9'; cat /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/cling --nologo -I/Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/tools/clang/include -Xclang -verify 2>&1 | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/FileCheck /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. --. Exit Code: 1. Command Output (stderr):. --. /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C:206:11: error: CHECK: expected string not found in input. // CHECK: { 0, 1, 2, 3, 4 }. ^. <stdin>:35:28: note: scanning from here. (PR180::Foo &) @0x10cf6f060. ^. <stdin>:40:114: note: possible intended match here. File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here. ^. Input file: <stdin>. Check file: /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. -dump-input=help explains the following input dump. Input was:. <<<<<<. . . . 30: Using raw input . 31: Not using raw input . 32: (WithUnnamed::Y &) @0x10cf5b000 . 33: (WithUnnamed::Y &) @0x10cf61000 . 34: (X) @0x600000f337a0 . 35: (PR180::Foo &) @0x10cf6f060 . check:206'0 X error: no match found. 36: (PR14968::non_common_range) ERROR in cling's callPrintValue(): missing valu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:718,deployability,build,build,718,"@dpiparo @vgvassilev . I've added the test to `Regression.C`. Would you please take a look? Below is result of the test when this patch is _not_ applied. ```. FAIL: Cling :: Prompt/ValuePrinter/Regression.C (10 of 11). ******************** TEST 'Cling :: Prompt/ValuePrinter/Regression.C' FAILED ********************. Script:. --. : 'RUN: at line 9'; cat /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/cling --nologo -I/Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/tools/clang/include -Xclang -verify 2>&1 | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/FileCheck /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. --. Exit Code: 1. Command Output (stderr):. --. /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C:206:11: error: CHECK: expected string not found in input. // CHECK: { 0, 1, 2, 3, 4 }. ^. <stdin>:35:28: note: scanning from here. (PR180::Foo &) @0x10cf6f060. ^. <stdin>:40:114: note: possible intended match here. File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here. ^. Input file: <stdin>. Check file: /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. -dump-input=help explains the following input dump. Input was:. <<<<<<. . . . 30: Using raw input . 31: Not using raw input . 32: (WithUnnamed::Y &) @0x10cf5b000 . 33: (WithUnnamed::Y &) @0x10cf61000 . 34: (X) @0x600000f337a0 . 35: (PR180::Foo &) @0x10cf6f060 . check:206'0 X error: no match found. 36: (PR14968::non_common_range) ERROR in cling's callPrintValue(): missing valu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:3741,deployability,Fail,Failed,3741,ERROR in cling's callPrintValue(): missing value string. . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 37: error: 'error' diagnostics seen but not expected: . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 38: File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: 'auto' deduced as 'iterator' in declaration of 'iter' and deduced as 'sentinel' in declaration of 'iterEnd' . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 39: error: 'note' diagnostics seen but not expected: . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 40: File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. check:206'1 ? possible intended match. 41: (frontend): in instantiation of function template specialization 'cling::printValue<PR14968::non_common_range>' requested here . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. >>>>>>. --. ********************. ********************. Failed Tests (1):. Cling :: Prompt/ValuePrinter/Regression.C. ```. -----. @vepadulano What I meant was that the ROOT(Cling) _interpreter_ doesn't support C++20 syntax and libraries AFAIK. Sorry for the confusion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:1017,performance,error,error,1017," . I've added the test to `Regression.C`. Would you please take a look? Below is result of the test when this patch is _not_ applied. ```. FAIL: Cling :: Prompt/ValuePrinter/Regression.C (10 of 11). ******************** TEST 'Cling :: Prompt/ValuePrinter/Regression.C' FAILED ********************. Script:. --. : 'RUN: at line 9'; cat /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/cling --nologo -I/Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/tools/clang/include -Xclang -verify 2>&1 | /Users/yonggyulee/Documents/GitHub/root/my-build/interpreter/llvm-project/llvm/bin/FileCheck /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. --. Exit Code: 1. Command Output (stderr):. --. /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C:206:11: error: CHECK: expected string not found in input. // CHECK: { 0, 1, 2, 3, 4 }. ^. <stdin>:35:28: note: scanning from here. (PR180::Foo &) @0x10cf6f060. ^. <stdin>:40:114: note: possible intended match here. File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here. ^. Input file: <stdin>. Check file: /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. -dump-input=help explains the following input dump. Input was:. <<<<<<. . . . 30: Using raw input . 31: Not using raw input . 32: (WithUnnamed::Y &) @0x10cf5b000 . 33: (WithUnnamed::Y &) @0x10cf61000 . 34: (X) @0x600000f337a0 . 35: (PR180::Foo &) @0x10cf6f060 . check:206'0 X error: no match found. 36: (PR14968::non_common_range) ERROR in cling's callPrintValue(): missing value string. . check:20",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
https://github.com/root-project/root/pull/14968:1898,performance,error,error,1898,"derr):. --. /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C:206:11: error: CHECK: expected string not found in input. // CHECK: { 0, 1, 2, 3, 4 }. ^. <stdin>:35:28: note: scanning from here. (PR180::Foo &) @0x10cf6f060. ^. <stdin>:40:114: note: possible intended match here. File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<PR14968::non_common_range>' requested here. ^. Input file: <stdin>. Check file: /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/test/Prompt/ValuePrinter/Regression.C. -dump-input=help explains the following input dump. Input was:. <<<<<<. . . . 30: Using raw input . 31: Not using raw input . 32: (WithUnnamed::Y &) @0x10cf5b000 . 33: (WithUnnamed::Y &) @0x10cf61000 . 34: (X) @0x600000f337a0 . 35: (PR180::Foo &) @0x10cf6f060 . check:206'0 X error: no match found. 36: (PR14968::non_common_range) ERROR in cling's callPrintValue(): missing value string. . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 37: error: 'error' diagnostics seen but not expected: . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 38: File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/cling/Interpreter/RuntimePrintValue.h Line 0: 'auto' deduced as 'iterator' in declaration of 'iter' and deduced as 'sentinel' in declaration of 'iterEnd' . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 39: error: 'note' diagnostics seen but not expected: . check:206'0 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 40: File /Users/yonggyulee/Documents/GitHub/root/interpreter/cling/include/clin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14968
