id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/13909:152,safety,patch,patches,152,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 3; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13890. - https://github.com/root-project/root/pull/13896. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13891.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13909
https://github.com/root-project/root/pull/13909:48,security,patch,patches,48,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 3; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13890. - https://github.com/root-project/root/pull/13896. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13891.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13909
https://github.com/root-project/root/pull/13909:152,security,patch,patches,152,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 3; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13890. - https://github.com/root-project/root/pull/13896. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13891.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13909
https://github.com/root-project/root/issues/13910:13,availability,state,state,13,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:366,availability,failur,failure,366,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1122,availability,error,errors,1122,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1450,availability,Operat,Operating,1450,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:235,deployability,fail,fails,235,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:366,deployability,fail,failure,366,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:423,deployability,fail,fail,423,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1096,deployability,fail,fail,1096,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1276,deployability,version,version,1276,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1308,deployability,Instal,Installation,1308,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:839,energy efficiency,model,model,839,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:945,energy efficiency,model,model,945,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1143,energy efficiency,model,model,1143,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1225,energy efficiency,model,model,1225,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:13,integrability,state,state,13,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:563,integrability,Abstract,Abstract,563,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:575,integrability,pub,public,575,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:584,integrability,Abstract,Abstract,584,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:621,integrability,Abstract,Abstract,621,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:707,integrability,pub,public,707,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:714,integrability,Abstract,Abstract,714,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:726,integrability,pub,public,726,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:747,integrability,Abstract,Abstract,747,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1018,integrability,Abstract,Abstract,1018,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1160,integrability,Abstract,Abstract,1160,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1276,integrability,version,version,1276,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:563,modifiability,Abstract,Abstract,563,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:584,modifiability,Abstract,Abstract,584,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:621,modifiability,Abstract,Abstract,621,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:714,modifiability,Abstract,Abstract,714,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:747,modifiability,Abstract,Abstract,747,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1018,modifiability,Abstract,Abstract,1018,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1160,modifiability,Abstract,Abstract,1160,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1276,modifiability,version,version,1276,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:366,performance,failur,failure,366,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1122,performance,error,errors,1122,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:235,reliability,fail,fails,235,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:366,reliability,fail,failure,366,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:423,reliability,fail,fail,423,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1096,reliability,fail,fail,1096,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:925,safety,compl,complaint,925,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1045,safety,except,exception,1045,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1122,safety,error,errors,1122,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1181,safety,except,except,1181,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:839,security,model,model,839,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:925,security,compl,complaint,925,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:945,security,model,model,945,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1143,security,model,model,1143,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1225,security,model,model,1225,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1488,testability,context,context,1488,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:262,usability,clear,clear,262,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:1122,usability,error,errors,1122,"[ntuple] Bad state after attempting to make field for virtual type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class Abstract {. public:. Abstract() : data1_(3) {};. virtual ~Abstract() {};. virtual int method() = 0;. private:. int data1_;. };. class Derived : public Abstract {. public:. Derived() : Abstract() {};. int method() override { return data2_; };. private:. int data2_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint. # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and. # catch the exception, then later attempts to make Derived now fail. # with puzzling JIT errors. try:. obj1 = model.MakeField[""Abstract""](""test1""). except ValueError as ex:. print(ex). obj2 = model.MakeField[""Derived""](""test2""). ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/pull/13912:479,deployability,fail,fails,479,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:1058,interoperability,bind,bindings,1058,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:1058,modifiability,bind,bindings,1058,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:159,performance,perform,performs,159,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:479,reliability,fail,fails,479,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:9,safety,Prevent,Prevent,9,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:9,security,Preven,Prevent,9,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:60,testability,assert,assert,60,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:171,testability,assert,assert,171,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:274,testability,assert,assert,274,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:472,testability,assert,assert,472,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:528,testability,context,context,528,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:816,testability,assert,assert-free,816,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:912,testability,context,context,912,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:159,usability,perform,performs,159,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:729,usability,custom,custom,729,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:928,usability,Custom,CustomInstanceMethod,928,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/pull/13912:1093,usability,Custom,CustomPyTypes,1093,"[PyROOT] Prevent functions from crashing due to Python 3.12 assert; Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```. \#define _PyMethod_CAST(meth) \. (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)). [...]. static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {. return _PyMethod_CAST(meth)->im_self;. }. ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the. `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:. https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13912
https://github.com/root-project/root/issues/13913:218,availability,failur,failure,218,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:1626,availability,Operat,Operating,1626,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:218,deployability,fail,failure,218,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:287,deployability,build,build-any-ib,287,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:302,deployability,BUILD,BUILD,302,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:634,deployability,fail,failed,634,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:1119,deployability,version,version,1119,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:1591,deployability,Instal,Installation,1591,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:850,energy efficiency,model,model,850,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:917,energy efficiency,model,model,917,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:1119,integrability,version,version,1119,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:176,interoperability,format,format,176,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:603,interoperability,specif,specifier,603,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:1119,modifiability,version,version,1119,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:218,performance,failur,failure,218,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:218,reliability,fail,failure,218,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:634,reliability,fail,failed,634,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:1096,safety,test,test,1096,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:850,security,model,model,850,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:917,security,model,model,917,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:1274,security,Team,Team,1274,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:208,testability,assert,assertion,208,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:540,testability,Assert,Assertion,540,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:623,testability,context,context,623,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:1096,testability,test,test,1096,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:1664,testability,context,context,1664,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/issues/13913:1453,usability,help,help,1453,"[ntuple] Compiler crash on MakeField<terrible type>; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:. ```. root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed. ```. ### Reproducer. ```bash. source . pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300. cmsenv. popd. root -l. ```. in the prompt,. ```cpp. auto model = ROOT::Experimental::RNTupleModel::Create();. auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |. | From heads/master@tags/v6-31-01 |. | With g++ (GCC) 12.3.1 20230527 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13913
https://github.com/root-project/root/pull/13914:143,reliability,pra,practices,143,"Apply `clang-tidy` suggestions to tutorials; For the tutorials, this is good to do in particular, since they are also examples for good coding practices to the users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13914
https://github.com/root-project/root/pull/13914:160,usability,user,users,160,"Apply `clang-tidy` suggestions to tutorials; For the tutorials, this is good to do in particular, since they are also examples for good coding practices to the users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13914
https://github.com/root-project/root/pull/13915:40,deployability,build,build,40,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:46,deployability,configurat,configuration,46,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:93,deployability,build,build,93,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:99,deployability,configurat,configuration,99,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:176,deployability,build,build,176,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:437,deployability,build,build,437,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:443,deployability,configurat,configuration,443,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:568,deployability,configurat,configuration,568,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:46,integrability,configur,configuration,46,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:99,integrability,configur,configuration,99,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:207,integrability,pub,public,207,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:219,integrability,interfac,interface,219,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:307,integrability,pub,public,307,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:443,integrability,configur,configuration,443,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:568,integrability,configur,configuration,568,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:219,interoperability,interfac,interface,219,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:46,modifiability,configur,configuration,46,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:99,modifiability,configur,configuration,99,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:219,modifiability,interfac,interface,219,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:443,modifiability,configur,configuration,443,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:568,modifiability,configur,configuration,568,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:182,performance,time,time,182,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:116,safety,avoid,avoid,116,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:389,safety,avoid,avoided,389,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:645,safety,Avoid,Avoid,645,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:46,security,configur,configuration,46,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:99,security,configur,configuration,99,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:443,security,configur,configuration,443,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:568,security,configur,configuration,568,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13915:214,usability,user,user,214,"[RF] Several improvements to the RooFit build configuration; Some improvements in the RooFit build configuration to avoid that information that is only necessary for RooFit at build time is leaking into the public user interface. In particular, it is not necessary to define these `R__HAS_<*>` flags in the public ROOT config only to use them in the private `.cxx` sources. This should be avoided and instead be done with defines in the build configuration. * Move stressRooFit and stressRooStats to `roofit` directory. * Remove `R__HAS_ROOFIT_MULTIPROCESS` from ROOT configuration. * No need to check `R__HAS_MATHMORE` in roofitmore sources. * Avoid need for `R__HAS_CUDA`. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13915
https://github.com/root-project/root/pull/13916:65,availability,consist,consistency,65,[DF] Fix AddProgressbar to AddProgressBar and related typos; For consistency since progress bar is two words we should use it as ProgressBar in all functions - AddProgressBar and PrintProgressBar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13916
https://github.com/root-project/root/pull/13916:65,usability,consist,consistency,65,[DF] Fix AddProgressbar to AddProgressBar and related typos; For consistency since progress bar is two words we should use it as ProgressBar in all functions - AddProgressBar and PrintProgressBar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13916
https://github.com/root-project/root/pull/13916:83,usability,progress,progress,83,[DF] Fix AddProgressbar to AddProgressBar and related typos; For consistency since progress bar is two words we should use it as ProgressBar in all functions - AddProgressBar and PrintProgressBar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13916
https://github.com/root-project/root/pull/13916:129,usability,Progress,ProgressBar,129,[DF] Fix AddProgressbar to AddProgressBar and related typos; For consistency since progress bar is two words we should use it as ProgressBar in all functions - AddProgressBar and PrintProgressBar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13916
https://github.com/root-project/root/issues/13917:1188,availability,Operat,Operating,1188,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:1123,deployability,version,version,1123,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:1144,deployability,Instal,Installation,1144,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:1165,deployability,build,build,1165,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:119,energy efficiency,current,currently,119,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:1123,integrability,version,version,1123,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:397,interoperability,standard,standard,397,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:839,interoperability,standard,standard,839,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:903,interoperability,compatib,compatibility,903,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:933,interoperability,architectur,architecture-specific,933,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:1123,modifiability,version,version,1123,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:203,performance,disk,disk,203,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:277,performance,memor,memory,277,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:638,safety,compl,completeness,638,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:638,security,compl,completeness,638,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:1226,testability,context,context,1226,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:170,usability,document,documentation,170,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:277,usability,memor,memory,277,"Add half-precision floats to `RtypesCores.h`; ### Explain what you would like to see improved and how. `RtypesCores.h` currently has `Float16_t`, which, according to the documentation, represents an (on-disk) 16-bit floating point number as a 32-bit with truncated mantissa in memory. This would correspond to a [`bfloat16`](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format). The IEEE standard however also prescribes a [half-precision float](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) which has a smaller exponent as well. There is an open PR (#13844) to add half-precision floats to RNTuple and for completeness it might be nice to properly make this a ROOT basic type. Right now, there is no way to 'properly' represent this type, considering that half-precision floats will only become part of the standard library from C++23). There is the `_Float16` type, but compatibility is compiler and architecture-specific. An option would be to represent the type as an `unsigned short`. This issue is meant as way to discuss and decide how if and how this type can best be added. ### ROOT version. master. ### Installation method. build from source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/pull/13918:222,availability,error,errors,222,"[minuit2] Fixes in Minuit2 for finding contour points; This pull request fixes the search for contour points in Minuit2. . Three separated problems were identified (see the commit messages). - a bug in Minos for computing errors when close to the border. - an issue in finding the contour point in case the first attempt failed. - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13918
https://github.com/root-project/root/pull/13918:321,deployability,fail,failed,321,"[minuit2] Fixes in Minuit2 for finding contour points; This pull request fixes the search for contour points in Minuit2. . Three separated problems were identified (see the commit messages). - a bug in Minos for computing errors when close to the border. - an issue in finding the contour point in case the first attempt failed. - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13918
https://github.com/root-project/root/pull/13918:180,integrability,messag,messages,180,"[minuit2] Fixes in Minuit2 for finding contour points; This pull request fixes the search for contour points in Minuit2. . Three separated problems were identified (see the commit messages). - a bug in Minos for computing errors when close to the border. - an issue in finding the contour point in case the first attempt failed. - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13918
https://github.com/root-project/root/pull/13918:180,interoperability,messag,messages,180,"[minuit2] Fixes in Minuit2 for finding contour points; This pull request fixes the search for contour points in Minuit2. . Three separated problems were identified (see the commit messages). - a bug in Minos for computing errors when close to the border. - an issue in finding the contour point in case the first attempt failed. - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13918
https://github.com/root-project/root/pull/13918:222,performance,error,errors,222,"[minuit2] Fixes in Minuit2 for finding contour points; This pull request fixes the search for contour points in Minuit2. . Three separated problems were identified (see the commit messages). - a bug in Minos for computing errors when close to the border. - an issue in finding the contour point in case the first attempt failed. - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13918
https://github.com/root-project/root/pull/13918:321,reliability,fail,failed,321,"[minuit2] Fixes in Minuit2 for finding contour points; This pull request fixes the search for contour points in Minuit2. . Three separated problems were identified (see the commit messages). - a bug in Minos for computing errors when close to the border. - an issue in finding the contour point in case the first attempt failed. - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13918
https://github.com/root-project/root/pull/13918:222,safety,error,errors,222,"[minuit2] Fixes in Minuit2 for finding contour points; This pull request fixes the search for contour points in Minuit2. . Three separated problems were identified (see the commit messages). - a bug in Minos for computing errors when close to the border. - an issue in finding the contour point in case the first attempt failed. - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13918
https://github.com/root-project/root/pull/13918:153,security,ident,identified,153,"[minuit2] Fixes in Minuit2 for finding contour points; This pull request fixes the search for contour points in Minuit2. . Three separated problems were identified (see the commit messages). - a bug in Minos for computing errors when close to the border. - an issue in finding the contour point in case the first attempt failed. - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13918
https://github.com/root-project/root/pull/13918:222,usability,error,errors,222,"[minuit2] Fixes in Minuit2 for finding contour points; This pull request fixes the search for contour points in Minuit2. . Three separated problems were identified (see the commit messages). - a bug in Minos for computing errors when close to the border. - an issue in finding the contour point in case the first attempt failed. - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13918
https://github.com/root-project/root/pull/13918:234,usability,close,close,234,"[minuit2] Fixes in Minuit2 for finding contour points; This pull request fixes the search for contour points in Minuit2. . Three separated problems were identified (see the commit messages). - a bug in Minos for computing errors when close to the border. - an issue in finding the contour point in case the first attempt failed. - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13918
https://github.com/root-project/root/pull/13918:534,usability,minim,minimization,534,"[minuit2] Fixes in Minuit2 for finding contour points; This pull request fixes the search for contour points in Minuit2. . Three separated problems were identified (see the commit messages). - a bug in Minos for computing errors when close to the border. - an issue in finding the contour point in case the first attempt failed. - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13918
https://github.com/root-project/root/pull/13919:0,deployability,Updat,Update,0,"Update TGraph2D properties before painting; TGraph2DPainter keep pointers on TGraph2D data,. but was not checking if these values were changed. Fixes problem reported https://root-forum.cern.ch/t/56816/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13919
https://github.com/root-project/root/pull/13919:0,safety,Updat,Update,0,"Update TGraph2D properties before painting; TGraph2DPainter keep pointers on TGraph2D data,. but was not checking if these values were changed. Fixes problem reported https://root-forum.cern.ch/t/56816/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13919
https://github.com/root-project/root/pull/13919:0,security,Updat,Update,0,"Update TGraph2D properties before painting; TGraph2DPainter keep pointers on TGraph2D data,. but was not checking if these values were changed. Fixes problem reported https://root-forum.cern.ch/t/56816/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13919
https://github.com/root-project/root/pull/13920:0,deployability,Updat,Update,0,"Update TGraph2D properties before painting [6.30]; TGraph2DPainter keep pointers on TGraph2D data,. but was not checking if these values were changed. Fixes problem reported https://root-forum.cern.ch/t/56816/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13920
https://github.com/root-project/root/pull/13920:0,safety,Updat,Update,0,"Update TGraph2D properties before painting [6.30]; TGraph2DPainter keep pointers on TGraph2D data,. but was not checking if these values were changed. Fixes problem reported https://root-forum.cern.ch/t/56816/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13920
https://github.com/root-project/root/pull/13920:0,security,Updat,Update,0,"Update TGraph2D properties before painting [6.30]; TGraph2DPainter keep pointers on TGraph2D data,. but was not checking if these values were changed. Fixes problem reported https://root-forum.cern.ch/t/56816/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13920
https://github.com/root-project/root/pull/13921:75,availability,consist,consistency,75,[backport][DF] Fix AddProgressbar to AddProgressBar and related typos; For consistency since progress bar is two words we should use it as ProgressBar in all functions - AddProgressBar and PrintProgressBar. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13921
https://github.com/root-project/root/pull/13921:75,usability,consist,consistency,75,[backport][DF] Fix AddProgressbar to AddProgressBar and related typos; For consistency since progress bar is two words we should use it as ProgressBar in all functions - AddProgressBar and PrintProgressBar. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13921
https://github.com/root-project/root/pull/13921:93,usability,progress,progress,93,[backport][DF] Fix AddProgressbar to AddProgressBar and related typos; For consistency since progress bar is two words we should use it as ProgressBar in all functions - AddProgressBar and PrintProgressBar. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13921
https://github.com/root-project/root/pull/13921:139,usability,Progress,ProgressBar,139,[backport][DF] Fix AddProgressbar to AddProgressBar and related typos; For consistency since progress bar is two words we should use it as ProgressBar in all functions - AddProgressBar and PrintProgressBar. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13921
https://github.com/root-project/root/issues/13922:647,availability,Operat,Operating,647,"Standalone ROOT scripts require X; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Standalone ROOT scripts such as `rootls` require X server in the 6.28 series. Also some other PyROOT-based scripts started to require it which indicates a core change in one of the calls or the treatment of batch running has changed. ### Reproducer. 1. SSH on a Linux machine from a macOS. 2. Setup LCG view with the latest ROOT. ```. lsetup ""views LCG_104b x86_64-el9-gcc13-opt"". ```. 3. Inspect any file with `rootls`. 4. X will spawn although it should not. ### ROOT version. 6.28.8 (from LCG 104b). ### Installation method. LCG. ### Operating system. Linux via SSH on macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:580,deployability,version,version,580,"Standalone ROOT scripts require X; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Standalone ROOT scripts such as `rootls` require X server in the 6.28 series. Also some other PyROOT-based scripts started to require it which indicates a core change in one of the calls or the treatment of batch running has changed. ### Reproducer. 1. SSH on a Linux machine from a macOS. 2. Setup LCG view with the latest ROOT. ```. lsetup ""views LCG_104b x86_64-el9-gcc13-opt"". ```. 3. Inspect any file with `rootls`. 4. X will spawn although it should not. ### ROOT version. 6.28.8 (from LCG 104b). ### Installation method. LCG. ### Operating system. Linux via SSH on macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:617,deployability,Instal,Installation,617,"Standalone ROOT scripts require X; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Standalone ROOT scripts such as `rootls` require X server in the 6.28 series. Also some other PyROOT-based scripts started to require it which indicates a core change in one of the calls or the treatment of batch running has changed. ### Reproducer. 1. SSH on a Linux machine from a macOS. 2. Setup LCG view with the latest ROOT. ```. lsetup ""views LCG_104b x86_64-el9-gcc13-opt"". ```. 3. Inspect any file with `rootls`. 4. X will spawn although it should not. ### ROOT version. 6.28.8 (from LCG 104b). ### Installation method. LCG. ### Operating system. Linux via SSH on macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:265,energy efficiency,core,core,265,"Standalone ROOT scripts require X; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Standalone ROOT scripts such as `rootls` require X server in the 6.28 series. Also some other PyROOT-based scripts started to require it which indicates a core change in one of the calls or the treatment of batch running has changed. ### Reproducer. 1. SSH on a Linux machine from a macOS. 2. Setup LCG view with the latest ROOT. ```. lsetup ""views LCG_104b x86_64-el9-gcc13-opt"". ```. 3. Inspect any file with `rootls`. 4. X will spawn although it should not. ### ROOT version. 6.28.8 (from LCG 104b). ### Installation method. LCG. ### Operating system. Linux via SSH on macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:317,integrability,batch,batch,317,"Standalone ROOT scripts require X; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Standalone ROOT scripts such as `rootls` require X server in the 6.28 series. Also some other PyROOT-based scripts started to require it which indicates a core change in one of the calls or the treatment of batch running has changed. ### Reproducer. 1. SSH on a Linux machine from a macOS. 2. Setup LCG view with the latest ROOT. ```. lsetup ""views LCG_104b x86_64-el9-gcc13-opt"". ```. 3. Inspect any file with `rootls`. 4. X will spawn although it should not. ### ROOT version. 6.28.8 (from LCG 104b). ### Installation method. LCG. ### Operating system. Linux via SSH on macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:580,integrability,version,version,580,"Standalone ROOT scripts require X; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Standalone ROOT scripts such as `rootls` require X server in the 6.28 series. Also some other PyROOT-based scripts started to require it which indicates a core change in one of the calls or the treatment of batch running has changed. ### Reproducer. 1. SSH on a Linux machine from a macOS. 2. Setup LCG view with the latest ROOT. ```. lsetup ""views LCG_104b x86_64-el9-gcc13-opt"". ```. 3. Inspect any file with `rootls`. 4. X will spawn although it should not. ### ROOT version. 6.28.8 (from LCG 104b). ### Installation method. LCG. ### Operating system. Linux via SSH on macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:580,modifiability,version,version,580,"Standalone ROOT scripts require X; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Standalone ROOT scripts such as `rootls` require X server in the 6.28 series. Also some other PyROOT-based scripts started to require it which indicates a core change in one of the calls or the treatment of batch running has changed. ### Reproducer. 1. SSH on a Linux machine from a macOS. 2. Setup LCG view with the latest ROOT. ```. lsetup ""views LCG_104b x86_64-el9-gcc13-opt"". ```. 3. Inspect any file with `rootls`. 4. X will spawn although it should not. ### ROOT version. 6.28.8 (from LCG 104b). ### Installation method. LCG. ### Operating system. Linux via SSH on macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:317,performance,batch,batch,317,"Standalone ROOT scripts require X; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Standalone ROOT scripts such as `rootls` require X server in the 6.28 series. Also some other PyROOT-based scripts started to require it which indicates a core change in one of the calls or the treatment of batch running has changed. ### Reproducer. 1. SSH on a Linux machine from a macOS. 2. Setup LCG view with the latest ROOT. ```. lsetup ""views LCG_104b x86_64-el9-gcc13-opt"". ```. 3. Inspect any file with `rootls`. 4. X will spawn although it should not. ### ROOT version. 6.28.8 (from LCG 104b). ### Installation method. LCG. ### Operating system. Linux via SSH on macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:363,security,SSH,SSH,363,"Standalone ROOT scripts require X; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Standalone ROOT scripts such as `rootls` require X server in the 6.28 series. Also some other PyROOT-based scripts started to require it which indicates a core change in one of the calls or the treatment of batch running has changed. ### Reproducer. 1. SSH on a Linux machine from a macOS. 2. Setup LCG view with the latest ROOT. ```. lsetup ""views LCG_104b x86_64-el9-gcc13-opt"". ```. 3. Inspect any file with `rootls`. 4. X will spawn although it should not. ### ROOT version. 6.28.8 (from LCG 104b). ### Installation method. LCG. ### Operating system. Linux via SSH on macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:675,security,SSH,SSH,675,"Standalone ROOT scripts require X; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Standalone ROOT scripts such as `rootls` require X server in the 6.28 series. Also some other PyROOT-based scripts started to require it which indicates a core change in one of the calls or the treatment of batch running has changed. ### Reproducer. 1. SSH on a Linux machine from a macOS. 2. Setup LCG view with the latest ROOT. ```. lsetup ""views LCG_104b x86_64-el9-gcc13-opt"". ```. 3. Inspect any file with `rootls`. 4. X will spawn although it should not. ### ROOT version. 6.28.8 (from LCG 104b). ### Installation method. LCG. ### Operating system. Linux via SSH on macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:704,testability,context,context,704,"Standalone ROOT scripts require X; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Standalone ROOT scripts such as `rootls` require X server in the 6.28 series. Also some other PyROOT-based scripts started to require it which indicates a core change in one of the calls or the treatment of batch running has changed. ### Reproducer. 1. SSH on a Linux machine from a macOS. 2. Setup LCG view with the latest ROOT. ```. lsetup ""views LCG_104b x86_64-el9-gcc13-opt"". ```. 3. Inspect any file with `rootls`. 4. X will spawn although it should not. ### ROOT version. 6.28.8 (from LCG 104b). ### Installation method. LCG. ### Operating system. Linux via SSH on macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:253,usability,indicat,indicates,253,"Standalone ROOT scripts require X; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Standalone ROOT scripts such as `rootls` require X server in the 6.28 series. Also some other PyROOT-based scripts started to require it which indicates a core change in one of the calls or the treatment of batch running has changed. ### Reproducer. 1. SSH on a Linux machine from a macOS. 2. Setup LCG view with the latest ROOT. ```. lsetup ""views LCG_104b x86_64-el9-gcc13-opt"". ```. 3. Inspect any file with `rootls`. 4. X will spawn although it should not. ### ROOT version. 6.28.8 (from LCG 104b). ### Installation method. LCG. ### Operating system. Linux via SSH on macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13924:508,deployability,configurat,configuration,508,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:100,integrability,wrap,wrapper,100,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:137,integrability,interfac,interface,137,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:419,integrability,event,events,419,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:508,integrability,configur,configuration,508,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:866,integrability,interfac,interface,866,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:928,integrability,translat,translated,928,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:100,interoperability,wrapper,wrapper,100,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:137,interoperability,interfac,interface,137,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:866,interoperability,interfac,interface,866,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:928,interoperability,translat,translated,928,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:137,modifiability,interfac,interface,137,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:508,modifiability,configur,configuration,508,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:866,modifiability,interfac,interface,866,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:218,performance,time,time,218,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:173,safety,prevent,prevent,173,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:173,security,preven,prevent,173,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:508,security,configur,configuration,508,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:1111,testability,context,context,1111,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:87,usability,command,command,87,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/issues/13924:159,usability,usab,usability,159,"[ntuple] Add RNTuple importer CLI; ### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh. ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]. ```. Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13924
https://github.com/root-project/root/pull/13925:123,availability,error,errors,123,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:215,availability,error,errors,215,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:254,availability,failur,failure,254,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:254,deployability,fail,failure,254,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:361,deployability,observ,observed,361,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:518,integrability,Batch,BatchMode,518,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:408,modifiability,paramet,parameter,408,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:123,performance,error,errors,123,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:215,performance,error,errors,215,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:254,performance,failur,failure,254,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:518,performance,Batch,BatchMode,518,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:254,reliability,fail,failure,254,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:123,safety,error,errors,123,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:215,safety,error,errors,215,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:292,safety,test,test,292,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:558,safety,test,test,558,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:292,testability,test,test,292,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:361,testability,observ,observed,361,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:553,testability,unit,unit,553,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:558,testability,test,test,558,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:123,usability,error,errors,123,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13925:215,usability,error,errors,215,"[RF] Don't check Minos output code in RooStats LikelihoodInterval; Don't check the Minos output code, because if the Minos errors are. at the limit, Minuit2 will return nonzero, unlike Minuit 1. This case where the errors are at limit should not cause a failure. though. The `stressRooStats` test suite actively provokes it, by fitting. a dataset with a single observed value that corresponds to a best-fit. parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with. Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13925
https://github.com/root-project/root/pull/13926:49,availability,error,error,49,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:204,availability,error,errors,204,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:344,availability,failur,failures,344,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:952,availability,Error,Error,952,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1021,availability,Error,Error,1021,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:234,deployability,configurat,configurations,234,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:344,deployability,fail,failures,344,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:722,deployability,Build,Build,722,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:845,deployability,Build,Build,845,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1428,deployability,configurat,configurations,1428,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:603,energy efficiency,current,current,603,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:234,integrability,configur,configurations,234,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:315,integrability,event,event,315,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:398,integrability,event,event,398,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:495,integrability,pub,public,495,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1428,integrability,configur,configurations,1428,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:13,interoperability,distribut,distributed,13,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:118,interoperability,prox,proxy,118,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1418,interoperability,platform,platforms,1418,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1691,interoperability,platform,platforms,1691,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:234,modifiability,configur,configurations,234,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1428,modifiability,configur,configurations,1428,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:49,performance,error,error,49,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:204,performance,error,errors,204,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:344,performance,failur,failures,344,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:952,performance,Error,Error,952,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1021,performance,Error,Error,1021,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1393,performance,concurren,concurrently,1393,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:344,reliability,fail,failures,344,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:36,safety,test,tests,36,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:49,safety,error,error,49,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:198,safety,avoid,avoid,198,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:204,safety,error,errors,204,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:756,safety,except,exception,756,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:952,safety,Error,Error,952,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1021,safety,Error,Error,1021,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1502,safety,test,tested,1502,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:234,security,configur,configurations,234,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1428,security,configur,configurations,1428,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:36,testability,test,tests,36,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1502,testability,test,tested,1502,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:49,usability,error,error,49,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:204,usability,error,errors,204,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:952,usability,Error,Error,952,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:1021,usability,Error,Error,1021,"[PyROOT] Fix distributed RDataFrame tests due to error serialization; This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```. RDataFrame::Run: event loop was interrupted. Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor. 	which can be called without argument, objects of this class. 	can not be read with the current library. You will need to. 	add a default constructor before attempting to read it. Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved. Error in <TClass::New>: cannot create object of class runtime_error. Error in <TBufferFile::ReadObject>: could not create object of class runtime_error. *** Break *** segmentation violation. ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3. * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10). * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/issues/13927:383,availability,failur,failure,383,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:1149,availability,Operat,Operating,1149,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:383,deployability,fail,failure,383,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:1063,deployability,version,version,1063,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:1091,deployability,releas,releases,1091,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:1105,deployability,Instal,Installation,1105,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:1126,deployability,build,build,1126,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:530,energy efficiency,Draw,Draw,530,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:213,integrability,buffer,buffer,213,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:1063,integrability,version,version,1063,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:1063,modifiability,version,version,1063,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:383,performance,failur,failure,383,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:383,reliability,fail,failure,383,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:421,testability,Simpl,Simple,421,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:1198,testability,context,context,1198,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:421,usability,Simpl,Simple,421,"`[TF1,TF2,TF3]::Save` works incorrectly when called with default arguments (all 0); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used. When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:. ```. void test_save(). {. auto f1 = new TF1(""linear"", ""x"", -5, 5);. f1->SetNpx(10);. f1->Draw(""l"");. Double_t xx[1] = { 0 };. // this works properly. f1->Save(-5, 5, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. // calling with default args make mistake by 0.5 bin. f1->Save(0, 0, 0, 0, 0, 0);. printf(""Get saved at 0 %f\n"", f1->GetSave(xx));. }. ```. [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5. Running the example :. ```. Get saved at 0 0.000000. Get saved at 0 0.500000. ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/pull/13928:28,modifiability,Paramet,ParameterSetting,28,[mathcore] Fix creating the ParameterSetting when calling SetFCN; This fixes using the fit2dHist.C when using the global fit (user defined FCN). This PR fixes #13906.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13928
https://github.com/root-project/root/pull/13928:126,usability,user,user,126,[mathcore] Fix creating the ParameterSetting when calling SetFCN; This fixes using the fit2dHist.C when using the global fit (user defined FCN). This PR fixes #13906.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13928
https://github.com/root-project/root/pull/13929:32,usability,Document,Documentation,32,[RF] Introduce RooFit Developer Documentation; Make the documentation that is intended for RooFit developers part of the reference guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13929
https://github.com/root-project/root/pull/13929:56,usability,document,documentation,56,[RF] Introduce RooFit Developer Documentation; Make the documentation that is intended for RooFit developers part of the reference guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13929
https://github.com/root-project/root/pull/13929:131,usability,guid,guide,131,[RF] Introduce RooFit Developer Documentation; Make the documentation that is intended for RooFit developers part of the reference guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13929
https://github.com/root-project/root/pull/13930:48,deployability,patch,patches,48,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 4; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13911. - https://github.com/root-project/root/pull/13914. - https://github.com/root-project/root/pull/13109. - https://github.com/root-project/root/pull/13905. - https://github.com/root-project/root/pull/13925. - https://github.com/root-project/root/pull/13912. - https://github.com/root-project/root/pull/13915. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13909.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13930
https://github.com/root-project/root/pull/13930:152,deployability,patch,patches,152,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 4; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13911. - https://github.com/root-project/root/pull/13914. - https://github.com/root-project/root/pull/13109. - https://github.com/root-project/root/pull/13905. - https://github.com/root-project/root/pull/13925. - https://github.com/root-project/root/pull/13912. - https://github.com/root-project/root/pull/13915. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13909.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13930
https://github.com/root-project/root/pull/13930:48,safety,patch,patches,48,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 4; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13911. - https://github.com/root-project/root/pull/13914. - https://github.com/root-project/root/pull/13109. - https://github.com/root-project/root/pull/13905. - https://github.com/root-project/root/pull/13925. - https://github.com/root-project/root/pull/13912. - https://github.com/root-project/root/pull/13915. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13909.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13930
https://github.com/root-project/root/pull/13930:152,safety,patch,patches,152,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 4; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13911. - https://github.com/root-project/root/pull/13914. - https://github.com/root-project/root/pull/13109. - https://github.com/root-project/root/pull/13905. - https://github.com/root-project/root/pull/13925. - https://github.com/root-project/root/pull/13912. - https://github.com/root-project/root/pull/13915. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13909.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13930
https://github.com/root-project/root/pull/13930:48,security,patch,patches,48,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 4; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13911. - https://github.com/root-project/root/pull/13914. - https://github.com/root-project/root/pull/13109. - https://github.com/root-project/root/pull/13905. - https://github.com/root-project/root/pull/13925. - https://github.com/root-project/root/pull/13912. - https://github.com/root-project/root/pull/13915. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13909.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13930
https://github.com/root-project/root/pull/13930:152,security,patch,patches,152,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 4; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13911. - https://github.com/root-project/root/pull/13914. - https://github.com/root-project/root/pull/13109. - https://github.com/root-project/root/pull/13905. - https://github.com/root-project/root/pull/13925. - https://github.com/root-project/root/pull/13912. - https://github.com/root-project/root/pull/13915. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13909.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13930
https://github.com/root-project/root/pull/13931:348,deployability,updat,updated,348,"fix: Use TKey::ReadObject<T> instead of ReadObj; . # This Pull request:. ## Changes or fixes:. `ReadObj` returns an owning pointer. Using `dynamic_cast` and ignoring the ""not castable"" case can leak memory. See: https://root-forum.cern.ch/t/possible-leak-with-dynamic-cast-and-tkey-readobj/56799. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13931
https://github.com/root-project/root/pull/13931:199,performance,memor,memory,199,"fix: Use TKey::ReadObject<T> instead of ReadObj; . # This Pull request:. ## Changes or fixes:. `ReadObj` returns an owning pointer. Using `dynamic_cast` and ignoring the ""not castable"" case can leak memory. See: https://root-forum.cern.ch/t/possible-leak-with-dynamic-cast-and-tkey-readobj/56799. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13931
https://github.com/root-project/root/pull/13931:318,safety,test,tested,318,"fix: Use TKey::ReadObject<T> instead of ReadObj; . # This Pull request:. ## Changes or fixes:. `ReadObj` returns an owning pointer. Using `dynamic_cast` and ignoring the ""not castable"" case can leak memory. See: https://root-forum.cern.ch/t/possible-leak-with-dynamic-cast-and-tkey-readobj/56799. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13931
https://github.com/root-project/root/pull/13931:348,safety,updat,updated,348,"fix: Use TKey::ReadObject<T> instead of ReadObj; . # This Pull request:. ## Changes or fixes:. `ReadObj` returns an owning pointer. Using `dynamic_cast` and ignoring the ""not castable"" case can leak memory. See: https://root-forum.cern.ch/t/possible-leak-with-dynamic-cast-and-tkey-readobj/56799. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13931
https://github.com/root-project/root/pull/13931:348,security,updat,updated,348,"fix: Use TKey::ReadObject<T> instead of ReadObj; . # This Pull request:. ## Changes or fixes:. `ReadObj` returns an owning pointer. Using `dynamic_cast` and ignoring the ""not castable"" case can leak memory. See: https://root-forum.cern.ch/t/possible-leak-with-dynamic-cast-and-tkey-readobj/56799. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13931
https://github.com/root-project/root/pull/13931:318,testability,test,tested,318,"fix: Use TKey::ReadObject<T> instead of ReadObj; . # This Pull request:. ## Changes or fixes:. `ReadObj` returns an owning pointer. Using `dynamic_cast` and ignoring the ""not castable"" case can leak memory. See: https://root-forum.cern.ch/t/possible-leak-with-dynamic-cast-and-tkey-readobj/56799. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13931
https://github.com/root-project/root/pull/13931:199,usability,memor,memory,199,"fix: Use TKey::ReadObject<T> instead of ReadObj; . # This Pull request:. ## Changes or fixes:. `ReadObj` returns an owning pointer. Using `dynamic_cast` and ignoring the ""not castable"" case can leak memory. See: https://root-forum.cern.ch/t/possible-leak-with-dynamic-cast-and-tkey-readobj/56799. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13931
https://github.com/root-project/root/pull/13932:47,availability,error,error,47,[6.30] Fix distributed RDataFrame tests due to error serialization; Backport of https://github.com/root-project/root/pull/13926.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13932
https://github.com/root-project/root/pull/13932:11,interoperability,distribut,distributed,11,[6.30] Fix distributed RDataFrame tests due to error serialization; Backport of https://github.com/root-project/root/pull/13926.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13932
https://github.com/root-project/root/pull/13932:47,performance,error,error,47,[6.30] Fix distributed RDataFrame tests due to error serialization; Backport of https://github.com/root-project/root/pull/13926.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13932
https://github.com/root-project/root/pull/13932:34,safety,test,tests,34,[6.30] Fix distributed RDataFrame tests due to error serialization; Backport of https://github.com/root-project/root/pull/13926.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13932
https://github.com/root-project/root/pull/13932:47,safety,error,error,47,[6.30] Fix distributed RDataFrame tests due to error serialization; Backport of https://github.com/root-project/root/pull/13926.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13932
https://github.com/root-project/root/pull/13932:34,testability,test,tests,34,[6.30] Fix distributed RDataFrame tests due to error serialization; Backport of https://github.com/root-project/root/pull/13926.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13932
https://github.com/root-project/root/pull/13932:47,usability,error,error,47,[6.30] Fix distributed RDataFrame tests due to error serialization; Backport of https://github.com/root-project/root/pull/13926.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13932
https://github.com/root-project/root/pull/13933:47,availability,error,error,47,[6.28] Fix distributed RDataFrame tests due to error serialization; Backport of #13926,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13933
https://github.com/root-project/root/pull/13933:11,interoperability,distribut,distributed,11,[6.28] Fix distributed RDataFrame tests due to error serialization; Backport of #13926,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13933
https://github.com/root-project/root/pull/13933:47,performance,error,error,47,[6.28] Fix distributed RDataFrame tests due to error serialization; Backport of #13926,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13933
https://github.com/root-project/root/pull/13933:34,safety,test,tests,34,[6.28] Fix distributed RDataFrame tests due to error serialization; Backport of #13926,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13933
https://github.com/root-project/root/pull/13933:47,safety,error,error,47,[6.28] Fix distributed RDataFrame tests due to error serialization; Backport of #13926,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13933
https://github.com/root-project/root/pull/13933:34,testability,test,tests,34,[6.28] Fix distributed RDataFrame tests due to error serialization; Backport of #13926,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13933
https://github.com/root-project/root/pull/13933:47,usability,error,error,47,[6.28] Fix distributed RDataFrame tests due to error serialization; Backport of #13926,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13933
https://github.com/root-project/root/pull/13934:30,energy efficiency,draw,draw,30,"Paint `TF1` with default ""lf"" draw option also when ""sames"" was provided; In some old examples ""same"" and ""sames"" draw options for TF1 was used. . Currently if ""sames"" used for TF1 - plain histogram painting is performed which is wrong for the function. Also improve PMC/PLC/PFC handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13934
https://github.com/root-project/root/pull/13934:114,energy efficiency,draw,draw,114,"Paint `TF1` with default ""lf"" draw option also when ""sames"" was provided; In some old examples ""same"" and ""sames"" draw options for TF1 was used. . Currently if ""sames"" used for TF1 - plain histogram painting is performed which is wrong for the function. Also improve PMC/PLC/PFC handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13934
https://github.com/root-project/root/pull/13934:147,energy efficiency,Current,Currently,147,"Paint `TF1` with default ""lf"" draw option also when ""sames"" was provided; In some old examples ""same"" and ""sames"" draw options for TF1 was used. . Currently if ""sames"" used for TF1 - plain histogram painting is performed which is wrong for the function. Also improve PMC/PLC/PFC handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13934
https://github.com/root-project/root/pull/13934:211,performance,perform,performed,211,"Paint `TF1` with default ""lf"" draw option also when ""sames"" was provided; In some old examples ""same"" and ""sames"" draw options for TF1 was used. . Currently if ""sames"" used for TF1 - plain histogram painting is performed which is wrong for the function. Also improve PMC/PLC/PFC handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13934
https://github.com/root-project/root/pull/13934:211,usability,perform,performed,211,"Paint `TF1` with default ""lf"" draw option also when ""sames"" was provided; In some old examples ""same"" and ""sames"" draw options for TF1 was used. . Currently if ""sames"" used for TF1 - plain histogram painting is performed which is wrong for the function. Also improve PMC/PLC/PFC handling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13934
https://github.com/root-project/root/pull/13935:293,availability,consist,consistent,293,"[core] Add `FloatHalf_t` typedef; This PR adds a typedef to represent half-precision IEEE floats, so that they can be supported by RNTuple. Until official support in C++23, they are represented as 4-byte single-precision floats in memory while written as 2-byte half-precision floats. This is consistent with the existing `Float16_t` type that only truncates the mantissa. See also #13917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13935
https://github.com/root-project/root/pull/13935:1,energy efficiency,core,core,1,"[core] Add `FloatHalf_t` typedef; This PR adds a typedef to represent half-precision IEEE floats, so that they can be supported by RNTuple. Until official support in C++23, they are represented as 4-byte single-precision floats in memory while written as 2-byte half-precision floats. This is consistent with the existing `Float16_t` type that only truncates the mantissa. See also #13917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13935
https://github.com/root-project/root/pull/13935:231,performance,memor,memory,231,"[core] Add `FloatHalf_t` typedef; This PR adds a typedef to represent half-precision IEEE floats, so that they can be supported by RNTuple. Until official support in C++23, they are represented as 4-byte single-precision floats in memory while written as 2-byte half-precision floats. This is consistent with the existing `Float16_t` type that only truncates the mantissa. See also #13917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13935
https://github.com/root-project/root/pull/13935:118,usability,support,supported,118,"[core] Add `FloatHalf_t` typedef; This PR adds a typedef to represent half-precision IEEE floats, so that they can be supported by RNTuple. Until official support in C++23, they are represented as 4-byte single-precision floats in memory while written as 2-byte half-precision floats. This is consistent with the existing `Float16_t` type that only truncates the mantissa. See also #13917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13935
https://github.com/root-project/root/pull/13935:155,usability,support,support,155,"[core] Add `FloatHalf_t` typedef; This PR adds a typedef to represent half-precision IEEE floats, so that they can be supported by RNTuple. Until official support in C++23, they are represented as 4-byte single-precision floats in memory while written as 2-byte half-precision floats. This is consistent with the existing `Float16_t` type that only truncates the mantissa. See also #13917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13935
https://github.com/root-project/root/pull/13935:231,usability,memor,memory,231,"[core] Add `FloatHalf_t` typedef; This PR adds a typedef to represent half-precision IEEE floats, so that they can be supported by RNTuple. Until official support in C++23, they are represented as 4-byte single-precision floats in memory while written as 2-byte half-precision floats. This is consistent with the existing `Float16_t` type that only truncates the mantissa. See also #13917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13935
https://github.com/root-project/root/pull/13935:293,usability,consist,consistent,293,"[core] Add `FloatHalf_t` typedef; This PR adds a typedef to represent half-precision IEEE floats, so that they can be supported by RNTuple. Until official support in C++23, they are represented as 4-byte single-precision floats in memory while written as 2-byte half-precision floats. This is consistent with the existing `Float16_t` type that only truncates the mantissa. See also #13917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13935
https://github.com/root-project/root/pull/13936:189,deployability,Updat,Update,189,"[webcanvas] improve `TF1`, `TF2`, `TGraph2D` handling [6.30]; 1. Properly use saved buffers in functions. 2. Properly invoke context menu. 3. Support histograms creation for `TGraph2D`. 4. Update JSROOT code. Backport some changes which will be submitted to master soon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13936
https://github.com/root-project/root/pull/13936:84,integrability,buffer,buffers,84,"[webcanvas] improve `TF1`, `TF2`, `TGraph2D` handling [6.30]; 1. Properly use saved buffers in functions. 2. Properly invoke context menu. 3. Support histograms creation for `TGraph2D`. 4. Update JSROOT code. Backport some changes which will be submitted to master soon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13936
https://github.com/root-project/root/pull/13936:245,integrability,sub,submitted,245,"[webcanvas] improve `TF1`, `TF2`, `TGraph2D` handling [6.30]; 1. Properly use saved buffers in functions. 2. Properly invoke context menu. 3. Support histograms creation for `TGraph2D`. 4. Update JSROOT code. Backport some changes which will be submitted to master soon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13936
https://github.com/root-project/root/pull/13936:189,safety,Updat,Update,189,"[webcanvas] improve `TF1`, `TF2`, `TGraph2D` handling [6.30]; 1. Properly use saved buffers in functions. 2. Properly invoke context menu. 3. Support histograms creation for `TGraph2D`. 4. Update JSROOT code. Backport some changes which will be submitted to master soon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13936
https://github.com/root-project/root/pull/13936:189,security,Updat,Update,189,"[webcanvas] improve `TF1`, `TF2`, `TGraph2D` handling [6.30]; 1. Properly use saved buffers in functions. 2. Properly invoke context menu. 3. Support histograms creation for `TGraph2D`. 4. Update JSROOT code. Backport some changes which will be submitted to master soon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13936
https://github.com/root-project/root/pull/13936:125,testability,context,context,125,"[webcanvas] improve `TF1`, `TF2`, `TGraph2D` handling [6.30]; 1. Properly use saved buffers in functions. 2. Properly invoke context menu. 3. Support histograms creation for `TGraph2D`. 4. Update JSROOT code. Backport some changes which will be submitted to master soon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13936
https://github.com/root-project/root/pull/13936:133,usability,menu,menu,133,"[webcanvas] improve `TF1`, `TF2`, `TGraph2D` handling [6.30]; 1. Properly use saved buffers in functions. 2. Properly invoke context menu. 3. Support histograms creation for `TGraph2D`. 4. Update JSROOT code. Backport some changes which will be submitted to master soon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13936
https://github.com/root-project/root/pull/13936:142,usability,Support,Support,142,"[webcanvas] improve `TF1`, `TF2`, `TGraph2D` handling [6.30]; 1. Properly use saved buffers in functions. 2. Properly invoke context menu. 3. Support histograms creation for `TGraph2D`. 4. Update JSROOT code. Backport some changes which will be submitted to master soon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13936
https://github.com/root-project/root/pull/13937:165,deployability,Updat,Update,165,"[webcanvas] Improve `TF1` / `TF2` / `TGraph2D` usage; 1. Call TF1::Save with non-zero arguments, avoiding #13927 . 2. Supports histogram creation for `TGraph2D`. 3. Update JSROOT with correspondent changes. 4. Adjust some tutorials where TF1/TF2 drawing is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13937
https://github.com/root-project/root/pull/13937:246,energy efficiency,draw,drawing,246,"[webcanvas] Improve `TF1` / `TF2` / `TGraph2D` usage; 1. Call TF1::Save with non-zero arguments, avoiding #13927 . 2. Supports histogram creation for `TGraph2D`. 3. Update JSROOT with correspondent changes. 4. Adjust some tutorials where TF1/TF2 drawing is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13937
https://github.com/root-project/root/pull/13937:97,safety,avoid,avoiding,97,"[webcanvas] Improve `TF1` / `TF2` / `TGraph2D` usage; 1. Call TF1::Save with non-zero arguments, avoiding #13927 . 2. Supports histogram creation for `TGraph2D`. 3. Update JSROOT with correspondent changes. 4. Adjust some tutorials where TF1/TF2 drawing is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13937
https://github.com/root-project/root/pull/13937:165,safety,Updat,Update,165,"[webcanvas] Improve `TF1` / `TF2` / `TGraph2D` usage; 1. Call TF1::Save with non-zero arguments, avoiding #13927 . 2. Supports histogram creation for `TGraph2D`. 3. Update JSROOT with correspondent changes. 4. Adjust some tutorials where TF1/TF2 drawing is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13937
https://github.com/root-project/root/pull/13937:165,security,Updat,Update,165,"[webcanvas] Improve `TF1` / `TF2` / `TGraph2D` usage; 1. Call TF1::Save with non-zero arguments, avoiding #13927 . 2. Supports histogram creation for `TGraph2D`. 3. Update JSROOT with correspondent changes. 4. Adjust some tutorials where TF1/TF2 drawing is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13937
https://github.com/root-project/root/pull/13937:118,usability,Support,Supports,118,"[webcanvas] Improve `TF1` / `TF2` / `TGraph2D` usage; 1. Call TF1::Save with non-zero arguments, avoiding #13927 . 2. Supports histogram creation for `TGraph2D`. 3. Update JSROOT with correspondent changes. 4. Adjust some tutorials where TF1/TF2 drawing is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13937
https://github.com/root-project/root/pull/13938:59,security,auth,author,59,Fixes for DF tutorials; - Add .json in Doxyfile. - Fix the author(s) section.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13938
https://github.com/root-project/root/pull/13939:694,integrability,Batch,BatchMode,694,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:778,integrability,Batch,Batch,778,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:972,integrability,interfac,interface,972,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:1099,integrability,interfac,interfaces,1099,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:1144,integrability,interfac,interfaces,1144,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:972,interoperability,interfac,interface,972,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:1099,interoperability,interfac,interfaces,1099,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:1144,interoperability,interfac,interfaces,1144,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:545,modifiability,paramet,parameter,545,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:972,modifiability,interfac,interface,972,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:1099,modifiability,interfac,interfaces,1099,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:1144,modifiability,interfac,interfaces,1144,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:694,performance,Batch,BatchMode,694,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:778,performance,Batch,Batch,778,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:1257,performance,time,time,1257,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:341,reliability,doE,doEval,341,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:450,reliability,doe,doesn,450,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:740,reliability,doE,doEval,740,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:17,security,sign,signature,17,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:74,security,sign,signature,74,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:316,security,sign,signature,316,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:412,security,sign,signature,412,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:732,testability,simpl,simply,732,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:732,usability,simpl,simply,732,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:1015,usability,document,documentation,1015,"[RF] Improve the signature of vectorized evaluation function; So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++. void RooAbsReal::computeBatch(double* output, size_t nEvents,. RooFit::Detail::DataMap const& dataMap) const. ```. This commit is suggesting a new signature:. ```c++. void doEval(RooFit::EvalContext & ctx) const;. ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13940:48,deployability,patch,patches,48,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 5; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13918. - https://github.com/root-project/root/pull/13931. - https://github.com/root-project/root/pull/13929. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13930.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13940
https://github.com/root-project/root/pull/13940:152,deployability,patch,patches,152,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 5; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13918. - https://github.com/root-project/root/pull/13931. - https://github.com/root-project/root/pull/13929. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13930.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13940
https://github.com/root-project/root/pull/13940:48,safety,patch,patches,48,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 5; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13918. - https://github.com/root-project/root/pull/13931. - https://github.com/root-project/root/pull/13929. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13930.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13940
https://github.com/root-project/root/pull/13940:152,safety,patch,patches,152,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 5; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13918. - https://github.com/root-project/root/pull/13931. - https://github.com/root-project/root/pull/13929. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13930.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13940
https://github.com/root-project/root/pull/13940:48,security,patch,patches,48,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 5; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13918. - https://github.com/root-project/root/pull/13931. - https://github.com/root-project/root/pull/13929. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13930.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13940
https://github.com/root-project/root/pull/13940:152,security,patch,patches,152,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 5; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13918. - https://github.com/root-project/root/pull/13931. - https://github.com/root-project/root/pull/13929. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13930.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13940
https://github.com/root-project/root/pull/13941:156,deployability,updat,updated,156,[RF] Implement `RooRatio::translate()` to enable AD support; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13941
https://github.com/root-project/root/pull/13941:26,integrability,translat,translate,26,[RF] Implement `RooRatio::translate()` to enable AD support; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13941
https://github.com/root-project/root/pull/13941:26,interoperability,translat,translate,26,[RF] Implement `RooRatio::translate()` to enable AD support; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13941
https://github.com/root-project/root/pull/13941:126,safety,test,tested,126,[RF] Implement `RooRatio::translate()` to enable AD support; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13941
https://github.com/root-project/root/pull/13941:156,safety,updat,updated,156,[RF] Implement `RooRatio::translate()` to enable AD support; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13941
https://github.com/root-project/root/pull/13941:156,security,updat,updated,156,[RF] Implement `RooRatio::translate()` to enable AD support; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13941
https://github.com/root-project/root/pull/13941:126,testability,test,tested,126,[RF] Implement `RooRatio::translate()` to enable AD support; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13941
https://github.com/root-project/root/pull/13941:52,usability,support,support,52,[RF] Implement `RooRatio::translate()` to enable AD support; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13941
https://github.com/root-project/root/pull/13942:140,integrability,configur,configured,140,"[tbrowser] ensure that TCanvas created when web mode is not active; In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. . Therefore change gEnv values for the time when canvas is created. Address issue from forum:. https://root-forum.cern.ch/t/web-browser-off-not-working/56859/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13942
https://github.com/root-project/root/pull/13942:140,modifiability,configur,configured,140,"[tbrowser] ensure that TCanvas created when web mode is not active; In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. . Therefore change gEnv values for the time when canvas is created. Address issue from forum:. https://root-forum.cern.ch/t/web-browser-off-not-working/56859/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13942
https://github.com/root-project/root/pull/13942:203,performance,time,time,203,"[tbrowser] ensure that TCanvas created when web mode is not active; In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. . Therefore change gEnv values for the time when canvas is created. Address issue from forum:. https://root-forum.cern.ch/t/web-browser-off-not-working/56859/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13942
https://github.com/root-project/root/pull/13942:140,security,configur,configured,140,"[tbrowser] ensure that TCanvas created when web mode is not active; In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. . Therefore change gEnv values for the time when canvas is created. Address issue from forum:. https://root-forum.cern.ch/t/web-browser-off-not-working/56859/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13942
https://github.com/root-project/root/pull/13943:147,integrability,configur,configured,147,"[tbrowser] ensure that TCanvas created when web mode is not active [6.30]; In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. Therefore change gEnv values for the time when canvas is created.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13943
https://github.com/root-project/root/pull/13943:147,modifiability,configur,configured,147,"[tbrowser] ensure that TCanvas created when web mode is not active [6.30]; In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. Therefore change gEnv values for the time when canvas is created.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13943
https://github.com/root-project/root/pull/13943:208,performance,time,time,208,"[tbrowser] ensure that TCanvas created when web mode is not active [6.30]; In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. Therefore change gEnv values for the time when canvas is created.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13943
https://github.com/root-project/root/pull/13943:147,security,configur,configured,147,"[tbrowser] ensure that TCanvas created when web mode is not active [6.30]; In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. Therefore change gEnv values for the time when canvas is created.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13943
https://github.com/root-project/root/pull/13944:137,deployability,releas,release,137,[skip-ci][relnotes] Add contributions by Vincenzo; Others are taken care by linked issues and will end up in the list of bugfixes of the release notes automatically,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13944
https://github.com/root-project/root/pull/13944:151,deployability,automat,automatically,151,[skip-ci][relnotes] Add contributions by Vincenzo; Others are taken care by linked issues and will end up in the list of bugfixes of the release notes automatically,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13944
https://github.com/root-project/root/pull/13944:151,testability,automat,automatically,151,[skip-ci][relnotes] Add contributions by Vincenzo; Others are taken care by linked issues and will end up in the list of bugfixes of the release notes automatically,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13944
https://github.com/root-project/root/pull/13945:147,integrability,configur,configured,147,"[tbrowser] ensure that TCanvas created when web mode is not active [6.28]; In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. Therefore change gEnv values for the time when canvas is created.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13945
https://github.com/root-project/root/pull/13945:147,modifiability,configur,configured,147,"[tbrowser] ensure that TCanvas created when web mode is not active [6.28]; In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. Therefore change gEnv values for the time when canvas is created.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13945
https://github.com/root-project/root/pull/13945:208,performance,time,time,208,"[tbrowser] ensure that TCanvas created when web mode is not active [6.28]; In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. Therefore change gEnv values for the time when canvas is created.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13945
https://github.com/root-project/root/pull/13945:147,security,configur,configured,147,"[tbrowser] ensure that TCanvas created when web mode is not active [6.28]; In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. Therefore change gEnv values for the time when canvas is created.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13945
https://github.com/root-project/root/pull/13946:34,availability,toler,tolerant,34,[cmake] make FindMySQL.cmake more tolerant; # This Pull request:. ## Changes or fixes:. - Changes FindMyQL.cmake to find the installation of MySQL if mysql_config fails because it has been relocated. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:125,deployability,instal,installation,125,[cmake] make FindMySQL.cmake more tolerant; # This Pull request:. ## Changes or fixes:. - Changes FindMyQL.cmake to find the installation of MySQL if mysql_config fails because it has been relocated. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:163,deployability,fail,fails,163,[cmake] make FindMySQL.cmake more tolerant; # This Pull request:. ## Changes or fixes:. - Changes FindMyQL.cmake to find the installation of MySQL if mysql_config fails because it has been relocated. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:252,deployability,updat,updated,252,[cmake] make FindMySQL.cmake more tolerant; # This Pull request:. ## Changes or fixes:. - Changes FindMyQL.cmake to find the installation of MySQL if mysql_config fails because it has been relocated. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:34,reliability,toleran,tolerant,34,[cmake] make FindMySQL.cmake more tolerant; # This Pull request:. ## Changes or fixes:. - Changes FindMyQL.cmake to find the installation of MySQL if mysql_config fails because it has been relocated. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:163,reliability,fail,fails,163,[cmake] make FindMySQL.cmake more tolerant; # This Pull request:. ## Changes or fixes:. - Changes FindMyQL.cmake to find the installation of MySQL if mysql_config fails because it has been relocated. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:222,safety,test,tested,222,[cmake] make FindMySQL.cmake more tolerant; # This Pull request:. ## Changes or fixes:. - Changes FindMyQL.cmake to find the installation of MySQL if mysql_config fails because it has been relocated. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:252,safety,updat,updated,252,[cmake] make FindMySQL.cmake more tolerant; # This Pull request:. ## Changes or fixes:. - Changes FindMyQL.cmake to find the installation of MySQL if mysql_config fails because it has been relocated. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:252,security,updat,updated,252,[cmake] make FindMySQL.cmake more tolerant; # This Pull request:. ## Changes or fixes:. - Changes FindMyQL.cmake to find the installation of MySQL if mysql_config fails because it has been relocated. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:222,testability,test,tested,222,[cmake] make FindMySQL.cmake more tolerant; # This Pull request:. ## Changes or fixes:. - Changes FindMyQL.cmake to find the installation of MySQL if mysql_config fails because it has been relocated. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13947:301,deployability,updat,updated,301,[v6-30] Fix Cocoa GUI for MacOS14 and Clang15 (#13885); * Fix Cocoa GUI for MacOS14 and clang5. * Fix the text editor (Thanks Timur !). (cherry picked from commit 6593d774ea90fbd9e5a139c1e429ac2da6125a98). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13947
https://github.com/root-project/root/pull/13947:271,safety,test,tested,271,[v6-30] Fix Cocoa GUI for MacOS14 and Clang15 (#13885); * Fix Cocoa GUI for MacOS14 and clang5. * Fix the text editor (Thanks Timur !). (cherry picked from commit 6593d774ea90fbd9e5a139c1e429ac2da6125a98). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13947
https://github.com/root-project/root/pull/13947:301,safety,updat,updated,301,[v6-30] Fix Cocoa GUI for MacOS14 and Clang15 (#13885); * Fix Cocoa GUI for MacOS14 and clang5. * Fix the text editor (Thanks Timur !). (cherry picked from commit 6593d774ea90fbd9e5a139c1e429ac2da6125a98). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13947
https://github.com/root-project/root/pull/13947:301,security,updat,updated,301,[v6-30] Fix Cocoa GUI for MacOS14 and Clang15 (#13885); * Fix Cocoa GUI for MacOS14 and clang5. * Fix the text editor (Thanks Timur !). (cherry picked from commit 6593d774ea90fbd9e5a139c1e429ac2da6125a98). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13947
https://github.com/root-project/root/pull/13947:271,testability,test,tested,271,[v6-30] Fix Cocoa GUI for MacOS14 and Clang15 (#13885); * Fix Cocoa GUI for MacOS14 and clang5. * Fix the text editor (Thanks Timur !). (cherry picked from commit 6593d774ea90fbd9e5a139c1e429ac2da6125a98). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13947
https://github.com/root-project/root/pull/13948:33,deployability,build,build,33,[v6.30] Deprecation + removal of build options [backport]; Co-authored-by: Bertrand Bellenot <bellenot@users.noreply.github.com>. Backport of https://github.com/root-project/root/pull/13856. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13948
https://github.com/root-project/root/pull/13948:286,deployability,updat,updated,286,[v6.30] Deprecation + removal of build options [backport]; Co-authored-by: Bertrand Bellenot <bellenot@users.noreply.github.com>. Backport of https://github.com/root-project/root/pull/13856. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13948
https://github.com/root-project/root/pull/13948:256,safety,test,tested,256,[v6.30] Deprecation + removal of build options [backport]; Co-authored-by: Bertrand Bellenot <bellenot@users.noreply.github.com>. Backport of https://github.com/root-project/root/pull/13856. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13948
https://github.com/root-project/root/pull/13948:286,safety,updat,updated,286,[v6.30] Deprecation + removal of build options [backport]; Co-authored-by: Bertrand Bellenot <bellenot@users.noreply.github.com>. Backport of https://github.com/root-project/root/pull/13856. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13948
https://github.com/root-project/root/pull/13948:62,security,auth,authored-by,62,[v6.30] Deprecation + removal of build options [backport]; Co-authored-by: Bertrand Bellenot <bellenot@users.noreply.github.com>. Backport of https://github.com/root-project/root/pull/13856. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13948
https://github.com/root-project/root/pull/13948:286,security,updat,updated,286,[v6.30] Deprecation + removal of build options [backport]; Co-authored-by: Bertrand Bellenot <bellenot@users.noreply.github.com>. Backport of https://github.com/root-project/root/pull/13856. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13948
https://github.com/root-project/root/pull/13948:256,testability,test,tested,256,[v6.30] Deprecation + removal of build options [backport]; Co-authored-by: Bertrand Bellenot <bellenot@users.noreply.github.com>. Backport of https://github.com/root-project/root/pull/13856. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13948
https://github.com/root-project/root/pull/13948:103,usability,user,users,103,[v6.30] Deprecation + removal of build options [backport]; Co-authored-by: Bertrand Bellenot <bellenot@users.noreply.github.com>. Backport of https://github.com/root-project/root/pull/13856. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13948
https://github.com/root-project/root/pull/13949:222,availability,Error,Error,222,"Fix [TF1,TF2,TF3] Save methods; Since the beginning when 0 ranges were specified by Save method, . half a bin was add to coordinate. But wrong number of bins was stored and . therefore produced buffer was not able to use. Error was from very beginning - . already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:436,availability,failur,failure,436,"Fix [TF1,TF2,TF3] Save methods; Since the beginning when 0 ranges were specified by Save method, . half a bin was add to coordinate. But wrong number of bins was stored and . therefore produced buffer was not able to use. Error was from very beginning - . already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:436,deployability,fail,failure,436,"Fix [TF1,TF2,TF3] Save methods; Since the beginning when 0 ranges were specified by Save method, . half a bin was add to coordinate. But wrong number of bins was stored and . therefore produced buffer was not able to use. Error was from very beginning - . already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:194,integrability,buffer,buffer,194,"Fix [TF1,TF2,TF3] Save methods; Since the beginning when 0 ranges were specified by Save method, . half a bin was add to coordinate. But wrong number of bins was stored and . therefore produced buffer was not able to use. Error was from very beginning - . already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:462,integrability,buffer,buffer,462,"Fix [TF1,TF2,TF3] Save methods; Since the beginning when 0 ranges were specified by Save method, . half a bin was add to coordinate. But wrong number of bins was stored and . therefore produced buffer was not able to use. Error was from very beginning - . already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:71,interoperability,specif,specified,71,"Fix [TF1,TF2,TF3] Save methods; Since the beginning when 0 ranges were specified by Save method, . half a bin was add to coordinate. But wrong number of bins was stored and . therefore produced buffer was not able to use. Error was from very beginning - . already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:121,interoperability,coordinat,coordinate,121,"Fix [TF1,TF2,TF3] Save methods; Since the beginning when 0 ranges were specified by Save method, . half a bin was add to coordinate. But wrong number of bins was stored and . therefore produced buffer was not able to use. Error was from very beginning - . already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:222,performance,Error,Error,222,"Fix [TF1,TF2,TF3] Save methods; Since the beginning when 0 ranges were specified by Save method, . half a bin was add to coordinate. But wrong number of bins was stored and . therefore produced buffer was not able to use. Error was from very beginning - . already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:436,performance,failur,failure,436,"Fix [TF1,TF2,TF3] Save methods; Since the beginning when 0 ranges were specified by Save method, . half a bin was add to coordinate. But wrong number of bins was stored and . therefore produced buffer was not able to use. Error was from very beginning - . already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:436,reliability,fail,failure,436,"Fix [TF1,TF2,TF3] Save methods; Since the beginning when 0 ranges were specified by Save method, . half a bin was add to coordinate. But wrong number of bins was stored and . therefore produced buffer was not able to use. Error was from very beginning - . already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:222,safety,Error,Error,222,"Fix [TF1,TF2,TF3] Save methods; Since the beginning when 0 ranges were specified by Save method, . half a bin was add to coordinate. But wrong number of bins was stored and . therefore produced buffer was not able to use. Error was from very beginning - . already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:547,safety,test,tests,547,"Fix [TF1,TF2,TF3] Save methods; Since the beginning when 0 ranges were specified by Save method, . half a bin was add to coordinate. But wrong number of bins was stored and . therefore produced buffer was not able to use. Error was from very beginning - . already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:547,testability,test,tests,547,"Fix [TF1,TF2,TF3] Save methods; Since the beginning when 0 ranges were specified by Save method, . half a bin was add to coordinate. But wrong number of bins was stored and . therefore produced buffer was not able to use. Error was from very beginning - . already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:222,usability,Error,Error,222,"Fix [TF1,TF2,TF3] Save methods; Since the beginning when 0 ranges were specified by Save method, . half a bin was add to coordinate. But wrong number of bins was stored and . therefore produced buffer was not able to use. Error was from very beginning - . already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13950:23,deployability,Updat,Update,23,"[skip-ci][ntuple][NFC] Update importer documentation; Remove the usage of `RResult`-related function as the returned importer object is not wrapped in it anymore. Also point to the tutorial, and mention the specification for type compatibility.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13950
https://github.com/root-project/root/pull/13950:140,integrability,wrap,wrapped,140,"[skip-ci][ntuple][NFC] Update importer documentation; Remove the usage of `RResult`-related function as the returned importer object is not wrapped in it anymore. Also point to the tutorial, and mention the specification for type compatibility.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13950
https://github.com/root-project/root/pull/13950:207,interoperability,specif,specification,207,"[skip-ci][ntuple][NFC] Update importer documentation; Remove the usage of `RResult`-related function as the returned importer object is not wrapped in it anymore. Also point to the tutorial, and mention the specification for type compatibility.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13950
https://github.com/root-project/root/pull/13950:230,interoperability,compatib,compatibility,230,"[skip-ci][ntuple][NFC] Update importer documentation; Remove the usage of `RResult`-related function as the returned importer object is not wrapped in it anymore. Also point to the tutorial, and mention the specification for type compatibility.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13950
https://github.com/root-project/root/pull/13950:23,safety,Updat,Update,23,"[skip-ci][ntuple][NFC] Update importer documentation; Remove the usage of `RResult`-related function as the returned importer object is not wrapped in it anymore. Also point to the tutorial, and mention the specification for type compatibility.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13950
https://github.com/root-project/root/pull/13950:23,security,Updat,Update,23,"[skip-ci][ntuple][NFC] Update importer documentation; Remove the usage of `RResult`-related function as the returned importer object is not wrapped in it anymore. Also point to the tutorial, and mention the specification for type compatibility.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13950
https://github.com/root-project/root/pull/13950:39,usability,document,documentation,39,"[skip-ci][ntuple][NFC] Update importer documentation; Remove the usage of `RResult`-related function as the returned importer object is not wrapped in it anymore. Also point to the tutorial, and mention the specification for type compatibility.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13950
https://github.com/root-project/root/pull/13951:37,modifiability,Paramet,ParameterSetting,37,Backport mathcore : Fix creating the ParameterSetting when calling SetFCN; This fixes using the fit2dHist.C when using the global fit (user defined FCN). This PR fixes #13906.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13951
https://github.com/root-project/root/pull/13951:135,usability,user,user,135,Backport mathcore : Fix creating the ParameterSetting when calling SetFCN; This fixes using the fit2dHist.C when using the global fit (user defined FCN). This PR fixes #13906.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13951
https://github.com/root-project/root/pull/13953:108,deployability,configurat,configuration,108,"[graf2d] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:108,integrability,configur,configuration,108,"[graf2d] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:108,modifiability,configur,configuration,108,"[graf2d] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:303,performance,perform,performance-for-range-copy,303,"[graf2d] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:335,performance,perform,performance-unnecessary-copy-initialization,335,"[graf2d] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:108,security,configur,configuration,108,"[graf2d] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:303,usability,perform,performance-for-range-copy,303,"[graf2d] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:335,usability,perform,performance-unnecessary-copy-initialization,335,"[graf2d] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13954:106,deployability,configurat,configuration,106,"[geom] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13954
https://github.com/root-project/root/pull/13954:106,integrability,configur,configuration,106,"[geom] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13954
https://github.com/root-project/root/pull/13954:106,modifiability,configur,configuration,106,"[geom] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13954
https://github.com/root-project/root/pull/13954:301,performance,perform,performance-for-range-copy,301,"[geom] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13954
https://github.com/root-project/root/pull/13954:333,performance,perform,performance-unnecessary-copy-initialization,333,"[geom] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13954
https://github.com/root-project/root/pull/13954:106,security,configur,configuration,106,"[geom] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13954
https://github.com/root-project/root/pull/13954:301,usability,perform,performance-for-range-copy,301,"[geom] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13954
https://github.com/root-project/root/pull/13954:333,usability,perform,performance-unnecessary-copy-initialization,333,"[geom] Apply `clang-tidy` suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13954
https://github.com/root-project/root/pull/13955:15,safety,Prevent,Prevent,15,[v628][PyROOT] Prevent functions from crashing due to Python 3.12 assert; Backport of:. https://github.com/root-project/root/pull/13912.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13955
https://github.com/root-project/root/pull/13955:15,security,Preven,Prevent,15,[v628][PyROOT] Prevent functions from crashing due to Python 3.12 assert; Backport of:. https://github.com/root-project/root/pull/13912.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13955
https://github.com/root-project/root/pull/13955:66,testability,assert,assert,66,[v628][PyROOT] Prevent functions from crashing due to Python 3.12 assert; Backport of:. https://github.com/root-project/root/pull/13912.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13955
https://github.com/root-project/root/pull/13956:235,deployability,updat,updated,235,"v6.30 [matrix] Fix TMatrixTSparse::SetMatrixArray for RowLwb!=0:; Addresses https://github.com/root-project/root/issues/13848 Thanks, Eddy! # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13956
https://github.com/root-project/root/pull/13956:205,safety,test,tested,205,"v6.30 [matrix] Fix TMatrixTSparse::SetMatrixArray for RowLwb!=0:; Addresses https://github.com/root-project/root/issues/13848 Thanks, Eddy! # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13956
https://github.com/root-project/root/pull/13956:235,safety,updat,updated,235,"v6.30 [matrix] Fix TMatrixTSparse::SetMatrixArray for RowLwb!=0:; Addresses https://github.com/root-project/root/issues/13848 Thanks, Eddy! # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13956
https://github.com/root-project/root/pull/13956:235,security,updat,updated,235,"v6.30 [matrix] Fix TMatrixTSparse::SetMatrixArray for RowLwb!=0:; Addresses https://github.com/root-project/root/issues/13848 Thanks, Eddy! # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13956
https://github.com/root-project/root/pull/13956:205,testability,test,tested,205,"v6.30 [matrix] Fix TMatrixTSparse::SetMatrixArray for RowLwb!=0:; Addresses https://github.com/root-project/root/issues/13848 Thanks, Eddy! # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13956
https://github.com/root-project/root/pull/13957:43,deployability,releas,release,43,"[eve7] Silence ""unused par"" warning on Mac release builds:; parameter 'size' set but not used [-Wunused-but-set-parameter]. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13957
https://github.com/root-project/root/pull/13957:51,deployability,build,builds,51,"[eve7] Silence ""unused par"" warning on Mac release builds:; parameter 'size' set but not used [-Wunused-but-set-parameter]. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13957
https://github.com/root-project/root/pull/13957:219,deployability,updat,updated,219,"[eve7] Silence ""unused par"" warning on Mac release builds:; parameter 'size' set but not used [-Wunused-but-set-parameter]. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13957
https://github.com/root-project/root/pull/13957:60,modifiability,paramet,parameter,60,"[eve7] Silence ""unused par"" warning on Mac release builds:; parameter 'size' set but not used [-Wunused-but-set-parameter]. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13957
https://github.com/root-project/root/pull/13957:112,modifiability,paramet,parameter,112,"[eve7] Silence ""unused par"" warning on Mac release builds:; parameter 'size' set but not used [-Wunused-but-set-parameter]. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13957
https://github.com/root-project/root/pull/13957:189,safety,test,tested,189,"[eve7] Silence ""unused par"" warning on Mac release builds:; parameter 'size' set but not used [-Wunused-but-set-parameter]. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13957
https://github.com/root-project/root/pull/13957:219,safety,updat,updated,219,"[eve7] Silence ""unused par"" warning on Mac release builds:; parameter 'size' set but not used [-Wunused-but-set-parameter]. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13957
https://github.com/root-project/root/pull/13957:219,security,updat,updated,219,"[eve7] Silence ""unused par"" warning on Mac release builds:; parameter 'size' set but not used [-Wunused-but-set-parameter]. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13957
https://github.com/root-project/root/pull/13957:189,testability,test,tested,189,"[eve7] Silence ""unused par"" warning on Mac release builds:; parameter 'size' set but not used [-Wunused-but-set-parameter]. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13957
https://github.com/root-project/root/issues/13958:664,availability,Operat,Operating,664,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:597,deployability,version,version,597,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:631,deployability,Instal,Installation,631,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:766,deployability,build,build,766,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:597,integrability,version,version,597,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:534,modifiability,maintain,maintainer,534,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:597,modifiability,version,version,597,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:534,safety,maintain,maintainer,534,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:706,testability,context,context,706,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:18,usability,Clear,Clear,18,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:24,usability,command,command,24,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:292,usability,clear,clear,292,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:299,usability,command,command,299,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:345,usability,command,command,345,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:852,usability,help,help,852,"Implementation of Clear command in place of .!cls; ### Explain what you would like to see improved and how. Hello there. I am a college senior and am interested in improving my C++ open source development, and would like to work on CERN's ROOT repo. I have noticed that there is no explicit 'clear' command for ROOT's CLI. It utilizes the .!cls command. . I would like to know if I could implement the same to get me started here. @Axel-Naumann @couet . I would like to know if my proposed idea can be implemented, and would like the maintainer's thoughts on the same. Thanks once again. ### ROOT version. latest docker image. ### Installation method. docker. ### Operating system. Windows. ### Additional context. - I would like to know if one would suggest that I build out ROOT in a linux environment, or in a windows environment. - Would need some help in locating the CLI file within the repo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13962:223,availability,error,error-thnsparse,223,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:352,availability,Operat,Operating,352,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:12,deployability,Scale,Scale,12,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:111,deployability,Scale,Scale,111,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:120,deployability,scale,scales,120,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:266,deployability,Scale,Scale,266,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:293,deployability,version,version,293,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:314,deployability,Instal,Installation,314,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:12,energy efficiency,Scale,Scale,12,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:111,energy efficiency,Scale,Scale,111,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:120,energy efficiency,scale,scales,120,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:266,energy efficiency,Scale,Scale,266,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:293,integrability,version,version,293,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:12,modifiability,Scal,Scale,12,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:111,modifiability,Scal,Scale,111,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:120,modifiability,scal,scales,120,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:266,modifiability,Scal,Scale,266,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:293,modifiability,version,version,293,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:12,performance,Scale,Scale,12,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:111,performance,Scale,Scale,111,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:120,performance,scale,scales,120,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:223,performance,error,error-thnsparse,223,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:266,performance,Scale,Scale,266,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:223,safety,error,error-thnsparse,223,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:392,testability,context,context,392,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13962:223,usability,error,error-thnsparse,223,"`THnSparse::Scale()` unsparsifies; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13962
https://github.com/root-project/root/issues/13964:633,availability,Operat,Operating,633,"Interactive PNG output is incorrect with MAcOSX 14.1 and Clang 15; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When producing a `png` picture interactively from the `Save` menu of the canvas, the generated image has a black rectangle on top which corresponds (in size) more or less to the TCanvas menu bar:. ![c1](https://github.com/root-project/root/assets/4697738/1b3890a7-7295-49ea-abe1-4992461c7773). ### Reproducer. ```. $ root --web=off. root [0] h->Draw();. ... save the image as png. ... exit root. ... look at the png. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS 14.1. ### Additional context. - With MacOS 13.6.1 and root master it is ok. - generating images in batch is fine too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13964
https://github.com/root-project/root/issues/13964:573,deployability,version,version,573,"Interactive PNG output is incorrect with MAcOSX 14.1 and Clang 15; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When producing a `png` picture interactively from the `Save` menu of the canvas, the generated image has a black rectangle on top which corresponds (in size) more or less to the TCanvas menu bar:. ![c1](https://github.com/root-project/root/assets/4697738/1b3890a7-7295-49ea-abe1-4992461c7773). ### Reproducer. ```. $ root --web=off. root [0] h->Draw();. ... save the image as png. ... exit root. ... look at the png. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS 14.1. ### Additional context. - With MacOS 13.6.1 and root master it is ok. - generating images in batch is fine too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13964
https://github.com/root-project/root/issues/13964:594,deployability,Instal,Installation,594,"Interactive PNG output is incorrect with MAcOSX 14.1 and Clang 15; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When producing a `png` picture interactively from the `Save` menu of the canvas, the generated image has a black rectangle on top which corresponds (in size) more or less to the TCanvas menu bar:. ![c1](https://github.com/root-project/root/assets/4697738/1b3890a7-7295-49ea-abe1-4992461c7773). ### Reproducer. ```. $ root --web=off. root [0] h->Draw();. ... save the image as png. ... exit root. ... look at the png. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS 14.1. ### Additional context. - With MacOS 13.6.1 and root master it is ok. - generating images in batch is fine too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13964
https://github.com/root-project/root/issues/13964:487,energy efficiency,Draw,Draw,487,"Interactive PNG output is incorrect with MAcOSX 14.1 and Clang 15; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When producing a `png` picture interactively from the `Save` menu of the canvas, the generated image has a black rectangle on top which corresponds (in size) more or less to the TCanvas menu bar:. ![c1](https://github.com/root-project/root/assets/4697738/1b3890a7-7295-49ea-abe1-4992461c7773). ### Reproducer. ```. $ root --web=off. root [0] h->Draw();. ... save the image as png. ... exit root. ... look at the png. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS 14.1. ### Additional context. - With MacOS 13.6.1 and root master it is ok. - generating images in batch is fine too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13964
https://github.com/root-project/root/issues/13964:573,integrability,version,version,573,"Interactive PNG output is incorrect with MAcOSX 14.1 and Clang 15; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When producing a `png` picture interactively from the `Save` menu of the canvas, the generated image has a black rectangle on top which corresponds (in size) more or less to the TCanvas menu bar:. ![c1](https://github.com/root-project/root/assets/4697738/1b3890a7-7295-49ea-abe1-4992461c7773). ### Reproducer. ```. $ root --web=off. root [0] h->Draw();. ... save the image as png. ... exit root. ... look at the png. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS 14.1. ### Additional context. - With MacOS 13.6.1 and root master it is ok. - generating images in batch is fine too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13964
https://github.com/root-project/root/issues/13964:756,integrability,batch,batch,756,"Interactive PNG output is incorrect with MAcOSX 14.1 and Clang 15; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When producing a `png` picture interactively from the `Save` menu of the canvas, the generated image has a black rectangle on top which corresponds (in size) more or less to the TCanvas menu bar:. ![c1](https://github.com/root-project/root/assets/4697738/1b3890a7-7295-49ea-abe1-4992461c7773). ### Reproducer. ```. $ root --web=off. root [0] h->Draw();. ... save the image as png. ... exit root. ... look at the png. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS 14.1. ### Additional context. - With MacOS 13.6.1 and root master it is ok. - generating images in batch is fine too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13964
https://github.com/root-project/root/issues/13964:573,modifiability,version,version,573,"Interactive PNG output is incorrect with MAcOSX 14.1 and Clang 15; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When producing a `png` picture interactively from the `Save` menu of the canvas, the generated image has a black rectangle on top which corresponds (in size) more or less to the TCanvas menu bar:. ![c1](https://github.com/root-project/root/assets/4697738/1b3890a7-7295-49ea-abe1-4992461c7773). ### Reproducer. ```. $ root --web=off. root [0] h->Draw();. ... save the image as png. ... exit root. ... look at the png. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS 14.1. ### Additional context. - With MacOS 13.6.1 and root master it is ok. - generating images in batch is fine too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13964
https://github.com/root-project/root/issues/13964:756,performance,batch,batch,756,"Interactive PNG output is incorrect with MAcOSX 14.1 and Clang 15; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When producing a `png` picture interactively from the `Save` menu of the canvas, the generated image has a black rectangle on top which corresponds (in size) more or less to the TCanvas menu bar:. ![c1](https://github.com/root-project/root/assets/4697738/1b3890a7-7295-49ea-abe1-4992461c7773). ### Reproducer. ```. $ root --web=off. root [0] h->Draw();. ... save the image as png. ... exit root. ... look at the png. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS 14.1. ### Additional context. - With MacOS 13.6.1 and root master it is ok. - generating images in batch is fine too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13964
https://github.com/root-project/root/issues/13964:678,testability,context,context,678,"Interactive PNG output is incorrect with MAcOSX 14.1 and Clang 15; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When producing a `png` picture interactively from the `Save` menu of the canvas, the generated image has a black rectangle on top which corresponds (in size) more or less to the TCanvas menu bar:. ![c1](https://github.com/root-project/root/assets/4697738/1b3890a7-7295-49ea-abe1-4992461c7773). ### Reproducer. ```. $ root --web=off. root [0] h->Draw();. ... save the image as png. ... exit root. ... look at the png. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS 14.1. ### Additional context. - With MacOS 13.6.1 and root master it is ok. - generating images in batch is fine too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13964
https://github.com/root-project/root/issues/13964:0,usability,Interact,Interactive,0,"Interactive PNG output is incorrect with MAcOSX 14.1 and Clang 15; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When producing a `png` picture interactively from the `Save` menu of the canvas, the generated image has a black rectangle on top which corresponds (in size) more or less to the TCanvas menu bar:. ![c1](https://github.com/root-project/root/assets/4697738/1b3890a7-7295-49ea-abe1-4992461c7773). ### Reproducer. ```. $ root --web=off. root [0] h->Draw();. ... save the image as png. ... exit root. ... look at the png. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS 14.1. ### Additional context. - With MacOS 13.6.1 and root master it is ok. - generating images in batch is fine too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13964
https://github.com/root-project/root/issues/13964:173,usability,interact,interactively,173,"Interactive PNG output is incorrect with MAcOSX 14.1 and Clang 15; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When producing a `png` picture interactively from the `Save` menu of the canvas, the generated image has a black rectangle on top which corresponds (in size) more or less to the TCanvas menu bar:. ![c1](https://github.com/root-project/root/assets/4697738/1b3890a7-7295-49ea-abe1-4992461c7773). ### Reproducer. ```. $ root --web=off. root [0] h->Draw();. ... save the image as png. ... exit root. ... look at the png. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS 14.1. ### Additional context. - With MacOS 13.6.1 and root master it is ok. - generating images in batch is fine too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13964
https://github.com/root-project/root/issues/13964:203,usability,menu,menu,203,"Interactive PNG output is incorrect with MAcOSX 14.1 and Clang 15; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When producing a `png` picture interactively from the `Save` menu of the canvas, the generated image has a black rectangle on top which corresponds (in size) more or less to the TCanvas menu bar:. ![c1](https://github.com/root-project/root/assets/4697738/1b3890a7-7295-49ea-abe1-4992461c7773). ### Reproducer. ```. $ root --web=off. root [0] h->Draw();. ... save the image as png. ... exit root. ... look at the png. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS 14.1. ### Additional context. - With MacOS 13.6.1 and root master it is ok. - generating images in batch is fine too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13964
https://github.com/root-project/root/issues/13964:328,usability,menu,menu,328,"Interactive PNG output is incorrect with MAcOSX 14.1 and Clang 15; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When producing a `png` picture interactively from the `Save` menu of the canvas, the generated image has a black rectangle on top which corresponds (in size) more or less to the TCanvas menu bar:. ![c1](https://github.com/root-project/root/assets/4697738/1b3890a7-7295-49ea-abe1-4992461c7773). ### Reproducer. ```. $ root --web=off. root [0] h->Draw();. ... save the image as png. ... exit root. ... look at the png. ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS 14.1. ### Additional context. - With MacOS 13.6.1 and root master it is ok. - generating images in batch is fine too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13964
https://github.com/root-project/root/issues/13965:552,availability,Operat,Operating,552,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:18,deployability,fail,fails,18,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:282,deployability,fail,failed,282,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:445,deployability,version,version,445,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:476,deployability,Instal,Installation,476,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:533,deployability,releas,release,533,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:445,integrability,version,version,445,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:445,modifiability,version,version,445,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:18,reliability,fail,fails,18,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:282,reliability,fail,failed,282,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:8,testability,Assert,Assertion,8,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:145,testability,simpl,simple,145,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:168,testability,assert,assertion,168,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:272,testability,Assert,Assertion,272,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:595,testability,context,context,595,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/issues/13965:145,usability,simpl,simple,145,"[Cling] Assertion fails with wrong but innocent code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a very simple way to cause an assertion in cling through wrong but innocent C++ code. ### Reproducer. ```cpp. root [0] g=TF1(""gaus""). Assertion failed: ((D->NextInContextAndBits.getPointer() || D == LastDecl) && ""decl is not in decls list""), function removeDecl, file DeclBase.cpp, line 1477. ```. ### ROOT version. master, MacOS 14. ### Installation method. built from sources, debug (clang in release mode). ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13965
https://github.com/root-project/root/pull/13966:46,modifiability,paramet,parameters,46,[Minuit2] Improve finding contour points when parameters are at limits; This PR improve the search for contour points when contour touches the parameter limits. . Improve also debugging and simplify the case when all parameters are fixed,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13966
https://github.com/root-project/root/pull/13966:143,modifiability,paramet,parameter,143,[Minuit2] Improve finding contour points when parameters are at limits; This PR improve the search for contour points when contour touches the parameter limits. . Improve also debugging and simplify the case when all parameters are fixed,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13966
https://github.com/root-project/root/pull/13966:217,modifiability,paramet,parameters,217,[Minuit2] Improve finding contour points when parameters are at limits; This PR improve the search for contour points when contour touches the parameter limits. . Improve also debugging and simplify the case when all parameters are fixed,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13966
https://github.com/root-project/root/pull/13966:190,testability,simpl,simplify,190,[Minuit2] Improve finding contour points when parameters are at limits; This PR improve the search for contour points when contour touches the parameter limits. . Improve also debugging and simplify the case when all parameters are fixed,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13966
https://github.com/root-project/root/pull/13966:190,usability,simpl,simplify,190,[Minuit2] Improve finding contour points when parameters are at limits; This PR improve the search for contour points when contour touches the parameter limits. . Improve also debugging and simplify the case when all parameters are fixed,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13966
https://github.com/root-project/root/pull/13967:6,deployability,Updat,Update,6,"[gui] Update the order of wildcards, to demote rare ones.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13967
https://github.com/root-project/root/pull/13967:154,deployability,updat,updated,154,"[gui] Update the order of wildcards, to demote rare ones.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13967
https://github.com/root-project/root/pull/13967:6,safety,Updat,Update,6,"[gui] Update the order of wildcards, to demote rare ones.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13967
https://github.com/root-project/root/pull/13967:124,safety,test,tested,124,"[gui] Update the order of wildcards, to demote rare ones.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13967
https://github.com/root-project/root/pull/13967:154,safety,updat,updated,154,"[gui] Update the order of wildcards, to demote rare ones.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13967
https://github.com/root-project/root/pull/13967:6,security,Updat,Update,6,"[gui] Update the order of wildcards, to demote rare ones.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13967
https://github.com/root-project/root/pull/13967:154,security,updat,updated,154,"[gui] Update the order of wildcards, to demote rare ones.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13967
https://github.com/root-project/root/pull/13967:124,testability,test,tested,124,"[gui] Update the order of wildcards, to demote rare ones.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13967
https://github.com/root-project/root/pull/13970:266,deployability,updat,updated,266,[cocoa] Fix wrong boundary of cocoa to-bitmap:; From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13970
https://github.com/root-project/root/pull/13970:108,integrability,batch,batch,108,[cocoa] Fix wrong boundary of cocoa to-bitmap:; From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13970
https://github.com/root-project/root/pull/13970:108,performance,batch,batch,108,[cocoa] Fix wrong boundary of cocoa to-bitmap:; From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13970
https://github.com/root-project/root/pull/13970:236,safety,test,tested,236,[cocoa] Fix wrong boundary of cocoa to-bitmap:; From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13970
https://github.com/root-project/root/pull/13970:266,safety,updat,updated,266,[cocoa] Fix wrong boundary of cocoa to-bitmap:; From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13970
https://github.com/root-project/root/pull/13970:266,security,updat,updated,266,[cocoa] Fix wrong boundary of cocoa to-bitmap:; From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13970
https://github.com/root-project/root/pull/13970:236,testability,test,tested,236,[cocoa] Fix wrong boundary of cocoa to-bitmap:; From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13970
https://github.com/root-project/root/pull/13970:120,usability,interact,interactive,120,[cocoa] Fix wrong boundary of cocoa to-bitmap:; From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13970
https://github.com/root-project/root/pull/13971:115,integrability,batch,batch,115,v6.30: [cocoa] Fix wrong boundary of cocoa to-bitmap:; From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. Backport of https://github.com/root-project/root/pull/13970,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13971
https://github.com/root-project/root/pull/13971:115,performance,batch,batch,115,v6.30: [cocoa] Fix wrong boundary of cocoa to-bitmap:; From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. Backport of https://github.com/root-project/root/pull/13970,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13971
https://github.com/root-project/root/pull/13971:127,usability,interact,interactive,127,v6.30: [cocoa] Fix wrong boundary of cocoa to-bitmap:; From Timur! Fixes black area on top of canvas region in non-batch (i.e. interactive) GUI save-as. I.e. fixes issue #13964. Backport of https://github.com/root-project/root/pull/13970,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13971
https://github.com/root-project/root/pull/13972:177,deployability,updat,updated,177,[skip-ci][relnotes] Mention ROOT_MAX_THREADS and alien removal; fomatting. (NFC); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13972
https://github.com/root-project/root/pull/13972:147,safety,test,tested,147,[skip-ci][relnotes] Mention ROOT_MAX_THREADS and alien removal; fomatting. (NFC); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13972
https://github.com/root-project/root/pull/13972:177,safety,updat,updated,177,[skip-ci][relnotes] Mention ROOT_MAX_THREADS and alien removal; fomatting. (NFC); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13972
https://github.com/root-project/root/pull/13972:177,security,updat,updated,177,[skip-ci][relnotes] Mention ROOT_MAX_THREADS and alien removal; fomatting. (NFC); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13972
https://github.com/root-project/root/pull/13972:147,testability,test,tested,147,[skip-ci][relnotes] Mention ROOT_MAX_THREADS and alien removal; fomatting. (NFC); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13972
https://github.com/root-project/root/pull/13974:43,deployability,Patch,Patches,43,"[v6-24] Compiling on Debian 12 (bookworm); Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:. Permit to compile with Python's libraries 3.11, too. I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:297,deployability,updat,updated,297,"[v6-24] Compiling on Debian 12 (bookworm); Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:. Permit to compile with Python's libraries 3.11, too. I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:43,safety,Patch,Patches,43,"[v6-24] Compiling on Debian 12 (bookworm); Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:. Permit to compile with Python's libraries 3.11, too. I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:206,safety,test,tested,206,"[v6-24] Compiling on Debian 12 (bookworm); Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:. Permit to compile with Python's libraries 3.11, too. I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:267,safety,test,tested,267,"[v6-24] Compiling on Debian 12 (bookworm); Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:. Permit to compile with Python's libraries 3.11, too. I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:297,safety,updat,updated,297,"[v6-24] Compiling on Debian 12 (bookworm); Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:. Permit to compile with Python's libraries 3.11, too. I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:43,security,Patch,Patches,43,"[v6-24] Compiling on Debian 12 (bookworm); Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:. Permit to compile with Python's libraries 3.11, too. I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:297,security,updat,updated,297,"[v6-24] Compiling on Debian 12 (bookworm); Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:. Permit to compile with Python's libraries 3.11, too. I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:206,testability,test,tested,206,"[v6-24] Compiling on Debian 12 (bookworm); Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:. Permit to compile with Python's libraries 3.11, too. I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:267,testability,test,tested,267,"[v6-24] Compiling on Debian 12 (bookworm); Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:. Permit to compile with Python's libraries 3.11, too. I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13975:147,deployability,updat,updated,147,"[cmake] Add dev to macOS, dev uses checked stdlib.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13975
https://github.com/root-project/root/pull/13975:117,safety,test,tested,117,"[cmake] Add dev to macOS, dev uses checked stdlib.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13975
https://github.com/root-project/root/pull/13975:147,safety,updat,updated,147,"[cmake] Add dev to macOS, dev uses checked stdlib.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13975
https://github.com/root-project/root/pull/13975:147,security,updat,updated,147,"[cmake] Add dev to macOS, dev uses checked stdlib.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13975
https://github.com/root-project/root/pull/13975:117,testability,test,tested,117,"[cmake] Add dev to macOS, dev uses checked stdlib.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13975
https://github.com/root-project/root/pull/13976:39,deployability,releas,release,39,[skip-ci] TScatter notes; Add TScatter release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13976
https://github.com/root-project/root/pull/13977:83,energy efficiency,Draw,Draw,83,"[webcanvas] improve usage of `TF1` saved buffers, better `TMultiGraph` support; 1. Draw functions from `TMultiGraph`. 2. Fill content of TGraph2D histogram - if drawn with triangle options. 3. Use interpolation of saved TF1 buffers. 4. Several fixes in JSROOT concerning TFormula parsing. 5. Resolve problem in THttpServer recursive processing. Improves a lot handling of fit tutorials with `TF1`, `TF2`, `TMultiGraph`, `TGraph2D` drawings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13977
https://github.com/root-project/root/pull/13977:161,energy efficiency,draw,drawn,161,"[webcanvas] improve usage of `TF1` saved buffers, better `TMultiGraph` support; 1. Draw functions from `TMultiGraph`. 2. Fill content of TGraph2D histogram - if drawn with triangle options. 3. Use interpolation of saved TF1 buffers. 4. Several fixes in JSROOT concerning TFormula parsing. 5. Resolve problem in THttpServer recursive processing. Improves a lot handling of fit tutorials with `TF1`, `TF2`, `TMultiGraph`, `TGraph2D` drawings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13977
https://github.com/root-project/root/pull/13977:431,energy efficiency,draw,drawings,431,"[webcanvas] improve usage of `TF1` saved buffers, better `TMultiGraph` support; 1. Draw functions from `TMultiGraph`. 2. Fill content of TGraph2D histogram - if drawn with triangle options. 3. Use interpolation of saved TF1 buffers. 4. Several fixes in JSROOT concerning TFormula parsing. 5. Resolve problem in THttpServer recursive processing. Improves a lot handling of fit tutorials with `TF1`, `TF2`, `TMultiGraph`, `TGraph2D` drawings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13977
https://github.com/root-project/root/pull/13977:41,integrability,buffer,buffers,41,"[webcanvas] improve usage of `TF1` saved buffers, better `TMultiGraph` support; 1. Draw functions from `TMultiGraph`. 2. Fill content of TGraph2D histogram - if drawn with triangle options. 3. Use interpolation of saved TF1 buffers. 4. Several fixes in JSROOT concerning TFormula parsing. 5. Resolve problem in THttpServer recursive processing. Improves a lot handling of fit tutorials with `TF1`, `TF2`, `TMultiGraph`, `TGraph2D` drawings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13977
https://github.com/root-project/root/pull/13977:224,integrability,buffer,buffers,224,"[webcanvas] improve usage of `TF1` saved buffers, better `TMultiGraph` support; 1. Draw functions from `TMultiGraph`. 2. Fill content of TGraph2D histogram - if drawn with triangle options. 3. Use interpolation of saved TF1 buffers. 4. Several fixes in JSROOT concerning TFormula parsing. 5. Resolve problem in THttpServer recursive processing. Improves a lot handling of fit tutorials with `TF1`, `TF2`, `TMultiGraph`, `TGraph2D` drawings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13977
https://github.com/root-project/root/pull/13977:260,modifiability,concern,concerning,260,"[webcanvas] improve usage of `TF1` saved buffers, better `TMultiGraph` support; 1. Draw functions from `TMultiGraph`. 2. Fill content of TGraph2D histogram - if drawn with triangle options. 3. Use interpolation of saved TF1 buffers. 4. Several fixes in JSROOT concerning TFormula parsing. 5. Resolve problem in THttpServer recursive processing. Improves a lot handling of fit tutorials with `TF1`, `TF2`, `TMultiGraph`, `TGraph2D` drawings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13977
https://github.com/root-project/root/pull/13977:126,performance,content,content,126,"[webcanvas] improve usage of `TF1` saved buffers, better `TMultiGraph` support; 1. Draw functions from `TMultiGraph`. 2. Fill content of TGraph2D histogram - if drawn with triangle options. 3. Use interpolation of saved TF1 buffers. 4. Several fixes in JSROOT concerning TFormula parsing. 5. Resolve problem in THttpServer recursive processing. Improves a lot handling of fit tutorials with `TF1`, `TF2`, `TMultiGraph`, `TGraph2D` drawings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13977
https://github.com/root-project/root/pull/13977:260,testability,concern,concerning,260,"[webcanvas] improve usage of `TF1` saved buffers, better `TMultiGraph` support; 1. Draw functions from `TMultiGraph`. 2. Fill content of TGraph2D histogram - if drawn with triangle options. 3. Use interpolation of saved TF1 buffers. 4. Several fixes in JSROOT concerning TFormula parsing. 5. Resolve problem in THttpServer recursive processing. Improves a lot handling of fit tutorials with `TF1`, `TF2`, `TMultiGraph`, `TGraph2D` drawings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13977
https://github.com/root-project/root/pull/13977:71,usability,support,support,71,"[webcanvas] improve usage of `TF1` saved buffers, better `TMultiGraph` support; 1. Draw functions from `TMultiGraph`. 2. Fill content of TGraph2D histogram - if drawn with triangle options. 3. Use interpolation of saved TF1 buffers. 4. Several fixes in JSROOT concerning TFormula parsing. 5. Resolve problem in THttpServer recursive processing. Improves a lot handling of fit tutorials with `TF1`, `TF2`, `TMultiGraph`, `TGraph2D` drawings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13977
https://github.com/root-project/root/pull/13978:232,deployability,Updat,Update,232,[webcanv] better support TF1/TMultiGraph/TGraph2D [6.30]; Correctly call TF1::Save with full range to be sure storing is correct. Support functions in TMultiGraph. Create real histogram for TGraph2D when `tri` option is configured. Update JSROOT with several fixes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13978
https://github.com/root-project/root/pull/13978:220,integrability,configur,configured,220,[webcanv] better support TF1/TMultiGraph/TGraph2D [6.30]; Correctly call TF1::Save with full range to be sure storing is correct. Support functions in TMultiGraph. Create real histogram for TGraph2D when `tri` option is configured. Update JSROOT with several fixes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13978
https://github.com/root-project/root/pull/13978:220,modifiability,configur,configured,220,[webcanv] better support TF1/TMultiGraph/TGraph2D [6.30]; Correctly call TF1::Save with full range to be sure storing is correct. Support functions in TMultiGraph. Create real histogram for TGraph2D when `tri` option is configured. Update JSROOT with several fixes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13978
https://github.com/root-project/root/pull/13978:232,safety,Updat,Update,232,[webcanv] better support TF1/TMultiGraph/TGraph2D [6.30]; Correctly call TF1::Save with full range to be sure storing is correct. Support functions in TMultiGraph. Create real histogram for TGraph2D when `tri` option is configured. Update JSROOT with several fixes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13978
https://github.com/root-project/root/pull/13978:220,security,configur,configured,220,[webcanv] better support TF1/TMultiGraph/TGraph2D [6.30]; Correctly call TF1::Save with full range to be sure storing is correct. Support functions in TMultiGraph. Create real histogram for TGraph2D when `tri` option is configured. Update JSROOT with several fixes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13978
https://github.com/root-project/root/pull/13978:232,security,Updat,Update,232,[webcanv] better support TF1/TMultiGraph/TGraph2D [6.30]; Correctly call TF1::Save with full range to be sure storing is correct. Support functions in TMultiGraph. Create real histogram for TGraph2D when `tri` option is configured. Update JSROOT with several fixes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13978
https://github.com/root-project/root/pull/13978:17,usability,support,support,17,[webcanv] better support TF1/TMultiGraph/TGraph2D [6.30]; Correctly call TF1::Save with full range to be sure storing is correct. Support functions in TMultiGraph. Create real histogram for TGraph2D when `tri` option is configured. Update JSROOT with several fixes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13978
https://github.com/root-project/root/pull/13978:130,usability,Support,Support,130,[webcanv] better support TF1/TMultiGraph/TGraph2D [6.30]; Correctly call TF1::Save with full range to be sure storing is correct. Support functions in TMultiGraph. Create real histogram for TGraph2D when `tri` option is configured. Update JSROOT with several fixes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13978
https://github.com/root-project/root/pull/13979:96,safety,test,testing,96,[6.30] Fix TF1/TF2/TF3 Save when called with default args ; Correctly write number of bins. Add testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13979
https://github.com/root-project/root/pull/13979:96,testability,test,testing,96,[6.30] Fix TF1/TF2/TF3 Save when called with default args ; Correctly write number of bins. Add testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13979
https://github.com/root-project/root/pull/13980:85,energy efficiency,draw,drawing,85,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:146,energy efficiency,draw,drawing,146,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:524,energy efficiency,draw,drawing,524,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:618,energy efficiency,draw,drawing,618,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:654,energy efficiency,draw,draw,654,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:846,energy efficiency,draw,drawing,846,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:677,integrability,configur,configured,677,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:677,modifiability,configur,configured,677,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:516,safety,prevent,prevent,516,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:591,safety,prevent,prevent,591,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:838,safety,prevent,prevent,838,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:516,security,preven,prevent,516,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:591,security,preven,prevent,591,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:677,security,configur,configured,677,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:838,security,preven,prevent,838,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:314,usability,interact,interactive,314,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:765,usability,support,support,765,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13980:798,usability,support,support,798,[jsroot] 7.3.x 31/10/2023 [skip-ci]; 1. Fix - correctly set visibility level for geo drawing. 2. Fix - use more factor for number of nodes in geo drawing. 3. Fix - add missing Chebyshev0 function. 4. Fix - provide Gaus with normalization. 5. Fix - call 3D rendering after adding TPolyLine3D. 6. Fix - properly add interactive resize elements. 7. Fix - drop handling on tabs layout. 8. Fix - member-wise streaming of std::map #262. 9. Fix - typo in expandItem. 10. Fix - add missing import in RPavePainter. 11. Fix - prevent drawing of empty TGraph. 12. Fix - use semicolon in RH3. 13. Fix - prevent zero division when drawing TGraph exclusion. 14. Fix - draw th2 col bins with configured y bar. 15. Fix - let handle derived classes from TH1/TH2 #269. 16. Fix - add support of #mp symbol. 17. Fix - support TMath::Sq() function. 18. Fix - prevent drawing of empty TGraph.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13980
https://github.com/root-project/root/pull/13983:85,energy efficiency,draw,draw,85,[jsroot] 6.3.x 31/10/2023 with critical fixes from v7 [6.26] [skip-ci]; Fix - do not draw empty TGraph. Fix - do not exclusion if distance too small. Fix - correctly open channel in web window. Fix - correctly get bin for RH3.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13983
https://github.com/root-project/root/pull/13986:202,energy efficiency,measur,measurement,202,"[RF] Yet another fix to bin-by-bin offsetting; In simultaneous fits with more than one channel, the NLL variable adds by default a normalization term so that the probability is normalized over the full measurement including all channels. In case of bin-by-bin offsetting, this should not be done because the same term appears in the likelihood in the denominator and cancels out. Also, fixes a problem where the name of the `_offsetPdf` was not correctly reset (previously, only the name of the proxy was changed, not the name of the pdf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13986
https://github.com/root-project/root/pull/13986:495,interoperability,prox,proxy,495,"[RF] Yet another fix to bin-by-bin offsetting; In simultaneous fits with more than one channel, the NLL variable adds by default a normalization term so that the probability is normalized over the full measurement including all channels. In case of bin-by-bin offsetting, this should not be done because the same term appears in the likelihood in the denominator and cancels out. Also, fixes a problem where the name of the `_offsetPdf` was not correctly reset (previously, only the name of the proxy was changed, not the name of the pdf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13986
https://github.com/root-project/root/pull/13986:104,modifiability,variab,variable,104,"[RF] Yet another fix to bin-by-bin offsetting; In simultaneous fits with more than one channel, the NLL variable adds by default a normalization term so that the probability is normalized over the full measurement including all channels. In case of bin-by-bin offsetting, this should not be done because the same term appears in the likelihood in the denominator and cancels out. Also, fixes a problem where the name of the `_offsetPdf` was not correctly reset (previously, only the name of the proxy was changed, not the name of the pdf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13986
https://github.com/root-project/root/pull/13986:50,testability,simul,simultaneous,50,"[RF] Yet another fix to bin-by-bin offsetting; In simultaneous fits with more than one channel, the NLL variable adds by default a normalization term so that the probability is normalized over the full measurement including all channels. In case of bin-by-bin offsetting, this should not be done because the same term appears in the likelihood in the denominator and cancels out. Also, fixes a problem where the name of the `_offsetPdf` was not correctly reset (previously, only the name of the proxy was changed, not the name of the pdf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13986
https://github.com/root-project/root/pull/13986:367,usability,cancel,cancels,367,"[RF] Yet another fix to bin-by-bin offsetting; In simultaneous fits with more than one channel, the NLL variable adds by default a normalization term so that the probability is normalized over the full measurement including all channels. In case of bin-by-bin offsetting, this should not be done because the same term appears in the likelihood in the denominator and cancels out. Also, fixes a problem where the name of the `_offsetPdf` was not correctly reset (previously, only the name of the proxy was changed, not the name of the pdf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13986
https://github.com/root-project/root/pull/13987:208,energy efficiency,measur,measurement,208,"[v630][RF] Yet another fix to bin-by-bin offsetting; In simultaneous fits with more than one channel, the NLL variable adds by default a normalization term so that the probability is normalized over the full measurement including all channels. In case of bin-by-bin offsetting, this should not be done because the same term appears in the likelihood in the denominator and cancels out. Also, fixes a problem where the name of the `_offsetPdf` was not correctly reset (previously, only the name of the proxy was changed, not the name of the pdf). Backport of https://github.com/root-project/root/pull/13986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13987
https://github.com/root-project/root/pull/13987:501,interoperability,prox,proxy,501,"[v630][RF] Yet another fix to bin-by-bin offsetting; In simultaneous fits with more than one channel, the NLL variable adds by default a normalization term so that the probability is normalized over the full measurement including all channels. In case of bin-by-bin offsetting, this should not be done because the same term appears in the likelihood in the denominator and cancels out. Also, fixes a problem where the name of the `_offsetPdf` was not correctly reset (previously, only the name of the proxy was changed, not the name of the pdf). Backport of https://github.com/root-project/root/pull/13986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13987
https://github.com/root-project/root/pull/13987:110,modifiability,variab,variable,110,"[v630][RF] Yet another fix to bin-by-bin offsetting; In simultaneous fits with more than one channel, the NLL variable adds by default a normalization term so that the probability is normalized over the full measurement including all channels. In case of bin-by-bin offsetting, this should not be done because the same term appears in the likelihood in the denominator and cancels out. Also, fixes a problem where the name of the `_offsetPdf` was not correctly reset (previously, only the name of the proxy was changed, not the name of the pdf). Backport of https://github.com/root-project/root/pull/13986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13987
https://github.com/root-project/root/pull/13987:56,testability,simul,simultaneous,56,"[v630][RF] Yet another fix to bin-by-bin offsetting; In simultaneous fits with more than one channel, the NLL variable adds by default a normalization term so that the probability is normalized over the full measurement including all channels. In case of bin-by-bin offsetting, this should not be done because the same term appears in the likelihood in the denominator and cancels out. Also, fixes a problem where the name of the `_offsetPdf` was not correctly reset (previously, only the name of the proxy was changed, not the name of the pdf). Backport of https://github.com/root-project/root/pull/13986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13987
https://github.com/root-project/root/pull/13987:373,usability,cancel,cancels,373,"[v630][RF] Yet another fix to bin-by-bin offsetting; In simultaneous fits with more than one channel, the NLL variable adds by default a normalization term so that the probability is normalized over the full measurement including all channels. In case of bin-by-bin offsetting, this should not be done because the same term appears in the likelihood in the denominator and cancels out. Also, fixes a problem where the name of the `_offsetPdf` was not correctly reset (previously, only the name of the proxy was changed, not the name of the pdf). Backport of https://github.com/root-project/root/pull/13986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13987
https://github.com/root-project/root/pull/13988:106,deployability,configurat,configuration,106,"[graf3d] Apply clang-tidy suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13988
https://github.com/root-project/root/pull/13988:106,integrability,configur,configuration,106,"[graf3d] Apply clang-tidy suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13988
https://github.com/root-project/root/pull/13988:106,modifiability,configur,configuration,106,"[graf3d] Apply clang-tidy suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13988
https://github.com/root-project/root/pull/13988:301,performance,perform,performance-for-range-copy,301,"[graf3d] Apply clang-tidy suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13988
https://github.com/root-project/root/pull/13988:333,performance,perform,performance-unnecessary-copy-initialization,333,"[graf3d] Apply clang-tidy suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13988
https://github.com/root-project/root/pull/13988:455,safety,review,reviewing,455,"[graf3d] Apply clang-tidy suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13988
https://github.com/root-project/root/pull/13988:106,security,configur,configuration,106,"[graf3d] Apply clang-tidy suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13988
https://github.com/root-project/root/pull/13988:455,testability,review,reviewing,455,"[graf3d] Apply clang-tidy suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13988
https://github.com/root-project/root/pull/13988:301,usability,perform,performance-for-range-copy,301,"[graf3d] Apply clang-tidy suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13988
https://github.com/root-project/root/pull/13988:333,usability,perform,performance-unnecessary-copy-initialization,333,"[graf3d] Apply clang-tidy suggestions; This is applying most of the suggestions from the CMSSW clang-tidy configuration:. https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13988
https://github.com/root-project/root/pull/13989:90,deployability,version,version,90,"[DF] Avoid usage of Mathmore/gsl in df106 tutorials; # This Pull request:. In the current version of the tutorials, the ROOT::Math::Interpolator was used which required ROOT to be built with Mathmore or gsl. Since it was a linear interpolation, it can be replaced by simply creating a TGraph and using the TGraph::Eval() method. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13989
https://github.com/root-project/root/pull/13989:82,energy efficiency,current,current,82,"[DF] Avoid usage of Mathmore/gsl in df106 tutorials; # This Pull request:. In the current version of the tutorials, the ROOT::Math::Interpolator was used which required ROOT to be built with Mathmore or gsl. Since it was a linear interpolation, it can be replaced by simply creating a TGraph and using the TGraph::Eval() method. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13989
https://github.com/root-project/root/pull/13989:90,integrability,version,version,90,"[DF] Avoid usage of Mathmore/gsl in df106 tutorials; # This Pull request:. In the current version of the tutorials, the ROOT::Math::Interpolator was used which required ROOT to be built with Mathmore or gsl. Since it was a linear interpolation, it can be replaced by simply creating a TGraph and using the TGraph::Eval() method. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13989
https://github.com/root-project/root/pull/13989:90,modifiability,version,version,90,"[DF] Avoid usage of Mathmore/gsl in df106 tutorials; # This Pull request:. In the current version of the tutorials, the ROOT::Math::Interpolator was used which required ROOT to be built with Mathmore or gsl. Since it was a linear interpolation, it can be replaced by simply creating a TGraph and using the TGraph::Eval() method. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13989
https://github.com/root-project/root/pull/13989:5,safety,Avoid,Avoid,5,"[DF] Avoid usage of Mathmore/gsl in df106 tutorials; # This Pull request:. In the current version of the tutorials, the ROOT::Math::Interpolator was used which required ROOT to be built with Mathmore or gsl. Since it was a linear interpolation, it can be replaced by simply creating a TGraph and using the TGraph::Eval() method. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13989
https://github.com/root-project/root/pull/13989:267,testability,simpl,simply,267,"[DF] Avoid usage of Mathmore/gsl in df106 tutorials; # This Pull request:. In the current version of the tutorials, the ROOT::Math::Interpolator was used which required ROOT to be built with Mathmore or gsl. Since it was a linear interpolation, it can be replaced by simply creating a TGraph and using the TGraph::Eval() method. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13989
https://github.com/root-project/root/pull/13989:267,usability,simpl,simply,267,"[DF] Avoid usage of Mathmore/gsl in df106 tutorials; # This Pull request:. In the current version of the tutorials, the ROOT::Math::Interpolator was used which required ROOT to be built with Mathmore or gsl. Since it was a linear interpolation, it can be replaced by simply creating a TGraph and using the TGraph::Eval() method. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13989
https://github.com/root-project/root/pull/13990:66,interoperability,compatib,compatibility,66,[v624][PyROOT] Fixes for Python 3.11; Backport of the Python 3.11 compatibility PRs:. * https://github.com/root-project/root/pull/10734. * https://github.com/root-project/root/pull/10047. * https://github.com/root-project/root/pull/11457. * https://github.com/root-project/root/pull/12857.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13991:1010,availability,error,errors,1010,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:36,deployability,build,building,36,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:133,deployability,modul,module,133,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:624,deployability,modul,modules,624,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:929,deployability,build,building,929,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1171,deployability,modul,module,1171,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1710,deployability,modul,module,1710,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1770,deployability,modul,module,1770,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:56,energy efficiency,gpu,gpu,56,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:538,energy efficiency,GPU,GPU,538,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:683,energy efficiency,gpu,gpu,683,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:717,energy efficiency,gpu,gpu,717,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:893,energy efficiency,gpu,gpu,893,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1398,energy efficiency,gpu,gpu,1398,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1441,energy efficiency,gpu,gpu,1441,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1461,energy efficiency,gpu,gpu,1461,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1634,energy efficiency,gpu,gpu,1634,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1649,energy efficiency,cpu,cpu,1649,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1527,integrability,sub,subdirectory,1527,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:133,modifiability,modul,module,133,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:624,modifiability,modul,modules,624,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:809,modifiability,variab,variable,809,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1171,modifiability,modul,module,1171,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1710,modifiability,modul,module,1710,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1770,modifiability,modul,module,1770,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:56,performance,gpu,gpu,56,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:538,performance,GPU,GPU,538,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:683,performance,gpu,gpu,683,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:717,performance,gpu,gpu,717,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:725,performance,CACH,CACHE,725,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:893,performance,gpu,gpu,893,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1010,performance,error,errors,1010,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1398,performance,gpu,gpu,1398,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1441,performance,gpu,gpu,1441,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1461,performance,gpu,gpu,1461,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1634,performance,gpu,gpu,1634,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1649,performance,cpu,cpu,1649,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:133,safety,modul,module,133,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:624,safety,modul,modules,624,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1010,safety,error,errors,1010,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1171,safety,modul,module,1171,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1710,safety,modul,module,1710,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1770,safety,modul,module,1770,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:342,usability,tool,toolkit,342,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:476,usability,tool,toolkit,476,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1010,usability,error,errors,1010,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1237,usability,command,command,1237,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1698,usability,help,help,1698,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13991:1758,usability,help,help,1758,"[cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned. commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the. NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check. in `cmake/modules/SearchInstalledSoftware.cmake`:. ```cmake. if(tmva-gpu AND NOT CUDA_FOUND). set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE). endif(). ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not. used. That means that `tmva-gpu` was silently disabled, and not building. successfully (which I had wrongly concluded because of the absence of. errors). This check needs to be replaced with. `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the. `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular. `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with. `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only. `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT. itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html. * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13991
https://github.com/root-project/root/pull/13992:42,deployability,build,building,42,[v630][cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; Backport of https://github.com/root-project/root/pull/13991.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13992
https://github.com/root-project/root/pull/13992:62,energy efficiency,gpu,gpu,62,[v630][cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; Backport of https://github.com/root-project/root/pull/13991.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13992
https://github.com/root-project/root/pull/13992:62,performance,gpu,gpu,62,[v630][cmake] Look for `CUDAToolkit` when building with `tmva-gpu` and move stressTMVA; Backport of https://github.com/root-project/root/pull/13991.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13992
https://github.com/root-project/root/pull/13993:1,energy efficiency,core,core,1,"[core] Remove backports of C++17 features; Remove the `std::string_view` backport and others, because it's not necessary anymore since the minimum C++ standard is now C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:151,interoperability,standard,standard,151,"[core] Remove backports of C++17 features; Remove the `std::string_view` backport and others, because it's not necessary anymore since the minimum C++ standard is now C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:139,usability,minim,minimum,139,"[core] Remove backports of C++17 features; Remove the `std::string_view` backport and others, because it's not necessary anymore since the minimum C++ standard is now C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13995:10,deployability,modul,modules,10,Fix cmake/modules/FindZeroMQ.cmake; # This Pull request:. ## Changes or fixes:. Fix cmake/modules/FindZeroMQ.cmake. It now finds ZeroMQ in Fedora 40. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:90,deployability,modul,modules,90,Fix cmake/modules/FindZeroMQ.cmake; # This Pull request:. ## Changes or fixes:. Fix cmake/modules/FindZeroMQ.cmake. It now finds ZeroMQ in Fedora 40. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:201,deployability,updat,updated,201,Fix cmake/modules/FindZeroMQ.cmake; # This Pull request:. ## Changes or fixes:. Fix cmake/modules/FindZeroMQ.cmake. It now finds ZeroMQ in Fedora 40. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:10,modifiability,modul,modules,10,Fix cmake/modules/FindZeroMQ.cmake; # This Pull request:. ## Changes or fixes:. Fix cmake/modules/FindZeroMQ.cmake. It now finds ZeroMQ in Fedora 40. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:90,modifiability,modul,modules,90,Fix cmake/modules/FindZeroMQ.cmake; # This Pull request:. ## Changes or fixes:. Fix cmake/modules/FindZeroMQ.cmake. It now finds ZeroMQ in Fedora 40. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:10,safety,modul,modules,10,Fix cmake/modules/FindZeroMQ.cmake; # This Pull request:. ## Changes or fixes:. Fix cmake/modules/FindZeroMQ.cmake. It now finds ZeroMQ in Fedora 40. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:90,safety,modul,modules,90,Fix cmake/modules/FindZeroMQ.cmake; # This Pull request:. ## Changes or fixes:. Fix cmake/modules/FindZeroMQ.cmake. It now finds ZeroMQ in Fedora 40. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:171,safety,test,tested,171,Fix cmake/modules/FindZeroMQ.cmake; # This Pull request:. ## Changes or fixes:. Fix cmake/modules/FindZeroMQ.cmake. It now finds ZeroMQ in Fedora 40. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:201,safety,updat,updated,201,Fix cmake/modules/FindZeroMQ.cmake; # This Pull request:. ## Changes or fixes:. Fix cmake/modules/FindZeroMQ.cmake. It now finds ZeroMQ in Fedora 40. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:201,security,updat,updated,201,Fix cmake/modules/FindZeroMQ.cmake; # This Pull request:. ## Changes or fixes:. Fix cmake/modules/FindZeroMQ.cmake. It now finds ZeroMQ in Fedora 40. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:171,testability,test,tested,171,Fix cmake/modules/FindZeroMQ.cmake; # This Pull request:. ## Changes or fixes:. Fix cmake/modules/FindZeroMQ.cmake. It now finds ZeroMQ in Fedora 40. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/issues/13996:5722,availability,ERROR,ERROR,5722,"OT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2fdd_001. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! =================================================================. ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:6059,availability,operat,operator,6059,"::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! =================================================================. ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown module>). 0x00010b2300b0 is located 28 bytes after 4-byte region [0x00010b230090,0x00010b230094). freed by thread T0 here:. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:7079,availability,operat,operator,7079,"ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown module>). 0x00010b2300b0 is located 28 bytes after 4-byte region [0x00010b230090,0x00010b230094). freed by thread T0 here:. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown module>). previously allocated by thread T0 here:. #0 0x106a86ba4 in wrap_malloc+0x94 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ba4). #1 0x1062c0d60 in ROOT::Experimental::Detail::RFieldBase::GenerateValue() RField.cxx:332. #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147. #3 0x104699f00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9307,availability,error,error,9307,". Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10466,availability,error,error,10466,"d line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10779,availability,error,error,10779,"ullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10888,availability,error,error,10888,"_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:13684,availability,down,downloaded,13684,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:14451,availability,Operat,Operating,14451,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:155,deployability,contain,contained,155,"Segmentation violation while converting a TTree to RNTuple; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. TL;DR: I did a self contained executable which you can find in the Reproducer part and it crashes using <http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root> with the following stacktrace:. ```. TDirectoryFile. Found TDirectoryFile: DF_2463920048222775916. Found TTree: DbgEventExtra. Convert leaf fStart [Int_t] --> field fStart [std::int32_t]. Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:410,deployability,stack,stacktrace,410,"Segmentation violation while converting a TTree to RNTuple; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. TL;DR: I did a self contained executable which you can find in the Reproducer part and it crashes using <http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root> with the following stacktrace:. ```. TDirectoryFile. Found TDirectoryFile: DF_2463920048222775916. Found TTree: DbgEventExtra. Convert leaf fStart [Int_t] --> field fStart [std::int32_t]. Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:946,deployability,version,version,946,"Segmentation violation while converting a TTree to RNTuple; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. TL;DR: I did a self contained executable which you can find in the Reproducer part and it crashes using <http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root> with the following stacktrace:. ```. TDirectoryFile. Found TDirectoryFile: DF_2463920048222775916. Found TTree: DbgEventExtra. Convert leaf fStart [Int_t] --> field fStart [std::int32_t]. Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:1504,deployability,version,version,1504,"entExtra. Convert leaf fStart [Int_t] --> field fStart [std::int32_t]. Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Wrote 400000 entries. Found TTree: O2calotrigger. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [Short_t] --> field fFastOrAbsID [std::int16_t]. Convert",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:2223,deployability,version,version,2223,"e] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Wrote 400000 entries. Found TTree: O2calotrigger. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [Short_t] --> field fFastOrAbsID [std::int16_t]. Convert leaf fLnAmplitude [Short_t] --> field fLnAmplitude [std::int16_t]. Convert leaf fTriggerBits [Int_t] --> field fTriggerBits [std::int32_t]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Found TTree: O2cascade_001. Convert leaf fIndexCollisions [Int_t] --> field fIndexCollisions [std::int32_t]. Convert leaf fIndexV0s ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:3009,deployability,version,version,3009,"v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Wrote 400000 entries. Found TTree: O2calotrigger. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [Short_t] --> field fFastOrAbsID [std::int16_t]. Convert leaf fLnAmplitude [Short_t] --> field fLnAmplitude [std::int16_t]. Convert leaf fTriggerBits [Int_t] --> field fTriggerBits [std::int32_t]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Found TTree: O2cascade_001. Convert leaf fIndexCollisions [Int_t] --> field fIndexCollisions [std::int32_t]. Convert leaf fIndexV0s [Int_t] --> field fIndexV0s [std::int32_t]. Convert leaf fIndexTracks [Int_t] --> field fIndexTracks [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2collision. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fPosX [Float_t] --> field fPosX [float]. Convert leaf fPosY [Float_t] --> field fPosY [float]. Convert leaf fPosZ [Float_t] --> field fPosZ [float]. Convert leaf fCovXX [Float_t] --> field fCovXX [float]. Convert leaf fCovXY [Float_t] --> fiel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:3644,deployability,version,version,3644," Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Found TTree: O2cascade_001. Convert leaf fIndexCollisions [Int_t] --> field fIndexCollisions [std::int32_t]. Convert leaf fIndexV0s [Int_t] --> field fIndexV0s [std::int32_t]. Convert leaf fIndexTracks [Int_t] --> field fIndexTracks [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2collision. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fPosX [Float_t] --> field fPosX [float]. Convert leaf fPosY [Float_t] --> field fPosY [float]. Convert leaf fPosZ [Float_t] --> field fPosZ [float]. Convert leaf fCovXX [Float_t] --> field fCovXX [float]. Convert leaf fCovXY [Float_t] --> field fCovXY [float]. Convert leaf fCovXZ [Float_t] --> field fCovXZ [float]. Convert leaf fCovYY [Float_t] --> field fCovYY [float]. Convert leaf fCovYZ [Float_t] --> field fCovYZ [float]. Convert leaf fCovZZ [Float_t] --> field fCovZZ [float]. Convert leaf fFlags [UShort_t] --> field fFlags [std::uint16_t]. Convert leaf fChi2 [Float_t] --> field fChi2 [float]. Convert leaf fNumContrib [UShort_t] --> field fNumContrib [std::uint16_t]. Convert leaf fCollisionTime [Float_t] --> field fCollisionTime [float]. Convert leaf fCollisionTimeRes [Float_t] --> field fCollisionTimeRes [float]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:4899,deployability,version,version,4899," fPosZ [float]. Convert leaf fCovXX [Float_t] --> field fCovXX [float]. Convert leaf fCovXY [Float_t] --> field fCovXY [float]. Convert leaf fCovXZ [Float_t] --> field fCovXZ [float]. Convert leaf fCovYY [Float_t] --> field fCovYY [float]. Convert leaf fCovYZ [Float_t] --> field fCovYZ [float]. Convert leaf fCovZZ [Float_t] --> field fCovZZ [float]. Convert leaf fFlags [UShort_t] --> field fFlags [std::uint16_t]. Convert leaf fChi2 [Float_t] --> field fChi2 [float]. Convert leaf fNumContrib [UShort_t] --> field fNumContrib [std::uint16_t]. Convert leaf fCollisionTime [Float_t] --> field fCollisionTime [float]. Convert leaf fCollisionTimeRes [Float_t] --> field fCollisionTimeRes [float]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2fdd_001. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! =================================================================. ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:5627,deployability,version,version,5627,"g /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2fdd_001. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! =================================================================. ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:6726,deployability,modul,module,6726,"AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown module>). 0x00010b2300b0 is located 28 bytes after 4-byte region [0x00010b230090,0x00010b230094). freed by thread T0 here:. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:7746,deployability,modul,module,7746,"0 is located 28 bytes after 4-byte region [0x00010b230090,0x00010b230094). freed by thread T0 here:. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown module>). previously allocated by thread T0 here:. #0 0x106a86ba4 in wrap_malloc+0x94 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ba4). #1 0x1062c0d60 in ROOT::Experimental::Detail::RFieldBase::GenerateValue() RField.cxx:332. #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147. #3 0x104699f00 in main ao2dToAO2NT.cxx:145. #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dTo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:8138,deployability,modul,module,8138,"que_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown module>). previously allocated by thread T0 here:. #0 0x106a86ba4 in wrap_malloc+0x94 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ba4). #1 0x1062c0d60 in ROOT::Experimental::Detail::RFieldBase::GenerateValue() RField.cxx:332. #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147. #3 0x104699f00 in main ao2dToAO2NT.cxx:145. #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9227,deployability,log,log,9227,"52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11195,deployability,log,log,11195,"'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11596,deployability,log,log,11596,"s starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11992,deployability,fail,fail,11992,"fKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's defa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:13908,deployability,version,version,13908,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:14232,deployability,version,version,14232,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:14416,deployability,Instal,Installation,14416,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:7767,energy efficiency,alloc,allocated,7767,"fter 4-byte region [0x00010b230090,0x00010b230094). freed by thread T0 here:. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown module>). previously allocated by thread T0 here:. #0 0x106a86ba4 in wrap_malloc+0x94 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ba4). #1 0x1062c0d60 in ROOT::Experimental::Detail::RFieldBase::GenerateValue() RField.cxx:332. #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147. #3 0x104699f00 in main ao2dToAO2NT.cxx:145. #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11810,energy efficiency,model,model,11810,"}. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11842,energy efficiency,model,model,11842,"utFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:12526,energy efficiency,model,model,12526,"tClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it wit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:12593,energy efficiency,model,model,12593,"log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:12676,energy efficiency,model,model,12676,"ting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:12761,energy efficiency,model,model,12761,"ng namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:12982,energy efficiency,model,model,12982," never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:946,integrability,version,version,946,"Segmentation violation while converting a TTree to RNTuple; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. TL;DR: I did a self contained executable which you can find in the Reproducer part and it crashes using <http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root> with the following stacktrace:. ```. TDirectoryFile. Found TDirectoryFile: DF_2463920048222775916. Found TTree: DbgEventExtra. Convert leaf fStart [Int_t] --> field fStart [std::int32_t]. Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:1504,integrability,version,version,1504,"entExtra. Convert leaf fStart [Int_t] --> field fStart [std::int32_t]. Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Wrote 400000 entries. Found TTree: O2calotrigger. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [Short_t] --> field fFastOrAbsID [std::int16_t]. Convert",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:2223,integrability,version,version,2223,"e] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Wrote 400000 entries. Found TTree: O2calotrigger. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [Short_t] --> field fFastOrAbsID [std::int16_t]. Convert leaf fLnAmplitude [Short_t] --> field fLnAmplitude [std::int16_t]. Convert leaf fTriggerBits [Int_t] --> field fTriggerBits [std::int32_t]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Found TTree: O2cascade_001. Convert leaf fIndexCollisions [Int_t] --> field fIndexCollisions [std::int32_t]. Convert leaf fIndexV0s ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:3009,integrability,version,version,3009,"v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Wrote 400000 entries. Found TTree: O2calotrigger. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [Short_t] --> field fFastOrAbsID [std::int16_t]. Convert leaf fLnAmplitude [Short_t] --> field fLnAmplitude [std::int16_t]. Convert leaf fTriggerBits [Int_t] --> field fTriggerBits [std::int32_t]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Found TTree: O2cascade_001. Convert leaf fIndexCollisions [Int_t] --> field fIndexCollisions [std::int32_t]. Convert leaf fIndexV0s [Int_t] --> field fIndexV0s [std::int32_t]. Convert leaf fIndexTracks [Int_t] --> field fIndexTracks [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2collision. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fPosX [Float_t] --> field fPosX [float]. Convert leaf fPosY [Float_t] --> field fPosY [float]. Convert leaf fPosZ [Float_t] --> field fPosZ [float]. Convert leaf fCovXX [Float_t] --> field fCovXX [float]. Convert leaf fCovXY [Float_t] --> fiel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:3644,integrability,version,version,3644," Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Found TTree: O2cascade_001. Convert leaf fIndexCollisions [Int_t] --> field fIndexCollisions [std::int32_t]. Convert leaf fIndexV0s [Int_t] --> field fIndexV0s [std::int32_t]. Convert leaf fIndexTracks [Int_t] --> field fIndexTracks [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2collision. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fPosX [Float_t] --> field fPosX [float]. Convert leaf fPosY [Float_t] --> field fPosY [float]. Convert leaf fPosZ [Float_t] --> field fPosZ [float]. Convert leaf fCovXX [Float_t] --> field fCovXX [float]. Convert leaf fCovXY [Float_t] --> field fCovXY [float]. Convert leaf fCovXZ [Float_t] --> field fCovXZ [float]. Convert leaf fCovYY [Float_t] --> field fCovYY [float]. Convert leaf fCovYZ [Float_t] --> field fCovYZ [float]. Convert leaf fCovZZ [Float_t] --> field fCovZZ [float]. Convert leaf fFlags [UShort_t] --> field fFlags [std::uint16_t]. Convert leaf fChi2 [Float_t] --> field fChi2 [float]. Convert leaf fNumContrib [UShort_t] --> field fNumContrib [std::uint16_t]. Convert leaf fCollisionTime [Float_t] --> field fCollisionTime [float]. Convert leaf fCollisionTimeRes [Float_t] --> field fCollisionTimeRes [float]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:4899,integrability,version,version,4899," fPosZ [float]. Convert leaf fCovXX [Float_t] --> field fCovXX [float]. Convert leaf fCovXY [Float_t] --> field fCovXY [float]. Convert leaf fCovXZ [Float_t] --> field fCovXZ [float]. Convert leaf fCovYY [Float_t] --> field fCovYY [float]. Convert leaf fCovYZ [Float_t] --> field fCovYZ [float]. Convert leaf fCovZZ [Float_t] --> field fCovZZ [float]. Convert leaf fFlags [UShort_t] --> field fFlags [std::uint16_t]. Convert leaf fChi2 [Float_t] --> field fChi2 [float]. Convert leaf fNumContrib [UShort_t] --> field fNumContrib [std::uint16_t]. Convert leaf fCollisionTime [Float_t] --> field fCollisionTime [float]. Convert leaf fCollisionTimeRes [Float_t] --> field fCollisionTimeRes [float]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2fdd_001. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! =================================================================. ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:5627,integrability,version,version,5627,"g /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2fdd_001. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! =================================================================. ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:8946,integrability,messag,message,8946,"eValue() RField.cxx:332. #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147. #3 0x104699f00 in main ao2dToAO2NT.cxx:145. #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, prin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9151,integrability,messag,message,9151,": AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9193,integrability,messag,message,9193,"asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9250,integrability,messag,message,9250," ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. brea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9276,integrability,messag,message,9276,"0 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9332,integrability,messag,message,9332,"ld appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. ret",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9358,integrability,messag,message,9358," show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind <",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9573,integrability,messag,message,9573,"e <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9961,integrability,messag,message,9961,"dl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10074,integrability,messag,message,10074," = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassNa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:13908,integrability,version,version,13908,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:14232,integrability,version,version,14232,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:893,interoperability,format,format,893,"Segmentation violation while converting a TTree to RNTuple; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. TL;DR: I did a self contained executable which you can find in the Reproducer part and it crashes using <http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root> with the following stacktrace:. ```. TDirectoryFile. Found TDirectoryFile: DF_2463920048222775916. Found TTree: DbgEventExtra. Convert leaf fStart [Int_t] --> field fStart [std::int32_t]. Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:1451,interoperability,format,format,1451,"ectoryFile: DF_2463920048222775916. Found TTree: DbgEventExtra. Convert leaf fStart [Int_t] --> field fStart [std::int32_t]. Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Wrote 400000 entries. Found TTree: O2calotrigger. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:2170,interoperability,format,format,2170," fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Wrote 400000 entries. Found TTree: O2calotrigger. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [Short_t] --> field fFastOrAbsID [std::int16_t]. Convert leaf fLnAmplitude [Short_t] --> field fLnAmplitude [std::int16_t]. Convert leaf fTriggerBits [Int_t] --> field fTriggerBits [std::int32_t]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Found TTree: O2cascade_001. Convert leaf fIndexCollisions [Int_t] --> field fI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:2956,interoperability,format,format,2956,"sers/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Wrote 400000 entries. Found TTree: O2calotrigger. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [Short_t] --> field fFastOrAbsID [std::int16_t]. Convert leaf fLnAmplitude [Short_t] --> field fLnAmplitude [std::int16_t]. Convert leaf fTriggerBits [Int_t] --> field fTriggerBits [std::int32_t]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Found TTree: O2cascade_001. Convert leaf fIndexCollisions [Int_t] --> field fIndexCollisions [std::int32_t]. Convert leaf fIndexV0s [Int_t] --> field fIndexV0s [std::int32_t]. Convert leaf fIndexTracks [Int_t] --> field fIndexTracks [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2collision. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fPosX [Float_t] --> field fPosX [float]. Convert leaf fPosY [Float_t] --> field fPosY [float]. Convert leaf fPosZ [Float_t] --> field fPosZ [float]. Convert leaf fCovXX [Float_t] --> field ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:3591,interoperability,format,format,3591,"gerBits [Int_t] --> field fTriggerBits [std::int32_t]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Found TTree: O2cascade_001. Convert leaf fIndexCollisions [Int_t] --> field fIndexCollisions [std::int32_t]. Convert leaf fIndexV0s [Int_t] --> field fIndexV0s [std::int32_t]. Convert leaf fIndexTracks [Int_t] --> field fIndexTracks [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2collision. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fPosX [Float_t] --> field fPosX [float]. Convert leaf fPosY [Float_t] --> field fPosY [float]. Convert leaf fPosZ [Float_t] --> field fPosZ [float]. Convert leaf fCovXX [Float_t] --> field fCovXX [float]. Convert leaf fCovXY [Float_t] --> field fCovXY [float]. Convert leaf fCovXZ [Float_t] --> field fCovXZ [float]. Convert leaf fCovYY [Float_t] --> field fCovYY [float]. Convert leaf fCovYZ [Float_t] --> field fCovYZ [float]. Convert leaf fCovZZ [Float_t] --> field fCovZZ [float]. Convert leaf fFlags [UShort_t] --> field fFlags [std::uint16_t]. Convert leaf fChi2 [Float_t] --> field fChi2 [float]. Convert leaf fNumContrib [UShort_t] --> field fNumContrib [std::uint16_t]. Convert leaf fCollisionTime [Float_t] --> field fCollisionTime [float]. Convert leaf fCollisionTimeRes [Float_t] --> field fCollisionTimeRes [flo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:4846,interoperability,format,format,4846," fPosY [float]. Convert leaf fPosZ [Float_t] --> field fPosZ [float]. Convert leaf fCovXX [Float_t] --> field fCovXX [float]. Convert leaf fCovXY [Float_t] --> field fCovXY [float]. Convert leaf fCovXZ [Float_t] --> field fCovXZ [float]. Convert leaf fCovYY [Float_t] --> field fCovYY [float]. Convert leaf fCovYZ [Float_t] --> field fCovYZ [float]. Convert leaf fCovZZ [Float_t] --> field fCovZZ [float]. Convert leaf fFlags [UShort_t] --> field fFlags [std::uint16_t]. Convert leaf fChi2 [Float_t] --> field fChi2 [float]. Convert leaf fNumContrib [UShort_t] --> field fNumContrib [std::uint16_t]. Convert leaf fCollisionTime [Float_t] --> field fCollisionTime [float]. Convert leaf fCollisionTimeRes [Float_t] --> field fCollisionTimeRes [float]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2fdd_001. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! =================================================================. ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:5574,interoperability,format,format,5574,"isionTimeRes [float]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2fdd_001. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! =================================================================. ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:8946,interoperability,messag,message,8946,"eValue() RField.cxx:332. #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147. #3 0x104699f00 in main ao2dToAO2NT.cxx:145. #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, prin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9151,interoperability,messag,message,9151,": AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9193,interoperability,messag,message,9193,"asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9250,interoperability,messag,message,9250," ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. brea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9276,interoperability,messag,message,9276,"0 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9332,interoperability,messag,message,9332,"ld appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. ret",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9358,interoperability,messag,message,9358," show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind <",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9573,interoperability,messag,message,9573,"e <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9961,interoperability,messag,message,9961,"dl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10074,interoperability,messag,message,10074," = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassNa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:946,modifiability,version,version,946,"Segmentation violation while converting a TTree to RNTuple; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. TL;DR: I did a self contained executable which you can find in the Reproducer part and it crashes using <http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root> with the following stacktrace:. ```. TDirectoryFile. Found TDirectoryFile: DF_2463920048222775916. Found TTree: DbgEventExtra. Convert leaf fStart [Int_t] --> field fStart [std::int32_t]. Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:1504,modifiability,version,version,1504,"entExtra. Convert leaf fStart [Int_t] --> field fStart [std::int32_t]. Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Wrote 400000 entries. Found TTree: O2calotrigger. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [Short_t] --> field fFastOrAbsID [std::int16_t]. Convert",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:2223,modifiability,version,version,2223,"e] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Wrote 400000 entries. Found TTree: O2calotrigger. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [Short_t] --> field fFastOrAbsID [std::int16_t]. Convert leaf fLnAmplitude [Short_t] --> field fLnAmplitude [std::int16_t]. Convert leaf fTriggerBits [Int_t] --> field fTriggerBits [std::int32_t]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Found TTree: O2cascade_001. Convert leaf fIndexCollisions [Int_t] --> field fIndexCollisions [std::int32_t]. Convert leaf fIndexV0s ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:3009,modifiability,version,version,3009,"v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Wrote 400000 entries. Found TTree: O2calotrigger. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [Short_t] --> field fFastOrAbsID [std::int16_t]. Convert leaf fLnAmplitude [Short_t] --> field fLnAmplitude [std::int16_t]. Convert leaf fTriggerBits [Int_t] --> field fTriggerBits [std::int32_t]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Found TTree: O2cascade_001. Convert leaf fIndexCollisions [Int_t] --> field fIndexCollisions [std::int32_t]. Convert leaf fIndexV0s [Int_t] --> field fIndexV0s [std::int32_t]. Convert leaf fIndexTracks [Int_t] --> field fIndexTracks [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2collision. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fPosX [Float_t] --> field fPosX [float]. Convert leaf fPosY [Float_t] --> field fPosY [float]. Convert leaf fPosZ [Float_t] --> field fPosZ [float]. Convert leaf fCovXX [Float_t] --> field fCovXX [float]. Convert leaf fCovXY [Float_t] --> fiel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:3644,modifiability,version,version,3644," Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Found TTree: O2cascade_001. Convert leaf fIndexCollisions [Int_t] --> field fIndexCollisions [std::int32_t]. Convert leaf fIndexV0s [Int_t] --> field fIndexV0s [std::int32_t]. Convert leaf fIndexTracks [Int_t] --> field fIndexTracks [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2collision. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fPosX [Float_t] --> field fPosX [float]. Convert leaf fPosY [Float_t] --> field fPosY [float]. Convert leaf fPosZ [Float_t] --> field fPosZ [float]. Convert leaf fCovXX [Float_t] --> field fCovXX [float]. Convert leaf fCovXY [Float_t] --> field fCovXY [float]. Convert leaf fCovXZ [Float_t] --> field fCovXZ [float]. Convert leaf fCovYY [Float_t] --> field fCovYY [float]. Convert leaf fCovYZ [Float_t] --> field fCovYZ [float]. Convert leaf fCovZZ [Float_t] --> field fCovZZ [float]. Convert leaf fFlags [UShort_t] --> field fFlags [std::uint16_t]. Convert leaf fChi2 [Float_t] --> field fChi2 [float]. Convert leaf fNumContrib [UShort_t] --> field fNumContrib [std::uint16_t]. Convert leaf fCollisionTime [Float_t] --> field fCollisionTime [float]. Convert leaf fCollisionTimeRes [Float_t] --> field fCollisionTimeRes [float]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:4899,modifiability,version,version,4899," fPosZ [float]. Convert leaf fCovXX [Float_t] --> field fCovXX [float]. Convert leaf fCovXY [Float_t] --> field fCovXY [float]. Convert leaf fCovXZ [Float_t] --> field fCovXZ [float]. Convert leaf fCovYY [Float_t] --> field fCovYY [float]. Convert leaf fCovYZ [Float_t] --> field fCovYZ [float]. Convert leaf fCovZZ [Float_t] --> field fCovZZ [float]. Convert leaf fFlags [UShort_t] --> field fFlags [std::uint16_t]. Convert leaf fChi2 [Float_t] --> field fChi2 [float]. Convert leaf fNumContrib [UShort_t] --> field fNumContrib [std::uint16_t]. Convert leaf fCollisionTime [Float_t] --> field fCollisionTime [float]. Convert leaf fCollisionTimeRes [Float_t] --> field fCollisionTimeRes [float]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2fdd_001. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! =================================================================. ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:5627,modifiability,version,version,5627,"g /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2fdd_001. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! =================================================================. ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:6726,modifiability,modul,module,6726,"AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown module>). 0x00010b2300b0 is located 28 bytes after 4-byte region [0x00010b230090,0x00010b230094). freed by thread T0 here:. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:7746,modifiability,modul,module,7746,"0 is located 28 bytes after 4-byte region [0x00010b230090,0x00010b230094). freed by thread T0 here:. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown module>). previously allocated by thread T0 here:. #0 0x106a86ba4 in wrap_malloc+0x94 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ba4). #1 0x1062c0d60 in ROOT::Experimental::Detail::RFieldBase::GenerateValue() RField.cxx:332. #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147. #3 0x104699f00 in main ao2dToAO2NT.cxx:145. #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dTo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:8138,modifiability,modul,module,8138,"que_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown module>). previously allocated by thread T0 here:. #0 0x106a86ba4 in wrap_malloc+0x94 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ba4). #1 0x1062c0d60 in ROOT::Experimental::Detail::RFieldBase::GenerateValue() RField.cxx:332. #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147. #3 0x104699f00 in main ao2dToAO2NT.cxx:145. #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:13908,modifiability,version,version,13908,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:14232,modifiability,version,version,14232,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:5722,performance,ERROR,ERROR,5722,"OT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2fdd_001. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! =================================================================. ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9307,performance,error,error,9307,". Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10466,performance,error,error,10466,"d line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10779,performance,error,error,10779,"ullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10888,performance,error,error,10888,"_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:12557,performance,memor,memory,12557,"d::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:13006,performance,memor,memory,13006,"fBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11745,reliability,doe,does,11745,".c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::App",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11992,reliability,fail,fail,11992,"fKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's defa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:280,safety,test,testdata,280,"Segmentation violation while converting a TTree to RNTuple; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. TL;DR: I did a self contained executable which you can find in the Reproducer part and it crashes using <http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root> with the following stacktrace:. ```. TDirectoryFile. Found TDirectoryFile: DF_2463920048222775916. Found TTree: DbgEventExtra. Convert leaf fStart [Int_t] --> field fStart [std::int32_t]. Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:5722,safety,ERROR,ERROR,5722,"OT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2fdd_001. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! =================================================================. ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:6726,safety,modul,module,6726,"AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown module>). 0x00010b2300b0 is located 28 bytes after 4-byte region [0x00010b230090,0x00010b230094). freed by thread T0 here:. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:7746,safety,modul,module,7746,"0 is located 28 bytes after 4-byte region [0x00010b230090,0x00010b230094). freed by thread T0 here:. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown module>). previously allocated by thread T0 here:. #0 0x106a86ba4 in wrap_malloc+0x94 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ba4). #1 0x1062c0d60 in ROOT::Experimental::Detail::RFieldBase::GenerateValue() RField.cxx:332. #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147. #3 0x104699f00 in main ao2dToAO2NT.cxx:145. #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dTo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:8138,safety,modul,module,8138,"que_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown module>). previously allocated by thread T0 here:. #0 0x106a86ba4 in wrap_malloc+0x94 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ba4). #1 0x1062c0d60 in ROOT::Experimental::Detail::RFieldBase::GenerateValue() RField.cxx:332. #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147. #3 0x104699f00 in main ao2dToAO2NT.cxx:145. #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9109,safety,input,inputFile,9109,"4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose =",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9227,safety,log,log,9227,"52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9307,safety,error,error,9307,". Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9517,safety,input,input,9517,"etopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10372,safety,input,inputFile,10372,"l;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. //",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10444,safety,input,inputFile,10444," to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10466,safety,error,error,10466,"d line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10481,safety,input,input,10481,"first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 =",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10506,safety,Input,Input,10506," is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10522,safety,input,inputFile,10522,". // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10547,safety,input,input,10547,"ile. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10738,safety,input,inputFile,10738,"rbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10779,safety,error,error,10779,"ullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10798,safety,input,input,10798," 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10888,safety,error,error,10888,"_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11195,safety,log,log,11195,"'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11596,safety,log,log,11596,"s starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11825,safety,input,input,11825," TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:13695,safety,test,test,13695,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:13764,safety,test,testdata,13764,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9227,security,log,log,9227,"52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11195,security,log,log,11195,"'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11596,security,log,log,11596,"s starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11810,security,model,model,11810,"}. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11842,security,model,model,11842,"utFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:12526,security,model,model,12526,"tClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it wit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:12593,security,model,model,12593,"log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:12676,security,model,model,12676,"ting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:12761,security,model,model,12761,"ng namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:12982,security,model,model,12982," never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:14063,security,Team,Team,14063,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:280,testability,test,testdata,280,"Segmentation violation while converting a TTree to RNTuple; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. TL;DR: I did a self contained executable which you can find in the Reproducer part and it crashes using <http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root> with the following stacktrace:. ```. TDirectoryFile. Found TDirectoryFile: DF_2463920048222775916. Found TTree: DbgEventExtra. Convert leaf fStart [Int_t] --> field fStart [std::int32_t]. Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9227,testability,log,log,9227,"52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11195,testability,log,log,11195,"'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11596,testability,log,log,11596,"s starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:12022,testability,assert,assert,12022,"key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:13695,testability,test,test,13695,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:13764,testability,test,testdata,13764,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:14491,testability,context,context,14491,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:681,usability,User,Users,681,"Segmentation violation while converting a TTree to RNTuple; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. TL;DR: I did a self contained executable which you can find in the Reproducer part and it crashes using <http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root> with the following stacktrace:. ```. TDirectoryFile. Found TDirectoryFile: DF_2463920048222775916. Found TTree: DbgEventExtra. Convert leaf fStart [Int_t] --> field fStart [std::int32_t]. Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:1239,usability,User,Users,1239,"tp://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root> with the following stacktrace:. ```. TDirectoryFile. Found TDirectoryFile: DF_2463920048222775916. Found TTree: DbgEventExtra. Convert leaf fStart [Int_t] --> field fStart [std::int32_t]. Convert leaf fNentries [Int_t] --> field fNentries [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:1958,usability,User,Users,1958,"ple! Found TTree: O2bc. Convert leaf fRunNumber [Int_t] --> field fRunNumber [std::int32_t]. Convert leaf fGlobalBC [ULong64_t] --> field fGlobalBC [std::uint64_t]. Convert leaf fTriggerMask [ULong64_t] --> field fTriggerMask [std::uint64_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2calo. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fCellNumber [Short_t] --> field fCellNumber [std::int16_t]. Convert leaf fAmplitude [Float_t] --> field fAmplitude [float]. Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Wrote 400000 entries. Found TTree: O2calotrigger. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [Short_t] --> field fFastOrAbsID [std::int16_t]. Convert leaf fLnAmplitude [Short_t] --> field fLnAmplitude [std::int16_t]. Convert leaf fTriggerBits [Int_t] --> field fTriggerBits [std::int32_t]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file forma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:2744,usability,User,Users,2744,". Convert leaf fTime [Float_t] --> field fTime [float]. Convert leaf fCellType [Char_t] --> field fCellType [char]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Wrote 400000 entries. Found TTree: O2calotrigger. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [Short_t] --> field fFastOrAbsID [std::int16_t]. Convert leaf fLnAmplitude [Short_t] --> field fLnAmplitude [std::int16_t]. Convert leaf fTriggerBits [Int_t] --> field fTriggerBits [std::int32_t]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Found TTree: O2cascade_001. Convert leaf fIndexCollisions [Int_t] --> field fIndexCollisions [std::int32_t]. Convert leaf fIndexV0s [Int_t] --> field fIndexV0s [std::int32_t]. Convert leaf fIndexTracks [Int_t] --> field fIndexTracks [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2collision. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:3379,usability,User,Users,3379,"[Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fFastOrAbsID [Short_t] --> field fFastOrAbsID [std::int16_t]. Convert leaf fLnAmplitude [Short_t] --> field fLnAmplitude [std::int16_t]. Convert leaf fTriggerBits [Int_t] --> field fTriggerBits [std::int32_t]. Convert leaf fCaloType [Char_t] --> field fCaloType [char]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Wrote 100000 entries. Wrote 200000 entries. Wrote 300000 entries. Found TTree: O2cascade_001. Convert leaf fIndexCollisions [Int_t] --> field fIndexCollisions [std::int32_t]. Convert leaf fIndexV0s [Int_t] --> field fIndexV0s [std::int32_t]. Convert leaf fIndexTracks [Int_t] --> field fIndexTracks [std::int32_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2collision. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fPosX [Float_t] --> field fPosX [float]. Convert leaf fPosY [Float_t] --> field fPosY [float]. Convert leaf fPosZ [Float_t] --> field fPosZ [float]. Convert leaf fCovXX [Float_t] --> field fCovXX [float]. Convert leaf fCovXY [Float_t] --> field fCovXY [float]. Convert leaf fCovXZ [Float_t] --> field fCovXZ [float]. Convert leaf fCovYY [Float_t] --> field fCovYY [float]. Convert leaf fCovYZ [Float_t] --> field fCovYZ [float]. Convert leaf fCovZZ [Float_t] --> field fCovZZ [float]. Convert leaf fFlags [UShort_t] --> field fFlags [std::uint16_t]. Convert leaf fChi2 [Float_t] --> field fChi2 [float]. Convert ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:4634,usability,User,Users,4634,"h this version of RNTuple! Found TTree: O2collision. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fPosX [Float_t] --> field fPosX [float]. Convert leaf fPosY [Float_t] --> field fPosY [float]. Convert leaf fPosZ [Float_t] --> field fPosZ [float]. Convert leaf fCovXX [Float_t] --> field fCovXX [float]. Convert leaf fCovXY [Float_t] --> field fCovXY [float]. Convert leaf fCovXZ [Float_t] --> field fCovXZ [float]. Convert leaf fCovYY [Float_t] --> field fCovYY [float]. Convert leaf fCovYZ [Float_t] --> field fCovYZ [float]. Convert leaf fCovZZ [Float_t] --> field fCovZZ [float]. Convert leaf fFlags [UShort_t] --> field fFlags [std::uint16_t]. Convert leaf fChi2 [Float_t] --> field fChi2 [float]. Convert leaf fNumContrib [UShort_t] --> field fNumContrib [std::uint16_t]. Convert leaf fCollisionTime [Float_t] --> field fCollisionTime [float]. Convert leaf fCollisionTimeRes [Float_t] --> field fCollisionTimeRes [float]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2fdd_001. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:5362,usability,User,Users,5362,"[float]. Convert leaf fNumContrib [UShort_t] --> field fNumContrib [std::uint16_t]. Convert leaf fCollisionTime [Float_t] --> field fCollisionTime [float]. Convert leaf fCollisionTimeRes [Float_t] --> field fCollisionTimeRes [float]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2fdd_001. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! =================================================================. ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:5722,usability,ERROR,ERROR,5722,"OT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! Found TTree: O2fdd_001. Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]. Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]. Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]. Convert leaf fTimeA [Float_t] --> field fTimeA [float]. Convert leaf fTimeC [Float_t] --> field fTimeC [float]. Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]. Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple! =================================================================. ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0. #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0). #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25. #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65. #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297. #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263. #6 0x10469a73c in main ao2dToAO2NT.cxx:163. #7 0x186307f24 (<unknown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:8925,usability,help,help,8925,"il::RFieldBase::GenerateValue() RField.cxx:332. #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147. #3 0x104699f00 in main ao2dToAO2NT.cxx:145. #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:8941,usability,help,help,8941,"GenerateValue() RField.cxx:332. #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147. #3 0x104699f00 in main ao2dToAO2NT.cxx:145. #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is se",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9109,usability,input,inputFile,9109,"4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98. ==5670==ABORTING. [1] 5670 abort ./a.out AO2D.root. ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose =",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9307,usability,error,error,9307,". Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9463,usability,command,command,9463," Reproducer. ```C++. #include <iostream>. #include <getopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9517,usability,input,input,9517,"etopt.h>. #include <TFile.h>. #include <TTree.h>. #include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9568,usability,help,help,9568,"#include <TKey.h>. #include <TLeaf.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #include <ROOT/RField.hxx>. void print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9703,usability,help,help,9703,"print_help(). {. std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;. std::cout << ""Options:"" << std::endl;. std::cout << "" -o, --output-file <file> Output file name"" << std::endl;. std::cout << "" -h, --help Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9928,usability,help,help,9928,"Print this help message"" << std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:9956,usability,help,help,9956,"std::endl;. std::cout << "" -v, --verbose Verbose output"" << std::endl;. }. bool verbose = false;. std::string outputFile = ""ntuple.root"";. std::string inputFile;. void debug(const std::string& message). {. if (verbose) {. std::cout << message << std::endl;. }. }. void log(const std::string& message). {. std::cout << message << std::endl;. }. void error(const std::string& message). {. std::cerr << message << std::endl;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10372,usability,input,inputFile,10372,"l;. exit(1);. }. int main(int argc, char* argv[]). {. // Use getopt_long to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. //",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10444,usability,input,inputFile,10444," to parse the command line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10466,usability,error,error,10466,"d line. // the first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10481,usability,input,input,10481,"first positional argument is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 =",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10506,usability,Input,Input,10506," is the input file. // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10522,usability,input,inputFile,10522,". // -o is the output file. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10547,usability,input,input,10547,"ile. // -h is the help message. // -v is the verbose flag. static struct option long_options[] = {. {""output-file"", required_argument, nullptr, 'o'},. {""help"", no_argument, nullptr, 'h'},. {""verbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10738,usability,input,inputFile,10738,"rbose"", no_argument, nullptr, 'v'},. {nullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10779,usability,error,error,10779,"ullptr, 0, nullptr, 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10798,usability,input,input,10798," 0}};. int option_index = 0;. while (true) {. int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:10888,usability,error,error,10888,"_options, &option_index);. // If the help flag is set, print the help message and exit. if (c == 'h') {. print_help();. return 0;. }. // If the verbose flag is set, print the verbose message. else if (c == 'v') {. verbose = true;. }. // If the output file is set, print the output file name. else if (c == 'o') {. outputFile = optarg;. } else if (c == -1) {. break;. } else if (c == '?') {. print_help();. return 1;. } else {. print_help();. return 1;. }. }. if (optind < argc) {. inputFile = argv[optind];. }. debug(""Output file: "" + outputFile);. if (inputFile.empty()) {. error(""Missing input file"");. }. debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and. // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");. if (!in) {. error(""Cannot open input file"");. }. TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:11825,usability,input,input,11825," TFile::Open(outputFile.c_str(), ""RECREATE"");. if (!out) {. error(""Cannot open output file"");. }. // Iterate over the directories in the file. TIter next(in->GetListOfKeys());. TKey* key;. while ((key = (TKey*)next())) {. std::cout << key->GetClassName() << std::endl;. if (std::string(key->GetClassName()) == ""TDirectoryFile"") {. std::string name = key->GetName();. log(""Found TDirectoryFile: "" + name);. auto* dir = (TDirectoryFile*)key->ReadObj();. if (!out->GetDirectory(name.c_str())) {. out->mkdir(name.c_str());. }. out->cd(name.c_str());. // Iterate over the objects in the directory. TIter next2(dir->GetListOfKeys());. TKey* key2;. while ((key2 = (TKey*)next2())) {. if (std::string(key2->GetClassName()) == ""TTree"") {. std::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:12557,usability,memor,memory,12557,"d::string name2 = key2->GetName();. log(""Found TTree: "" + name2);. auto* tree = (TTree*)key2->ReadObj();. debug(""Converting to RNTuple"");. // Create the folder in the output file if it does not exist. using namespace ROOT::Experimental;. // Create a model from the input tree. auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. // The dynamic cast to TBranch should never fail for GetListOfBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:13006,usability,memor,memory,13006,"fBranches(). assert(b);. // We assume every branch has a single leaf. auto* l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // Create an ntuple field with the same name and type than the tree branch. auto field = Detail::RFieldBase::Create(l->GetName(), l->GetTypeName()).Unwrap();. std::cout << ""Convert leaf "" << l->GetName() << "" ["" << l->GetTypeName() << ""]"". << "" --> "". << ""field "" << field->GetName() << "" ["" << field->GetType() << ""]"" << std::endl;. // Hand over ownership of the field to the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:14278,usability,help,help,14278,"o the ntuple model. This will also create a memory location attached. // to the model's default entry, that will be used to place the data supposed to be written. model->AddField(std::move(field));. }. auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);. auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {. auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());. // We connect the model's default entry's memory location for the new field to the branch, so that we can. // fill the ntuple with the data read from the TTree. void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();. tree->SetBranchAddress(b->GetName(), fieldDataPtr);. }. auto nEntries = tree->GetEntries();. for (decltype(nEntries) i = 0; i < nEntries; ++i) {. tree->GetEntry(i);. ntuple->Fill(*entry);. if (i && i % 100000 == 0) {. std::cout << ""Wrote "" << i << "" entries"" << std::endl;. }. }. }. }. out->cd();. }. }. }. ```. you can then compile it with . ```. c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`. ```. and run it on the downloaded test file:. ```bash. curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root. ./a.out AO2D.root. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/pull/13997:242,availability,fault,fault,242,"Handle the case of arrays in the data model; # This Pull request:. Makes sure the converter code works also in the case arrays are in the data model of the TTree, so that when someone uses it to convert a TTree they do not get a segmentation fault when the branch contains a fixed size array per entry. This PR fixes #13996, in the sense that with that, my O2 AOD converter does not crash anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13997
https://github.com/root-project/root/pull/13997:264,deployability,contain,contains,264,"Handle the case of arrays in the data model; # This Pull request:. Makes sure the converter code works also in the case arrays are in the data model of the TTree, so that when someone uses it to convert a TTree they do not get a segmentation fault when the branch contains a fixed size array per entry. This PR fixes #13996, in the sense that with that, my O2 AOD converter does not crash anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13997
https://github.com/root-project/root/pull/13997:38,energy efficiency,model,model,38,"Handle the case of arrays in the data model; # This Pull request:. Makes sure the converter code works also in the case arrays are in the data model of the TTree, so that when someone uses it to convert a TTree they do not get a segmentation fault when the branch contains a fixed size array per entry. This PR fixes #13996, in the sense that with that, my O2 AOD converter does not crash anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13997
https://github.com/root-project/root/pull/13997:143,energy efficiency,model,model,143,"Handle the case of arrays in the data model; # This Pull request:. Makes sure the converter code works also in the case arrays are in the data model of the TTree, so that when someone uses it to convert a TTree they do not get a segmentation fault when the branch contains a fixed size array per entry. This PR fixes #13996, in the sense that with that, my O2 AOD converter does not crash anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13997
https://github.com/root-project/root/pull/13997:242,energy efficiency,fault,fault,242,"Handle the case of arrays in the data model; # This Pull request:. Makes sure the converter code works also in the case arrays are in the data model of the TTree, so that when someone uses it to convert a TTree they do not get a segmentation fault when the branch contains a fixed size array per entry. This PR fixes #13996, in the sense that with that, my O2 AOD converter does not crash anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13997
https://github.com/root-project/root/pull/13997:242,performance,fault,fault,242,"Handle the case of arrays in the data model; # This Pull request:. Makes sure the converter code works also in the case arrays are in the data model of the TTree, so that when someone uses it to convert a TTree they do not get a segmentation fault when the branch contains a fixed size array per entry. This PR fixes #13996, in the sense that with that, my O2 AOD converter does not crash anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13997
https://github.com/root-project/root/pull/13997:242,reliability,fault,fault,242,"Handle the case of arrays in the data model; # This Pull request:. Makes sure the converter code works also in the case arrays are in the data model of the TTree, so that when someone uses it to convert a TTree they do not get a segmentation fault when the branch contains a fixed size array per entry. This PR fixes #13996, in the sense that with that, my O2 AOD converter does not crash anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13997
https://github.com/root-project/root/pull/13997:374,reliability,doe,does,374,"Handle the case of arrays in the data model; # This Pull request:. Makes sure the converter code works also in the case arrays are in the data model of the TTree, so that when someone uses it to convert a TTree they do not get a segmentation fault when the branch contains a fixed size array per entry. This PR fixes #13996, in the sense that with that, my O2 AOD converter does not crash anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13997
https://github.com/root-project/root/pull/13997:242,safety,fault,fault,242,"Handle the case of arrays in the data model; # This Pull request:. Makes sure the converter code works also in the case arrays are in the data model of the TTree, so that when someone uses it to convert a TTree they do not get a segmentation fault when the branch contains a fixed size array per entry. This PR fixes #13996, in the sense that with that, my O2 AOD converter does not crash anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13997
https://github.com/root-project/root/pull/13997:38,security,model,model,38,"Handle the case of arrays in the data model; # This Pull request:. Makes sure the converter code works also in the case arrays are in the data model of the TTree, so that when someone uses it to convert a TTree they do not get a segmentation fault when the branch contains a fixed size array per entry. This PR fixes #13996, in the sense that with that, my O2 AOD converter does not crash anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13997
https://github.com/root-project/root/pull/13997:143,security,model,model,143,"Handle the case of arrays in the data model; # This Pull request:. Makes sure the converter code works also in the case arrays are in the data model of the TTree, so that when someone uses it to convert a TTree they do not get a segmentation fault when the branch contains a fixed size array per entry. This PR fixes #13996, in the sense that with that, my O2 AOD converter does not crash anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13997
https://github.com/root-project/root/pull/13998:74,integrability,event,event,74,[tmva][sofie] Fix the issue with GNN receivers/senders different every by event; . The SOFIE GNN must support having different senders and receivers (adjacent matrix) for every event as it is the case in the GraphNet library. This is now achieved by including the list(vector) of sender/receivers in the GNN data structure which is passed to the generated infer function. Before the list was used as a static data member of the generated GNN secton class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13998
https://github.com/root-project/root/pull/13998:177,integrability,event,event,177,[tmva][sofie] Fix the issue with GNN receivers/senders different every by event; . The SOFIE GNN must support having different senders and receivers (adjacent matrix) for every event as it is the case in the GraphNet library. This is now achieved by including the list(vector) of sender/receivers in the GNN data structure which is passed to the generated infer function. Before the list was used as a static data member of the generated GNN secton class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13998
https://github.com/root-project/root/pull/13998:102,usability,support,support,102,[tmva][sofie] Fix the issue with GNN receivers/senders different every by event; . The SOFIE GNN must support having different senders and receivers (adjacent matrix) for every event as it is the case in the GraphNet library. This is now achieved by including the list(vector) of sender/receivers in the GNN data structure which is passed to the generated infer function. Before the list was used as a static data member of the generated GNN secton class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13998
https://github.com/root-project/root/pull/14000:53,deployability,fail,fail,53,[ci] Print exception connecting to S3.; We currently fail to upload to S3 and I don't know / cannot see why.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14000
https://github.com/root-project/root/pull/14000:43,energy efficiency,current,currently,43,[ci] Print exception connecting to S3.; We currently fail to upload to S3 and I don't know / cannot see why.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14000
https://github.com/root-project/root/pull/14000:53,reliability,fail,fail,53,[ci] Print exception connecting to S3.; We currently fail to upload to S3 and I don't know / cannot see why.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14000
https://github.com/root-project/root/pull/14000:11,safety,except,exception,11,[ci] Print exception connecting to S3.; We currently fail to upload to S3 and I don't know / cannot see why.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14000
https://github.com/root-project/root/pull/14002:129,modifiability,Exten,Extend,129,"Support color gradients in web canvas, improve handling in normal graphics; 1. Support linear and radial gradients in JSROOT. 2. Extend `TColor::GetColor()` methods to use optional alpha parameter. 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects. 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case. 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary. 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT. 7. Use inherited constructors for gradient classes. 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:187,modifiability,paramet,parameter,187,"Support color gradients in web canvas, improve handling in normal graphics; 1. Support linear and radial gradients in JSROOT. 2. Extend `TColor::GetColor()` methods to use optional alpha parameter. 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects. 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case. 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary. 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT. 7. Use inherited constructors for gradient classes. 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:734,modifiability,inherit,inherited,734,"Support color gradients in web canvas, improve handling in normal graphics; 1. Support linear and radial gradients in JSROOT. 2. Extend `TColor::GetColor()` methods to use optional alpha parameter. 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects. 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case. 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary. 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT. 7. Use inherited constructors for gradient classes. 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:283,testability,simpl,simplify,283,"Support color gradients in web canvas, improve handling in normal graphics; 1. Support linear and radial gradients in JSROOT. 2. Extend `TColor::GetColor()` methods to use optional alpha parameter. 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects. 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case. 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary. 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT. 7. Use inherited constructors for gradient classes. 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:464,testability,Simpl,Simplify,464,"Support color gradients in web canvas, improve handling in normal graphics; 1. Support linear and radial gradients in JSROOT. 2. Extend `TColor::GetColor()` methods to use optional alpha parameter. 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects. 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case. 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary. 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT. 7. Use inherited constructors for gradient classes. 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:0,usability,Support,Support,0,"Support color gradients in web canvas, improve handling in normal graphics; 1. Support linear and radial gradients in JSROOT. 2. Extend `TColor::GetColor()` methods to use optional alpha parameter. 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects. 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case. 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary. 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT. 7. Use inherited constructors for gradient classes. 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:79,usability,Support,Support,79,"Support color gradients in web canvas, improve handling in normal graphics; 1. Support linear and radial gradients in JSROOT. 2. Extend `TColor::GetColor()` methods to use optional alpha parameter. 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects. 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case. 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary. 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT. 7. Use inherited constructors for gradient classes. 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:283,usability,simpl,simplify,283,"Support color gradients in web canvas, improve handling in normal graphics; 1. Support linear and radial gradients in JSROOT. 2. Extend `TColor::GetColor()` methods to use optional alpha parameter. 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects. 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case. 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary. 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT. 7. Use inherited constructors for gradient classes. 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:464,usability,Simpl,Simplify,464,"Support color gradients in web canvas, improve handling in normal graphics; 1. Support linear and radial gradients in JSROOT. 2. Extend `TColor::GetColor()` methods to use optional alpha parameter. 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects. 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case. 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary. 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT. 7. Use inherited constructors for gradient classes. 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:508,usability,custom,custom,508,"Support color gradients in web canvas, improve handling in normal graphics; 1. Support linear and radial gradients in JSROOT. 2. Extend `TColor::GetColor()` methods to use optional alpha parameter. 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects. 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case. 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary. 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT. 7. Use inherited constructors for gradient classes. 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:524,usability,custom,custom,524,"Support color gradients in web canvas, improve handling in normal graphics; 1. Support linear and radial gradients in JSROOT. 2. Extend `TColor::GetColor()` methods to use optional alpha parameter. 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects. 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case. 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary. 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT. 7. Use inherited constructors for gradient classes. 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:593,usability,custom,customized,593,"Support color gradients in web canvas, improve handling in normal graphics; 1. Support linear and radial gradients in JSROOT. 2. Extend `TColor::GetColor()` methods to use optional alpha parameter. 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects. 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case. 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary. 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT. 7. Use inherited constructors for gradient classes. 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:812,usability,support,support,812,"Support color gradients in web canvas, improve handling in normal graphics; 1. Support linear and radial gradients in JSROOT. 2. Extend `TColor::GetColor()` methods to use optional alpha parameter. 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects. 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case. 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary. 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT. 7. Use inherited constructors for gradient classes. 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14002:844,usability,support,support,844,"Support color gradients in web canvas, improve handling in normal graphics; 1. Support linear and radial gradients in JSROOT. 2. Extend `TColor::GetColor()` methods to use optional alpha parameter. 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects. 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case. 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary. 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT. 7. Use inherited constructors for gradient classes. 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14002
https://github.com/root-project/root/pull/14003:40,deployability,releas,released,40,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:116,deployability,depend,depending,116,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:198,deployability,releas,release,198,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:294,deployability,releas,released,294,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:334,deployability,version,version,334,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:483,deployability,build,build,483,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:8,energy efficiency,Adapt,Adapt,8,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:8,integrability,Adapt,Adapt,8,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:116,integrability,depend,depending,116,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:334,integrability,version,version,334,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:8,interoperability,Adapt,Adapt,8,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:550,interoperability,specif,specifically,550,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:8,modifiability,Adapt,Adapt,8,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:116,modifiability,depend,depending,116,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:334,modifiability,version,version,334,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:116,safety,depend,depending,116,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:116,testability,depend,depending,116,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:498,usability,document,documentation,498,"[cmake] Adapt to ZeroMQ 4.3.5 being now released; So far, ROOT, in particular the `roofit_multiprocess` feature was depending on a feature developed by @egpbos that was not part of the ZeroMQ 4.3.4 release yet. Therefore, it was a bit awkward to check if ZeroMQ had that feature. Now that it's released, we can just do a proper cmake version check. The only caveat is that ZeroMQ needs to be built with `-DENABLE_DRAFTS`. to work for `roofit_multiprocess`, which is explained in the build. options documentation. Also, move some compilation flags to specifically RooFitZMQ, where they. are needed. This PR superseeds two other PRs:. * https://github.com/root-project/root/pull/13995. * https://github.com/root-project/root/pull/9473",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14004:49,deployability,releas,release,49,[v630] Make RBatchGenerator more visible for the release; Backport of #14001,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14004
https://github.com/root-project/root/issues/14007:2023,availability,Operat,Operating,2023,"icates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS Ventura. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:185,deployability,fail,fail,185,"Cannot create a RNtuple into a TDirectory; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1480,deployability,version,version,1480,"icates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS Ventura. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1804,deployability,version,version,1804,"icates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS Ventura. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1988,deployability,Instal,Installation,1988,"icates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS Ventura. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1000,energy efficiency,model,model,1000,"not create a RNtuple into a TDirectory; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1045,energy efficiency,model,model,1045,"heck duplicate issues. - [x] Checked for duplicates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1266,energy efficiency,model,model,1266,"icates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS Ventura. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1480,integrability,version,version,1480,"icates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS Ventura. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1804,integrability,version,version,1804,"icates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS Ventura. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1480,modifiability,version,version,1480,"icates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS Ventura. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1804,modifiability,version,version,1804,"icates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS Ventura. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:185,reliability,fail,fail,185,"Cannot create a RNtuple into a TDirectory; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1000,security,model,model,1000,"not create a RNtuple into a TDirectory; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1045,security,model,model,1045,"heck duplicate issues. - [x] Checked for duplicates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1266,security,model,model,1266,"icates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS Ventura. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1635,security,Team,Team,1635,"icates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS Ventura. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:2071,testability,context,context,2071,"icates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS Ventura. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/issues/14007:1850,usability,help,help,1850,"icates. ### Description. I am naively trying to create a RNTuple inside a TDirectory, and I fail to do so. Moreover, when looking at the produced TFile with TBrowser, I see some weird recursive structure. ![image](https://github.com/root-project/root/assets/10544/e6362230-7f82-4beb-8140-60cdd49efe4a). ### Reproducer. I tried a few permutations of the following, all giving me weird results. ```C++. #include <TFile.h>. #include <TTree.h>. #include <TDirectory.h>. #include <ROOT/RNTuple.hxx>. #include <ROOT/RNTupleModel.hxx>. #undef NDEBUG. #include <cassert>. int writeTree(). {. TFile* f;. int x = 0;. f = new TFile(""foo.root"", ""RECREATE"");. auto* dir = f->mkdir(""dir"");. dir->cd();. auto* tree = new TTree(""T"", ""a Tree"");. tree->Branch(""x"", &x, ""x/D"");. for (int i = 0; i < 10; i++) {. x = i;. tree->Fill();. }. tree->Write();. using namespace ROOT::Experimental;. // Create and fill an RNTuple. auto model = RNTupleModel::Create();. auto wrPt = model->MakeField<float>(""pt"", 42.0);. {. RNTupleWriteOptions options;. options.SetContainerFormat(ENTupleContainerFormat::kBare);. auto* bar = f->mkdir(""bar"");. bar->cd();. . auto ntuple = RNTupleWriter::Append(std::move(model), ""f"", *f, options);. bool ok = bar->cd();. ntuple->Fill();. ntuple->CommitCluster();. *wrPt = 24.0;. ntuple->Fill();. *wrPt = 12.0;. ntuple->Fill();. ntuple->CommitCluster();. }. return 0;. }. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 01 2023, 10:33:00 |. | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. aliBuild. ### Operating system. macOS Ventura. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14007
https://github.com/root-project/root/pull/14008:17,deployability,modul,modules,17,[v630] Fix cmake/modules/FindZeroMQ.cmake; Backport of https://github.com/root-project/root/pull/13995.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14008
https://github.com/root-project/root/pull/14008:17,modifiability,modul,modules,17,[v630] Fix cmake/modules/FindZeroMQ.cmake; Backport of https://github.com/root-project/root/pull/13995.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14008
https://github.com/root-project/root/pull/14008:17,safety,modul,modules,17,[v630] Fix cmake/modules/FindZeroMQ.cmake; Backport of https://github.com/root-project/root/pull/13995.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14008
https://github.com/root-project/root/pull/14009:66,deployability,Automat,Automatic,66,"[tree] Apply `modernize-use-nullptr` suggestions from clang-tidy; Automatic suggestions by `clang-tidy`. Only the trivial `nullptr` changes, such that the remaining suggestions get easier to review in isolation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14009
https://github.com/root-project/root/pull/14009:191,safety,review,review,191,"[tree] Apply `modernize-use-nullptr` suggestions from clang-tidy; Automatic suggestions by `clang-tidy`. Only the trivial `nullptr` changes, such that the remaining suggestions get easier to review in isolation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14009
https://github.com/root-project/root/pull/14009:201,safety,isol,isolation,201,"[tree] Apply `modernize-use-nullptr` suggestions from clang-tidy; Automatic suggestions by `clang-tidy`. Only the trivial `nullptr` changes, such that the remaining suggestions get easier to review in isolation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14009
https://github.com/root-project/root/pull/14009:201,security,iso,isolation,201,"[tree] Apply `modernize-use-nullptr` suggestions from clang-tidy; Automatic suggestions by `clang-tidy`. Only the trivial `nullptr` changes, such that the remaining suggestions get easier to review in isolation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14009
https://github.com/root-project/root/pull/14009:66,testability,Automat,Automatic,66,"[tree] Apply `modernize-use-nullptr` suggestions from clang-tidy; Automatic suggestions by `clang-tidy`. Only the trivial `nullptr` changes, such that the remaining suggestions get easier to review in isolation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14009
https://github.com/root-project/root/pull/14009:191,testability,review,review,191,"[tree] Apply `modernize-use-nullptr` suggestions from clang-tidy; Automatic suggestions by `clang-tidy`. Only the trivial `nullptr` changes, such that the remaining suggestions get easier to review in isolation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14009
https://github.com/root-project/root/pull/14009:201,testability,isol,isolation,201,"[tree] Apply `modernize-use-nullptr` suggestions from clang-tidy; Automatic suggestions by `clang-tidy`. Only the trivial `nullptr` changes, such that the remaining suggestions get easier to review in isolation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14009
https://github.com/root-project/root/pull/14010:260,availability,restor,restore,260,"Extend `TColor::DefinedColors()` functionality; 1. If called once with argument TColor::DefinedColors(1), all saved canvas will include color and palette. One can reset flag with TColor::DefinedColors(-1). 2. When reading canvas with stored colors - correctly restore all colors attributes and support gradients. 3. Provide default constructors for color gradient classes. Let correctly read canvases with gradients. 4. Fix TPad::GetViewer3D(), prevent crash in gviz3d.C tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14010
https://github.com/root-project/root/pull/14010:0,modifiability,Exten,Extend,0,"Extend `TColor::DefinedColors()` functionality; 1. If called once with argument TColor::DefinedColors(1), all saved canvas will include color and palette. One can reset flag with TColor::DefinedColors(-1). 2. When reading canvas with stored colors - correctly restore all colors attributes and support gradients. 3. Provide default constructors for color gradient classes. Let correctly read canvases with gradients. 4. Fix TPad::GetViewer3D(), prevent crash in gviz3d.C tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14010
https://github.com/root-project/root/pull/14010:260,reliability,restor,restore,260,"Extend `TColor::DefinedColors()` functionality; 1. If called once with argument TColor::DefinedColors(1), all saved canvas will include color and palette. One can reset flag with TColor::DefinedColors(-1). 2. When reading canvas with stored colors - correctly restore all colors attributes and support gradients. 3. Provide default constructors for color gradient classes. Let correctly read canvases with gradients. 4. Fix TPad::GetViewer3D(), prevent crash in gviz3d.C tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14010
https://github.com/root-project/root/pull/14010:445,safety,prevent,prevent,445,"Extend `TColor::DefinedColors()` functionality; 1. If called once with argument TColor::DefinedColors(1), all saved canvas will include color and palette. One can reset flag with TColor::DefinedColors(-1). 2. When reading canvas with stored colors - correctly restore all colors attributes and support gradients. 3. Provide default constructors for color gradient classes. Let correctly read canvases with gradients. 4. Fix TPad::GetViewer3D(), prevent crash in gviz3d.C tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14010
https://github.com/root-project/root/pull/14010:445,security,preven,prevent,445,"Extend `TColor::DefinedColors()` functionality; 1. If called once with argument TColor::DefinedColors(1), all saved canvas will include color and palette. One can reset flag with TColor::DefinedColors(-1). 2. When reading canvas with stored colors - correctly restore all colors attributes and support gradients. 3. Provide default constructors for color gradient classes. Let correctly read canvases with gradients. 4. Fix TPad::GetViewer3D(), prevent crash in gviz3d.C tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14010
https://github.com/root-project/root/pull/14010:294,usability,support,support,294,"Extend `TColor::DefinedColors()` functionality; 1. If called once with argument TColor::DefinedColors(1), all saved canvas will include color and palette. One can reset flag with TColor::DefinedColors(-1). 2. When reading canvas with stored colors - correctly restore all colors attributes and support gradients. 3. Provide default constructors for color gradient classes. Let correctly read canvases with gradients. 4. Fix TPad::GetViewer3D(), prevent crash in gviz3d.C tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14010
https://github.com/root-project/root/pull/14011:611,availability,operat,operation,611,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:736,availability,redund,redundant-string-cstr,736,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:337,deployability,releas,release,337,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:700,deployability,contain,container-size-empty,700,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:736,deployability,redundan,redundant-string-cstr,736,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:846,deployability,releas,release,846,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:395,interoperability,share,shared,395,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:543,performance,perform,performance-inefficient-algorithm,543,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:580,performance,perform,performance-inefficient-vector-operation,580,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:624,performance,perform,performance-faster-string-find,624,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:658,performance,perform,performance-move-const-arg,658,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:736,reliability,redundan,redundant-string-cstr,736,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:736,safety,redund,redundant-string-cstr,736,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:543,usability,perform,performance-inefficient-algorithm,543,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:580,usability,perform,performance-inefficient-vector-operation,580,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:624,usability,perform,performance-faster-string-find,624,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:658,usability,perform,performance-move-const-arg,658,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/issues/14012:1012,availability,Operat,Operating,1012,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:195,deployability,fail,failed,195,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:466,deployability,version,version,466,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:790,deployability,version,version,790,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:974,deployability,Instal,Installation,974,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:1001,deployability,build,build,1001,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:466,integrability,version,version,466,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:790,integrability,version,version,790,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:243,interoperability,incompatib,incompatible,243,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:466,modifiability,version,version,466,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:790,modifiability,version,version,790,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:195,reliability,fail,failed,195,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:621,security,Team,Team,621,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:35,testability,assert,assert,35,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:185,testability,Assert,Assertion,185,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:1067,testability,context,context,1067,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/issues/14012:836,usability,help,help,836,"Reloading sparsehist.C triggers an assert in LLVM; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. root [0] .L sparsehist.C . root [1] .x sparsehist.C . Assertion failed: (isa<X>(Val) && ""cast<Ty>() argument of incompatible type!""), function cast, file Casting.h, line 255. Abort trap: 6. ```. ### Reproducer. See description and https://root-forum.cern.ch/t/break-segmentation-violation-when-executing-sparsehist-c/56948/5. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.31/01 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Nov 02 2023, 22:29:51 |. | From heads/master-13574@v6-31-01-108-g1cf66addc0 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. local build. ### Operating system. MacOS but likely any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14012
https://github.com/root-project/root/pull/14013:0,deployability,Updat,Update,0,"Update glvox2.C tutorial, update jsroot [skip-ci]; 1. Fix small problems in glvox2.C, let ot work with web canvas. 2. Update JSROOT, now includes ZSTD and LZMA decompression support",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14013
https://github.com/root-project/root/pull/14013:26,deployability,updat,update,26,"Update glvox2.C tutorial, update jsroot [skip-ci]; 1. Fix small problems in glvox2.C, let ot work with web canvas. 2. Update JSROOT, now includes ZSTD and LZMA decompression support",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14013
https://github.com/root-project/root/pull/14013:118,deployability,Updat,Update,118,"Update glvox2.C tutorial, update jsroot [skip-ci]; 1. Fix small problems in glvox2.C, let ot work with web canvas. 2. Update JSROOT, now includes ZSTD and LZMA decompression support",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14013
https://github.com/root-project/root/pull/14013:160,modifiability,deco,decompression,160,"Update glvox2.C tutorial, update jsroot [skip-ci]; 1. Fix small problems in glvox2.C, let ot work with web canvas. 2. Update JSROOT, now includes ZSTD and LZMA decompression support",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14013
https://github.com/root-project/root/pull/14013:0,safety,Updat,Update,0,"Update glvox2.C tutorial, update jsroot [skip-ci]; 1. Fix small problems in glvox2.C, let ot work with web canvas. 2. Update JSROOT, now includes ZSTD and LZMA decompression support",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14013
https://github.com/root-project/root/pull/14013:26,safety,updat,update,26,"Update glvox2.C tutorial, update jsroot [skip-ci]; 1. Fix small problems in glvox2.C, let ot work with web canvas. 2. Update JSROOT, now includes ZSTD and LZMA decompression support",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14013
https://github.com/root-project/root/pull/14013:118,safety,Updat,Update,118,"Update glvox2.C tutorial, update jsroot [skip-ci]; 1. Fix small problems in glvox2.C, let ot work with web canvas. 2. Update JSROOT, now includes ZSTD and LZMA decompression support",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14013
https://github.com/root-project/root/pull/14013:0,security,Updat,Update,0,"Update glvox2.C tutorial, update jsroot [skip-ci]; 1. Fix small problems in glvox2.C, let ot work with web canvas. 2. Update JSROOT, now includes ZSTD and LZMA decompression support",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14013
https://github.com/root-project/root/pull/14013:26,security,updat,update,26,"Update glvox2.C tutorial, update jsroot [skip-ci]; 1. Fix small problems in glvox2.C, let ot work with web canvas. 2. Update JSROOT, now includes ZSTD and LZMA decompression support",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14013
https://github.com/root-project/root/pull/14013:118,security,Updat,Update,118,"Update glvox2.C tutorial, update jsroot [skip-ci]; 1. Fix small problems in glvox2.C, let ot work with web canvas. 2. Update JSROOT, now includes ZSTD and LZMA decompression support",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14013
https://github.com/root-project/root/pull/14013:174,usability,support,support,174,"Update glvox2.C tutorial, update jsroot [skip-ci]; 1. Fix small problems in glvox2.C, let ot work with web canvas. 2. Update JSROOT, now includes ZSTD and LZMA decompression support",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14013
https://github.com/root-project/root/pull/14015:410,deployability,updat,updates,410,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/pull/14015:670,deployability,updat,updated,670,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/pull/14015:29,energy efficiency,core,core,29,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/pull/14015:262,energy efficiency,core,core,262,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/pull/14015:121,modifiability,maintain,maintained,121,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/pull/14015:419,modifiability,pac,package,419,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/pull/14015:121,safety,maintain,maintained,121,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/pull/14015:410,safety,updat,updates,410,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/pull/14015:640,safety,test,tested,640,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/pull/14015:670,safety,updat,updated,670,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/pull/14015:410,security,updat,updates,410,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/pull/14015:670,security,updat,updated,670,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/pull/14015:640,testability,test,tested,640,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14015
https://github.com/root-project/root/issues/14016:1669,availability,Operat,Operating,1669,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1743,availability,error,error,1743,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1111,deployability,fail,fails,1111,"for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argumen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1132,deployability,version,version,1132,"scription. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template paramet",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1438,deployability,version,version,1438,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1625,deployability,Instal,Installation,1625,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1646,deployability,build,build,1646,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1132,integrability,version,version,1132,"scription. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template paramet",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1438,integrability,version,version,1438,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1000,interoperability,bind,bindings,1000,"OT cannot handle SFINAE functions with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:2097,interoperability,specif,specified,2097,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1000,modifiability,bind,bindings,1000,"OT cannot handle SFINAE functions with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1132,modifiability,version,version,1132,"scription. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template paramet",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1438,modifiability,version,version,1438,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:2129,modifiability,paramet,parameter,2129,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1743,performance,error,error,1743,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1111,reliability,fail,fails,1111,"for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argumen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:389,safety,Test,TestSfinae,389,"PyROOT cannot handle SFINAE functions with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:810,safety,test,testing,810,"PyROOT cannot handle SFINAE functions with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:820,safety,Test,TestSfinae,820,"PyROOT cannot handle SFINAE functions with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:881,safety,test,testing,881,"PyROOT cannot handle SFINAE functions with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:950,safety,test,testing,950,"PyROOT cannot handle SFINAE functions with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1010,safety,test,testing,1010,"handle SFINAE functions with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1030,safety,Test,TestSfinae,1030,"ns with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1053,safety,test,testing,1053,"ate arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candida",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1084,safety,test,testing,1084,"ate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1743,safety,error,error,1743,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1822,safety,Test,TestSfinae,1822,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1847,safety,Test,TestSfinae,1847,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1287,security,Team,Team,1287,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:389,testability,Test,TestSfinae,389,"PyROOT cannot handle SFINAE functions with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:810,testability,test,testing,810,"PyROOT cannot handle SFINAE functions with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:820,testability,Test,TestSfinae,820,"PyROOT cannot handle SFINAE functions with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:881,testability,test,testing,881,"PyROOT cannot handle SFINAE functions with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:950,testability,test,testing,950,"PyROOT cannot handle SFINAE functions with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1010,testability,test,testing,1010,"handle SFINAE functions with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1030,testability,Test,TestSfinae,1030,"ns with variadic template arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1053,testability,test,testing,1053,"ate arguments; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candida",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1084,testability,test,testing,1084,"ate issues. - [x] Checked for duplicates. ### Description. Following from wlav/cppyy#201, it seems there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1709,testability,context,context,1709,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1822,testability,Test,TestSfinae,1822,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1847,testability,Test,TestSfinae,1847,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1487,usability,help,help,1487,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:1743,usability,error,error,1743,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py. import ROOT. import cppyy. cppyy.cppdef('''. template <typename T> struct TestSfinae {. template <typename U, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_single(U arg) {. std::cout << ""good"" << std::endl;. return 0;. }. template <typename... Args, typename V = T,. std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>. auto test_pack(Args... args) {. std::cout << ""good"" << std::endl;. return 0;. }. };. '''). # call from cling. cppyy.cppdef('''auto testing = TestSfinae<float>();'''). cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good. cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings. testing = cppyy.gbl.TestSfinae['float'](). testing.test_single(1) # good. testing.test_pack(1,2,3) # fails. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Sep 17 2023, 12:38:14 |. | From heads/latest-stable@7745d36d |. | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```. input_line_24:6:70: error: no matching member function for call to 'test_pack'. new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'. auto test_pack(Args... args) {. ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/pull/14017:33,integrability,interfac,interface,33,Addition of Unique Ptr type Open interface with implementation; # This Pull request:. Addition of Unique Pointer for TFile::Open -> Creation of Interface and implementation for the same. ## Changes or fixes:. Enables utilization of Unique Pointer for TFile::Open. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:144,integrability,Interfac,Interface,144,Addition of Unique Ptr type Open interface with implementation; # This Pull request:. Addition of Unique Pointer for TFile::Open -> Creation of Interface and implementation for the same. ## Changes or fixes:. Enables utilization of Unique Pointer for TFile::Open. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:33,interoperability,interfac,interface,33,Addition of Unique Ptr type Open interface with implementation; # This Pull request:. Addition of Unique Pointer for TFile::Open -> Creation of Interface and implementation for the same. ## Changes or fixes:. Enables utilization of Unique Pointer for TFile::Open. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:144,interoperability,Interfac,Interface,144,Addition of Unique Ptr type Open interface with implementation; # This Pull request:. Addition of Unique Pointer for TFile::Open -> Creation of Interface and implementation for the same. ## Changes or fixes:. Enables utilization of Unique Pointer for TFile::Open. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:33,modifiability,interfac,interface,33,Addition of Unique Ptr type Open interface with implementation; # This Pull request:. Addition of Unique Pointer for TFile::Open -> Creation of Interface and implementation for the same. ## Changes or fixes:. Enables utilization of Unique Pointer for TFile::Open. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:144,modifiability,Interfac,Interface,144,Addition of Unique Ptr type Open interface with implementation; # This Pull request:. Addition of Unique Pointer for TFile::Open -> Creation of Interface and implementation for the same. ## Changes or fixes:. Enables utilization of Unique Pointer for TFile::Open. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:285,safety,test,tested,285,Addition of Unique Ptr type Open interface with implementation; # This Pull request:. Addition of Unique Pointer for TFile::Open -> Creation of Interface and implementation for the same. ## Changes or fixes:. Enables utilization of Unique Pointer for TFile::Open. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:285,testability,test,tested,285,Addition of Unique Ptr type Open interface with implementation; # This Pull request:. Addition of Unique Pointer for TFile::Open -> Creation of Interface and implementation for the same. ## Changes or fixes:. Enables utilization of Unique Pointer for TFile::Open. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14018:745,availability,error,errors,745,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:856,deployability,updat,updated,856,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:596,energy efficiency,current,currently,596,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:136,integrability,sub,submitted,136,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:721,interoperability,format,formatting,721,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:745,performance,error,errors,745,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:745,safety,error,errors,745,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:826,safety,test,tested,826,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:856,safety,updat,updated,856,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:856,security,updat,updated,856,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:826,testability,test,tested,826,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:5,usability,Document,Documentation,5,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:71,usability,Support,Support,71,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:277,usability,person,personal,277,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:390,usability,support,support,390,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:644,usability,Support,Support,644,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:688,usability,Support,Support,688,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:745,usability,error,errors,745,"[RF] Documentation Changes requested by @guitargeek for the ""RooFit AD Support"" doc; These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14019:125,deployability,releas,release,125,[relnotes] SOFIE changes and implementations for v630; This PR adds the changes and new implementations in TMVA SOFIE in the release notes for version 6.30,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14019
https://github.com/root-project/root/pull/14019:143,deployability,version,version,143,[relnotes] SOFIE changes and implementations for v630; This PR adds the changes and new implementations in TMVA SOFIE in the release notes for version 6.30,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14019
https://github.com/root-project/root/pull/14019:143,integrability,version,version,143,[relnotes] SOFIE changes and implementations for v630; This PR adds the changes and new implementations in TMVA SOFIE in the release notes for version 6.30,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14019
https://github.com/root-project/root/pull/14019:143,modifiability,version,version,143,[relnotes] SOFIE changes and implementations for v630; This PR adds the changes and new implementations in TMVA SOFIE in the release notes for version 6.30,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14019
https://github.com/root-project/root/pull/14021:30,deployability,integr,integrals,30,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:52,deployability,integr,integration,52,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:87,deployability,integr,integral,87,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:325,deployability,integr,integral,325,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:346,deployability,integr,integrating,346,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:452,deployability,integr,integration-of-roobdecay-and-rooabsanaconvpdf,452,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:555,deployability,integr,integral,555,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:752,deployability,integr,integrals,752,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:843,deployability,integr,integration,843,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:30,integrability,integr,integrals,30,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:52,integrability,integr,integration,52,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:87,integrability,integr,integral,87,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:325,integrability,integr,integral,325,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:346,integrability,integr,integrating,346,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:365,integrability,sub,subrange,365,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:452,integrability,integr,integration-of-roobdecay-and-rooabsanaconvpdf,452,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:555,integrability,integr,integral,555,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:752,integrability,integr,integrals,752,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:843,integrability,integration test,integration tests,843,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:30,interoperability,integr,integrals,30,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:52,interoperability,integr,integration,52,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:87,interoperability,integr,integral,87,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:325,interoperability,integr,integral,325,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:346,interoperability,integr,integrating,346,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:452,interoperability,integr,integration-of-roobdecay-and-rooabsanaconvpdf,452,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:555,interoperability,integr,integral,555,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:752,interoperability,integr,integrals,752,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:843,interoperability,integr,integration,843,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:30,modifiability,integr,integrals,30,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:52,modifiability,integr,integration,52,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:87,modifiability,integr,integral,87,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:325,modifiability,integr,integral,325,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:346,modifiability,integr,integrating,346,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:452,modifiability,integr,integration-of-roobdecay-and-rooabsanaconvpdf,452,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:555,modifiability,integr,integral,555,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:690,modifiability,refact,refactored,690,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:752,modifiability,integr,integrals,752,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:810,modifiability,refact,refactored,810,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:843,modifiability,integr,integration,843,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:690,performance,refactor,refactored,690,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:810,performance,refactor,refactored,810,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:30,reliability,integr,integrals,30,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:52,reliability,integr,integration,52,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:87,reliability,integr,integral,87,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:325,reliability,integr,integral,325,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:346,reliability,integr,integrating,346,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:452,reliability,integr,integration-of-roobdecay-and-rooabsanaconvpdf,452,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:555,reliability,integr,integral,555,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:752,reliability,integr,integrals,752,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:843,reliability,integr,integration,843,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:602,safety,avoid,avoid,602,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:829,safety,test,tested,829,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:855,safety,test,tests,855,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:952,safety,test,test,952,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:30,security,integr,integrals,30,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:52,security,integr,integration,52,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:87,security,integr,integral,87,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:325,security,integr,integral,325,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:346,security,integr,integrating,346,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:452,security,integr,integration-of-roobdecay-and-rooabsanaconvpdf,452,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:555,security,integr,integral,555,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:752,security,integr,integrals,752,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:843,security,integr,integration,843,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:30,testability,integr,integrals,30,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:52,testability,integr,integration,52,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:87,testability,integr,integral,87,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:325,testability,integr,integral,325,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:346,testability,integr,integrating,346,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:452,testability,integr,integration-of-roobdecay-and-rooabsanaconvpdf,452,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:555,testability,integr,integral,555,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:752,testability,integr,integrals,752,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:829,testability,test,tested,829,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:843,testability,integr,integration,843,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:855,testability,test,tests,855,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:947,testability,unit,unit,947,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:952,testability,test,test,952,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:201,usability,minim,minimum,201,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14021:710,usability,help,helper,710,"[RF] RooTruthModel analytical integrals for general integration ranges; The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14021
https://github.com/root-project/root/pull/14022:151,availability,error,error,151,"Make sure the legend endcaps fill style matches the graph one; Reproducer:. ```. void gerrors() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;. Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};. Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};. Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};. Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};. TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);. gr->SetTitle(""TGraphErrors Example"");. gr->SetMarkerColor(4);. gr->SetMarkerStyle(21);. gr->Draw(""AP|>"");. c1->Update();. auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");. l->SetBorderSize(0.);. l->SetTextFont(42);. l->AddEntry(gr, ""TGraphErrors new title"", ""e"");. l->Draw();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14022
https://github.com/root-project/root/pull/14022:599,deployability,Updat,Update,599,"Make sure the legend endcaps fill style matches the graph one; Reproducer:. ```. void gerrors() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;. Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};. Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};. Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};. Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};. TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);. gr->SetTitle(""TGraphErrors Example"");. gr->SetMarkerColor(4);. gr->SetMarkerStyle(21);. gr->Draw(""AP|>"");. c1->Update();. auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");. l->SetBorderSize(0.);. l->SetTextFont(42);. l->AddEntry(gr, ""TGraphErrors new title"", ""e"");. l->Draw();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14022
https://github.com/root-project/root/pull/14022:580,energy efficiency,Draw,Draw,580,"Make sure the legend endcaps fill style matches the graph one; Reproducer:. ```. void gerrors() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;. Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};. Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};. Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};. Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};. TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);. gr->SetTitle(""TGraphErrors Example"");. gr->SetMarkerColor(4);. gr->SetMarkerStyle(21);. gr->Draw(""AP|>"");. c1->Update();. auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");. l->SetBorderSize(0.);. l->SetTextFont(42);. l->AddEntry(gr, ""TGraphErrors new title"", ""e"");. l->Draw();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14022
https://github.com/root-project/root/pull/14022:757,energy efficiency,Draw,Draw,757,"Make sure the legend endcaps fill style matches the graph one; Reproducer:. ```. void gerrors() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;. Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};. Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};. Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};. Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};. TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);. gr->SetTitle(""TGraphErrors Example"");. gr->SetMarkerColor(4);. gr->SetMarkerStyle(21);. gr->Draw(""AP|>"");. c1->Update();. auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");. l->SetBorderSize(0.);. l->SetTextFont(42);. l->AddEntry(gr, ""TGraphErrors new title"", ""e"");. l->Draw();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14022
https://github.com/root-project/root/pull/14022:151,performance,error,error,151,"Make sure the legend endcaps fill style matches the graph one; Reproducer:. ```. void gerrors() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;. Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};. Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};. Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};. Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};. TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);. gr->SetTitle(""TGraphErrors Example"");. gr->SetMarkerColor(4);. gr->SetMarkerStyle(21);. gr->Draw(""AP|>"");. c1->Update();. auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");. l->SetBorderSize(0.);. l->SetTextFont(42);. l->AddEntry(gr, ""TGraphErrors new title"", ""e"");. l->Draw();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14022
https://github.com/root-project/root/pull/14022:151,safety,error,error,151,"Make sure the legend endcaps fill style matches the graph one; Reproducer:. ```. void gerrors() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;. Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};. Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};. Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};. Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};. TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);. gr->SetTitle(""TGraphErrors Example"");. gr->SetMarkerColor(4);. gr->SetMarkerStyle(21);. gr->Draw(""AP|>"");. c1->Update();. auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");. l->SetBorderSize(0.);. l->SetTextFont(42);. l->AddEntry(gr, ""TGraphErrors new title"", ""e"");. l->Draw();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14022
https://github.com/root-project/root/pull/14022:599,safety,Updat,Update,599,"Make sure the legend endcaps fill style matches the graph one; Reproducer:. ```. void gerrors() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;. Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};. Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};. Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};. Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};. TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);. gr->SetTitle(""TGraphErrors Example"");. gr->SetMarkerColor(4);. gr->SetMarkerStyle(21);. gr->Draw(""AP|>"");. c1->Update();. auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");. l->SetBorderSize(0.);. l->SetTextFont(42);. l->AddEntry(gr, ""TGraphErrors new title"", ""e"");. l->Draw();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14022
https://github.com/root-project/root/pull/14022:599,security,Updat,Update,599,"Make sure the legend endcaps fill style matches the graph one; Reproducer:. ```. void gerrors() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;. Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};. Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};. Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};. Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};. TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);. gr->SetTitle(""TGraphErrors Example"");. gr->SetMarkerColor(4);. gr->SetMarkerStyle(21);. gr->Draw(""AP|>"");. c1->Update();. auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");. l->SetBorderSize(0.);. l->SetTextFont(42);. l->AddEntry(gr, ""TGraphErrors new title"", ""e"");. l->Draw();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14022
https://github.com/root-project/root/pull/14022:133,testability,Simpl,Simple,133,"Make sure the legend endcaps fill style matches the graph one; Reproducer:. ```. void gerrors() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;. Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};. Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};. Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};. Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};. TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);. gr->SetTitle(""TGraphErrors Example"");. gr->SetMarkerColor(4);. gr->SetMarkerStyle(21);. gr->Draw(""AP|>"");. c1->Update();. auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");. l->SetBorderSize(0.);. l->SetTextFont(42);. l->AddEntry(gr, ""TGraphErrors new title"", ""e"");. l->Draw();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14022
https://github.com/root-project/root/pull/14022:133,usability,Simpl,Simple,133,"Make sure the legend endcaps fill style matches the graph one; Reproducer:. ```. void gerrors() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;. Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};. Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};. Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};. Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};. TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);. gr->SetTitle(""TGraphErrors Example"");. gr->SetMarkerColor(4);. gr->SetMarkerStyle(21);. gr->Draw(""AP|>"");. c1->Update();. auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");. l->SetBorderSize(0.);. l->SetTextFont(42);. l->AddEntry(gr, ""TGraphErrors new title"", ""e"");. l->Draw();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14022
https://github.com/root-project/root/pull/14022:151,usability,error,error,151,"Make sure the legend endcaps fill style matches the graph one; Reproducer:. ```. void gerrors() {. TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;. Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};. Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};. Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};. Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};. TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);. gr->SetTitle(""TGraphErrors Example"");. gr->SetMarkerColor(4);. gr->SetMarkerStyle(21);. gr->Draw(""AP|>"");. c1->Update();. auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");. l->SetBorderSize(0.);. l->SetTextFont(42);. l->AddEntry(gr, ""TGraphErrors new title"", ""e"");. l->Draw();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14022
https://github.com/root-project/root/pull/14023:50,usability,Close,Closes,50,[hist] Code improvements to `TH1::SmoothArray()`; Closes #7029.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14023
https://github.com/root-project/root/issues/14024:1291,availability,Operat,Operating,1291,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:464,deployability,fail,fail,464,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:842,deployability,Updat,Updating,842,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:1228,deployability,version,version,1228,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:1258,deployability,Instal,Installation,1258,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:1091,integrability,repositor,repository,1091,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:1129,integrability,repositor,repository,1129,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:1228,integrability,version,version,1228,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:1091,interoperability,repositor,repository,1091,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:1129,interoperability,repositor,repository,1129,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:1228,modifiability,version,version,1228,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:7,reliability,doe,does,7,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:152,reliability,doe,does,152,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:222,reliability,doe,does,222,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:284,reliability,pra,practice,284,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:464,reliability,fail,fail,464,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:1237,reliability,doe,does,1237,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:842,safety,Updat,Updating,842,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:842,security,Updat,Updating,842,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:1329,testability,context,context,1329,New CI does not rebase roottest branch on top of roottest master; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The new CI does not rebase roottest branch on top of roottest master. However it does rebase the code branch on top of the roottest master. In practice this means that if the latest development in the ROOT code requires a change in roottest (and it has already been merged into the main branch) then the PR will spuriously fail. For example in https://github.com/root-project/root/actions/runs/6751316012/job/18355186874?pr=13900. We have:. ```. git fetch origin refs/pull/13900/head:master-13574. git checkout master-13574. git rebase master. . From https://github.com/root-project/root. ```. but we have as part of the cmake invocation. ```. -- Found roottest: /github/home/ROOT-CI/src/roottest. -- Updating roottest from 'https://github.com/pcanal/roottest' (master-13574). From https://github.com/pcanal/roottest. * [new branch] master-13574 -> master-13574. Switched to branch 'master-13574'. ```. A possible solution is to treat the `roottest` repository the same way as the `ROOT` repository and check it out and rebase outside of cmake. ### Reproducer. See description. ### ROOT version. does not matter. ### Installation method. New CI. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/pull/14025:95,usability,User,Users,95,[tmva] Remove the links to the old TMVA Web site on sourceforge; Fix also links to the correct Users Guide and keep when needed link to old web site using the correct link : https://tmva.sourceforge.net/old_site/. This PR fixes #7627,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14025
https://github.com/root-project/root/pull/14025:101,usability,Guid,Guide,101,[tmva] Remove the links to the old TMVA Web site on sourceforge; Fix also links to the correct Users Guide and keep when needed link to old web site using the correct link : https://tmva.sourceforge.net/old_site/. This PR fixes #7627,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14025
https://github.com/root-project/root/pull/14026:34,deployability,build,build,34,[minuit2] Fix Minuit 2 standalone build; Follow-up on two recent PRs that independently broke the standalone Minuit 2 built:. * https://github.com/root-project/root/pull/13661. * https://github.com/root-project/root/pull/13620. More detail in the commit description. Addresses the following forum post:. https://root-forum.cern.ch/t/standalone-minuit2/57006,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14026
https://github.com/root-project/root/pull/14027:5,deployability,Build,Build,5,[ci] Build the binaries for workflow dispatch!; Needed for 6.30.00 binaries,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14027
https://github.com/root-project/root/pull/14027:28,usability,workflow,workflow,28,[ci] Build the binaries for workflow dispatch!; Needed for 6.30.00 binaries,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14027
https://github.com/root-project/root/issues/14030:551,availability,Operat,Operating,551,"Allow zero-copy RNTuple bulk reading; ### Explain what you would like to see improved and how. As discussed in the workshop, our (ALICE) number one request for RNTuple would be to have a way to avoid the currently needed copy when doing bulk reads. During the meeting passing the allocator or some byte range was suggested as a possible solution, which I think would be doable on our side. We are open to any other solution which allows us to achieve writing directly in shared memory. ### ROOT version. master. ### Installation method. aliBuild. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14030
https://github.com/root-project/root/issues/14030:495,deployability,version,version,495,"Allow zero-copy RNTuple bulk reading; ### Explain what you would like to see improved and how. As discussed in the workshop, our (ALICE) number one request for RNTuple would be to have a way to avoid the currently needed copy when doing bulk reads. During the meeting passing the allocator or some byte range was suggested as a possible solution, which I think would be doable on our side. We are open to any other solution which allows us to achieve writing directly in shared memory. ### ROOT version. master. ### Installation method. aliBuild. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14030
https://github.com/root-project/root/issues/14030:516,deployability,Instal,Installation,516,"Allow zero-copy RNTuple bulk reading; ### Explain what you would like to see improved and how. As discussed in the workshop, our (ALICE) number one request for RNTuple would be to have a way to avoid the currently needed copy when doing bulk reads. During the meeting passing the allocator or some byte range was suggested as a possible solution, which I think would be doable on our side. We are open to any other solution which allows us to achieve writing directly in shared memory. ### ROOT version. master. ### Installation method. aliBuild. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14030
https://github.com/root-project/root/issues/14030:204,energy efficiency,current,currently,204,"Allow zero-copy RNTuple bulk reading; ### Explain what you would like to see improved and how. As discussed in the workshop, our (ALICE) number one request for RNTuple would be to have a way to avoid the currently needed copy when doing bulk reads. During the meeting passing the allocator or some byte range was suggested as a possible solution, which I think would be doable on our side. We are open to any other solution which allows us to achieve writing directly in shared memory. ### ROOT version. master. ### Installation method. aliBuild. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14030
https://github.com/root-project/root/issues/14030:280,energy efficiency,alloc,allocator,280,"Allow zero-copy RNTuple bulk reading; ### Explain what you would like to see improved and how. As discussed in the workshop, our (ALICE) number one request for RNTuple would be to have a way to avoid the currently needed copy when doing bulk reads. During the meeting passing the allocator or some byte range was suggested as a possible solution, which I think would be doable on our side. We are open to any other solution which allows us to achieve writing directly in shared memory. ### ROOT version. master. ### Installation method. aliBuild. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14030
https://github.com/root-project/root/issues/14030:495,integrability,version,version,495,"Allow zero-copy RNTuple bulk reading; ### Explain what you would like to see improved and how. As discussed in the workshop, our (ALICE) number one request for RNTuple would be to have a way to avoid the currently needed copy when doing bulk reads. During the meeting passing the allocator or some byte range was suggested as a possible solution, which I think would be doable on our side. We are open to any other solution which allows us to achieve writing directly in shared memory. ### ROOT version. master. ### Installation method. aliBuild. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14030
https://github.com/root-project/root/issues/14030:471,interoperability,share,shared,471,"Allow zero-copy RNTuple bulk reading; ### Explain what you would like to see improved and how. As discussed in the workshop, our (ALICE) number one request for RNTuple would be to have a way to avoid the currently needed copy when doing bulk reads. During the meeting passing the allocator or some byte range was suggested as a possible solution, which I think would be doable on our side. We are open to any other solution which allows us to achieve writing directly in shared memory. ### ROOT version. master. ### Installation method. aliBuild. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14030
https://github.com/root-project/root/issues/14030:495,modifiability,version,version,495,"Allow zero-copy RNTuple bulk reading; ### Explain what you would like to see improved and how. As discussed in the workshop, our (ALICE) number one request for RNTuple would be to have a way to avoid the currently needed copy when doing bulk reads. During the meeting passing the allocator or some byte range was suggested as a possible solution, which I think would be doable on our side. We are open to any other solution which allows us to achieve writing directly in shared memory. ### ROOT version. master. ### Installation method. aliBuild. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14030
https://github.com/root-project/root/issues/14030:478,performance,memor,memory,478,"Allow zero-copy RNTuple bulk reading; ### Explain what you would like to see improved and how. As discussed in the workshop, our (ALICE) number one request for RNTuple would be to have a way to avoid the currently needed copy when doing bulk reads. During the meeting passing the allocator or some byte range was suggested as a possible solution, which I think would be doable on our side. We are open to any other solution which allows us to achieve writing directly in shared memory. ### ROOT version. master. ### Installation method. aliBuild. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14030
https://github.com/root-project/root/issues/14030:194,safety,avoid,avoid,194,"Allow zero-copy RNTuple bulk reading; ### Explain what you would like to see improved and how. As discussed in the workshop, our (ALICE) number one request for RNTuple would be to have a way to avoid the currently needed copy when doing bulk reads. During the meeting passing the allocator or some byte range was suggested as a possible solution, which I think would be doable on our side. We are open to any other solution which allows us to achieve writing directly in shared memory. ### ROOT version. master. ### Installation method. aliBuild. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14030
https://github.com/root-project/root/issues/14030:589,testability,context,context,589,"Allow zero-copy RNTuple bulk reading; ### Explain what you would like to see improved and how. As discussed in the workshop, our (ALICE) number one request for RNTuple would be to have a way to avoid the currently needed copy when doing bulk reads. During the meeting passing the allocator or some byte range was suggested as a possible solution, which I think would be doable on our side. We are open to any other solution which allows us to achieve writing directly in shared memory. ### ROOT version. master. ### Installation method. aliBuild. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14030
https://github.com/root-project/root/issues/14030:478,usability,memor,memory,478,"Allow zero-copy RNTuple bulk reading; ### Explain what you would like to see improved and how. As discussed in the workshop, our (ALICE) number one request for RNTuple would be to have a way to avoid the currently needed copy when doing bulk reads. During the meeting passing the allocator or some byte range was suggested as a possible solution, which I think would be doable on our side. We are open to any other solution which allows us to achieve writing directly in shared memory. ### ROOT version. master. ### Installation method. aliBuild. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14030
https://github.com/root-project/root/pull/14031:27,safety,test,testing,27,Spurrious change to enable testing jenkins; Replaces https://github.com/root-project/root/pull/3760 to connect to the new CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14031
https://github.com/root-project/root/pull/14031:27,testability,test,testing,27,Spurrious change to enable testing jenkins; Replaces https://github.com/root-project/root/pull/3760 to connect to the new CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14031
https://github.com/root-project/root/issues/14032:342,availability,failur,failures,342,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:363,availability,Error,Error,363,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:392,availability,error,error,392,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:419,availability,Error,Error,419,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:448,availability,error,error,448,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:475,availability,Error,Error,475,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:504,availability,error,error,504,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:531,availability,Error,Error,531,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:560,availability,error,error,560,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:587,availability,Error,Error,587,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:616,availability,error,error,616,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:643,availability,Error,Error,643,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:672,availability,error,error,672,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:699,availability,Error,Error,699,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:728,availability,error,error,728,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:755,availability,Error,Error,755,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:784,availability,error,error,784,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:1165,availability,Operat,Operating,1165,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:342,deployability,fail,failures,342,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:1100,deployability,version,version,1100,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:1121,deployability,Instal,Installation,1121,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:1142,deployability,build,build,1142,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:160,energy efficiency,draw,drawing,160,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:223,energy efficiency,draw,drawn,223,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:1100,integrability,version,version,1100,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:1100,modifiability,version,version,1100,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:342,performance,failur,failures,342,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:363,performance,Error,Error,363,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:392,performance,error,error,392,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:419,performance,Error,Error,419,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:448,performance,error,error,448,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:475,performance,Error,Error,475,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:504,performance,error,error,504,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:531,performance,Error,Error,531,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:560,performance,error,error,560,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:587,performance,Error,Error,587,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:616,performance,error,error,616,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:643,performance,Error,Error,643,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:672,performance,error,error,672,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:699,performance,Error,Error,699,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:728,performance,error,error,728,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:755,performance,Error,Error,755,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:784,performance,error,error,784,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:342,reliability,fail,failures,342,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:296,safety,compl,complete,296,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:363,safety,Error,Error,363,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:392,safety,error,error,392,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:419,safety,Error,Error,419,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:448,safety,error,error,448,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:475,safety,Error,Error,475,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:504,safety,error,error,504,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:531,safety,Error,Error,531,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:560,safety,error,error,560,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:587,safety,Error,Error,587,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:616,safety,error,error,616,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:643,safety,Error,Error,643,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:672,safety,error,error,672,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:699,safety,Error,Error,699,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:728,safety,error,error,728,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:755,safety,Error,Error,755,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:784,safety,error,error,784,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:296,security,compl,complete,296,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:1214,testability,context,context,1214,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:363,usability,Error,Error,363,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:392,usability,error,error,392,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:419,usability,Error,Error,419,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:448,usability,error,error,448,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:475,usability,Error,Error,475,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:504,usability,error,error,504,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:531,usability,Error,Error,531,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:560,usability,error,error,560,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:587,usability,Error,Error,587,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:616,usability,error,error,616,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:643,usability,Error,Error,643,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:672,usability,error,error,672,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:699,usability,Error,Error,699,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:728,usability,error,error,728,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:755,usability,Error,Error,755,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:784,usability,error,error,784,"`TPaveText` has problems when label is set; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:. ```. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. Error in <TTF::SetTextSize>: error in FT_Set_Char_Size. ```. ### Reproducer. Attached is reproducer. . [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/pull/14033:4,energy efficiency,draw,drawing,4,"Fix drawing of the TPaveText label; When drawing label, ""NDC"" should be removed otherwise real user coordinates will be handled as NDC. Fixes: https://github.com/root-project/root/issues/14032",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14033
https://github.com/root-project/root/pull/14033:41,energy efficiency,draw,drawing,41,"Fix drawing of the TPaveText label; When drawing label, ""NDC"" should be removed otherwise real user coordinates will be handled as NDC. Fixes: https://github.com/root-project/root/issues/14032",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14033
https://github.com/root-project/root/pull/14033:100,interoperability,coordinat,coordinates,100,"Fix drawing of the TPaveText label; When drawing label, ""NDC"" should be removed otherwise real user coordinates will be handled as NDC. Fixes: https://github.com/root-project/root/issues/14032",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14033
https://github.com/root-project/root/pull/14033:95,usability,user,user,95,"Fix drawing of the TPaveText label; When drawing label, ""NDC"" should be removed otherwise real user coordinates will be handled as NDC. Fixes: https://github.com/root-project/root/issues/14032",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14033
https://github.com/root-project/root/pull/14034:6,performance,memor,memory,6,"Avoid memory blowup of TBufferMerger; At least according to my limited tests, removing the queuing mechanism from TBufferMerger is equally fast because it avoids the overhead of preparing a TBufferFile for queuing, and uses less memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:166,performance,overhead,overhead,166,"Avoid memory blowup of TBufferMerger; At least according to my limited tests, removing the queuing mechanism from TBufferMerger is equally fast because it avoids the overhead of preparing a TBufferFile for queuing, and uses less memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:229,performance,memor,memory,229,"Avoid memory blowup of TBufferMerger; At least according to my limited tests, removing the queuing mechanism from TBufferMerger is equally fast because it avoids the overhead of preparing a TBufferFile for queuing, and uses less memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:0,safety,Avoid,Avoid,0,"Avoid memory blowup of TBufferMerger; At least according to my limited tests, removing the queuing mechanism from TBufferMerger is equally fast because it avoids the overhead of preparing a TBufferFile for queuing, and uses less memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:71,safety,test,tests,71,"Avoid memory blowup of TBufferMerger; At least according to my limited tests, removing the queuing mechanism from TBufferMerger is equally fast because it avoids the overhead of preparing a TBufferFile for queuing, and uses less memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:155,safety,avoid,avoids,155,"Avoid memory blowup of TBufferMerger; At least according to my limited tests, removing the queuing mechanism from TBufferMerger is equally fast because it avoids the overhead of preparing a TBufferFile for queuing, and uses less memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:71,testability,test,tests,71,"Avoid memory blowup of TBufferMerger; At least according to my limited tests, removing the queuing mechanism from TBufferMerger is equally fast because it avoids the overhead of preparing a TBufferFile for queuing, and uses less memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:6,usability,memor,memory,6,"Avoid memory blowup of TBufferMerger; At least according to my limited tests, removing the queuing mechanism from TBufferMerger is equally fast because it avoids the overhead of preparing a TBufferFile for queuing, and uses less memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:229,usability,memor,memory,229,"Avoid memory blowup of TBufferMerger; At least according to my limited tests, removing the queuing mechanism from TBufferMerger is equally fast because it avoids the overhead of preparing a TBufferFile for queuing, and uses less memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14035:9,deployability,Updat,Update,9,[ntuple] Update comment in ntpl004_dimuon.C; Commit cf78f40d60 made it use the RVec collection type.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14035
https://github.com/root-project/root/pull/14035:9,safety,Updat,Update,9,[ntuple] Update comment in ntpl004_dimuon.C; Commit cf78f40d60 made it use the RVec collection type.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14035
https://github.com/root-project/root/pull/14035:9,security,Updat,Update,9,[ntuple] Update comment in ntpl004_dimuon.C; Commit cf78f40d60 made it use the RVec collection type.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14035
https://github.com/root-project/root/pull/14036:207,interoperability,compatib,compatible,207,Replace triangle.c by CDT; Delaunay triangles were computed by the package `triangle.c` included in the ROOT code. This package had several problems. . - It was not maintained anymore. - Its license was not compatible with LGPL . This PR replaces it by the [CDT package](https://github.com/artem-ogre/CDT) which is properly maintained and has a license (MLP) compatible with LGPL .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14036
https://github.com/root-project/root/pull/14036:359,interoperability,compatib,compatible,359,Replace triangle.c by CDT; Delaunay triangles were computed by the package `triangle.c` included in the ROOT code. This package had several problems. . - It was not maintained anymore. - Its license was not compatible with LGPL . This PR replaces it by the [CDT package](https://github.com/artem-ogre/CDT) which is properly maintained and has a license (MLP) compatible with LGPL .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14036
https://github.com/root-project/root/pull/14036:67,modifiability,pac,package,67,Replace triangle.c by CDT; Delaunay triangles were computed by the package `triangle.c` included in the ROOT code. This package had several problems. . - It was not maintained anymore. - Its license was not compatible with LGPL . This PR replaces it by the [CDT package](https://github.com/artem-ogre/CDT) which is properly maintained and has a license (MLP) compatible with LGPL .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14036
https://github.com/root-project/root/pull/14036:120,modifiability,pac,package,120,Replace triangle.c by CDT; Delaunay triangles were computed by the package `triangle.c` included in the ROOT code. This package had several problems. . - It was not maintained anymore. - Its license was not compatible with LGPL . This PR replaces it by the [CDT package](https://github.com/artem-ogre/CDT) which is properly maintained and has a license (MLP) compatible with LGPL .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14036
https://github.com/root-project/root/pull/14036:165,modifiability,maintain,maintained,165,Replace triangle.c by CDT; Delaunay triangles were computed by the package `triangle.c` included in the ROOT code. This package had several problems. . - It was not maintained anymore. - Its license was not compatible with LGPL . This PR replaces it by the [CDT package](https://github.com/artem-ogre/CDT) which is properly maintained and has a license (MLP) compatible with LGPL .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14036
https://github.com/root-project/root/pull/14036:262,modifiability,pac,package,262,Replace triangle.c by CDT; Delaunay triangles were computed by the package `triangle.c` included in the ROOT code. This package had several problems. . - It was not maintained anymore. - Its license was not compatible with LGPL . This PR replaces it by the [CDT package](https://github.com/artem-ogre/CDT) which is properly maintained and has a license (MLP) compatible with LGPL .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14036
https://github.com/root-project/root/pull/14036:324,modifiability,maintain,maintained,324,Replace triangle.c by CDT; Delaunay triangles were computed by the package `triangle.c` included in the ROOT code. This package had several problems. . - It was not maintained anymore. - Its license was not compatible with LGPL . This PR replaces it by the [CDT package](https://github.com/artem-ogre/CDT) which is properly maintained and has a license (MLP) compatible with LGPL .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14036
https://github.com/root-project/root/pull/14036:165,safety,maintain,maintained,165,Replace triangle.c by CDT; Delaunay triangles were computed by the package `triangle.c` included in the ROOT code. This package had several problems. . - It was not maintained anymore. - Its license was not compatible with LGPL . This PR replaces it by the [CDT package](https://github.com/artem-ogre/CDT) which is properly maintained and has a license (MLP) compatible with LGPL .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14036
https://github.com/root-project/root/pull/14036:324,safety,maintain,maintained,324,Replace triangle.c by CDT; Delaunay triangles were computed by the package `triangle.c` included in the ROOT code. This package had several problems. . - It was not maintained anymore. - Its license was not compatible with LGPL . This PR replaces it by the [CDT package](https://github.com/artem-ogre/CDT) which is properly maintained and has a license (MLP) compatible with LGPL .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14036
https://github.com/root-project/root/issues/14037:9786,availability,Operat,Operating,9786," invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:163,deployability,fail,fails,163,"hsimple.root compilation segfaults V6.28/06 with target `znver3` and `lto`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compilation fails on the final step (hsimple.root). Cmake produces the following output. ```. [2377/2377] Generating tutorials/hsimple.root. FAILED: tutorials/hsimple.root /home/user/Builds/root_build/tutorials/hsimple.root . cd /home/user/Builds/root_build/tutorials && LD_LIBRARY_PATH=/home/user/Builds/root_build/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:292,deployability,FAIL,FAILED,292,"hsimple.root compilation segfaults V6.28/06 with target `znver3` and `lto`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compilation fails on the final step (hsimple.root). Cmake produces the following output. ```. [2377/2377] Generating tutorials/hsimple.root. FAILED: tutorials/hsimple.root /home/user/Builds/root_build/tutorials/hsimple.root . cd /home/user/Builds/root_build/tutorials && LD_LIBRARY_PATH=/home/user/Builds/root_build/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:334,deployability,Build,Builds,334,"hsimple.root compilation segfaults V6.28/06 with target `znver3` and `lto`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compilation fails on the final step (hsimple.root). Cmake produces the following output. ```. [2377/2377] Generating tutorials/hsimple.root. FAILED: tutorials/hsimple.root /home/user/Builds/root_build/tutorials/hsimple.root . cd /home/user/Builds/root_build/tutorials && LD_LIBRARY_PATH=/home/user/Builds/root_build/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:391,deployability,Build,Builds,391,"hsimple.root compilation segfaults V6.28/06 with target `znver3` and `lto`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compilation fails on the final step (hsimple.root). Cmake produces the following output. ```. [2377/2377] Generating tutorials/hsimple.root. FAILED: tutorials/hsimple.root /home/user/Builds/root_build/tutorials/hsimple.root . cd /home/user/Builds/root_build/tutorials && LD_LIBRARY_PATH=/home/user/Builds/root_build/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:449,deployability,Build,Builds,449,"hsimple.root compilation segfaults V6.28/06 with target `znver3` and `lto`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compilation fails on the final step (hsimple.root). Cmake produces the following output. ```. [2377/2377] Generating tutorials/hsimple.root. FAILED: tutorials/hsimple.root /home/user/Builds/root_build/tutorials/hsimple.root . cd /home/user/Builds/root_build/tutorials && LD_LIBRARY_PATH=/home/user/Builds/root_build/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:1212,deployability,Build,Builds,1212,"es the following output. ```. [2377/2377] Generating tutorials/hsimple.root. FAILED: tutorials/hsimple.root /home/user/Builds/root_build/tutorials/hsimple.root . cd /home/user/Builds/root_build/tutorials && LD_LIBRARY_PATH=/home/user/Builds/root_build/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:1379,deployability,stack,stack,1379,"ome/user/Builds/root_build/tutorials && LD_LIBRARY_PATH=/home/user/Builds/root_build/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:1866,deployability,Stack,StackTrace,1866,"Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simpli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:1898,deployability,Build,Builds,1898,"rgets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Functi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2015,deployability,Build,Builds,2015,"sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2192,deployability,Build,Builds,2192,"IST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2359,deployability,Build,Builds,2359,"is is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2595,deployability,Build,Builds,2595,"07f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2804,deployability,Build,Builds,2804,"/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:3014,deployability,Build,Builds,3014,"ilds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::Me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:3146,deployability,Build,Builds,3146,"asicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:3286,deployability,Build,Builds,3286,"ptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:3426,deployability,Build,Builds,3426,"lifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::Proces",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:3797,deployability,Build,Builds,3797,"ser/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:3947,deployability,Build,Builds,3947,"natorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:4156,deployability,Build,Builds,4156,"uild/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:4354,deployability,Build,Builds,4354,"erpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:4494,deployability,Build,Builds,4494,"rementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:4639,deployability,Build,Builds,4639,"ts<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:4770,deployability,Build,Builds,4770,"ool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:4902,deployability,Build,Builds,4902," cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:4998,deployability,Build,Builds,4998,"8f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:5224,deployability,stack,stack,5224,"rpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:5553,deployability,stack,stack,5553,"Cling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:5838,deployability,Build,Builds,5838,"essLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6005,deployability,Build,Builds,6005,"t_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6241,deployability,Build,Builds,6241,"recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6450,deployability,Build,Builds,6450,"d it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6660,deployability,Build,Builds,6660,"==========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::Me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6792,deployability,Build,Builds,6792,"asicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6932,deployability,Build,Builds,6932,"ptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:7072,deployability,Build,Builds,7072,"lifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ========================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:7443,deployability,Build,Builds,7443,"ser/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:7593,deployability,Build,Builds,7593,"natorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:7802,deployability,Build,Builds,7802,"uild/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:8000,deployability,Build,Builds,8000,"erpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:8137,deployability,build,build,8137,"IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=nati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:8163,deployability,fail,failed,8163,"ransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:8227,deployability,build,build,8227,"IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:8931,deployability,build,build,8931,"nterpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:9005,deployability,releas,release,9005,"ot_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:9601,deployability,build,build,9601," invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:9719,deployability,version,version,9719," invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:9742,deployability,Instal,Installation,9742," invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:9811,deployability,version,version,9811," invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:9842,deployability,build,buildhost,9842," invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:1636,energy efficiency,optim,optimized,1636,"opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:1778,energy efficiency,optim,optimized,1778,"x-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:5487,integrability,sub,submit,5487,"ser/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:8152,integrability,sub,subcommand,8152,"::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLA",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:9719,integrability,version,version,9719," invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:9811,integrability,version,version,9811," invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:8326,interoperability,architectur,architecture,8326,"rInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:8695,interoperability,format,formatting,8695," cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:5327,modifiability,variab,variable,5327,"e*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:9719,modifiability,version,version,9719," invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:9811,modifiability,version,version,9811," invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:1636,performance,optimiz,optimized,1636,"opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:1778,performance,optimiz,optimized,1778,"x-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:163,reliability,fail,fails,163,"hsimple.root compilation segfaults V6.28/06 with target `znver3` and `lto`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compilation fails on the final step (hsimple.root). Cmake produces the following output. ```. [2377/2377] Generating tutorials/hsimple.root. FAILED: tutorials/hsimple.root /home/user/Builds/root_build/tutorials/hsimple.root . cd /home/user/Builds/root_build/tutorials && LD_LIBRARY_PATH=/home/user/Builds/root_build/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:292,reliability,FAIL,FAILED,292,"hsimple.root compilation segfaults V6.28/06 with target `znver3` and `lto`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compilation fails on the final step (hsimple.root). Cmake produces the following output. ```. [2377/2377] Generating tutorials/hsimple.root. FAILED: tutorials/hsimple.root /home/user/Builds/root_build/tutorials/hsimple.root . cd /home/user/Builds/root_build/tutorials && LD_LIBRARY_PATH=/home/user/Builds/root_build/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:8163,reliability,fail,failed,8163,"ransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2053,security,sign,signal,2053,".0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:9557,security,Ddo,Ddoxygen,9557," invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:1385,testability,trace,trace,1385,"er/Builds/root_build/tutorials && LD_LIBRARY_PATH=/home/user/Builds/root_build/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libClin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2425,testability,simpl,simplifyCFG,2425,"n __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2519,testability,Simpl,SimplifyCFGOptions,2519,"e=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransacti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2758,testability,Simpl,SimplifyCFGOptions,2758,"tem (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2865,testability,simpl,simplifyFunctionCFGImpl,2865,") () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2968,testability,Simpl,SimplifyCFGOptions,2968,"hSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:5230,testability,trace,trace,5230,"rException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /ho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:5559,testability,trace,trace,5559,":ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::Targ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6071,testability,simpl,simplifyCFG,6071,"=================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6165,testability,Simpl,SimplifyCFGOptions,6165," crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransacti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6404,testability,Simpl,SimplifyCFGOptions,6404,"n/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6511,testability,simpl,simplifyFunctionCFGImpl,6511,"n/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6614,testability,Simpl,SimplifyCFGOptions,6614," that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:10081,testability,context,context,10081," invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:329,usability,user,user,329,"hsimple.root compilation segfaults V6.28/06 with target `znver3` and `lto`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compilation fails on the final step (hsimple.root). Cmake produces the following output. ```. [2377/2377] Generating tutorials/hsimple.root. FAILED: tutorials/hsimple.root /home/user/Builds/root_build/tutorials/hsimple.root . cd /home/user/Builds/root_build/tutorials && LD_LIBRARY_PATH=/home/user/Builds/root_build/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:386,usability,user,user,386,"hsimple.root compilation segfaults V6.28/06 with target `znver3` and `lto`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compilation fails on the final step (hsimple.root). Cmake produces the following output. ```. [2377/2377] Generating tutorials/hsimple.root. FAILED: tutorials/hsimple.root /home/user/Builds/root_build/tutorials/hsimple.root . cd /home/user/Builds/root_build/tutorials && LD_LIBRARY_PATH=/home/user/Builds/root_build/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:444,usability,user,user,444,"hsimple.root compilation segfaults V6.28/06 with target `znver3` and `lto`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compilation fails on the final step (hsimple.root). Cmake produces the following output. ```. [2377/2377] Generating tutorials/hsimple.root. FAILED: tutorials/hsimple.root /home/user/Builds/root_build/tutorials/hsimple.root . cd /home/user/Builds/root_build/tutorials && LD_LIBRARY_PATH=/home/user/Builds/root_build/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:1207,usability,user,user,1207,"produces the following output. ```. [2377/2377] Generating tutorials/hsimple.root. FAILED: tutorials/hsimple.root /home/user/Builds/root_build/tutorials/hsimple.root . cd /home/user/Builds/root_build/tutorials && LD_LIBRARY_PATH=/home/user/Builds/root_build/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:1893,usability,user,user,1893,"2.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2010,usability,user,user,2010,"4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/use",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2187,usability,user,user,2187,"ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2354,usability,user,user,2354,"sh. This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2425,usability,simpl,simplifyCFG,2425,"n __GI___wait4 (pid=5485, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2519,usability,Simpl,SimplifyCFGOptions,2519,"e=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransacti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2590,usability,user,user,2590," 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fff17431338, options=options. entry=0) at waitpid.c:38. #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::Incremen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2758,usability,Simpl,SimplifyCFGOptions,2758,"tem (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2799,usability,user,user,2799,"ysdeps/posix/system.c:172. #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2865,usability,simpl,simplifyFunctionCFGImpl,2865,") () from /home/user/Builds/root_build/lib/libCore.so. #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:2968,usability,Simpl,SimplifyCFGOptions,2968,"hSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:3009,usability,user,user,3009,"ser/Builds/root_build/lib/libCore.so. #5 <signal handler called>. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:3141,usability,user,user,3141,"lvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:3281,usability,user,user,3281,"FromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:3421,usability,user,user,3421,"::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:3792,usability,user,user,3792,"home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:3942,usability,user,user,3942,"::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:4151,usability,user,user,4151,"root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:4349,usability,user,user,4349,"g::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:4489,usability,user,user,4489,"g::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please subm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:4634,usability,user,user,4634,"peTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:4765,usability,user,user,4765," >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:4897,usability,user,user,4897,"ngRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:4993,usability,user,user,4993,"da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:5150,usability,hint,hint,5150,"ser/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:5364,usability,help,help,5364,"build/lib/libCling.so. #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:5635,usability,help,help,5635,"r/Builds/root_build/lib/libCling.so. #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so. #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions cons",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:5833,usability,user,user,5833,"::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so. #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6000,usability,user,user,6000,"ds/root_build/lib/libRint.so. #23 0x00000000004011ad in main (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6071,usability,simpl,simplifyCFG,6071,"=================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6165,usability,Simpl,SimplifyCFGOptions,6165," crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransacti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6236,usability,user,user,6236,"ry to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::Incremen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6404,usability,Simpl,SimplifyCFGOptions,6404,"n/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6445,usability,user,user,6445,"nvinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6511,usability,simpl,simplifyFunctionCFGImpl,6511,"n/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6614,usability,Simpl,SimplifyCFGOptions,6614," that might help us fixing this issue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6655,usability,user,user,6655,"sue. ===========================================================. #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6787,usability,user,user,6787,"lvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so. #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:6927,usability,user,user,6927,"FromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so. #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:7067,usability,user,user,7067,"::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so. #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ==================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:7438,usability,user,user,7438,"home/user/Builds/root_build/lib/libCling.so. #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:7588,usability,user,user,7588,"::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so. #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:7797,usability,user,user,7797,"root_build/lib/libCling.so. #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so. #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:7995,usability,user,user,7995,"g::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so. #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:8143,usability,stop,stopped,8143,"ntalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so. #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /home/user/Builds/root_build/lib/libCling.so. #16 0x00007f2da8ac18f5 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) [clone .constprop.0] () from /home/user/Builds/root_build/lib/libCling.so. #17 0x00007f2da61776e9 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so. ===========================================================. free(): invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/issues/14037:9584,usability,clear,clear,9584," invalid next size (fast). ninja: build stopped: subcommand failed. ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D). - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification. Thanks! ### Reproducer. ```. mkdir root_build;. git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src. cd root_build. cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16. ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14037
https://github.com/root-project/root/pull/14038:423,availability,cluster,cluster-size,423,"[ntuple] Add importer CLI; This PR adds a CLI to the `RNTupleImporter` utility. The executable is called `ttree2rntuple` (can be changed if there are suggestions for better names), usage is as follows (copied from `ttree2rntuple --help`):. ```. Usage:. ttree2rntuple (--ttree|-t) name. (--infile|-i) path. (--outfile|-o) path. [(--rntuple|-r) name]. [(--compression|-c) compression]. [--unzipped-page-size size]. [--zipped-cluster-size size]. [--max-unzipped-cluster-size size]. [--convert-dots]. [(--verbose|-v)]. ttree2rntuple [--help|-h]. ttree2rntuple: a utility CLI for converting ROOT TTrees to ROOT RNTuples. Required arguments:. --ttree, -t name. The name of the source TTree to convert to RNTuple. --infile, -i path. The path to the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not spe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:459,availability,cluster,cluster-size,459,"[ntuple] Add importer CLI; This PR adds a CLI to the `RNTupleImporter` utility. The executable is called `ttree2rntuple` (can be changed if there are suggestions for better names), usage is as follows (copied from `ttree2rntuple --help`):. ```. Usage:. ttree2rntuple (--ttree|-t) name. (--infile|-i) path. (--outfile|-o) path. [(--rntuple|-r) name]. [(--compression|-c) compression]. [--unzipped-page-size size]. [--zipped-cluster-size size]. [--max-unzipped-cluster-size size]. [--convert-dots]. [(--verbose|-v)]. ttree2rntuple [--help|-h]. ttree2rntuple: a utility CLI for converting ROOT TTrees to ROOT RNTuples. Required arguments:. --ttree, -t name. The name of the source TTree to convert to RNTuple. --infile, -i path. The path to the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not spe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:1893,availability,cluster,cluster-size,1893,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:1943,availability,cluster,cluster,1943,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2075,availability,cluster,cluster-size,2075,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2135,availability,cluster,cluster,2135,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2497,availability,error,error,2497,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:423,deployability,cluster,cluster-size,423,"[ntuple] Add importer CLI; This PR adds a CLI to the `RNTupleImporter` utility. The executable is called `ttree2rntuple` (can be changed if there are suggestions for better names), usage is as follows (copied from `ttree2rntuple --help`):. ```. Usage:. ttree2rntuple (--ttree|-t) name. (--infile|-i) path. (--outfile|-o) path. [(--rntuple|-r) name]. [(--compression|-c) compression]. [--unzipped-page-size size]. [--zipped-cluster-size size]. [--max-unzipped-cluster-size size]. [--convert-dots]. [(--verbose|-v)]. ttree2rntuple [--help|-h]. ttree2rntuple: a utility CLI for converting ROOT TTrees to ROOT RNTuples. Required arguments:. --ttree, -t name. The name of the source TTree to convert to RNTuple. --infile, -i path. The path to the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not spe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:459,deployability,cluster,cluster-size,459,"[ntuple] Add importer CLI; This PR adds a CLI to the `RNTupleImporter` utility. The executable is called `ttree2rntuple` (can be changed if there are suggestions for better names), usage is as follows (copied from `ttree2rntuple --help`):. ```. Usage:. ttree2rntuple (--ttree|-t) name. (--infile|-i) path. (--outfile|-o) path. [(--rntuple|-r) name]. [(--compression|-c) compression]. [--unzipped-page-size size]. [--zipped-cluster-size size]. [--max-unzipped-cluster-size size]. [--convert-dots]. [(--verbose|-v)]. ttree2rntuple [--help|-h]. ttree2rntuple: a utility CLI for converting ROOT TTrees to ROOT RNTuples. Required arguments:. --ttree, -t name. The name of the source TTree to convert to RNTuple. --infile, -i path. The path to the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not spe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:757,deployability,contain,contains,757,"[ntuple] Add importer CLI; This PR adds a CLI to the `RNTupleImporter` utility. The executable is called `ttree2rntuple` (can be changed if there are suggestions for better names), usage is as follows (copied from `ttree2rntuple --help`):. ```. Usage:. ttree2rntuple (--ttree|-t) name. (--infile|-i) path. (--outfile|-o) path. [(--rntuple|-r) name]. [(--compression|-c) compression]. [--unzipped-page-size size]. [--zipped-cluster-size size]. [--max-unzipped-cluster-size size]. [--convert-dots]. [(--verbose|-v)]. ttree2rntuple [--help|-h]. ttree2rntuple: a utility CLI for converting ROOT TTrees to ROOT RNTuples. Required arguments:. --ttree, -t name. The name of the source TTree to convert to RNTuple. --infile, -i path. The path to the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not spe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:1893,deployability,cluster,cluster-size,1893,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:1943,deployability,cluster,cluster,1943,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2075,deployability,cluster,cluster-size,2075,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2135,deployability,cluster,cluster,2135,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2590,integrability,schema,schema,2590,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:1099,interoperability,conflict,conflicts,1099," `ttree2rntuple` (can be changed if there are suggestions for better names), usage is as follows (copied from `ttree2rntuple --help`):. ```. Usage:. ttree2rntuple (--ttree|-t) name. (--infile|-i) path. (--outfile|-o) path. [(--rntuple|-r) name]. [(--compression|-c) compression]. [--unzipped-page-size size]. [--zipped-cluster-size size]. [--max-unzipped-cluster-size size]. [--convert-dots]. [(--verbose|-v)]. ttree2rntuple [--help|-h]. ttree2rntuple: a utility CLI for converting ROOT TTrees to ROOT RNTuples. Required arguments:. --ttree, -t name. The name of the source TTree to convert to RNTuple. --infile, -i path. The path to the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desire",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:1650,interoperability,specif,specified,1650,"The name of the source TTree to convert to RNTuple. --infile, -i path. The path to the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:1828,interoperability,specif,specified,1828,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:1997,interoperability,specif,specified,1997,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2189,interoperability,specif,specified,2189,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2457,interoperability,specif,specified,2457,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2471,interoperability,convers,conversion,2471,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2630,interoperability,specif,specified,2630,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:1769,performance,memor,memory,1769,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2127,performance,memor,memory,2127,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2497,performance,error,error,2497,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:872,reliability,doe,does,872,"[ntuple] Add importer CLI; This PR adds a CLI to the `RNTupleImporter` utility. The executable is called `ttree2rntuple` (can be changed if there are suggestions for better names), usage is as follows (copied from `ttree2rntuple --help`):. ```. Usage:. ttree2rntuple (--ttree|-t) name. (--infile|-i) path. (--outfile|-o) path. [(--rntuple|-r) name]. [(--compression|-c) compression]. [--unzipped-page-size size]. [--zipped-cluster-size size]. [--max-unzipped-cluster-size size]. [--convert-dots]. [(--verbose|-v)]. ttree2rntuple [--help|-h]. ttree2rntuple: a utility CLI for converting ROOT TTrees to ROOT RNTuples. Required arguments:. --ttree, -t name. The name of the source TTree to convert to RNTuple. --infile, -i path. The path to the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not spe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2361,reliability,doe,does,2361,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:933,safety,input,input,933,"[ntuple] Add importer CLI; This PR adds a CLI to the `RNTupleImporter` utility. The executable is called `ttree2rntuple` (can be changed if there are suggestions for better names), usage is as follows (copied from `ttree2rntuple --help`):. ```. Usage:. ttree2rntuple (--ttree|-t) name. (--infile|-i) path. (--outfile|-o) path. [(--rntuple|-r) name]. [(--compression|-c) compression]. [--unzipped-page-size size]. [--zipped-cluster-size size]. [--max-unzipped-cluster-size size]. [--convert-dots]. [(--verbose|-v)]. ttree2rntuple [--help|-h]. ttree2rntuple: a utility CLI for converting ROOT TTrees to ROOT RNTuples. Required arguments:. --ttree, -t name. The name of the source TTree to convert to RNTuple. --infile, -i path. The path to the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not spe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:1086,safety,avoid,avoid,1086,"table is called `ttree2rntuple` (can be changed if there are suggestions for better names), usage is as follows (copied from `ttree2rntuple --help`):. ```. Usage:. ttree2rntuple (--ttree|-t) name. (--infile|-i) path. (--outfile|-o) path. [(--rntuple|-r) name]. [(--compression|-c) compression]. [--unzipped-page-size size]. [--zipped-cluster-size size]. [--max-unzipped-cluster-size size]. [--convert-dots]. [(--verbose|-v)]. ttree2rntuple [--help|-h]. ttree2rntuple: a utility CLI for converting ROOT TTrees to ROOT RNTuples. Required arguments:. --ttree, -t name. The name of the source TTree to convert to RNTuple. --infile, -i path. The path to the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2497,safety,error,error,2497,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2665,safety,except,except,2665,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:231,usability,help,help,231,"[ntuple] Add importer CLI; This PR adds a CLI to the `RNTupleImporter` utility. The executable is called `ttree2rntuple` (can be changed if there are suggestions for better names), usage is as follows (copied from `ttree2rntuple --help`):. ```. Usage:. ttree2rntuple (--ttree|-t) name. (--infile|-i) path. (--outfile|-o) path. [(--rntuple|-r) name]. [(--compression|-c) compression]. [--unzipped-page-size size]. [--zipped-cluster-size size]. [--max-unzipped-cluster-size size]. [--convert-dots]. [(--verbose|-v)]. ttree2rntuple [--help|-h]. ttree2rntuple: a utility CLI for converting ROOT TTrees to ROOT RNTuples. Required arguments:. --ttree, -t name. The name of the source TTree to convert to RNTuple. --infile, -i path. The path to the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not spe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:532,usability,help,help,532,"[ntuple] Add importer CLI; This PR adds a CLI to the `RNTupleImporter` utility. The executable is called `ttree2rntuple` (can be changed if there are suggestions for better names), usage is as follows (copied from `ttree2rntuple --help`):. ```. Usage:. ttree2rntuple (--ttree|-t) name. (--infile|-i) path. (--outfile|-o) path. [(--rntuple|-r) name]. [(--compression|-c) compression]. [--unzipped-page-size size]. [--zipped-cluster-size size]. [--max-unzipped-cluster-size size]. [--convert-dots]. [(--verbose|-v)]. ttree2rntuple [--help|-h]. ttree2rntuple: a utility CLI for converting ROOT TTrees to ROOT RNTuples. Required arguments:. --ttree, -t name. The name of the source TTree to convert to RNTuple. --infile, -i path. The path to the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not spe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:933,usability,input,input,933,"[ntuple] Add importer CLI; This PR adds a CLI to the `RNTupleImporter` utility. The executable is called `ttree2rntuple` (can be changed if there are suggestions for better names), usage is as follows (copied from `ttree2rntuple --help`):. ```. Usage:. ttree2rntuple (--ttree|-t) name. (--infile|-i) path. (--outfile|-o) path. [(--rntuple|-r) name]. [(--compression|-c) compression]. [--unzipped-page-size size]. [--zipped-cluster-size size]. [--max-unzipped-cluster-size size]. [--convert-dots]. [(--verbose|-v)]. ttree2rntuple [--help|-h]. ttree2rntuple: a utility CLI for converting ROOT TTrees to ROOT RNTuples. Required arguments:. --ttree, -t name. The name of the source TTree to convert to RNTuple. --infile, -i path. The path to the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not spe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:1615,usability,indicat,indicating,1615,"ired arguments:. --ttree, -t name. The name of the source TTree to convert to RNTuple. --infile, -i path. The path to the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progres",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:1769,usability,memor,memory,1769,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2127,usability,memor,memory,2127,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2497,usability,error,error,2497,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14038:2613,usability,progress,progress,2613,"the ROOT file that contains the source TTree. --outfile, -o path. The path to the ROOT file to write the target RNTuple to. This file does not have to exist yet. This may be the same file as the input file. Note that in this case the name of the target RNTuple should. be set to something different from the source TTree name using `--rntuple`, to avoid naming conflicts. Optional arguments:. --rntuple, -r name. The name of the target RNTuple. This argument is optional. When not provided, the name of the source TTree will be used. --compression, -c compression. The compression settings of the target RNTuple, provided as an integer. This argument should be provided following ROOT's compression setting scheme (algorithm * 100 + level),. where `algorithm` uses the following mapping: {1: ZLIB, 2: LZMA, 4: LZMA, 5: ZSTD} . and `level` is a number from 0 to 9 (inclusive, 0 indicating no compression). If not specified, the default zstd (505) compression is used. --unzipped-page-size size. The desired approximate unzipped (in-memory) page size in bytes, provided as an integer. If not specified, the default size of 64 * 1024 bytes is used. --zipped-cluster-size size. The desired approximate zipped cluster size in bytes, provided as an integer. If not specified, the default size of 50 * 1000 * 1000 bytes is used. --max-unzipped-cluster-size size. The desired maximum unzipped (in-memory) cluster size in bytes, provided as an integer. If not specified, the default size of 512 * 1024 * 1024 bytes is used. --convert-dots. Whether to convert dots in branch names (if present) to underscores in field names. RNTuple does not allow for dots in field names, so this option will convert them to underscores. If not specified, no conversion happens and an error is thrown when branch names with dots are encountered. --verbose, -v. Whether to print schema information and progress. If not specified, nothing will be printed except for a brief report about the source TTree and target RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14038
https://github.com/root-project/root/pull/14039:1327,availability,error,error,1327," as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compres",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1476,availability,error,error,1476,"rees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1664,availability,avail,available,1664,"|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4198,availability,degrad,degrade,4198,"th a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5611,availability,echo,echo,5611,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:107,deployability,contain,contains,107,"[NFC][readspeed] Improve usage text formatting; The `readspeed` usage text (when running `-h` or `--help`) contains some spurious whitespace and other minor formatting quirks. This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1629,deployability,automat,automatically,1629,"er ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of by",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1995,deployability,configurat,configurations,1995,"cified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3011,deployability,log,logic,3011,"does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6047,deployability,log,logic,6047,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6305,deployability,observ,observed,6305,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1137,energy efficiency,Current,Currently,1137,"nd other minor formatting quirks. This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throug",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3102,energy efficiency,optim,optimize,3102,"this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3223,energy efficiency,CPU,CPU,3223,". Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3277,energy efficiency,optim,optimize,3277,"pressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storag",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3464,energy efficiency,CPU,CPU,3464,"ly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3518,energy efficiency,CPU,CPU,3518,"ber of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy appl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3585,energy efficiency,CPU,CPU,3585,"hroughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3598,energy efficiency,core,core,3598,"calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3660,energy efficiency,CPU,CPU,3660," (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is simi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3664,energy efficiency,core,cores,3664,"luding decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4421,energy efficiency,CPU,CPU,4421,"itch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4631,energy efficiency,CPU,CPU,4631," is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4670,energy efficiency,CPU,CPU,4670,"e wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specif",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4804,energy efficiency,CPU,CPU,4804,"se your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known ove",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5010,energy efficiency,CPU,CPU,5010,"ion algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6491,energy efficiency,reduc,reduced,6491,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1995,integrability,configur,configurations,1995,"cified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6067,integrability,interfac,interfaces,6067,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6453,integrability,event,event,6453,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:36,interoperability,format,formatting,36,"[NFC][readspeed] Improve usage text formatting; The `readspeed` usage text (when running `-h` or `--help`) contains some spurious whitespace and other minor formatting quirks. This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:157,interoperability,format,formatting,157,"[NFC][readspeed] Improve usage text formatting; The `readspeed` usage text (when running `-h` or `--help`) contains some spurious whitespace and other minor formatting quirks. This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:745,interoperability,Specif,Specifying,745,"[NFC][readspeed] Improve usage text formatting; The `readspeed` usage text (when running `-h` or `--help`) contains some spurious whitespace and other minor formatting quirks. This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:999,interoperability,specif,specified,999,"][readspeed] Improve usage text formatting; The `readspeed` usage text (when running `-h` or `--help`) contains some spurious whitespace and other minor formatting quirks. This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configura",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1055,interoperability,Specif,Specifying,1055,"ed` usage text (when running `-h` or `--help`) contains some spurious whitespace and other minor formatting quirks. This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1093,interoperability,specif,specified,1093,"--help`) contains some spurious whitespace and other minor formatting quirks. This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1223,interoperability,specif,specified,1223,"ce of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2334,interoperability,format,format,2334,"ny of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4475,interoperability,share,shared,4475,"eal Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the fil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5666,interoperability,specif,specific,5666,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5899,interoperability,specif,specified,5899,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6067,interoperability,interfac,interfaces,6067,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1995,modifiability,configur,configurations,1995,"cified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2674,modifiability,deco,decompression,2674," on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2784,modifiability,scenario,scenarios,2784,"g multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3769,modifiability,deco,decompress,3769," possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4087,modifiability,deco,decompression,4087,"d be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm wi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4823,modifiability,deco,decompressing,4823," transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4896,modifiability,deco,decompression,4896,"er disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the spec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5106,modifiability,deco,decompression,5106,"ng the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTree",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5390,modifiability,concern,concern,5390,"the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6067,modifiability,interfac,interfaces,6067,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1173,performance,time,time,1173," This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1327,performance,error,error,1327," as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compres",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1476,performance,error,error,1476,"rees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1867,performance,bottleneck,bottlenecks,1867,"st of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1934,performance,throughput,throughput,1934," then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual applica",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2136,performance,throughput,throughputs,2136,"ntly only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to paralleli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2214,performance,Throughput,Throughput,2214,"the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more perform",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2227,performance,Throughput,Throughput,2227," files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2586,performance,Throughput,Throughput,2586,"threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU ti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2688,performance,time,time,2688,"achine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time wai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2842,performance,Time,Time,2842," used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3047,performance,time,time,3047,"about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compressi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3102,performance,optimiz,optimize,3102,"this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3133,performance,parallel,parallelize,3133,"oughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3212,performance,perform,performant,3212,"oughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3223,performance,CPU,CPU,3223,". Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3277,performance,optimiz,optimize,3277,"pressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storag",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3318,performance,parallel,parallelize,3318,"ompressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was prov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3453,performance,perform,performant,3453," (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3464,performance,CPU,CPU,3464,"ly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3482,performance,Time,Time,3482,"data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared sy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3518,performance,CPU,CPU,3518,"ber of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy appl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3522,performance,Time,Time,3522,"of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applicat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3561,performance,time,time,3561,"h values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3585,performance,CPU,CPU,3585,"hroughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3589,performance,time,time,3589,"ghput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3641,performance,bottleneck,bottleneck,3641,"he total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3660,performance,CPU,CPU,3660," (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is simi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3682,performance,time,time,3682,"ion time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / num",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3724,performance,disk,disk,3724,"ed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3738,performance,network,network,3738,"reting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3906,performance,disk,disk,3906,"would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3959,performance,network,network,3959,"the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4206,performance,perform,performance,4206,"performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4421,performance,CPU,CPU,4421,"itch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4436,performance,parallel,parallel,4436," with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4577,performance,time,time,4577,"n the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4631,performance,CPU,CPU,4631," is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4649,performance,Time,Time,4649,", as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4670,performance,CPU,CPU,4670,"e wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specif",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4674,performance,Time,Time,4674,"sting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4716,performance,Throughput,Throughput,4716,"ur disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4804,performance,CPU,CPU,4804,"se your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known ove",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4917,performance,bottleneck,bottleneck,4917,"as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, tre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5010,performance,CPU,CPU,5010,"ion algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5194,performance,cach,caching,5194,"degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5238,performance,disk,disk,5238,"to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5259,performance,cach,cache,5259,"f your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5289,performance,memor,memory,5289,"no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5507,performance,cach,cache,5507,"heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significant",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5537,performance,cach,cache,5537,"r of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5704,performance,cach,cache,5704,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5803,performance,overhead,overhead,5803,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5987,performance,bottleneck,bottleneck,5987,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6025,performance,perform,performed,6025,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6174,performance,overhead,overhead,6174,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6340,performance,overhead,overhead,6340,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6474,performance,overhead,overhead,6474,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1504,reliability,doe,does,1504,"--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed by",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1664,reliability,availab,available,1664,"|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2014,reliability,doe,does,2014,"Tree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4198,reliability,degrad,degrade,4198,"th a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1327,safety,error,error,1327," as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compres",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1476,safety,error,error,1476,"rees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1664,safety,avail,available,1664,"|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2454,safety,test,test,2454,"rovided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more per",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3011,safety,log,logic,3011,"does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6047,safety,log,logic,6047,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1664,security,availab,available,1664,"|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1858,security,ident,identify,1858,"..]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significant",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1995,security,configur,configurations,1995,"cified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2851,security,sign,significantly,2851,"identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3011,security,log,logic,3011,"does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3491,security,sign,significantly,3491,"essed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if ru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3738,security,network,network,3738,"reting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3959,security,network,network,3959,"the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3983,security,access,access,3983,"lysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6047,security,log,logic,6047,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6154,security,sign,significant,6154,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6499,security,sign,significantly,6499,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1629,testability,automat,automatically,1629,"er ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of by",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:2454,testability,test,test,2454,"rovided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more per",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3011,testability,log,logic,3011,"does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5390,testability,concern,concern,5390,"the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6047,testability,log,logic,6047,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6305,testability,observ,observed,6305,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:100,usability,help,help,100,"[NFC][readspeed] Improve usage text formatting; The `readspeed` usage text (when running `-h` or `--help`) contains some spurious whitespace and other minor formatting quirks. This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:220,usability,experien,experience,220,"[NFC][readspeed] Improve usage text formatting; The `readspeed` usage text (when running `-h` or `--help`) contains some spurious whitespace and other minor formatting quirks. This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:277,usability,help,help,277,"[NFC][readspeed] Improve usage text formatting; The `readspeed` usage text (when running `-h` or `--help`) contains some spurious whitespace and other minor formatting quirks. This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:665,usability,help,help,665,"[NFC][readspeed] Improve usage text formatting; The `readspeed` usage text (when running `-h` or `--help`) contains some spurious whitespace and other minor formatting quirks. This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:694,usability,help,help,694,"[NFC][readspeed] Improve usage text formatting; The `readspeed` usage text (when running `-h` or `--help`) contains some spurious whitespace and other minor formatting quirks. This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:702,usability,help,help,702,"[NFC][readspeed] Improve usage text formatting; The `readspeed` usage text (when running `-h` or `--help`) contains some spurious whitespace and other minor formatting quirks. This PR aims to improve the overall reading experience of these texts. When running `rootreadspeed --help`, the output with the suggested changes would be as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1327,usability,error,error,1327," as follows (of course, the width of the terminal will determine where the lines break):. ```. Usage:. rootreadspeed --files fname1 [fname2 ...]. --trees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compres",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1476,usability,error,error,1476,"rees tname1 [tname2 ...]. (--all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]). [--threads nthreads]. [--tasks-per-worker ntasks]. rootreadspeed (--help|-h). . Use -h for usage help, --help for detailed information. Arguments:. Specifying files and trees:. --files fname1 [fname2...]. The list of ROOT files to read from. --trees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1840,usability,tool,tool,1840,"rees tname1 [tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:1853,usability,help,help,1853,"tname2...]. The list of TTrees to read from the files. If only one TTree is provided then it will be used for all files. If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:. Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches. Reads every branch from the specified files and TTrees. --branches bname1 [bname2...]. Reads the branches with matching names. Will error if any of the branches are not found. --branches-regex bregex1 [bregex2 ...]. Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:. --threads nthreads. The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine. --tasks-per-worker ntasks. The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is sign",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3212,usability,perform,performant,3212,"oughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:3453,usability,perform,performant,3453," (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime. This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4153,usability,help,help,4153,"ltiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4206,usability,perform,performance,4206,"performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:4360,usability,minim,minimum,4360,"le (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'. If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage. N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis wi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5289,usability,memor,memory,5289,"no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:5524,usability,clear,clearing,5524," - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14039:6025,usability,perform,performed,6025,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:. This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14039
https://github.com/root-project/root/pull/14040:65,deployability,log,logic,65,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:317,deployability,compos,composed,317,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:553,deployability,stack,stack,553,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:664,deployability,log,logic,664,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:768,deployability,updat,update,768,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:30,integrability,sub,sub-elements,30,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:75,integrability,sub,sub-elements,75,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:317,modifiability,compos,composed,317,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:65,safety,log,logic,65,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:664,safety,log,logic,664,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:768,safety,updat,update,768,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:65,security,log,logic,65,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:220,security,access,access,220,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:241,security,hash,hashed,241,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:444,security,access,access,444,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:664,security,log,logic,664,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:768,security,updat,update,768,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:65,testability,log,logic,65,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:664,testability,log,logic,664,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:697,testability,context,context,697,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14040:705,usability,menu,menus,705,"[webcanv] Improve handling of sub-elements in primitives; Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled. Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer). But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects . via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`. And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus. for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14040
https://github.com/root-project/root/pull/14041:611,availability,operat,operation,611,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:736,availability,redund,redundant-string-cstr,736,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:337,deployability,releas,release,337,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:700,deployability,contain,container-size-empty,700,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:736,deployability,redundan,redundant-string-cstr,736,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:846,deployability,releas,release,846,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:395,interoperability,share,shared,395,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:543,performance,perform,performance-inefficient-algorithm,543,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:580,performance,perform,performance-inefficient-vector-operation,580,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:624,performance,perform,performance-faster-string-find,624,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:658,performance,perform,performance-move-const-arg,658,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:736,reliability,redundan,redundant-string-cstr,736,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:736,safety,redund,redundant-string-cstr,736,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:543,usability,perform,performance-inefficient-algorithm,543,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:580,usability,perform,performance-inefficient-vector-operation,580,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:624,usability,perform,performance-faster-string-find,624,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14041:658,usability,perform,performance-move-const-arg,658,"[tree] Apply suggestions from clang-tidy; Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```. ,boost-use-to-string,. ,misc-definitions-in-headers,. ,misc-string-compare,. ,misc-uniqueptr-reset-release,. ,modernize-deprecated-headers,. ,modernize-make-shared,. ,modernize-make-unique,. ,modernize-use-bool-literals,. ,modernize-use-equals-delete,. ,modernize-use-nullptr,. ,modernize-use-override,. ,performance-inefficient-algorithm,. ,performance-inefficient-vector-operation,. ,performance-faster-string-find,. ,performance-move-const-arg,. ,readability-container-size-empty,. ,readability-redundant-string-cstr,. ,readability-static-definition-in-anonymous-namespace,. ,readability-uniqueptr-delete-release. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14041
https://github.com/root-project/root/pull/14042:176,deployability,scale,scale,176,Improve latex drawing for `#hat{f}`; Several letters like f are taller than normal x or a and not match to the remaining space. Therefore for such letters lift it higher. Also scale line width used to draw hat. For large letter it looked not very nice. Before:. ![c1](https://github.com/root-project/root/assets/4936580/f73036c6-1b10-4243-a22d-207101d40d1f). Now:. ![c2](https://github.com/root-project/root/assets/4936580/aa7a8fb7-1c0f-4378-9e4b-f2632cb5cd7d).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14042
https://github.com/root-project/root/pull/14042:14,energy efficiency,draw,drawing,14,Improve latex drawing for `#hat{f}`; Several letters like f are taller than normal x or a and not match to the remaining space. Therefore for such letters lift it higher. Also scale line width used to draw hat. For large letter it looked not very nice. Before:. ![c1](https://github.com/root-project/root/assets/4936580/f73036c6-1b10-4243-a22d-207101d40d1f). Now:. ![c2](https://github.com/root-project/root/assets/4936580/aa7a8fb7-1c0f-4378-9e4b-f2632cb5cd7d).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14042
https://github.com/root-project/root/pull/14042:176,energy efficiency,scale,scale,176,Improve latex drawing for `#hat{f}`; Several letters like f are taller than normal x or a and not match to the remaining space. Therefore for such letters lift it higher. Also scale line width used to draw hat. For large letter it looked not very nice. Before:. ![c1](https://github.com/root-project/root/assets/4936580/f73036c6-1b10-4243-a22d-207101d40d1f). Now:. ![c2](https://github.com/root-project/root/assets/4936580/aa7a8fb7-1c0f-4378-9e4b-f2632cb5cd7d).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14042
https://github.com/root-project/root/pull/14042:201,energy efficiency,draw,draw,201,Improve latex drawing for `#hat{f}`; Several letters like f are taller than normal x or a and not match to the remaining space. Therefore for such letters lift it higher. Also scale line width used to draw hat. For large letter it looked not very nice. Before:. ![c1](https://github.com/root-project/root/assets/4936580/f73036c6-1b10-4243-a22d-207101d40d1f). Now:. ![c2](https://github.com/root-project/root/assets/4936580/aa7a8fb7-1c0f-4378-9e4b-f2632cb5cd7d).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14042
https://github.com/root-project/root/pull/14042:176,modifiability,scal,scale,176,Improve latex drawing for `#hat{f}`; Several letters like f are taller than normal x or a and not match to the remaining space. Therefore for such letters lift it higher. Also scale line width used to draw hat. For large letter it looked not very nice. Before:. ![c1](https://github.com/root-project/root/assets/4936580/f73036c6-1b10-4243-a22d-207101d40d1f). Now:. ![c2](https://github.com/root-project/root/assets/4936580/aa7a8fb7-1c0f-4378-9e4b-f2632cb5cd7d).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14042
https://github.com/root-project/root/pull/14042:176,performance,scale,scale,176,Improve latex drawing for `#hat{f}`; Several letters like f are taller than normal x or a and not match to the remaining space. Therefore for such letters lift it higher. Also scale line width used to draw hat. For large letter it looked not very nice. Before:. ![c1](https://github.com/root-project/root/assets/4936580/f73036c6-1b10-4243-a22d-207101d40d1f). Now:. ![c2](https://github.com/root-project/root/assets/4936580/aa7a8fb7-1c0f-4378-9e4b-f2632cb5cd7d).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14042
https://github.com/root-project/root/pull/14043:18,deployability,depend,dependency,18,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:102,deployability,depend,depend,102,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:154,deployability,build,build,154,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:11,integrability,pub,public,11,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:18,integrability,depend,dependency,18,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:102,integrability,depend,depend,102,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:625,interoperability,standard,standard,625,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:18,modifiability,depend,dependency,18,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:102,modifiability,depend,depend,102,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:94,reliability,doe,doesn,94,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:663,reliability,doe,doesn,663,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:5,safety,Avoid,Avoid,5,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:18,safety,depend,dependency,18,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:102,safety,depend,depend,102,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:18,testability,depend,dependency,18,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14043:102,testability,depend,depend,102,"[DF] Avoid public dependency of RDataFrame on `nlohmann::json`; It's better if the RDataFrame doesn't depend on `nlohmann::json` for this reason:. If you build ROOT **without** the builtin nlohmannjson, it finds the json header with `find_package(nlohmann_json)`, which is fine. However, if the `nlohmann/json.hpp` header is not in the default include path, one is now forced to also do `find_package(nlohmann_json)` in every compiled project that uses RDataFrame! This happened to one of our students recently, which is why I got aware of the problem. On most Linux systems, this is not a problem because `json.hpp` is in a standard location, but for macOS this doesn't seem to be the case necessarily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14043
https://github.com/root-project/root/pull/14044:2117,availability,error,error,2117,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:2135,availability,slo,slot,2135,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:2237,availability,slo,slot,2237,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:97,deployability,build,building,97,"[DF] Avoid unused parameter warning in RDF ActionHelpers; This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt. In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,. from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,. from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:201,deployability,build,build,201,"[DF] Avoid unused parameter warning in RDF ActionHelpers; This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt. In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,. from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,. from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:287,deployability,build,build,287,"[DF] Avoid unused parameter warning in RDF ActionHelpers; This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt. In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,. from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,. from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:471,deployability,build,build,471,"[DF] Avoid unused parameter warning in RDF ActionHelpers; This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt. In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,. from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,. from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:588,deployability,Updat,UpdateCArraysPtrs,588,"[DF] Avoid unused parameter warning in RDF ActionHelpers; This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt. In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,. from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,. from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:825,deployability,build,build,825,"[DF] Avoid unused parameter warning in RDF ActionHelpers; This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt. In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,. from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,. from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:1039,deployability,build,build,1039," ActionHelpers; This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt. In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,. from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,. from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembser",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:1601,deployability,build,build,1601,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:1967,deployability,build,build,1967,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:2067,deployability,build,build,2067,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:2206,deployability,Updat,UpdateCArraysPtrs,2206,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:18,modifiability,paramet,parameter,18,"[DF] Avoid unused parameter warning in RDF ActionHelpers; This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt. In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,. from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,. from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:2124,modifiability,paramet,parameter,2124,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:2182,modifiability,paramet,parameter,2182,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:2117,performance,error,error,2117,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:2135,reliability,slo,slot,2135,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:2237,reliability,slo,slot,2237,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:5,safety,Avoid,Avoid,5,"[DF] Avoid unused parameter warning in RDF ActionHelpers; This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt. In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,. from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,. from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:63,safety,avoid,avoids,63,"[DF] Avoid unused parameter warning in RDF ActionHelpers; This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt. In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,. from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,. from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:588,safety,Updat,UpdateCArraysPtrs,588,"[DF] Avoid unused parameter warning in RDF ActionHelpers; This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt. In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,. from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,. from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:2117,safety,error,error,2117,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:2206,safety,Updat,UpdateCArraysPtrs,2206,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:588,security,Updat,UpdateCArraysPtrs,588,"[DF] Avoid unused parameter warning in RDF ActionHelpers; This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt. In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,. from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,. from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:2206,security,Updat,UpdateCArraysPtrs,2206,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:1131,usability,Help,Helper,1131,"``txt. In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,. from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,. from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:1321,usability,Help,Helper,1321,". from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:1693,usability,Help,Helper,1693,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:1761,usability,Help,Helper,1761,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14044:2117,usability,error,error,2117,"Benchmarks.cxx:1:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here. /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]. 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/). ```. I'm sure similar warnings also pop up in other places, but I just. happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14044
https://github.com/root-project/root/pull/14045:140,availability,sla,slash,140,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:852,availability,sla,slash,852,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:364,deployability,scale,scaled,364,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:295,energy efficiency,draw,draw,295,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:364,energy efficiency,scale,scaled,364,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:546,energy efficiency,draw,drawing,546,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:791,energy efficiency,Draw,DrawLatex,791,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:182,integrability,configur,configured,182,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:64,modifiability,scal,scalable,64,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:182,modifiability,configur,configured,182,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:364,modifiability,scal,scaled,364,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:455,modifiability,scal,scaling,455,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:64,performance,scalab,scalable,64,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:364,performance,scale,scaled,364,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:140,reliability,sla,slash,140,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:852,reliability,sla,slash,852,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:655,safety,test,testing,655,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:718,safety,test,test,718,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:38,security,ddo,ddot,38,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:182,security,configur,configured,182,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:313,security,ddo,ddot,313,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:826,security,ddo,ddot,826,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:655,testability,test,testing,655,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14045:718,testability,test,test,718,"Improve TLatex 'above' symbols like `#ddot` or `#grave`; 1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before. 2. Fix position of `#grave` and `#acute` symbols. 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up. 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:. ```. void latex() {. TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);. TLatex l;. l.SetTextAlign(12);. l.SetTextSize(0.8);. l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");. }. ```. Here is old output:. ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:. ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:. ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3). ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14045
https://github.com/root-project/root/pull/14047:48,deployability,patch,patches,48,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 6; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021. - https://github.com/root-project/root/pull/14043. - https://github.com/root-project/root/pull/14044. - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2). - https://github.com/root-project/root/pull/14026. - https://github.com/root-project/root/pull/13863. - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13940.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14047
https://github.com/root-project/root/pull/14047:152,deployability,patch,patches,152,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 6; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021. - https://github.com/root-project/root/pull/14043. - https://github.com/root-project/root/pull/14044. - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2). - https://github.com/root-project/root/pull/14026. - https://github.com/root-project/root/pull/13863. - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13940.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14047
https://github.com/root-project/root/pull/14047:371,deployability,depend,dependency,371,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 6; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021. - https://github.com/root-project/root/pull/14043. - https://github.com/root-project/root/pull/14044. - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2). - https://github.com/root-project/root/pull/14026. - https://github.com/root-project/root/pull/13863. - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13940.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14047
https://github.com/root-project/root/pull/14047:371,integrability,depend,dependency,371,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 6; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021. - https://github.com/root-project/root/pull/14043. - https://github.com/root-project/root/pull/14044. - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2). - https://github.com/root-project/root/pull/14026. - https://github.com/root-project/root/pull/13863. - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13940.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14047
https://github.com/root-project/root/pull/14047:371,modifiability,depend,dependency,371,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 6; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021. - https://github.com/root-project/root/pull/14043. - https://github.com/root-project/root/pull/14044. - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2). - https://github.com/root-project/root/pull/14026. - https://github.com/root-project/root/pull/13863. - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13940.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14047
https://github.com/root-project/root/pull/14047:48,safety,patch,patches,48,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 6; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021. - https://github.com/root-project/root/pull/14043. - https://github.com/root-project/root/pull/14044. - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2). - https://github.com/root-project/root/pull/14026. - https://github.com/root-project/root/pull/13863. - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13940.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14047
https://github.com/root-project/root/pull/14047:152,safety,patch,patches,152,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 6; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021. - https://github.com/root-project/root/pull/14043. - https://github.com/root-project/root/pull/14044. - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2). - https://github.com/root-project/root/pull/14026. - https://github.com/root-project/root/pull/13863. - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13940.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14047
https://github.com/root-project/root/pull/14047:371,safety,depend,dependency,371,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 6; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021. - https://github.com/root-project/root/pull/14043. - https://github.com/root-project/root/pull/14044. - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2). - https://github.com/root-project/root/pull/14026. - https://github.com/root-project/root/pull/13863. - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13940.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14047
https://github.com/root-project/root/pull/14047:48,security,patch,patches,48,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 6; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021. - https://github.com/root-project/root/pull/14043. - https://github.com/root-project/root/pull/14044. - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2). - https://github.com/root-project/root/pull/14026. - https://github.com/root-project/root/pull/13863. - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13940.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14047
https://github.com/root-project/root/pull/14047:152,security,patch,patches,152,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 6; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021. - https://github.com/root-project/root/pull/14043. - https://github.com/root-project/root/pull/14044. - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2). - https://github.com/root-project/root/pull/14026. - https://github.com/root-project/root/pull/13863. - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13940.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14047
https://github.com/root-project/root/pull/14047:371,testability,depend,dependency,371,[v630][RF] Backports of RooFit PRs to `v6-30-00-patches`: Part 6; This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021. - https://github.com/root-project/root/pull/14043. - https://github.com/root-project/root/pull/14044. - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2). - https://github.com/root-project/root/pull/14026. - https://github.com/root-project/root/pull/13863. - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:. https://github.com/root-project/root/pull/13940.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14047
