id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/9490:873,usability,behavi,behavior,873,"[RF] RooMCStudy does not save generated parameters; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:891,usability,clear,clear,891,"[RF] RooMCStudy does not save generated parameters; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:1176,usability,behavi,behavior,1176,"D [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:1321,usability,input,input,1321,"o add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). mcstudy = r.RooMCStudy(pdf, r.Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9491:499,deployability,instal,install,499,"TGraph SaveAs .csv; ### Is your feature request related to a problem? Please describe. When working with collaborators from other disciplines, it is always problematic to share results and raw data created in ROOT in formats other than PNG or PDF. ### Describe the solution you'd like. It would be really helpful if the TGraph and TGraphErrors classes had an option to `->SaveAs("".csv"")` so that the result can be immediately imported into Excel, gnuplot, Python or whatever, without the needing to install pyroot, etc. ### Describe alternatives you've considered. ```. void DumpGraph(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\t"" << gr->GetYaxis()->GetTitle() << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << y[i] << std::endl;. outfile.close();. }. void DumpGraphWithErrors(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. if(gr->ClassName()!=TString(""TGraphErrors"")) {. std::cout << gr->ClassName() << std::endl;. return;. }. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. double * const ex = gr->GetEX();. double * const ey = gr->GetEY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\tex\t"" << gr->GetYaxis()->GetTitle() << ""\tey"" << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << ex[i] << ""\t"" << y[i] << ""\t"" << ey[i] << std::endl;. outfile.close();. }. ```. ### Additional context. https://root-forum.cern.ch/t/how-to-convert-root-graphs-into-dat-format/32184/8. https://root-forum.cern.ch/t/how-to-convert-root-to-txt-file/30534/4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9491
https://github.com/root-project/root/issues/9491:171,interoperability,share,share,171,"TGraph SaveAs .csv; ### Is your feature request related to a problem? Please describe. When working with collaborators from other disciplines, it is always problematic to share results and raw data created in ROOT in formats other than PNG or PDF. ### Describe the solution you'd like. It would be really helpful if the TGraph and TGraphErrors classes had an option to `->SaveAs("".csv"")` so that the result can be immediately imported into Excel, gnuplot, Python or whatever, without the needing to install pyroot, etc. ### Describe alternatives you've considered. ```. void DumpGraph(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\t"" << gr->GetYaxis()->GetTitle() << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << y[i] << std::endl;. outfile.close();. }. void DumpGraphWithErrors(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. if(gr->ClassName()!=TString(""TGraphErrors"")) {. std::cout << gr->ClassName() << std::endl;. return;. }. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. double * const ex = gr->GetEX();. double * const ey = gr->GetEY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\tex\t"" << gr->GetYaxis()->GetTitle() << ""\tey"" << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << ex[i] << ""\t"" << y[i] << ""\t"" << ey[i] << std::endl;. outfile.close();. }. ```. ### Additional context. https://root-forum.cern.ch/t/how-to-convert-root-graphs-into-dat-format/32184/8. https://root-forum.cern.ch/t/how-to-convert-root-to-txt-file/30534/4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9491
https://github.com/root-project/root/issues/9491:217,interoperability,format,formats,217,"TGraph SaveAs .csv; ### Is your feature request related to a problem? Please describe. When working with collaborators from other disciplines, it is always problematic to share results and raw data created in ROOT in formats other than PNG or PDF. ### Describe the solution you'd like. It would be really helpful if the TGraph and TGraphErrors classes had an option to `->SaveAs("".csv"")` so that the result can be immediately imported into Excel, gnuplot, Python or whatever, without the needing to install pyroot, etc. ### Describe alternatives you've considered. ```. void DumpGraph(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\t"" << gr->GetYaxis()->GetTitle() << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << y[i] << std::endl;. outfile.close();. }. void DumpGraphWithErrors(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. if(gr->ClassName()!=TString(""TGraphErrors"")) {. std::cout << gr->ClassName() << std::endl;. return;. }. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. double * const ex = gr->GetEX();. double * const ey = gr->GetEY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\tex\t"" << gr->GetYaxis()->GetTitle() << ""\tey"" << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << ex[i] << ""\t"" << y[i] << ""\t"" << ey[i] << std::endl;. outfile.close();. }. ```. ### Additional context. https://root-forum.cern.ch/t/how-to-convert-root-graphs-into-dat-format/32184/8. https://root-forum.cern.ch/t/how-to-convert-root-to-txt-file/30534/4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9491
https://github.com/root-project/root/issues/9491:1822,interoperability,format,format,1822,"TGraph SaveAs .csv; ### Is your feature request related to a problem? Please describe. When working with collaborators from other disciplines, it is always problematic to share results and raw data created in ROOT in formats other than PNG or PDF. ### Describe the solution you'd like. It would be really helpful if the TGraph and TGraphErrors classes had an option to `->SaveAs("".csv"")` so that the result can be immediately imported into Excel, gnuplot, Python or whatever, without the needing to install pyroot, etc. ### Describe alternatives you've considered. ```. void DumpGraph(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\t"" << gr->GetYaxis()->GetTitle() << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << y[i] << std::endl;. outfile.close();. }. void DumpGraphWithErrors(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. if(gr->ClassName()!=TString(""TGraphErrors"")) {. std::cout << gr->ClassName() << std::endl;. return;. }. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. double * const ex = gr->GetEX();. double * const ey = gr->GetEY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\tex\t"" << gr->GetYaxis()->GetTitle() << ""\tey"" << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << ex[i] << ""\t"" << y[i] << ""\t"" << ey[i] << std::endl;. outfile.close();. }. ```. ### Additional context. https://root-forum.cern.ch/t/how-to-convert-root-graphs-into-dat-format/32184/8. https://root-forum.cern.ch/t/how-to-convert-root-to-txt-file/30534/4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9491
https://github.com/root-project/root/issues/9491:1748,testability,context,context,1748,"TGraph SaveAs .csv; ### Is your feature request related to a problem? Please describe. When working with collaborators from other disciplines, it is always problematic to share results and raw data created in ROOT in formats other than PNG or PDF. ### Describe the solution you'd like. It would be really helpful if the TGraph and TGraphErrors classes had an option to `->SaveAs("".csv"")` so that the result can be immediately imported into Excel, gnuplot, Python or whatever, without the needing to install pyroot, etc. ### Describe alternatives you've considered. ```. void DumpGraph(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\t"" << gr->GetYaxis()->GetTitle() << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << y[i] << std::endl;. outfile.close();. }. void DumpGraphWithErrors(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. if(gr->ClassName()!=TString(""TGraphErrors"")) {. std::cout << gr->ClassName() << std::endl;. return;. }. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. double * const ex = gr->GetEX();. double * const ey = gr->GetEY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\tex\t"" << gr->GetYaxis()->GetTitle() << ""\tey"" << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << ex[i] << ""\t"" << y[i] << ""\t"" << ey[i] << std::endl;. outfile.close();. }. ```. ### Additional context. https://root-forum.cern.ch/t/how-to-convert-root-graphs-into-dat-format/32184/8. https://root-forum.cern.ch/t/how-to-convert-root-to-txt-file/30534/4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9491
https://github.com/root-project/root/issues/9491:305,usability,help,helpful,305,"TGraph SaveAs .csv; ### Is your feature request related to a problem? Please describe. When working with collaborators from other disciplines, it is always problematic to share results and raw data created in ROOT in formats other than PNG or PDF. ### Describe the solution you'd like. It would be really helpful if the TGraph and TGraphErrors classes had an option to `->SaveAs("".csv"")` so that the result can be immediately imported into Excel, gnuplot, Python or whatever, without the needing to install pyroot, etc. ### Describe alternatives you've considered. ```. void DumpGraph(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\t"" << gr->GetYaxis()->GetTitle() << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << y[i] << std::endl;. outfile.close();. }. void DumpGraphWithErrors(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. if(gr->ClassName()!=TString(""TGraphErrors"")) {. std::cout << gr->ClassName() << std::endl;. return;. }. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. double * const ex = gr->GetEX();. double * const ey = gr->GetEY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\tex\t"" << gr->GetYaxis()->GetTitle() << ""\tey"" << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << ex[i] << ""\t"" << y[i] << ""\t"" << ey[i] << std::endl;. outfile.close();. }. ```. ### Additional context. https://root-forum.cern.ch/t/how-to-convert-root-graphs-into-dat-format/32184/8. https://root-forum.cern.ch/t/how-to-convert-root-to-txt-file/30534/4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9491
https://github.com/root-project/root/issues/9491:1021,usability,close,close,1021,"TGraph SaveAs .csv; ### Is your feature request related to a problem? Please describe. When working with collaborators from other disciplines, it is always problematic to share results and raw data created in ROOT in formats other than PNG or PDF. ### Describe the solution you'd like. It would be really helpful if the TGraph and TGraphErrors classes had an option to `->SaveAs("".csv"")` so that the result can be immediately imported into Excel, gnuplot, Python or whatever, without the needing to install pyroot, etc. ### Describe alternatives you've considered. ```. void DumpGraph(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\t"" << gr->GetYaxis()->GetTitle() << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << y[i] << std::endl;. outfile.close();. }. void DumpGraphWithErrors(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. if(gr->ClassName()!=TString(""TGraphErrors"")) {. std::cout << gr->ClassName() << std::endl;. return;. }. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. double * const ex = gr->GetEX();. double * const ey = gr->GetEY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\tex\t"" << gr->GetYaxis()->GetTitle() << ""\tey"" << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << ex[i] << ""\t"" << y[i] << ""\t"" << ey[i] << std::endl;. outfile.close();. }. ```. ### Additional context. https://root-forum.cern.ch/t/how-to-convert-root-graphs-into-dat-format/32184/8. https://root-forum.cern.ch/t/how-to-convert-root-to-txt-file/30534/4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9491
https://github.com/root-project/root/issues/9491:1715,usability,close,close,1715,"TGraph SaveAs .csv; ### Is your feature request related to a problem? Please describe. When working with collaborators from other disciplines, it is always problematic to share results and raw data created in ROOT in formats other than PNG or PDF. ### Describe the solution you'd like. It would be really helpful if the TGraph and TGraphErrors classes had an option to `->SaveAs("".csv"")` so that the result can be immediately imported into Excel, gnuplot, Python or whatever, without the needing to install pyroot, etc. ### Describe alternatives you've considered. ```. void DumpGraph(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\t"" << gr->GetYaxis()->GetTitle() << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << y[i] << std::endl;. outfile.close();. }. void DumpGraphWithErrors(TGraph* gr, const std::string outName, const bool title). {. std::cout << ""Info: Creating "" << outName << std::endl;. if(gr->ClassName()!=TString(""TGraphErrors"")) {. std::cout << gr->ClassName() << std::endl;. return;. }. std::ofstream outfile(outName);. const Int_t N = gr->GetN();. double * const x = gr->GetX();. double * const y = gr->GetY();. double * const ex = gr->GetEX();. double * const ey = gr->GetEY();. if(title) outfile << ""# "" << gr->GetXaxis()->GetTitle() << ""\tex\t"" << gr->GetYaxis()->GetTitle() << ""\tey"" << std::endl;. for(Int_t i=0 ; i<N ; ++i). outfile << x[i] << ""\t"" << ex[i] << ""\t"" << y[i] << ""\t"" << ey[i] << std::endl;. outfile.close();. }. ```. ### Additional context. https://root-forum.cern.ch/t/how-to-convert-root-graphs-into-dat-format/32184/8. https://root-forum.cern.ch/t/how-to-convert-root-to-txt-file/30534/4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9491
https://github.com/root-project/root/pull/9492:23,availability,error,error,23,Eve-7: Improvements in error handling; * Add additional check on:. - empty collections. - empty calorimeters. . * Put client's scene change updates in try/catch block to improve stability of code when navigating events . * Make proxy builder functions more descriptive. . .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9492
https://github.com/root-project/root/pull/9492:140,deployability,updat,updates,140,Eve-7: Improvements in error handling; * Add additional check on:. - empty collections. - empty calorimeters. . * Put client's scene change updates in try/catch block to improve stability of code when navigating events . * Make proxy builder functions more descriptive. . .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9492
https://github.com/root-project/root/pull/9492:234,deployability,build,builder,234,Eve-7: Improvements in error handling; * Add additional check on:. - empty collections. - empty calorimeters. . * Put client's scene change updates in try/catch block to improve stability of code when navigating events . * Make proxy builder functions more descriptive. . .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9492
https://github.com/root-project/root/pull/9492:212,integrability,event,events,212,Eve-7: Improvements in error handling; * Add additional check on:. - empty collections. - empty calorimeters. . * Put client's scene change updates in try/catch block to improve stability of code when navigating events . * Make proxy builder functions more descriptive. . .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9492
https://github.com/root-project/root/pull/9492:228,interoperability,prox,proxy,228,Eve-7: Improvements in error handling; * Add additional check on:. - empty collections. - empty calorimeters. . * Put client's scene change updates in try/catch block to improve stability of code when navigating events . * Make proxy builder functions more descriptive. . .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9492
https://github.com/root-project/root/pull/9492:23,performance,error,error,23,Eve-7: Improvements in error handling; * Add additional check on:. - empty collections. - empty calorimeters. . * Put client's scene change updates in try/catch block to improve stability of code when navigating events . * Make proxy builder functions more descriptive. . .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9492
https://github.com/root-project/root/pull/9492:178,reliability,stabil,stability,178,Eve-7: Improvements in error handling; * Add additional check on:. - empty collections. - empty calorimeters. . * Put client's scene change updates in try/catch block to improve stability of code when navigating events . * Make proxy builder functions more descriptive. . .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9492
https://github.com/root-project/root/pull/9492:23,safety,error,error,23,Eve-7: Improvements in error handling; * Add additional check on:. - empty collections. - empty calorimeters. . * Put client's scene change updates in try/catch block to improve stability of code when navigating events . * Make proxy builder functions more descriptive. . .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9492
https://github.com/root-project/root/pull/9492:140,safety,updat,updates,140,Eve-7: Improvements in error handling; * Add additional check on:. - empty collections. - empty calorimeters. . * Put client's scene change updates in try/catch block to improve stability of code when navigating events . * Make proxy builder functions more descriptive. . .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9492
https://github.com/root-project/root/pull/9492:140,security,updat,updates,140,Eve-7: Improvements in error handling; * Add additional check on:. - empty collections. - empty calorimeters. . * Put client's scene change updates in try/catch block to improve stability of code when navigating events . * Make proxy builder functions more descriptive. . .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9492
https://github.com/root-project/root/pull/9492:23,usability,error,error,23,Eve-7: Improvements in error handling; * Add additional check on:. - empty collections. - empty calorimeters. . * Put client's scene change updates in try/catch block to improve stability of code when navigating events . * Make proxy builder functions more descriptive. . .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9492
https://github.com/root-project/root/pull/9492:201,usability,navigat,navigating,201,Eve-7: Improvements in error handling; * Add additional check on:. - empty collections. - empty calorimeters. . * Put client's scene change updates in try/catch block to improve stability of code when navigating events . * Make proxy builder functions more descriptive. . .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9492
https://github.com/root-project/root/pull/9494:218,deployability,updat,updated,218,documentation typo; # This Pull request:. Fix for a trivial documentation typo. ## Changes or fixes:. This fixes a typo in the documentation of `TFitResultPtr` class. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9494
https://github.com/root-project/root/pull/9494:188,safety,test,tested,188,documentation typo; # This Pull request:. Fix for a trivial documentation typo. ## Changes or fixes:. This fixes a typo in the documentation of `TFitResultPtr` class. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9494
https://github.com/root-project/root/pull/9494:218,safety,updat,updated,218,documentation typo; # This Pull request:. Fix for a trivial documentation typo. ## Changes or fixes:. This fixes a typo in the documentation of `TFitResultPtr` class. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9494
https://github.com/root-project/root/pull/9494:218,security,updat,updated,218,documentation typo; # This Pull request:. Fix for a trivial documentation typo. ## Changes or fixes:. This fixes a typo in the documentation of `TFitResultPtr` class. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9494
https://github.com/root-project/root/pull/9494:188,testability,test,tested,188,documentation typo; # This Pull request:. Fix for a trivial documentation typo. ## Changes or fixes:. This fixes a typo in the documentation of `TFitResultPtr` class. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9494
https://github.com/root-project/root/pull/9494:0,usability,document,documentation,0,documentation typo; # This Pull request:. Fix for a trivial documentation typo. ## Changes or fixes:. This fixes a typo in the documentation of `TFitResultPtr` class. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9494
https://github.com/root-project/root/pull/9494:60,usability,document,documentation,60,documentation typo; # This Pull request:. Fix for a trivial documentation typo. ## Changes or fixes:. This fixes a typo in the documentation of `TFitResultPtr` class. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9494
https://github.com/root-project/root/pull/9494:127,usability,document,documentation,127,documentation typo; # This Pull request:. Fix for a trivial documentation typo. ## Changes or fixes:. This fixes a typo in the documentation of `TFitResultPtr` class. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9494
https://github.com/root-project/root/pull/9495:9,safety,test,test,9,[DF] Add test for Fill with object with arbitrary signature; This is the last piece missing to fix #9428.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9495
https://github.com/root-project/root/pull/9495:50,security,sign,signature,50,[DF] Add test for Fill with object with arbitrary signature; This is the last piece missing to fix #9428.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9495
https://github.com/root-project/root/pull/9495:9,testability,test,test,9,[DF] Add test for Fill with object with arbitrary signature; This is the last piece missing to fix #9428.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9495
https://github.com/root-project/root/pull/9496:405,availability,down,downstream,405,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1328,availability,error,error,1328,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:131,deployability,manag,managed,131,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:594,deployability,manag,management,594,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:657,deployability,manag,managing,657,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:666,deployability,log,logic,666,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:131,energy efficiency,manag,managed,131,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:594,energy efficiency,manag,management,594,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:657,energy efficiency,manag,managing,657,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1043,energy efficiency,adapt,adapt,1043,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1043,integrability,adapt,adapt,1043,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1334,integrability,messag,message,1334,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:18,interoperability,specif,specific,18,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1043,interoperability,adapt,adapt,1043,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1143,interoperability,incompatib,incompatible,1143,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1334,interoperability,messag,message,1334,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:693,modifiability,refact,refactor,693,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1043,modifiability,adapt,adapt,1043,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:693,performance,refactor,refactor,693,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1328,performance,error,error,1328,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:131,safety,manag,managed,131,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:594,safety,manag,management,594,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:657,safety,manag,managing,657,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:666,safety,log,logic,666,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:756,safety,input,input,756,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1065,safety,test,test,1065,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1328,safety,error,error,1328,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:298,security,access,accessible,298,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:666,security,log,logic,666,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1081,security,sign,signature,1081,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:666,testability,log,logic,666,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1065,testability,test,test,1065,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:756,usability,input,input,756,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1024,usability,help,helper,1024,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1167,usability,user,user,1167,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1322,usability,clear,clear,1322,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9496:1328,usability,error,error,1328,"[DF] Make Aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"". In particular, in this commit:. - move alias management from RLoopManager to RBookedColumns. - remove alias-managing logic from RLoopManager. - refactor several functions so they only take RBookedColumns as input. rather than a list of defined names plus a map of aliases. (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,. GetValidatedColumnNames, BookFilterJit, FindUsedColumns,. ParseRDFExpression). - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function. - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that. relied on this global definition of Aliases. We expect this to be an. exceedingly rare usecase, and if such code exists it will produce a. clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9496
https://github.com/root-project/root/pull/9498:235,deployability,updat,updated,235,GUI: removed erroneous delete from TGText::AsString(). Closes #7460.; (cherry picked from commit 29c5501983ff3945478014000de06a1fd6ef619a). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9498
https://github.com/root-project/root/pull/9498:205,safety,test,tested,205,GUI: removed erroneous delete from TGText::AsString(). Closes #7460.; (cherry picked from commit 29c5501983ff3945478014000de06a1fd6ef619a). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9498
https://github.com/root-project/root/pull/9498:235,safety,updat,updated,235,GUI: removed erroneous delete from TGText::AsString(). Closes #7460.; (cherry picked from commit 29c5501983ff3945478014000de06a1fd6ef619a). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9498
https://github.com/root-project/root/pull/9498:235,security,updat,updated,235,GUI: removed erroneous delete from TGText::AsString(). Closes #7460.; (cherry picked from commit 29c5501983ff3945478014000de06a1fd6ef619a). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9498
https://github.com/root-project/root/pull/9498:205,testability,test,tested,205,GUI: removed erroneous delete from TGText::AsString(). Closes #7460.; (cherry picked from commit 29c5501983ff3945478014000de06a1fd6ef619a). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9498
https://github.com/root-project/root/pull/9498:55,usability,Close,Closes,55,GUI: removed erroneous delete from TGText::AsString(). Closes #7460.; (cherry picked from commit 29c5501983ff3945478014000de06a1fd6ef619a). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9498
https://github.com/root-project/root/pull/9499:57,reliability,doe,does,57,[TMVA] Throw an exception when input file for using RBDT does not exist.; . This PR fixes #9316.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9499
https://github.com/root-project/root/pull/9499:16,safety,except,exception,16,[TMVA] Throw an exception when input file for using RBDT does not exist.; . This PR fixes #9316.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9499
https://github.com/root-project/root/pull/9499:31,safety,input,input,31,[TMVA] Throw an exception when input file for using RBDT does not exist.; . This PR fixes #9316.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9499
https://github.com/root-project/root/pull/9499:31,usability,input,input,31,[TMVA] Throw an exception when input file for using RBDT does not exist.; . This PR fixes #9316.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9499
https://github.com/root-project/root/pull/9500:69,energy efficiency,draw,drawn,69,Fix tprofile2polyRealistic.C tutorial [skip-ci]; Same TProfile2D was drawn twice,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9500
https://github.com/root-project/root/pull/9501:243,interoperability,share,shared,243,"[dictgen] On macOS, use argv[0] to detect genreflex:; _dyld_get_image_name() sporadically and only semi-reproducibly returns. ""rootcling"" when asked by the genreflex binary. Maybe because both binaries. are bitwise identical, and the image is shared - who knows. To prevent the rootcling argument parsing being active mistakenly for genreflex:. genreflex: Not enough positional command line arguments specified! Must specify at least 2 positional arguments: See: genreflex --help. make sure we get this right by not relying on _dyld_get_image_name() but on argv[0]. Call GetExePath() nonetheless, because we need it to set ROOTSYS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9501
https://github.com/root-project/root/pull/9501:401,interoperability,specif,specified,401,"[dictgen] On macOS, use argv[0] to detect genreflex:; _dyld_get_image_name() sporadically and only semi-reproducibly returns. ""rootcling"" when asked by the genreflex binary. Maybe because both binaries. are bitwise identical, and the image is shared - who knows. To prevent the rootcling argument parsing being active mistakenly for genreflex:. genreflex: Not enough positional command line arguments specified! Must specify at least 2 positional arguments: See: genreflex --help. make sure we get this right by not relying on _dyld_get_image_name() but on argv[0]. Call GetExePath() nonetheless, because we need it to set ROOTSYS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9501
https://github.com/root-project/root/pull/9501:417,interoperability,specif,specify,417,"[dictgen] On macOS, use argv[0] to detect genreflex:; _dyld_get_image_name() sporadically and only semi-reproducibly returns. ""rootcling"" when asked by the genreflex binary. Maybe because both binaries. are bitwise identical, and the image is shared - who knows. To prevent the rootcling argument parsing being active mistakenly for genreflex:. genreflex: Not enough positional command line arguments specified! Must specify at least 2 positional arguments: See: genreflex --help. make sure we get this right by not relying on _dyld_get_image_name() but on argv[0]. Call GetExePath() nonetheless, because we need it to set ROOTSYS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9501
https://github.com/root-project/root/pull/9501:35,safety,detect,detect,35,"[dictgen] On macOS, use argv[0] to detect genreflex:; _dyld_get_image_name() sporadically and only semi-reproducibly returns. ""rootcling"" when asked by the genreflex binary. Maybe because both binaries. are bitwise identical, and the image is shared - who knows. To prevent the rootcling argument parsing being active mistakenly for genreflex:. genreflex: Not enough positional command line arguments specified! Must specify at least 2 positional arguments: See: genreflex --help. make sure we get this right by not relying on _dyld_get_image_name() but on argv[0]. Call GetExePath() nonetheless, because we need it to set ROOTSYS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9501
https://github.com/root-project/root/pull/9501:266,safety,prevent,prevent,266,"[dictgen] On macOS, use argv[0] to detect genreflex:; _dyld_get_image_name() sporadically and only semi-reproducibly returns. ""rootcling"" when asked by the genreflex binary. Maybe because both binaries. are bitwise identical, and the image is shared - who knows. To prevent the rootcling argument parsing being active mistakenly for genreflex:. genreflex: Not enough positional command line arguments specified! Must specify at least 2 positional arguments: See: genreflex --help. make sure we get this right by not relying on _dyld_get_image_name() but on argv[0]. Call GetExePath() nonetheless, because we need it to set ROOTSYS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9501
https://github.com/root-project/root/pull/9501:35,security,detect,detect,35,"[dictgen] On macOS, use argv[0] to detect genreflex:; _dyld_get_image_name() sporadically and only semi-reproducibly returns. ""rootcling"" when asked by the genreflex binary. Maybe because both binaries. are bitwise identical, and the image is shared - who knows. To prevent the rootcling argument parsing being active mistakenly for genreflex:. genreflex: Not enough positional command line arguments specified! Must specify at least 2 positional arguments: See: genreflex --help. make sure we get this right by not relying on _dyld_get_image_name() but on argv[0]. Call GetExePath() nonetheless, because we need it to set ROOTSYS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9501
https://github.com/root-project/root/pull/9501:215,security,ident,identical,215,"[dictgen] On macOS, use argv[0] to detect genreflex:; _dyld_get_image_name() sporadically and only semi-reproducibly returns. ""rootcling"" when asked by the genreflex binary. Maybe because both binaries. are bitwise identical, and the image is shared - who knows. To prevent the rootcling argument parsing being active mistakenly for genreflex:. genreflex: Not enough positional command line arguments specified! Must specify at least 2 positional arguments: See: genreflex --help. make sure we get this right by not relying on _dyld_get_image_name() but on argv[0]. Call GetExePath() nonetheless, because we need it to set ROOTSYS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9501
https://github.com/root-project/root/pull/9501:266,security,preven,prevent,266,"[dictgen] On macOS, use argv[0] to detect genreflex:; _dyld_get_image_name() sporadically and only semi-reproducibly returns. ""rootcling"" when asked by the genreflex binary. Maybe because both binaries. are bitwise identical, and the image is shared - who knows. To prevent the rootcling argument parsing being active mistakenly for genreflex:. genreflex: Not enough positional command line arguments specified! Must specify at least 2 positional arguments: See: genreflex --help. make sure we get this right by not relying on _dyld_get_image_name() but on argv[0]. Call GetExePath() nonetheless, because we need it to set ROOTSYS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9501
https://github.com/root-project/root/pull/9501:378,usability,command,command,378,"[dictgen] On macOS, use argv[0] to detect genreflex:; _dyld_get_image_name() sporadically and only semi-reproducibly returns. ""rootcling"" when asked by the genreflex binary. Maybe because both binaries. are bitwise identical, and the image is shared - who knows. To prevent the rootcling argument parsing being active mistakenly for genreflex:. genreflex: Not enough positional command line arguments specified! Must specify at least 2 positional arguments: See: genreflex --help. make sure we get this right by not relying on _dyld_get_image_name() but on argv[0]. Call GetExePath() nonetheless, because we need it to set ROOTSYS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9501
https://github.com/root-project/root/pull/9501:475,usability,help,help,475,"[dictgen] On macOS, use argv[0] to detect genreflex:; _dyld_get_image_name() sporadically and only semi-reproducibly returns. ""rootcling"" when asked by the genreflex binary. Maybe because both binaries. are bitwise identical, and the image is shared - who knows. To prevent the rootcling argument parsing being active mistakenly for genreflex:. genreflex: Not enough positional command line arguments specified! Must specify at least 2 positional arguments: See: genreflex --help. make sure we get this right by not relying on _dyld_get_image_name() but on argv[0]. Call GetExePath() nonetheless, because we need it to set ROOTSYS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9501
https://github.com/root-project/root/pull/9502:75,energy efficiency,draw,drawn,75,"Fix tprofile2polyRealistic.C tutorial, 6.26 [skip-ci]; Same TProfile2D was drawn twice.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9502
https://github.com/root-project/root/pull/9503:245,deployability,updat,updated,245,Remove static members from SaveGraph (fix #9145); # This Pull request:. Remove static maps from SaveGraph. Remove static method to keep unique node ids in SaveGraph. ## Changes or fixes: #9145. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9503
https://github.com/root-project/root/pull/9503:215,safety,test,tested,215,Remove static members from SaveGraph (fix #9145); # This Pull request:. Remove static maps from SaveGraph. Remove static method to keep unique node ids in SaveGraph. ## Changes or fixes: #9145. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9503
https://github.com/root-project/root/pull/9503:245,safety,updat,updated,245,Remove static members from SaveGraph (fix #9145); # This Pull request:. Remove static maps from SaveGraph. Remove static method to keep unique node ids in SaveGraph. ## Changes or fixes: #9145. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9503
https://github.com/root-project/root/pull/9503:245,security,updat,updated,245,Remove static members from SaveGraph (fix #9145); # This Pull request:. Remove static maps from SaveGraph. Remove static method to keep unique node ids in SaveGraph. ## Changes or fixes: #9145. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9503
https://github.com/root-project/root/pull/9503:215,testability,test,tested,215,Remove static members from SaveGraph (fix #9145); # This Pull request:. Remove static maps from SaveGraph. Remove static method to keep unique node ids in SaveGraph. ## Changes or fixes: #9145. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9503
https://github.com/root-project/root/pull/9504:904,deployability,depend,dependency,904,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:989,deployability,depend,depend,989,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:336,integrability,sub,subdirectory,336,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:382,integrability,sub,subdirectory,382,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:904,integrability,depend,dependency,904,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:989,integrability,depend,depend,989,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:833,modifiability,pac,package,833,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:904,modifiability,depend,dependency,904,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:989,modifiability,depend,depend,989,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:1012,modifiability,pac,package,1012,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:694,performance,time,time,694,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:790,reliability,doe,doesn,790,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:486,safety,test,testing,486,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:904,safety,depend,dependency,904,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:989,safety,depend,depend,989,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:605,security,expos,exposted,605,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:486,testability,test,testing,486,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:904,testability,depend,dependency,904,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:989,testability,depend,depend,989,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:211,usability,user,users,211,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/pull/9504:621,usability,user,user,621,"[RF] Put all temporary RooFit files in `/tmp/roofit` and not `/tmp` directly; Some RooFit functions, in particular the ones related to. multiprocessing, created many files directly in the `/tmp` directory. Some users and @hageboeck found that this was unnessecarily polluting. the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add. temporary RooFit files that get created during multiprocessing and. testing. The path for temporary RooFit files can now be retrieved with a new. `RooFit::tmpPath()` function that is not exposted by the user but only. meant to be used by the RooFit implementations. The first time. `RooFit::tmpPath()` is called, it will check if the directory exists and. create it if it doesn't. This new function goes into a new package. `roofit/common` that is meant to be at the base of the RooFit dependency. graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can. depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9504
https://github.com/root-project/root/issues/9505:53,availability,error,error,53,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/issues/9505:233,availability,error,error,233,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/issues/9505:286,availability,error,error,286,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/issues/9505:183,energy efficiency,draw,drawing,183,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/issues/9505:53,performance,error,error,53,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/issues/9505:233,performance,error,error,233,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/issues/9505:251,performance,content,content,251,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/issues/9505:286,performance,error,error,286,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/issues/9505:53,safety,error,error,53,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/issues/9505:233,safety,error,error,233,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/issues/9505:286,safety,error,error,286,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/issues/9505:53,usability,error,error,53,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/issues/9505:233,usability,error,error,233,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/issues/9505:286,usability,error,error,286,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/issues/9505:442,usability,user,user-images,442,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""; Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)? Thank you! Best,. Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9505
https://github.com/root-project/root/pull/9506:54,availability,redund,redundant,54,[DF] Minor non-functional changes; - [NFC][DF] Remove redundant virtual keyword: `final` implies `virtual`. - [NFC][DF] Remove unnecessary pure virtual method: the line just re-declared a method from the RNodeBase base class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9506
https://github.com/root-project/root/pull/9506:54,deployability,redundan,redundant,54,[DF] Minor non-functional changes; - [NFC][DF] Remove redundant virtual keyword: `final` implies `virtual`. - [NFC][DF] Remove unnecessary pure virtual method: the line just re-declared a method from the RNodeBase base class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9506
https://github.com/root-project/root/pull/9506:54,reliability,redundan,redundant,54,[DF] Minor non-functional changes; - [NFC][DF] Remove redundant virtual keyword: `final` implies `virtual`. - [NFC][DF] Remove unnecessary pure virtual method: the line just re-declared a method from the RNodeBase base class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9506
https://github.com/root-project/root/pull/9506:54,safety,redund,redundant,54,[DF] Minor non-functional changes; - [NFC][DF] Remove redundant virtual keyword: `final` implies `virtual`. - [NFC][DF] Remove unnecessary pure virtual method: the line just re-declared a method from the RNodeBase base class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9506
https://github.com/root-project/root/issues/9507:490,availability,avail,available,490,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:24,deployability,build,build,24,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:85,deployability,build,build,85,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:432,deployability,depend,depend,432,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:554,deployability,instal,install,554,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:750,deployability,releas,release,750,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:432,integrability,depend,depend,432,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:432,modifiability,depend,depend,432,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:516,performance,time,time,516,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:490,reliability,availab,available,490,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:426,safety,test,tests,426,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:432,safety,depend,depend,432,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:490,safety,avail,available,490,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:490,security,availab,available,490,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:421,testability,unit,unit,421,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:426,testability,test,tests,426,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9507:432,testability,depend,depend,432,"Not possible anymore to build `roottest` standalone; In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9507
https://github.com/root-project/root/issues/9508:50,deployability,releas,release,50,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:126,deployability,releas,release,126,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:331,deployability,releas,release,331,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:371,deployability,releas,release,371,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:511,deployability,releas,release,511,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:591,deployability,observ,observables,591,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:679,deployability,patch,patch,679,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:685,deployability,releas,release,685,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:3001,deployability,patch,patches,3001,pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com/root-project/root/pull/9690. - [x] https://github.com/root-project/root/pull/9700. - [x] https://github.com/root-project/root/pull/9680. - [x] https://github.com/root-project/root/pull/9685. - [x] https://github.com/root-project/root/pull/9684. - [x] https://github.com/root-project/root/pull/9716. - [x] https://github.com/root-project/root/pull/9727. - [x] https://github.com/root-project/root/pull/9715. - [x] https://github.com/root-project/root/pull/9720. - [x] https://github.com/root-project/root/pull/9723. - [x] https://github.com/root-project/root/pull/9717. - [x] https://github.com/root-project/root/pull/9728. - [x] https://github.com/root-project/root/pull/9683. - [x] https://github.com/root-project/root/pull/9734. - [x] https://github.com/root-project/root/pull/9721. - [x] https://github.com/root-project/root/pull/9795. - [x] https://github.com/root-project/root/pull/9767. - [x] https://github.com/root-project/root/pull/9799. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/9559. 2. https://github.com/root-project/root/pull/9614. 3. https://github.com/root-project/root/pull/9710. 4. https://github.com/root-project/root/pull/9746. 5. https://github.com/root-project/root/pull/9749. 6. https://github.com/root-project/root/pull/9800.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:716,energy efficiency,Reduc,Reduce,716,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:859,energy efficiency,optim,optimization,859,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:704,integrability,Batch,BatchMode,704,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:822,integrability,Batch,BatchMode,822,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:704,performance,Batch,BatchMode,704,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:723,performance,overhead,overhead,723,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:775,performance,time,time,775,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:822,performance,Batch,BatchMode,822,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:859,performance,optimiz,optimization,859,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:679,safety,patch,patch,679,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:921,safety,Avoid,Avoid,921,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:1018,safety,test,test,1018,"ues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com/root-project/root/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:1084,safety,test,test,1084,"ill want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com/root-project/root/pull/9690. - [x] https://github.com/root-project/root/pull/9700. - ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:3001,safety,patch,patches,3001,pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com/root-project/root/pull/9690. - [x] https://github.com/root-project/root/pull/9700. - [x] https://github.com/root-project/root/pull/9680. - [x] https://github.com/root-project/root/pull/9685. - [x] https://github.com/root-project/root/pull/9684. - [x] https://github.com/root-project/root/pull/9716. - [x] https://github.com/root-project/root/pull/9727. - [x] https://github.com/root-project/root/pull/9715. - [x] https://github.com/root-project/root/pull/9720. - [x] https://github.com/root-project/root/pull/9723. - [x] https://github.com/root-project/root/pull/9717. - [x] https://github.com/root-project/root/pull/9728. - [x] https://github.com/root-project/root/pull/9683. - [x] https://github.com/root-project/root/pull/9734. - [x] https://github.com/root-project/root/pull/9721. - [x] https://github.com/root-project/root/pull/9795. - [x] https://github.com/root-project/root/pull/9767. - [x] https://github.com/root-project/root/pull/9799. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/9559. 2. https://github.com/root-project/root/pull/9614. 3. https://github.com/root-project/root/pull/9710. 4. https://github.com/root-project/root/pull/9746. 5. https://github.com/root-project/root/pull/9749. 6. https://github.com/root-project/root/pull/9800.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:679,security,patch,patch,679,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:3001,security,patch,patches,3001,pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com/root-project/root/pull/9690. - [x] https://github.com/root-project/root/pull/9700. - [x] https://github.com/root-project/root/pull/9680. - [x] https://github.com/root-project/root/pull/9685. - [x] https://github.com/root-project/root/pull/9684. - [x] https://github.com/root-project/root/pull/9716. - [x] https://github.com/root-project/root/pull/9727. - [x] https://github.com/root-project/root/pull/9715. - [x] https://github.com/root-project/root/pull/9720. - [x] https://github.com/root-project/root/pull/9723. - [x] https://github.com/root-project/root/pull/9717. - [x] https://github.com/root-project/root/pull/9728. - [x] https://github.com/root-project/root/pull/9683. - [x] https://github.com/root-project/root/pull/9734. - [x] https://github.com/root-project/root/pull/9721. - [x] https://github.com/root-project/root/pull/9795. - [x] https://github.com/root-project/root/pull/9767. - [x] https://github.com/root-project/root/pull/9799. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/9559. 2. https://github.com/root-project/root/pull/9614. 3. https://github.com/root-project/root/pull/9710. 4. https://github.com/root-project/root/pull/9746. 5. https://github.com/root-project/root/pull/9749. 6. https://github.com/root-project/root/pull/9800.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:591,testability,observ,observables,591,"[RF] RooFit open issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:1013,testability,unit,unit,1013,"n issues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com/root-project/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:1018,testability,test,test,1018,"ues and backports for 6.26.00 release; **GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com/root-project/root/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/issues/9508:1084,testability,test,test,1084,"ill want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes. - [x] `RooFitHS3`: Write release notes. - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace. - [x] `Lagrangian morphing`: write about it in the release notes. - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs. - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits. - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478. - [x] https://github.com/root-project/root/pull/9504. - [x] https://github.com/root-project/root/pull/9458. - [x] https://github.com/root-project/root/pull/9553. - [x] https://github.com/root-project/root/pull/9447. - [x] https://github.com/root-project/root/pull/9552. - [x] https://github.com/root-project/root/pull/8784. - [x] https://github.com/root-project/root/pull/9177. - [x] https://github.com/root-project/root/pull/8595. - [x] https://github.com/root-project/root/pull/9444. - [x] https://github.com/root-project/root/pull/9456. - [x] https://github.com/root-project/root/pull/9640. - [x] https://github.com/root-project/root/pull/9482. - [x] https://github.com/root-project/root/pull/9690. - [x] https://github.com/root-project/root/pull/9700. - ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9508
https://github.com/root-project/root/pull/9512:198,availability,operat,operators,198,"fix copy/move constructors/assignment for THnBase; Following https://github.com/root-project/root/pull/7499 THnBase and derived classes have auto-generated copy and move constructors and assignment operators, but these don't have fully the desired behaviour because of the TObjArray data members in THnBase. In particular the axes objects end up being shared between the original histogram and the copy, such that deleting the original makes the copy unusable. Fixed by implementing manual copy and move constructors and assignment operators for THnBase (all the other auto-generated ones should be ok).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9512
https://github.com/root-project/root/pull/9512:532,availability,operat,operators,532,"fix copy/move constructors/assignment for THnBase; Following https://github.com/root-project/root/pull/7499 THnBase and derived classes have auto-generated copy and move constructors and assignment operators, but these don't have fully the desired behaviour because of the TObjArray data members in THnBase. In particular the axes objects end up being shared between the original histogram and the copy, such that deleting the original makes the copy unusable. Fixed by implementing manual copy and move constructors and assignment operators for THnBase (all the other auto-generated ones should be ok).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9512
https://github.com/root-project/root/pull/9512:352,interoperability,share,shared,352,"fix copy/move constructors/assignment for THnBase; Following https://github.com/root-project/root/pull/7499 THnBase and derived classes have auto-generated copy and move constructors and assignment operators, but these don't have fully the desired behaviour because of the TObjArray data members in THnBase. In particular the axes objects end up being shared between the original histogram and the copy, such that deleting the original makes the copy unusable. Fixed by implementing manual copy and move constructors and assignment operators for THnBase (all the other auto-generated ones should be ok).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9512
https://github.com/root-project/root/pull/9512:248,usability,behavi,behaviour,248,"fix copy/move constructors/assignment for THnBase; Following https://github.com/root-project/root/pull/7499 THnBase and derived classes have auto-generated copy and move constructors and assignment operators, but these don't have fully the desired behaviour because of the TObjArray data members in THnBase. In particular the axes objects end up being shared between the original histogram and the copy, such that deleting the original makes the copy unusable. Fixed by implementing manual copy and move constructors and assignment operators for THnBase (all the other auto-generated ones should be ok).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9512
https://github.com/root-project/root/pull/9513:141,integrability,event,event,141,"[TMVA] Fix for using integer spectator types in Reader class; TMVA::Reader::AddSpectator allows passing an integer external pointer, but the event class stores only float * pointer. This PR adds in the Event class the type information of the spectator variables. With this the correct casting is performed when retrieving the spectator variable value in case of dynamic events (the inputs are provided using an external pointer). Note that the integer is always converted to a float, so one can use integer values only from [-2^24, 2^24]. This PR fixes #9115.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9513
https://github.com/root-project/root/pull/9513:202,integrability,Event,Event,202,"[TMVA] Fix for using integer spectator types in Reader class; TMVA::Reader::AddSpectator allows passing an integer external pointer, but the event class stores only float * pointer. This PR adds in the Event class the type information of the spectator variables. With this the correct casting is performed when retrieving the spectator variable value in case of dynamic events (the inputs are provided using an external pointer). Note that the integer is always converted to a float, so one can use integer values only from [-2^24, 2^24]. This PR fixes #9115.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9513
https://github.com/root-project/root/pull/9513:370,integrability,event,events,370,"[TMVA] Fix for using integer spectator types in Reader class; TMVA::Reader::AddSpectator allows passing an integer external pointer, but the event class stores only float * pointer. This PR adds in the Event class the type information of the spectator variables. With this the correct casting is performed when retrieving the spectator variable value in case of dynamic events (the inputs are provided using an external pointer). Note that the integer is always converted to a float, so one can use integer values only from [-2^24, 2^24]. This PR fixes #9115.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9513
https://github.com/root-project/root/pull/9513:252,modifiability,variab,variables,252,"[TMVA] Fix for using integer spectator types in Reader class; TMVA::Reader::AddSpectator allows passing an integer external pointer, but the event class stores only float * pointer. This PR adds in the Event class the type information of the spectator variables. With this the correct casting is performed when retrieving the spectator variable value in case of dynamic events (the inputs are provided using an external pointer). Note that the integer is always converted to a float, so one can use integer values only from [-2^24, 2^24]. This PR fixes #9115.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9513
https://github.com/root-project/root/pull/9513:336,modifiability,variab,variable,336,"[TMVA] Fix for using integer spectator types in Reader class; TMVA::Reader::AddSpectator allows passing an integer external pointer, but the event class stores only float * pointer. This PR adds in the Event class the type information of the spectator variables. With this the correct casting is performed when retrieving the spectator variable value in case of dynamic events (the inputs are provided using an external pointer). Note that the integer is always converted to a float, so one can use integer values only from [-2^24, 2^24]. This PR fixes #9115.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9513
https://github.com/root-project/root/pull/9513:296,performance,perform,performed,296,"[TMVA] Fix for using integer spectator types in Reader class; TMVA::Reader::AddSpectator allows passing an integer external pointer, but the event class stores only float * pointer. This PR adds in the Event class the type information of the spectator variables. With this the correct casting is performed when retrieving the spectator variable value in case of dynamic events (the inputs are provided using an external pointer). Note that the integer is always converted to a float, so one can use integer values only from [-2^24, 2^24]. This PR fixes #9115.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9513
https://github.com/root-project/root/pull/9513:382,safety,input,inputs,382,"[TMVA] Fix for using integer spectator types in Reader class; TMVA::Reader::AddSpectator allows passing an integer external pointer, but the event class stores only float * pointer. This PR adds in the Event class the type information of the spectator variables. With this the correct casting is performed when retrieving the spectator variable value in case of dynamic events (the inputs are provided using an external pointer). Note that the integer is always converted to a float, so one can use integer values only from [-2^24, 2^24]. This PR fixes #9115.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9513
https://github.com/root-project/root/pull/9513:296,usability,perform,performed,296,"[TMVA] Fix for using integer spectator types in Reader class; TMVA::Reader::AddSpectator allows passing an integer external pointer, but the event class stores only float * pointer. This PR adds in the Event class the type information of the spectator variables. With this the correct casting is performed when retrieving the spectator variable value in case of dynamic events (the inputs are provided using an external pointer). Note that the integer is always converted to a float, so one can use integer values only from [-2^24, 2^24]. This PR fixes #9115.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9513
https://github.com/root-project/root/pull/9513:382,usability,input,inputs,382,"[TMVA] Fix for using integer spectator types in Reader class; TMVA::Reader::AddSpectator allows passing an integer external pointer, but the event class stores only float * pointer. This PR adds in the Event class the type information of the spectator variables. With this the correct casting is performed when retrieving the spectator variable value in case of dynamic events (the inputs are provided using an external pointer). Note that the integer is always converted to a float, so one can use integer values only from [-2^24, 2^24]. This PR fixes #9115.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9513
https://github.com/root-project/root/issues/9514:663,availability,error,error,663,"Printed SVG image contains newline cutting through XML tags; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2450,availability,Operat,Operating,2450,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2525,availability,down,download,2525,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2643,availability,Operat,Operating,2643,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:18,deployability,contain,contains,18,"Printed SVG image contains newline cutting through XML tags; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:1248,deployability,build,build,1248,"ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2438,deployability,version,version,2438,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2507,deployability,instal,install,2507,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2572,deployability,Version,Version,2572,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2671,deployability,Build,Build,2671,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2694,deployability,manag,manager,2694,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:492,energy efficiency,Draw,Draw,492,"Printed SVG image contains newline cutting through XML tags; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:1891,energy efficiency,Draw,Draw,1891,"ML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2694,energy efficiency,manag,manager,2694,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2438,integrability,version,version,2438,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2572,integrability,Version,Version,2572,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:51,interoperability,XML,XML,51,"Printed SVG image contains newline cutting through XML tags; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:650,interoperability,XML,XML,650,"Printed SVG image contains newline cutting through XML tags; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:892,interoperability,XML,XML,892,"Printed SVG image contains newline cutting through XML tags; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2404,interoperability,XML,XML,2404,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2438,modifiability,version,version,2438,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2572,modifiability,Version,Version,2572,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2686,modifiability,pac,package,2686,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:663,performance,error,error,663,"Printed SVG image contains newline cutting through XML tags; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2858,performance,content,content,2858,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:663,safety,error,error,663,"Printed SVG image contains newline cutting through XML tags; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:1202,safety,input,input,1202,"/sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reprod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2694,safety,manag,manager,2694,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2781,testability,context,context,2781,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:2810,testability,context,context,2810,"ly something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):. [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:663,usability,error,error,663,"Printed SVG image contains newline cutting through XML tags; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:747,usability,behavi,behavior,747,"Printed SVG image contains newline cutting through XML tags; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:765,usability,clear,clear,765,"Printed SVG image contains newline cutting through XML tags; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:1057,usability,behavi,behavior,1057,"- [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ``",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:1202,usability,input,input,1202,"/sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When plotting to SVG file the way. ```c++. hist->Draw();. gPad->Print(""hist.svg"");. ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reprod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/issues/9514:1940,usability,Close,Close,1940," to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Prepare the reproduction code. `Reproduce.C`. ```c++. #include<TCanvas.h>. #include<TPad.h>. #include<TFile.h>. #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {. TCanvas::MakeDefCanvas();. TFile *tfIn = TFile::Open(pathFileIn);. TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));. hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");. hpxLongTitle->Draw();. gPad->Print(""hpxLongTitle.svg"");. tfIn->Close();. }. int main(int argc, char* argv[]) {. if ( argc > 1 ) {. Reproduce(argv[1]);. } else {. Reproduce();. }. }. ```. 2. Run by. ```console. $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'. ```. or by. ```. $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C. $ ./Reproduce.o ""path/to/hsimple.root"". ```. 3. See the generated `hpxLongTitle.svg`. 4. Open with a text editor and scroll to the bottom (pressing `G` for vim). 5. See the broken XML tag. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00. 2. Operating System: NixOS. 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context. <!--. Add any other context about the problem here. -->. The actual content of that supercali-title in my use case is a JSON string without any space cha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9514
https://github.com/root-project/root/pull/9515:24,deployability,manag,management,24,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:55,deployability,log,log,55,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:68,deployability,log,logging,68,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:155,deployability,log,log,155,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:215,deployability,manag,management,215,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:24,energy efficiency,manag,management,24,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:215,energy efficiency,manag,management,215,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:47,integrability,messag,message,47,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:132,integrability,messag,message,132,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:159,integrability,messag,message,159,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:47,interoperability,messag,message,47,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:132,interoperability,messag,message,132,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:159,interoperability,messag,message,159,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:24,safety,manag,management,24,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:55,safety,log,log,55,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:68,safety,log,logging,68,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:155,safety,log,log,155,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:215,safety,manag,management,215,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:55,security,log,log,55,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:68,security,log,logging,68,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:155,security,log,log,155,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:10,testability,simpl,simple,10,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:55,testability,log,log,55,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:68,testability,log,logging,68,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:155,testability,log,log,155,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:201,testability,simpl,simple,201,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:10,usability,simpl,simple,10,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:94,usability,menu,menu,94,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:170,usability,Dialog,Dialog,170,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:201,usability,simpl,simple,201,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9515:235,usability,menu,menu,235,"Eve-7 Add simple window management and improve message log; Improve logging:. * Add button in menu bar to show the highest severity message. * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9515
https://github.com/root-project/root/pull/9516:417,deployability,updat,updated,417,"Allow to populate ROOT at configure time using FetchContent (part1); # This Pull request:. This pull request allows to root as a sub-project using `FetchContent`. It a cleaner Pull request than (#8941). ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9516
https://github.com/root-project/root/pull/9516:26,integrability,configur,configure,26,"Allow to populate ROOT at configure time using FetchContent (part1); # This Pull request:. This pull request allows to root as a sub-project using `FetchContent`. It a cleaner Pull request than (#8941). ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9516
https://github.com/root-project/root/pull/9516:129,integrability,sub,sub-project,129,"Allow to populate ROOT at configure time using FetchContent (part1); # This Pull request:. This pull request allows to root as a sub-project using `FetchContent`. It a cleaner Pull request than (#8941). ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9516
https://github.com/root-project/root/pull/9516:379,interoperability,standard,standard,379,"Allow to populate ROOT at configure time using FetchContent (part1); # This Pull request:. This pull request allows to root as a sub-project using `FetchContent`. It a cleaner Pull request than (#8941). ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9516
https://github.com/root-project/root/pull/9516:26,modifiability,configur,configure,26,"Allow to populate ROOT at configure time using FetchContent (part1); # This Pull request:. This pull request allows to root as a sub-project using `FetchContent`. It a cleaner Pull request than (#8941). ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9516
https://github.com/root-project/root/pull/9516:255,modifiability,variab,variable,255,"Allow to populate ROOT at configure time using FetchContent (part1); # This Pull request:. This pull request allows to root as a sub-project using `FetchContent`. It a cleaner Pull request than (#8941). ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9516
https://github.com/root-project/root/pull/9516:36,performance,time,time,36,"Allow to populate ROOT at configure time using FetchContent (part1); # This Pull request:. This pull request allows to root as a sub-project using `FetchContent`. It a cleaner Pull request than (#8941). ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9516
https://github.com/root-project/root/pull/9516:331,safety,test,tested,331,"Allow to populate ROOT at configure time using FetchContent (part1); # This Pull request:. This pull request allows to root as a sub-project using `FetchContent`. It a cleaner Pull request than (#8941). ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9516
https://github.com/root-project/root/pull/9516:417,safety,updat,updated,417,"Allow to populate ROOT at configure time using FetchContent (part1); # This Pull request:. This pull request allows to root as a sub-project using `FetchContent`. It a cleaner Pull request than (#8941). ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9516
https://github.com/root-project/root/pull/9516:26,security,configur,configure,26,"Allow to populate ROOT at configure time using FetchContent (part1); # This Pull request:. This pull request allows to root as a sub-project using `FetchContent`. It a cleaner Pull request than (#8941). ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9516
https://github.com/root-project/root/pull/9516:417,security,updat,updated,417,"Allow to populate ROOT at configure time using FetchContent (part1); # This Pull request:. This pull request allows to root as a sub-project using `FetchContent`. It a cleaner Pull request than (#8941). ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9516
https://github.com/root-project/root/pull/9516:331,testability,test,tested,331,"Allow to populate ROOT at configure time using FetchContent (part1); # This Pull request:. This pull request allows to root as a sub-project using `FetchContent`. It a cleaner Pull request than (#8941). ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9516
https://github.com/root-project/root/pull/9517:71,energy efficiency,core,core,71,Explicitly define limits header for GCC/G++ 11; Adds limits header in `core/foundation/inc/ROOT/libcpp_string_view.h` since gcc-11 requires explicit definition for successful compilation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9517
https://github.com/root-project/root/pull/9518:1599,deployability,patch,patch,1599,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1645,deployability,updat,updating,1645,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1779,deployability,updat,updated,1779,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1370,energy efficiency,current,current,1370,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:292,integrability,sub,sub-classes,292,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1300,integrability,sub,sub-classes,1300,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1327,integrability,buffer,buffer,1327,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1378,integrability,sub,sub-classes,1378,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1496,integrability,sub,sub-classes,1496,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:43,interoperability,XML,XML,43,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:204,interoperability,specif,specify,204,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:881,interoperability,compatib,compatibility,881,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:906,interoperability,specif,specified,906,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1315,interoperability,specif,specify,1315,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1348,interoperability,compatib,compatible,1348,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1599,safety,patch,patch,1599,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1645,safety,updat,updating,1645,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1749,safety,test,tested,1749,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1779,safety,updat,updated,1779,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1540,security,modif,modified,1540,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1599,security,patch,patch,1599,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1645,security,updat,updating,1645,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1779,security,updat,updated,1779,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1749,testability,test,tested,1749,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:820,usability,behavi,behavior,820,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1453,usability,behavi,behavior,1453,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1478,usability,document,document-printing,1478,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9518:1511,usability,user,users,1511,"[graphics] Fix printed SVG cutting through XML tags by implementing TVirtualPS::CRCandidates and TVirtualPS::CRCandidateTypes; # This Pull request:. ## Changes or fixes:. This change allows developers to specify ""line break candidate characters"" and options to process them when defining the sub-classes through member `TVirtualPS::CRCandidates` and `TVirtualPS::CRCandidateTypes`. When a line break is needed, `PrintFast` goes through `fSizBuffer` number of characters, trying to match the candidate of index 0 in `TVirtualPS::CRCandidates` and fallback to the ones with larger index. Searching will get terminated once the index 0 candidate is found (as it did before this change). The default value is. ```c++. fCRCandidates = "" "";. fCRCandidateTypes = new ECRCandidateType[1]{kBeforeChar};. ```. which resembles the behavior of TVirtualPS prior to this change to keep backward compatibility. The value specified for the SVG file is. ```c++. fCRCandidates = "" <>"";. fCRCandidateTypes = new ECRCandidateType[3]{kDropChar, kBeforeChar, kAfterChar};. ```. The `kDropChar` option is implemented to be useful for breaking line at space characters where line breaks and spaces are interchangeable. Note that `fSizBuffer` is now used instead of `kMaxBuffer` in methods of `TVirtualPS`, as it enables the sub-classes to specify the buffer size. This is compatible to all the current sub-classes implemented in the source tree, but may potentially change the behavior of self-defined document-printing sub-classes by users should `fSizBuffer` be modified before the original `PrintFast` be executed. This patch also include miscellaneous work such as updating the SVG introduction inside the TSVG doc and adding comments to the code. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #9514 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9518
https://github.com/root-project/root/pull/9519:405,availability,down,downstream,405,"[DF] Make aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9519
https://github.com/root-project/root/pull/9519:131,deployability,manag,managed,131,"[DF] Make aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9519
https://github.com/root-project/root/pull/9519:131,energy efficiency,manag,managed,131,"[DF] Make aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9519
https://github.com/root-project/root/pull/9519:18,interoperability,specif,specific,18,"[DF] Make aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9519
https://github.com/root-project/root/pull/9519:131,safety,manag,managed,131,"[DF] Make aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9519
https://github.com/root-project/root/pull/9519:298,security,access,accessible,298,"[DF] Make aliases specific to the computation graph branch; As there is one RLoopManager per computation graph, when aliases. were managed by RLoopManager they were computation-graph-wide. It is desirable to make Alias definitions behave coherently with. Defines instead, i.e. have Aliases be only accessible in the branch. of the computation graph in which they were defined, and only in. nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph. branch, not globally"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9519
https://github.com/root-project/root/pull/9520:109,deployability,build,build,109,"[cmake] For ""cintdlls"", do not register include paths (aka ROOTSYS/include).; We do not want to remember the build directory, see issue #7108. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9520
https://github.com/root-project/root/pull/9520:238,deployability,updat,updated,238,"[cmake] For ""cintdlls"", do not register include paths (aka ROOTSYS/include).; We do not want to remember the build directory, see issue #7108. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9520
https://github.com/root-project/root/pull/9520:96,safety,reme,remember,96,"[cmake] For ""cintdlls"", do not register include paths (aka ROOTSYS/include).; We do not want to remember the build directory, see issue #7108. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9520
https://github.com/root-project/root/pull/9520:208,safety,test,tested,208,"[cmake] For ""cintdlls"", do not register include paths (aka ROOTSYS/include).; We do not want to remember the build directory, see issue #7108. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9520
https://github.com/root-project/root/pull/9520:238,safety,updat,updated,238,"[cmake] For ""cintdlls"", do not register include paths (aka ROOTSYS/include).; We do not want to remember the build directory, see issue #7108. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9520
https://github.com/root-project/root/pull/9520:238,security,updat,updated,238,"[cmake] For ""cintdlls"", do not register include paths (aka ROOTSYS/include).; We do not want to remember the build directory, see issue #7108. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9520
https://github.com/root-project/root/pull/9520:208,testability,test,tested,208,"[cmake] For ""cintdlls"", do not register include paths (aka ROOTSYS/include).; We do not want to remember the build directory, see issue #7108. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9520
https://github.com/root-project/root/issues/9523:333,integrability,interfac,interface,333,"[RF] Documentation of `RooAbsReal::getValues` is broken; - A rebase or similar apparently cut the documentation in two, and a stray sentence now leads the documentation of the second overload. - The first overload has no documentation at all ... Please make it a habit immediately write a good docstring in the same commit where the interface is fixed defined. https://github.com/root-project/root/blob/a8874141392745a4f9b35fa52d41ada66f203df5/roofit/roofitcore/inc/RooAbsReal.h#L126-L139. https://root.cern.ch/doc/master/classRooAbsReal.html#a3f4185c14daa089c29ae3ba1e90b5235",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9523
https://github.com/root-project/root/issues/9523:333,interoperability,interfac,interface,333,"[RF] Documentation of `RooAbsReal::getValues` is broken; - A rebase or similar apparently cut the documentation in two, and a stray sentence now leads the documentation of the second overload. - The first overload has no documentation at all ... Please make it a habit immediately write a good docstring in the same commit where the interface is fixed defined. https://github.com/root-project/root/blob/a8874141392745a4f9b35fa52d41ada66f203df5/roofit/roofitcore/inc/RooAbsReal.h#L126-L139. https://root.cern.ch/doc/master/classRooAbsReal.html#a3f4185c14daa089c29ae3ba1e90b5235",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9523
https://github.com/root-project/root/issues/9523:333,modifiability,interfac,interface,333,"[RF] Documentation of `RooAbsReal::getValues` is broken; - A rebase or similar apparently cut the documentation in two, and a stray sentence now leads the documentation of the second overload. - The first overload has no documentation at all ... Please make it a habit immediately write a good docstring in the same commit where the interface is fixed defined. https://github.com/root-project/root/blob/a8874141392745a4f9b35fa52d41ada66f203df5/roofit/roofitcore/inc/RooAbsReal.h#L126-L139. https://root.cern.ch/doc/master/classRooAbsReal.html#a3f4185c14daa089c29ae3ba1e90b5235",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9523
https://github.com/root-project/root/issues/9523:5,usability,Document,Documentation,5,"[RF] Documentation of `RooAbsReal::getValues` is broken; - A rebase or similar apparently cut the documentation in two, and a stray sentence now leads the documentation of the second overload. - The first overload has no documentation at all ... Please make it a habit immediately write a good docstring in the same commit where the interface is fixed defined. https://github.com/root-project/root/blob/a8874141392745a4f9b35fa52d41ada66f203df5/roofit/roofitcore/inc/RooAbsReal.h#L126-L139. https://root.cern.ch/doc/master/classRooAbsReal.html#a3f4185c14daa089c29ae3ba1e90b5235",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9523
https://github.com/root-project/root/issues/9523:98,usability,document,documentation,98,"[RF] Documentation of `RooAbsReal::getValues` is broken; - A rebase or similar apparently cut the documentation in two, and a stray sentence now leads the documentation of the second overload. - The first overload has no documentation at all ... Please make it a habit immediately write a good docstring in the same commit where the interface is fixed defined. https://github.com/root-project/root/blob/a8874141392745a4f9b35fa52d41ada66f203df5/roofit/roofitcore/inc/RooAbsReal.h#L126-L139. https://root.cern.ch/doc/master/classRooAbsReal.html#a3f4185c14daa089c29ae3ba1e90b5235",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9523
https://github.com/root-project/root/issues/9523:155,usability,document,documentation,155,"[RF] Documentation of `RooAbsReal::getValues` is broken; - A rebase or similar apparently cut the documentation in two, and a stray sentence now leads the documentation of the second overload. - The first overload has no documentation at all ... Please make it a habit immediately write a good docstring in the same commit where the interface is fixed defined. https://github.com/root-project/root/blob/a8874141392745a4f9b35fa52d41ada66f203df5/roofit/roofitcore/inc/RooAbsReal.h#L126-L139. https://root.cern.ch/doc/master/classRooAbsReal.html#a3f4185c14daa089c29ae3ba1e90b5235",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9523
https://github.com/root-project/root/issues/9523:221,usability,document,documentation,221,"[RF] Documentation of `RooAbsReal::getValues` is broken; - A rebase or similar apparently cut the documentation in two, and a stray sentence now leads the documentation of the second overload. - The first overload has no documentation at all ... Please make it a habit immediately write a good docstring in the same commit where the interface is fixed defined. https://github.com/root-project/root/blob/a8874141392745a4f9b35fa52d41ada66f203df5/roofit/roofitcore/inc/RooAbsReal.h#L126-L139. https://root.cern.ch/doc/master/classRooAbsReal.html#a3f4185c14daa089c29ae3ba1e90b5235",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9523
https://github.com/root-project/root/issues/9524:0,availability,Failur,Failure,0,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:718,availability,error,error,718,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:782,availability,error,error,782,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:846,availability,Error,Error,846,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:0,deployability,Fail,Failure,0,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:11,deployability,build,build,11,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:277,deployability,fail,fail,277,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:335,deployability,instal,installation,335,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:398,deployability,build,build,398,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:407,deployability,fail,fail,407,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:733,deployability,version,version,733,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:797,deployability,version,version,797,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:869,deployability,fail,failed,869,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:955,deployability,version,version,955,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:995,deployability,version,version,995,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:1020,deployability,build,build,1020,"en MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:1110,deployability,Instal,Installed,1110,"be the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:3621,deployability,version,version,3621,"FF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=14 -DPYTHON_EXECUTABLE:STRING=/rnsdhpc/code/spack/opt/spack/apple-clang/python/3tmjst4/bin/python3.8"". ```. ### Additional context. I suspect this is due to a legacy code check in the old LLVM version that underpins ROOT, since macOS versions used to all be `10.x`. @pcanal said this suspicion seems to be borne out in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:3662,deployability,version,versions,3662,"FF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=14 -DPYTHON_EXECUTABLE:STRING=/rnsdhpc/code/spack/opt/spack/apple-clang/python/3tmjst4/bin/python3.8"". ```. ### Additional context. I suspect this is due to a legacy code check in the old LLVM version that underpins ROOT, since macOS versions used to all be `10.x`. @pcanal said this suspicion seems to be borne out in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:1010,energy efficiency,Optim,Optimized,1010,"d/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:1091,energy efficiency,CPU,CPU,1091,"duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:733,integrability,version,version,733,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:797,integrability,version,version,797,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:955,integrability,version,version,955,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:995,integrability,version,version,995,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:1151,integrability,Configur,Configure,1151,"le `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:3621,integrability,version,version,3621,"FF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=14 -DPYTHON_EXECUTABLE:STRING=/rnsdhpc/code/spack/opt/spack/apple-clang/python/3tmjst4/bin/python3.8"". ```. ### Additional context. I suspect this is due to a legacy code check in the old LLVM version that underpins ROOT, since macOS versions used to all be `10.x`. @pcanal said this suspicion seems to be borne out in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:3662,integrability,version,versions,3662,"FF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=14 -DPYTHON_EXECUTABLE:STRING=/rnsdhpc/code/spack/opt/spack/apple-clang/python/3tmjst4/bin/python3.8"". ```. ### Additional context. I suspect this is due to a legacy code check in the old LLVM version that underpins ROOT, since macOS versions used to all be `10.x`. @pcanal said this suspicion seems to be borne out in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:150,modifiability,variab,variable,150,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:733,modifiability,version,version,733,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:797,modifiability,version,version,797,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:955,modifiability,version,version,955,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:995,modifiability,version,version,995,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:1151,modifiability,Configur,Configure,1151,"le `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:3621,modifiability,version,version,3621,"FF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=14 -DPYTHON_EXECUTABLE:STRING=/rnsdhpc/code/spack/opt/spack/apple-clang/python/3tmjst4/bin/python3.8"". ```. ### Additional context. I suspect this is due to a legacy code check in the old LLVM version that underpins ROOT, since macOS versions used to all be `10.x`. @pcanal said this suspicion seems to be borne out in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:3662,modifiability,version,versions,3662,"FF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=14 -DPYTHON_EXECUTABLE:STRING=/rnsdhpc/code/spack/opt/spack/apple-clang/python/3tmjst4/bin/python3.8"". ```. ### Additional context. I suspect this is due to a legacy code check in the old LLVM version that underpins ROOT, since macOS versions used to all be `10.x`. @pcanal said this suspicion seems to be borne out in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:0,performance,Failur,Failure,0,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:718,performance,error,error,718,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:782,performance,error,error,782,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:846,performance,Error,Error,846,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:879,performance,memor,memory,879,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:1010,performance,Optimiz,Optimized,1010,"d/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:1091,performance,CPU,CPU,1091,"duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:0,reliability,Fail,Failure,0,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:277,reliability,fail,fail,277,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:407,reliability,fail,fail,407,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:862,reliability,pra,pragma,862,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:869,reliability,fail,failed,869,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:718,safety,error,error,718,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:782,safety,error,error,782,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:846,safety,Error,Error,846,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:1151,security,Configur,Configure,1151,"le `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:1031,testability,assert,assertions,1031,"LOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:3551,testability,context,context,3551,"FF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuiltin_xxhash:BOOL=OFF -Dbuiltin_zlib:BOOL=OFF -Dafdsmrgd:BOOL=OFF -Dafs:BOOL=OFF -Dalien:BOOL=OFF -Darrow:BOOL=OFF -Dasimage:BOOL=ON -Dastiff:BOOL=ON -Dbonjour:BOOL=OFF -Dcastor:BOOL=OFF -Dccache:BOOL=OFF -Dchirp:BOOL=OFF -Dcling:BOOL=ON -Dcocoa:BOOL=OFF -Ddataframe:BOOL=ON -Ddavix:BOOL=OFF -Ddcache:BOOL=OFF -Dfftw3:BOOL=OFF -Dfitsio:BOOL=OFF -Dftgl:BOOL=OFF -Dgdml:BOOL=ON -Dgenvector:BOOL=OFF -Dgeocad:BOOL=OFF -Dgfal:BOOL=OFF -Dgl2ps:BOOL=OFF -Dglite:BOOL=OFF -Dglobus:BOOL=OFF -Dgsl_shared:BOOL=OFF -Dgviz:BOOL=OFF -Dhdfs:BOOL=OFF -Dhttp:BOOL=OFF -Dimt:BOOL=OFF -Djemalloc:BOOL=OFF -Dkrb5:BOOL=OFF -Dldap:BOOL=OFF -Dmathmore:BOOL=OFF -Dmemstat:BOOL=OFF -Dminimal:BOOL=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=14 -DPYTHON_EXECUTABLE:STRING=/rnsdhpc/code/spack/opt/spack/apple-clang/python/3tmjst4/bin/python3.8"". ```. ### Additional context. I suspect this is due to a legacy code check in the old LLVM version that underpins ROOT, since macOS versions used to all be `10.x`. @pcanal said this suspicion seems to be borne out in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:476,usability,behavi,behavior,476,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:718,usability,error,error,718,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:782,usability,error,error,782,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:846,usability,Error,Error,846,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/issues/9524:879,usability,memor,memory,879,"Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher; - [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console. $ touch foo.h. $ rootcling -v2 -f foo.cxx foo.h. Warning: Unused class rule: foo. ```. ### To Reproduce. ```console. $ touch foo.h. $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ... $ rootcling -v2 -f foo.cxx foo.h. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'. Error: Parsing #pragma failed in memory. Warning: Unused class rule: foo. ```. ### Setup. ```. $ rootcling --version. LLVM (http://llvm.org/):. LLVM version 9.0.1. Optimized build with assertions. Default target: x86_64-apple-darwin20.6.0. Host CPU: skylake. ```. Installed with Spack on macOS 11:. ```. ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9524
https://github.com/root-project/root/pull/9525:433,deployability,updat,updated,433,"Enable Viewing HTML Reference Guide offline and in IDE; # This Pull request:. ## Changes or fixes:. Enables viewing the HTML reference guide directly embedded within the QtCreator IDE, by pressing F1 on each function, in the same Fashion as the Help functionality of MATLAB. It also allows searching the Reference Guide without needing to open a web browser or while being offline. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8781.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9525
https://github.com/root-project/root/pull/9525:403,safety,test,tested,403,"Enable Viewing HTML Reference Guide offline and in IDE; # This Pull request:. ## Changes or fixes:. Enables viewing the HTML reference guide directly embedded within the QtCreator IDE, by pressing F1 on each function, in the same Fashion as the Help functionality of MATLAB. It also allows searching the Reference Guide without needing to open a web browser or while being offline. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8781.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9525
https://github.com/root-project/root/pull/9525:433,safety,updat,updated,433,"Enable Viewing HTML Reference Guide offline and in IDE; # This Pull request:. ## Changes or fixes:. Enables viewing the HTML reference guide directly embedded within the QtCreator IDE, by pressing F1 on each function, in the same Fashion as the Help functionality of MATLAB. It also allows searching the Reference Guide without needing to open a web browser or while being offline. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8781.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9525
https://github.com/root-project/root/pull/9525:433,security,updat,updated,433,"Enable Viewing HTML Reference Guide offline and in IDE; # This Pull request:. ## Changes or fixes:. Enables viewing the HTML reference guide directly embedded within the QtCreator IDE, by pressing F1 on each function, in the same Fashion as the Help functionality of MATLAB. It also allows searching the Reference Guide without needing to open a web browser or while being offline. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8781.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9525
https://github.com/root-project/root/pull/9525:403,testability,test,tested,403,"Enable Viewing HTML Reference Guide offline and in IDE; # This Pull request:. ## Changes or fixes:. Enables viewing the HTML reference guide directly embedded within the QtCreator IDE, by pressing F1 on each function, in the same Fashion as the Help functionality of MATLAB. It also allows searching the Reference Guide without needing to open a web browser or while being offline. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8781.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9525
https://github.com/root-project/root/pull/9525:30,usability,Guid,Guide,30,"Enable Viewing HTML Reference Guide offline and in IDE; # This Pull request:. ## Changes or fixes:. Enables viewing the HTML reference guide directly embedded within the QtCreator IDE, by pressing F1 on each function, in the same Fashion as the Help functionality of MATLAB. It also allows searching the Reference Guide without needing to open a web browser or while being offline. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8781.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9525
https://github.com/root-project/root/pull/9525:135,usability,guid,guide,135,"Enable Viewing HTML Reference Guide offline and in IDE; # This Pull request:. ## Changes or fixes:. Enables viewing the HTML reference guide directly embedded within the QtCreator IDE, by pressing F1 on each function, in the same Fashion as the Help functionality of MATLAB. It also allows searching the Reference Guide without needing to open a web browser or while being offline. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8781.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9525
https://github.com/root-project/root/pull/9525:245,usability,Help,Help,245,"Enable Viewing HTML Reference Guide offline and in IDE; # This Pull request:. ## Changes or fixes:. Enables viewing the HTML reference guide directly embedded within the QtCreator IDE, by pressing F1 on each function, in the same Fashion as the Help functionality of MATLAB. It also allows searching the Reference Guide without needing to open a web browser or while being offline. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8781.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9525
https://github.com/root-project/root/pull/9525:314,usability,Guid,Guide,314,"Enable Viewing HTML Reference Guide offline and in IDE; # This Pull request:. ## Changes or fixes:. Enables viewing the HTML reference guide directly embedded within the QtCreator IDE, by pressing F1 on each function, in the same Fashion as the Help functionality of MATLAB. It also allows searching the Reference Guide without needing to open a web browser or while being offline. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8781.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9525
https://github.com/root-project/root/pull/9528:11,deployability,instal,install,11,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:128,deployability,build,build,128,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:176,deployability,build,build,176,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:355,deployability,instal,installed,355,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:328,energy efficiency,core,core,328,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:631,energy efficiency,core,core,631,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:449,integrability,messag,message,449,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:449,interoperability,messag,message,449,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:54,safety,test,test,54,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:139,safety,test,test,139,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:224,safety,test,tests,224,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:241,safety,test,test,241,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:333,safety,test,testsupport,333,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:401,safety,Test,TestSupport,401,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:419,safety,test,testing,419,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:568,safety,review,reviewers,568,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:49,testability,unit,unit,49,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:54,testability,test,test,54,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:134,testability,unit,unit,134,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:139,testability,test,test,139,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:224,testability,test,tests,224,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:236,testability,unit,unit,236,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:241,testability,test,test,241,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:333,testability,test,testsupport,333,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:401,testability,Test,TestSupport,401,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:419,testability,test,testing,419,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:568,testability,review,reviewers,568,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:59,usability,support,support,59,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:144,usability,support,support,144,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:219,usability,user,user,219,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9528:247,usability,support,support,247,"Declare an install target for a mini library for unit test support, so roottest can be built standalone; In order to be able to build unit test support also outside of a ROOT. build (e.g. for standalone roottest or for user tests), the unit test. support library needs to be visible outside of ROOT. Therefore, it is. moved to `core/testsupport`, and now installed and exported under the. name `ROOT::TestSupport` when testing is enabled. A warning message was added to `ROOT_ADD_GTEST` in case this library isn't. found when a new gtest is defined. Fix #9507. ## For reviewers. - [x] I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9528
https://github.com/root-project/root/pull/9529:46,safety,Test,Test,46,"[DF] Add support for systematic variations; ~~Test coverage is still not great, but feature-wise we should be there.~~. There might be edge cases that I have not thought of testing, but most things (including jitting) are implemented and have non-zero coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9529
https://github.com/root-project/root/pull/9529:173,safety,test,testing,173,"[DF] Add support for systematic variations; ~~Test coverage is still not great, but feature-wise we should be there.~~. There might be edge cases that I have not thought of testing, but most things (including jitting) are implemented and have non-zero coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9529
https://github.com/root-project/root/pull/9529:46,testability,Test,Test,46,"[DF] Add support for systematic variations; ~~Test coverage is still not great, but feature-wise we should be there.~~. There might be edge cases that I have not thought of testing, but most things (including jitting) are implemented and have non-zero coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9529
https://github.com/root-project/root/pull/9529:51,testability,coverag,coverage,51,"[DF] Add support for systematic variations; ~~Test coverage is still not great, but feature-wise we should be there.~~. There might be edge cases that I have not thought of testing, but most things (including jitting) are implemented and have non-zero coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9529
https://github.com/root-project/root/pull/9529:173,testability,test,testing,173,"[DF] Add support for systematic variations; ~~Test coverage is still not great, but feature-wise we should be there.~~. There might be edge cases that I have not thought of testing, but most things (including jitting) are implemented and have non-zero coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9529
https://github.com/root-project/root/pull/9529:252,testability,coverag,coverage,252,"[DF] Add support for systematic variations; ~~Test coverage is still not great, but feature-wise we should be there.~~. There might be edge cases that I have not thought of testing, but most things (including jitting) are implemented and have non-zero coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9529
https://github.com/root-project/root/pull/9529:9,usability,support,support,9,"[DF] Add support for systematic variations; ~~Test coverage is still not great, but feature-wise we should be there.~~. There might be edge cases that I have not thought of testing, but most things (including jitting) are implemented and have non-zero coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9529
https://github.com/root-project/root/issues/9530:221,energy efficiency,energ,energy,221,"TH1D::GetRandom and histograms with non-uniform binning; Assume to have a TH1D object, with non-uniform binning, representing some kind of differential quantity (for example, a particle flux as a function of the particle energy, dN/dE). The `TH1D::GetRandom` method will return random numbers distributed according to the histogram bins height, rather than the histogram bins area. The code attached here (a ROOT macro) reproduces this behavior (I attach it as a .txt file, since .C files are not supported). [test.txt](https://github.com/root-project/root/files/7845002/test.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9530
https://github.com/root-project/root/issues/9530:293,interoperability,distribut,distributed,293,"TH1D::GetRandom and histograms with non-uniform binning; Assume to have a TH1D object, with non-uniform binning, representing some kind of differential quantity (for example, a particle flux as a function of the particle energy, dN/dE). The `TH1D::GetRandom` method will return random numbers distributed according to the histogram bins height, rather than the histogram bins area. The code attached here (a ROOT macro) reproduces this behavior (I attach it as a .txt file, since .C files are not supported). [test.txt](https://github.com/root-project/root/files/7845002/test.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9530
https://github.com/root-project/root/issues/9530:510,safety,test,test,510,"TH1D::GetRandom and histograms with non-uniform binning; Assume to have a TH1D object, with non-uniform binning, representing some kind of differential quantity (for example, a particle flux as a function of the particle energy, dN/dE). The `TH1D::GetRandom` method will return random numbers distributed according to the histogram bins height, rather than the histogram bins area. The code attached here (a ROOT macro) reproduces this behavior (I attach it as a .txt file, since .C files are not supported). [test.txt](https://github.com/root-project/root/files/7845002/test.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9530
https://github.com/root-project/root/issues/9530:571,safety,test,test,571,"TH1D::GetRandom and histograms with non-uniform binning; Assume to have a TH1D object, with non-uniform binning, representing some kind of differential quantity (for example, a particle flux as a function of the particle energy, dN/dE). The `TH1D::GetRandom` method will return random numbers distributed according to the histogram bins height, rather than the histogram bins area. The code attached here (a ROOT macro) reproduces this behavior (I attach it as a .txt file, since .C files are not supported). [test.txt](https://github.com/root-project/root/files/7845002/test.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9530
https://github.com/root-project/root/issues/9530:510,testability,test,test,510,"TH1D::GetRandom and histograms with non-uniform binning; Assume to have a TH1D object, with non-uniform binning, representing some kind of differential quantity (for example, a particle flux as a function of the particle energy, dN/dE). The `TH1D::GetRandom` method will return random numbers distributed according to the histogram bins height, rather than the histogram bins area. The code attached here (a ROOT macro) reproduces this behavior (I attach it as a .txt file, since .C files are not supported). [test.txt](https://github.com/root-project/root/files/7845002/test.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9530
https://github.com/root-project/root/issues/9530:571,testability,test,test,571,"TH1D::GetRandom and histograms with non-uniform binning; Assume to have a TH1D object, with non-uniform binning, representing some kind of differential quantity (for example, a particle flux as a function of the particle energy, dN/dE). The `TH1D::GetRandom` method will return random numbers distributed according to the histogram bins height, rather than the histogram bins area. The code attached here (a ROOT macro) reproduces this behavior (I attach it as a .txt file, since .C files are not supported). [test.txt](https://github.com/root-project/root/files/7845002/test.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9530
https://github.com/root-project/root/issues/9530:436,usability,behavi,behavior,436,"TH1D::GetRandom and histograms with non-uniform binning; Assume to have a TH1D object, with non-uniform binning, representing some kind of differential quantity (for example, a particle flux as a function of the particle energy, dN/dE). The `TH1D::GetRandom` method will return random numbers distributed according to the histogram bins height, rather than the histogram bins area. The code attached here (a ROOT macro) reproduces this behavior (I attach it as a .txt file, since .C files are not supported). [test.txt](https://github.com/root-project/root/files/7845002/test.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9530
https://github.com/root-project/root/issues/9530:497,usability,support,supported,497,"TH1D::GetRandom and histograms with non-uniform binning; Assume to have a TH1D object, with non-uniform binning, representing some kind of differential quantity (for example, a particle flux as a function of the particle energy, dN/dE). The `TH1D::GetRandom` method will return random numbers distributed according to the histogram bins height, rather than the histogram bins area. The code attached here (a ROOT macro) reproduces this behavior (I attach it as a .txt file, since .C files are not supported). [test.txt](https://github.com/root-project/root/files/7845002/test.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9530
https://github.com/root-project/root/pull/9532:0,deployability,Updat,Update,0,"Update warning flag for bidi characters; `-Wbidirectional=` was RedHat's initial proposal that they also shipped in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed to `-Wbidi-chars=` which will appear in GCC 12 and was backported to the next gcc-8.5.0-5.el8. See the mailing list thread at https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031 for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9532
https://github.com/root-project/root/pull/9532:342,deployability,patch,patches,342,"Update warning flag for bidi characters; `-Wbidirectional=` was RedHat's initial proposal that they also shipped in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed to `-Wbidi-chars=` which will appear in GCC 12 and was backported to the next gcc-8.5.0-5.el8. See the mailing list thread at https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031 for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9532
https://github.com/root-project/root/pull/9532:0,safety,Updat,Update,0,"Update warning flag for bidi characters; `-Wbidirectional=` was RedHat's initial proposal that they also shipped in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed to `-Wbidi-chars=` which will appear in GCC 12 and was backported to the next gcc-8.5.0-5.el8. See the mailing list thread at https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031 for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9532
https://github.com/root-project/root/pull/9532:153,safety,review,review,153,"Update warning flag for bidi characters; `-Wbidirectional=` was RedHat's initial proposal that they also shipped in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed to `-Wbidi-chars=` which will appear in GCC 12 and was backported to the next gcc-8.5.0-5.el8. See the mailing list thread at https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031 for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9532
https://github.com/root-project/root/pull/9532:342,safety,patch,patches,342,"Update warning flag for bidi characters; `-Wbidirectional=` was RedHat's initial proposal that they also shipped in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed to `-Wbidi-chars=` which will appear in GCC 12 and was backported to the next gcc-8.5.0-5.el8. See the mailing list thread at https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031 for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9532
https://github.com/root-project/root/pull/9532:0,security,Updat,Update,0,"Update warning flag for bidi characters; `-Wbidirectional=` was RedHat's initial proposal that they also shipped in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed to `-Wbidi-chars=` which will appear in GCC 12 and was backported to the next gcc-8.5.0-5.el8. See the mailing list thread at https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031 for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9532
https://github.com/root-project/root/pull/9532:342,security,patch,patches,342,"Update warning flag for bidi characters; `-Wbidirectional=` was RedHat's initial proposal that they also shipped in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed to `-Wbidi-chars=` which will appear in GCC 12 and was backported to the next gcc-8.5.0-5.el8. See the mailing list thread at https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031 for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9532
https://github.com/root-project/root/pull/9532:153,testability,review,review,153,"Update warning flag for bidi characters; `-Wbidirectional=` was RedHat's initial proposal that they also shipped in gcc-8.5.0-4.el8 for CentOS 8. During review, the name was changed to `-Wbidi-chars=` which will appear in GCC 12 and was backported to the next gcc-8.5.0-5.el8. See the mailing list thread at https://gcc.gnu.org/pipermail/gcc-patches/2021-November/thread.html#583031 for details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9532
https://github.com/root-project/root/pull/9533:118,deployability,build,build,118,"[cmake] For ""cintdlls"", do not register include paths (aka ROOTSYS/include) (v6-26); . We do not want to remember the build directory, see issue #7108. (cherry picked from commit c2f028feb6da152ff07020b3b4b2a961c1af315e). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9533
https://github.com/root-project/root/pull/9533:317,deployability,updat,updated,317,"[cmake] For ""cintdlls"", do not register include paths (aka ROOTSYS/include) (v6-26); . We do not want to remember the build directory, see issue #7108. (cherry picked from commit c2f028feb6da152ff07020b3b4b2a961c1af315e). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9533
https://github.com/root-project/root/pull/9533:105,safety,reme,remember,105,"[cmake] For ""cintdlls"", do not register include paths (aka ROOTSYS/include) (v6-26); . We do not want to remember the build directory, see issue #7108. (cherry picked from commit c2f028feb6da152ff07020b3b4b2a961c1af315e). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9533
https://github.com/root-project/root/pull/9533:287,safety,test,tested,287,"[cmake] For ""cintdlls"", do not register include paths (aka ROOTSYS/include) (v6-26); . We do not want to remember the build directory, see issue #7108. (cherry picked from commit c2f028feb6da152ff07020b3b4b2a961c1af315e). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9533
https://github.com/root-project/root/pull/9533:317,safety,updat,updated,317,"[cmake] For ""cintdlls"", do not register include paths (aka ROOTSYS/include) (v6-26); . We do not want to remember the build directory, see issue #7108. (cherry picked from commit c2f028feb6da152ff07020b3b4b2a961c1af315e). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9533
https://github.com/root-project/root/pull/9533:317,security,updat,updated,317,"[cmake] For ""cintdlls"", do not register include paths (aka ROOTSYS/include) (v6-26); . We do not want to remember the build directory, see issue #7108. (cherry picked from commit c2f028feb6da152ff07020b3b4b2a961c1af315e). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9533
https://github.com/root-project/root/pull/9533:287,testability,test,tested,287,"[cmake] For ""cintdlls"", do not register include paths (aka ROOTSYS/include) (v6-26); . We do not want to remember the build directory, see issue #7108. (cherry picked from commit c2f028feb6da152ff07020b3b4b2a961c1af315e). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9533
https://github.com/root-project/root/pull/9536:741,deployability,updat,updated,741,"[RDF] Remove static members from SaveGraph; SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9536
https://github.com/root-project/root/pull/9536:625,energy efficiency,adapt,adapted,625,"[RDF] Remove static members from SaveGraph; SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9536
https://github.com/root-project/root/pull/9536:148,integrability,filter,filter,148,"[RDF] Remove static members from SaveGraph; SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9536
https://github.com/root-project/root/pull/9536:625,integrability,adapt,adapted,625,"[RDF] Remove static members from SaveGraph; SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9536
https://github.com/root-project/root/pull/9536:625,interoperability,adapt,adapted,625,"[RDF] Remove static members from SaveGraph; SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9536
https://github.com/root-project/root/pull/9536:625,modifiability,adapt,adapted,625,"[RDF] Remove static members from SaveGraph; SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9536
https://github.com/root-project/root/pull/9536:614,safety,Test,Tests,614,"[RDF] Remove static members from SaveGraph; SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9536
https://github.com/root-project/root/pull/9536:711,safety,test,tested,711,"[RDF] Remove static members from SaveGraph; SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9536
https://github.com/root-project/root/pull/9536:741,safety,updat,updated,741,"[RDF] Remove static members from SaveGraph; SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9536
https://github.com/root-project/root/pull/9536:485,security,sign,signature,485,"[RDF] Remove static members from SaveGraph; SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9536
https://github.com/root-project/root/pull/9536:741,security,updat,updated,741,"[RDF] Remove static members from SaveGraph; SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9536
https://github.com/root-project/root/pull/9536:614,testability,Test,Tests,614,"[RDF] Remove static members from SaveGraph; SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9536
https://github.com/root-project/root/pull/9536:711,testability,test,tested,711,"[RDF] Remove static members from SaveGraph; SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9536
https://github.com/root-project/root/pull/9538:397,deployability,updat,updated,397,"Adding the bin width in the TH1::ComputeIntegral method; Adding the bin width in the TH1::ComputeIntegral method, to handle histograms with non-uniform binning. # This Pull request:. ## Changes or fixes:. Modified the TH1::ComputeIntegral method, used in the TH1::GetRandom method, by multiplying the ""y"" variable (bin content) by the bin width. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). Not yet, since this has to be discussed with the ROOT developers. It has to be understood what a ""random extraction from a histogram"" should represent. This PR fixes 9530.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9538
https://github.com/root-project/root/pull/9538:305,modifiability,variab,variable,305,"Adding the bin width in the TH1::ComputeIntegral method; Adding the bin width in the TH1::ComputeIntegral method, to handle histograms with non-uniform binning. # This Pull request:. ## Changes or fixes:. Modified the TH1::ComputeIntegral method, used in the TH1::GetRandom method, by multiplying the ""y"" variable (bin content) by the bin width. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). Not yet, since this has to be discussed with the ROOT developers. It has to be understood what a ""random extraction from a histogram"" should represent. This PR fixes 9530.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9538
https://github.com/root-project/root/pull/9538:319,performance,content,content,319,"Adding the bin width in the TH1::ComputeIntegral method; Adding the bin width in the TH1::ComputeIntegral method, to handle histograms with non-uniform binning. # This Pull request:. ## Changes or fixes:. Modified the TH1::ComputeIntegral method, used in the TH1::GetRandom method, by multiplying the ""y"" variable (bin content) by the bin width. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). Not yet, since this has to be discussed with the ROOT developers. It has to be understood what a ""random extraction from a histogram"" should represent. This PR fixes 9530.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9538
https://github.com/root-project/root/pull/9538:367,safety,test,tested,367,"Adding the bin width in the TH1::ComputeIntegral method; Adding the bin width in the TH1::ComputeIntegral method, to handle histograms with non-uniform binning. # This Pull request:. ## Changes or fixes:. Modified the TH1::ComputeIntegral method, used in the TH1::GetRandom method, by multiplying the ""y"" variable (bin content) by the bin width. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). Not yet, since this has to be discussed with the ROOT developers. It has to be understood what a ""random extraction from a histogram"" should represent. This PR fixes 9530.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9538
https://github.com/root-project/root/pull/9538:397,safety,updat,updated,397,"Adding the bin width in the TH1::ComputeIntegral method; Adding the bin width in the TH1::ComputeIntegral method, to handle histograms with non-uniform binning. # This Pull request:. ## Changes or fixes:. Modified the TH1::ComputeIntegral method, used in the TH1::GetRandom method, by multiplying the ""y"" variable (bin content) by the bin width. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). Not yet, since this has to be discussed with the ROOT developers. It has to be understood what a ""random extraction from a histogram"" should represent. This PR fixes 9530.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9538
https://github.com/root-project/root/pull/9538:205,security,Modif,Modified,205,"Adding the bin width in the TH1::ComputeIntegral method; Adding the bin width in the TH1::ComputeIntegral method, to handle histograms with non-uniform binning. # This Pull request:. ## Changes or fixes:. Modified the TH1::ComputeIntegral method, used in the TH1::GetRandom method, by multiplying the ""y"" variable (bin content) by the bin width. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). Not yet, since this has to be discussed with the ROOT developers. It has to be understood what a ""random extraction from a histogram"" should represent. This PR fixes 9530.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9538
https://github.com/root-project/root/pull/9538:397,security,updat,updated,397,"Adding the bin width in the TH1::ComputeIntegral method; Adding the bin width in the TH1::ComputeIntegral method, to handle histograms with non-uniform binning. # This Pull request:. ## Changes or fixes:. Modified the TH1::ComputeIntegral method, used in the TH1::GetRandom method, by multiplying the ""y"" variable (bin content) by the bin width. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). Not yet, since this has to be discussed with the ROOT developers. It has to be understood what a ""random extraction from a histogram"" should represent. This PR fixes 9530.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9538
https://github.com/root-project/root/pull/9538:367,testability,test,tested,367,"Adding the bin width in the TH1::ComputeIntegral method; Adding the bin width in the TH1::ComputeIntegral method, to handle histograms with non-uniform binning. # This Pull request:. ## Changes or fixes:. Modified the TH1::ComputeIntegral method, used in the TH1::GetRandom method, by multiplying the ""y"" variable (bin content) by the bin width. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). Not yet, since this has to be discussed with the ROOT developers. It has to be understood what a ""random extraction from a histogram"" should represent. This PR fixes 9530.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9538
https://github.com/root-project/root/pull/9539:20,deployability,integr,integral,20,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:80,deployability,updat,update,80,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:307,deployability,integr,integrals,307,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:466,deployability,updat,updated,466,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:20,integrability,integr,integral,20,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:307,integrability,integr,integrals,307,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:20,interoperability,integr,integral,20,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:307,interoperability,integr,integrals,307,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:20,modifiability,integr,integral,20,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:307,modifiability,integr,integrals,307,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:20,reliability,integr,integral,20,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:307,reliability,integr,integrals,307,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:80,safety,updat,update,80,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:436,safety,test,tested,436,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:466,safety,updat,updated,466,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:20,security,integr,integral,20,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:80,security,updat,update,80,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:307,security,integr,integrals,307,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:392,security,sign,significant,392,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:466,security,updat,updated,466,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:20,testability,integr,integral,20,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:307,testability,integr,integrals,307,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9539:436,testability,test,tested,436,"[RF] Add analytical integral for RooLandau; # This Pull request:. I did a local update of root/master with this, i was not able to compile locally on my mac for few other reasons. Suggestions on changes and checks to add welcome. . ## Changes or fixes:. Add the CDF calls from Math/ProbFunc to speed up the integrals of RooLandau PDFs. . Code has been used in on-going analysis at LHCb, with significant speed-up . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9539
https://github.com/root-project/root/pull/9540:810,availability,redund,redundant,810,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:810,deployability,redundan,redundant,810,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:904,deployability,updat,updated,904,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:832,energy efficiency,adapt,adapted,832,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:342,integrability,filter,filter,342,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:832,integrability,adapt,adapted,832,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:832,interoperability,adapt,adapted,832,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:832,modifiability,adapt,adapted,832,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:810,reliability,redundan,redundant,810,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:810,safety,redund,redundant,810,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:821,safety,Test,Tests,821,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:874,safety,test,tested,874,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:904,safety,updat,updated,904,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:523,security,sign,signature,523,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:904,security,updat,updated,904,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:821,testability,Test,Tests,821,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9540:874,testability,test,tested,874,"[DF] Remove SaveGraph static members; Add SaveGraph tutorials; # This Pull request:. [DF] Added SaveGraph Tutorials. [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph. Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9145.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9540
https://github.com/root-project/root/pull/9541:17,safety,test,tests,17,Fix TMVA PyTorch tests on Windows. Resolves #9487; This PR should fix #9487,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9541
https://github.com/root-project/root/pull/9541:17,testability,test,tests,17,Fix TMVA PyTorch tests on Windows. Resolves #9487; This PR should fix #9487,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9541
https://github.com/root-project/root/pull/9542:24,deployability,Build,Building,24,Resolve Clang warnings; Building with current Clang `main` produced a number of warnings.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9542
https://github.com/root-project/root/pull/9542:38,energy efficiency,current,current,38,Resolve Clang warnings; Building with current Clang `main` produced a number of warnings.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9542
https://github.com/root-project/root/issues/9543:367,availability,avail,available,367,"roottest-root-treeformula-stl-make crashes during process termination; After applying all updates on CentOS 8 Stream, `roottest-root-treeformula-stl-make` started crashing reproducibly both with GCC 8.5.0 and Clang 13 (assuming I didn't do something stupid). ### Output. ```. Processing runmapvector.C... Warning in <TClass::Init>: no dictionary for class MyEvent is available. ***********************************. * Row * Instance * data.firs *. ***********************************. * 0 * 0 * 3 *. ***********************************. ***********************************. * Row * Instance * data.seco *. ***********************************. * 0 * 0 * 5 *. * 0 * 1 * 7 *. ***********************************. free(): invalid next size (fast). ```. ### Backtrace. ```. #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjAr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:90,deployability,updat,updates,90,"roottest-root-treeformula-stl-make crashes during process termination; After applying all updates on CentOS 8 Stream, `roottest-root-treeformula-stl-make` started crashing reproducibly both with GCC 8.5.0 and Clang 13 (assuming I didn't do something stupid). ### Output. ```. Processing runmapvector.C... Warning in <TClass::Init>: no dictionary for class MyEvent is available. ***********************************. * Row * Instance * data.firs *. ***********************************. * 0 * 0 * 3 *. ***********************************. ***********************************. * Row * Instance * data.seco *. ***********************************. * 0 * 0 * 5 *. * 0 * 1 * 7 *. ***********************************. free(): invalid next size (fast). ```. ### Backtrace. ```. #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjAr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:1300,deployability,Releas,ReleaseObject,1300,"rning in <TClass::Init>: no dictionary for class MyEvent is available. ***********************************. * Row * Instance * data.firs *. ***********************************. * 0 * 0 * 3 *. ***********************************. ***********************************. * Row * Instance * data.seco *. ***********************************. * 0 * 0 * 5 *. * 0 * 1 * 7 *. ***********************************. free(): invalid next size (fast). ```. ### Backtrace. ```. #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:1153,energy efficiency,optim,optimized,1153,"rted crashing reproducibly both with GCC 8.5.0 and Clang 13 (assuming I didn't do something stupid). ### Output. ```. Processing runmapvector.C... Warning in <TClass::Init>: no dictionary for class MyEvent is available. ***********************************. * Row * Instance * data.firs *. ***********************************. * 0 * 0 * 3 *. ***********************************. ***********************************. * Row * Instance * data.seco *. ***********************************. * 0 * 0 * 5 *. * 0 * 1 * 7 *. ***********************************. free(): invalid next size (fast). ```. ### Backtrace. ```. #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:1227,energy efficiency,core,core,1227," didn't do something stupid). ### Output. ```. Processing runmapvector.C... Warning in <TClass::Init>: no dictionary for class MyEvent is available. ***********************************. * Row * Instance * data.firs *. ***********************************. * 0 * 0 * 3 *. ***********************************. ***********************************. * Row * Instance * data.seco *. ***********************************. * 0 * 0 * 5 *. * 0 * 1 * 7 *. ***********************************. free(): invalid next size (fast). ```. ### Backtrace. ```. #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:1632,energy efficiency,optim,optimized,1632,"***. * 0 * 0 * 5 *. * 0 * 1 * 7 *. ***********************************. free(): invalid next size (fast). ```. ### Backtrace. ```. #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:1799,energy efficiency,optim,optimized,1799,"om /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:1980,energy efficiency,core,core,1980,"interr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2082,energy efficiency,optim,optimized,2082,"fff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2223,energy efficiency,optim,optimized,2223,"ore/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x000000000040",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2365,energy efficiency,optim,optimized,2365,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2408,energy efficiency,core,core,2408,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2524,energy efficiency,optim,optimized,2524,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2567,energy efficiency,core,core,2567,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2682,energy efficiency,alloc,alloc,2682,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2717,energy efficiency,core,core,2717,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2799,energy efficiency,optim,optimized,2799,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2829,energy efficiency,optim,optimized,2829,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2872,energy efficiency,core,core,2872,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2983,energy efficiency,optim,optimized,2983,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:3026,energy efficiency,core,core,3026,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:3180,energy efficiency,core,core,3180,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:3248,energy efficiency,optim,optimized,3248,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:1153,performance,optimiz,optimized,1153,"rted crashing reproducibly both with GCC 8.5.0 and Clang 13 (assuming I didn't do something stupid). ### Output. ```. Processing runmapvector.C... Warning in <TClass::Init>: no dictionary for class MyEvent is available. ***********************************. * Row * Instance * data.firs *. ***********************************. * 0 * 0 * 3 *. ***********************************. ***********************************. * Row * Instance * data.seco *. ***********************************. * 0 * 0 * 5 *. * 0 * 1 * 7 *. ***********************************. free(): invalid next size (fast). ```. ### Backtrace. ```. #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:1632,performance,optimiz,optimized,1632,"***. * 0 * 0 * 5 *. * 0 * 1 * 7 *. ***********************************. free(): invalid next size (fast). ```. ### Backtrace. ```. #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:1799,performance,optimiz,optimized,1799,"om /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2082,performance,optimiz,optimized,2082,"fff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2223,performance,optimiz,optimized,2223,"ore/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x000000000040",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2365,performance,optimiz,optimized,2365,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2524,performance,optimiz,optimized,2524,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2799,performance,optimiz,optimized,2799,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2829,performance,optimiz,optimized,2829,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2983,performance,optimiz,optimized,2983,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:3248,performance,optimiz,optimized,3248,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:367,reliability,availab,available,367,"roottest-root-treeformula-stl-make crashes during process termination; After applying all updates on CentOS 8 Stream, `roottest-root-treeformula-stl-make` started crashing reproducibly both with GCC 8.5.0 and Clang 13 (assuming I didn't do something stupid). ### Output. ```. Processing runmapvector.C... Warning in <TClass::Init>: no dictionary for class MyEvent is available. ***********************************. * Row * Instance * data.firs *. ***********************************. * 0 * 0 * 3 *. ***********************************. ***********************************. * Row * Instance * data.seco *. ***********************************. * 0 * 0 * 5 *. * 0 * 1 * 7 *. ***********************************. free(): invalid next size (fast). ```. ### Backtrace. ```. #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjAr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:90,safety,updat,updates,90,"roottest-root-treeformula-stl-make crashes during process termination; After applying all updates on CentOS 8 Stream, `roottest-root-treeformula-stl-make` started crashing reproducibly both with GCC 8.5.0 and Clang 13 (assuming I didn't do something stupid). ### Output. ```. Processing runmapvector.C... Warning in <TClass::Init>: no dictionary for class MyEvent is available. ***********************************. * Row * Instance * data.firs *. ***********************************. * 0 * 0 * 3 *. ***********************************. ***********************************. * Row * Instance * data.seco *. ***********************************. * 0 * 0 * 5 *. * 0 * 1 * 7 *. ***********************************. free(): invalid next size (fast). ```. ### Backtrace. ```. #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjAr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:367,safety,avail,available,367,"roottest-root-treeformula-stl-make crashes during process termination; After applying all updates on CentOS 8 Stream, `roottest-root-treeformula-stl-make` started crashing reproducibly both with GCC 8.5.0 and Clang 13 (assuming I didn't do something stupid). ### Output. ```. Processing runmapvector.C... Warning in <TClass::Init>: no dictionary for class MyEvent is available. ***********************************. * Row * Instance * data.firs *. ***********************************. * 0 * 0 * 3 *. ***********************************. ***********************************. * Row * Instance * data.seco *. ***********************************. * 0 * 0 * 5 *. * 0 * 1 * 7 *. ***********************************. free(): invalid next size (fast). ```. ### Backtrace. ```. #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjAr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:90,security,updat,updates,90,"roottest-root-treeformula-stl-make crashes during process termination; After applying all updates on CentOS 8 Stream, `roottest-root-treeformula-stl-make` started crashing reproducibly both with GCC 8.5.0 and Clang 13 (assuming I didn't do something stupid). ### Output. ```. Processing runmapvector.C... Warning in <TClass::Init>: no dictionary for class MyEvent is available. ***********************************. * Row * Instance * data.firs *. ***********************************. * 0 * 0 * 3 *. ***********************************. ***********************************. * Row * Instance * data.seco *. ***********************************. * 0 * 0 * 5 *. * 0 * 1 * 7 *. ***********************************. free(): invalid next size (fast). ```. ### Backtrace. ```. #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjAr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:367,security,availab,available,367,"roottest-root-treeformula-stl-make crashes during process termination; After applying all updates on CentOS 8 Stream, `roottest-root-treeformula-stl-make` started crashing reproducibly both with GCC 8.5.0 and Clang 13 (assuming I didn't do something stupid). ### Output. ```. Processing runmapvector.C... Warning in <TClass::Init>: no dictionary for class MyEvent is available. ***********************************. * Row * Instance * data.firs *. ***********************************. * 0 * 0 * 3 *. ***********************************. ***********************************. * Row * Instance * data.seco *. ***********************************. * 0 * 0 * 5 *. * 0 * 1 * 7 *. ***********************************. free(): invalid next size (fast). ```. ### Backtrace. ```. #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6. #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6. #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6. #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 . #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjAr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/issues/9543:2975,usability,statu,status,2975,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 . #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 . #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 . #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 . #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 . #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 . #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 . #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 . #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 . #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 . #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 . #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 . #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 . #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9543
https://github.com/root-project/root/pull/9545:50,deployability,version,version,50,"[TCling] callfunc: O1, no ptrchecks (v6-26); 6-26 version of https://github.com/root-project/root/pull/9531",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9545
https://github.com/root-project/root/pull/9545:50,integrability,version,version,50,"[TCling] callfunc: O1, no ptrchecks (v6-26); 6-26 version of https://github.com/root-project/root/pull/9531",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9545
https://github.com/root-project/root/pull/9545:50,modifiability,version,version,50,"[TCling] callfunc: O1, no ptrchecks (v6-26); 6-26 version of https://github.com/root-project/root/pull/9531",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9545
https://github.com/root-project/root/pull/9546:17,availability,error,errors,17,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/pull/9546:216,availability,error,errors,216,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/pull/9546:146,deployability,updat,updated,146,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/pull/9546:0,energy efficiency,Reduc,Reduce,0,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/pull/9546:199,energy efficiency,Reduc,Reduce,199,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/pull/9546:17,performance,error,errors,17,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/pull/9546:216,performance,error,errors,216,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/pull/9546:17,safety,error,errors,17,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/pull/9546:116,safety,test,tested,116,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/pull/9546:146,safety,updat,updated,146,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/pull/9546:216,safety,error,errors,216,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/pull/9546:146,security,updat,updated,146,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/pull/9546:116,testability,test,tested,116,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/pull/9546:17,usability,error,errors,17,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/pull/9546:216,usability,error,errors,216,Reduce precision errors for Mean and StdDev #7395; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9546
https://github.com/root-project/root/issues/9547:162,availability,failur,failures,162,"[RF] RooFit crashes when ROOT is built with Clang 13; Both on CentOS 8 Stream and Arch Linux, when compiling with Clang 13.0.0, there are a number of RooFit test failures due to crashes. Example crash when running `tutorials/roofit/rf201_composite.C`:. ```. root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7ffffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:162,deployability,fail,failures,162,"[RF] RooFit crashes when ROOT is built with Clang 13; Both on CentOS 8 Stream and Arch Linux, when compiling with Clang 13.0.0, there are a number of RooFit test failures due to crashes. Example crash when running `tutorials/roofit/rf201_composite.C`:. ```. root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7ffffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:461,deployability,fail,failed,461,"[RF] RooFit crashes when ROOT is built with Clang 13; Both on CentOS 8 Stream and Arch Linux, when compiling with Clang 13.0.0, there are a number of RooFit test failures due to crashes. Example crash when running `tutorials/roofit/rf201_composite.C`:. ```. root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7ffffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1246,deployability,depend,dependsOn,1246,". ```. root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1450,deployability,depend,dependsOn,1450,"ze()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1608,deployability,observ,observableOverlaps,1608,"7ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1634,energy efficiency,optim,optimized,1634,"rt_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1656,energy efficiency,optim,optimized,1656," from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1815,energy efficiency,optim,optimized,1815,"aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1837,energy efficiency,optim,optimized,1837,"nfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2175,energy efficiency,model,model,2175,"hnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binned",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2208,energy efficiency,optim,optimized,2208,"c/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2406,energy efficiency,model,model,2406,"core/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259. #17 0x00007ffff7fde51f in ?? (). #18 0x0000000000000000 in ?? (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2858,energy efficiency,optim,optimized,2858,"core/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259. #17 0x00007ffff7fde51f in ?? (). #18 0x0000000000000000 in ?? (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2885,energy efficiency,optim,optimized,2885,"core/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259. #17 0x00007ffff7fde51f in ?? (). #18 0x0000000000000000 in ?? (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2928,energy efficiency,optim,optimized,2928,"core/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259. #17 0x00007ffff7fde51f in ?? (). #18 0x0000000000000000 in ?? (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:3231,energy efficiency,optim,optimized,3231,"core/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259. #17 0x00007ffff7fde51f in ?? (). #18 0x0000000000000000 in ?? (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1246,integrability,depend,dependsOn,1246,". ```. root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1450,integrability,depend,dependsOn,1450,"ze()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1246,modifiability,depend,dependsOn,1246,". ```. root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1450,modifiability,depend,dependsOn,1450,"ze()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:3221,modifiability,exten,extended,3221,"core/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259. #17 0x00007ffff7fde51f in ?? (). #18 0x0000000000000000 in ?? (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:162,performance,failur,failures,162,"[RF] RooFit crashes when ROOT is built with Clang 13; Both on CentOS 8 Stream and Arch Linux, when compiling with Clang 13.0.0, there are a number of RooFit test failures due to crashes. Example crash when running `tutorials/roofit/rf201_composite.C`:. ```. root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7ffffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1634,performance,optimiz,optimized,1634,"rt_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1656,performance,optimiz,optimized,1656," from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1815,performance,optimiz,optimized,1815,"aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1837,performance,optimiz,optimized,1837,"nfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2208,performance,optimiz,optimized,2208,"c/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2858,performance,optimiz,optimized,2858,"core/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259. #17 0x00007ffff7fde51f in ?? (). #18 0x0000000000000000 in ?? (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2885,performance,optimiz,optimized,2885,"core/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259. #17 0x00007ffff7fde51f in ?? (). #18 0x0000000000000000 in ?? (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2928,performance,optimiz,optimized,2928,"core/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259. #17 0x00007ffff7fde51f in ?? (). #18 0x0000000000000000 in ?? (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:3231,performance,optimiz,optimized,3231,"core/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259. #17 0x00007ffff7fde51f in ?? (). #18 0x0000000000000000 in ?? (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:162,reliability,fail,failures,162,"[RF] RooFit crashes when ROOT is built with Clang 13; Both on CentOS 8 Stream and Arch Linux, when compiling with Clang 13.0.0, there are a number of RooFit test failures due to crashes. Example crash when running `tutorials/roofit/rf201_composite.C`:. ```. root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7ffffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:461,reliability,fail,failed,461,"[RF] RooFit crashes when ROOT is built with Clang 13; Both on CentOS 8 Stream and Arch Linux, when compiling with Clang 13.0.0, there are a number of RooFit test failures due to crashes. Example crash when running `tutorials/roofit/rf201_composite.C`:. ```. root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7ffffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:157,safety,test,test,157,"[RF] RooFit crashes when ROOT is built with Clang 13; Both on CentOS 8 Stream and Arch Linux, when compiling with Clang 13.0.0, there are a number of RooFit test failures due to crashes. Example crash when running `tutorials/roofit/rf201_composite.C`:. ```. root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7ffffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1246,safety,depend,dependsOn,1246,". ```. root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1284,safety,test,testArg,1284,"src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1450,safety,depend,dependsOn,1450,"ze()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1672,safety,test,testArg,1672,"bc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2175,security,model,model,2175,"hnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binned",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2406,security,model,model,2406,"core/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259. #17 0x00007ffff7fde51f in ?? (). #18 0x0000000000000000 in ?? (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:157,testability,test,test,157,"[RF] RooFit crashes when ROOT is built with Clang 13; Both on CentOS 8 Stream and Arch Linux, when compiling with Clang 13.0.0, there are a number of RooFit test failures due to crashes. Example crash when running `tutorials/roofit/rf201_composite.C`:. ```. root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7ffffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:413,testability,Assert,Assertion,413,"[RF] RooFit crashes when ROOT is built with Clang 13; Both on CentOS 8 Stream and Arch Linux, when compiling with Clang 13.0.0, there are a number of RooFit test failures due to crashes. Example crash when running `tutorials/roofit/rf201_composite.C`:. ```. root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7ffffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1246,testability,depend,dependsOn,1246,". ```. root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1284,testability,test,testArg,1284,"src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1450,testability,depend,dependsOn,1450,"ze()' failed. ```. ### Backtrace. ```. #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6. #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6. #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1608,testability,observ,observableOverlaps,1608,"7ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:1672,testability,test,testArg,1672,"bc.so.6. #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113. #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153. #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2197,usability,prototyp,prototype,2197,"ofitcore/inc/RooAbsArg.h:211. #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2427,usability,prototyp,prototype,2427,"core/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259. #17 0x00007ffff7fde51f in ?? (). #18 0x0000000000000000 in ?? (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2626,usability,prototyp,prototype,2626,"core/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259. #17 0x00007ffff7fde51f in ?? (). #18 0x0000000000000000 in ?? (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/issues/9547:2847,usability,prototyp,prototype,2847,"core/src/RooAbsArg.cxx:870. #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847. #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923. #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832. #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830. #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,. prototype=<optimized out>, auxProto=0x0, verbose=false). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63. #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55. #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,. auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055. #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,. auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014. #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,. autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>). at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259. #17 0x00007ffff7fde51f in ?? (). #18 0x0000000000000000 in ?? (). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9547
https://github.com/root-project/root/pull/9549:23,integrability,messag,message,23,[rbrowser] add warning message when RBrowser stared for TBrowser; Provides minimal information that happens and how original. browser implementation can be enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9549
https://github.com/root-project/root/pull/9549:23,interoperability,messag,message,23,[rbrowser] add warning message when RBrowser stared for TBrowser; Provides minimal information that happens and how original. browser implementation can be enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9549
https://github.com/root-project/root/pull/9549:75,usability,minim,minimal,75,[rbrowser] add warning message when RBrowser stared for TBrowser; Provides minimal information that happens and how original. browser implementation can be enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9549
https://github.com/root-project/root/pull/9550:23,integrability,messag,message,23,"[rbrowser] add warning message when RBrowser stared for TBrowser, 6.26; Provides minimal information that happens and how original. browser implementation can be enabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9550
https://github.com/root-project/root/pull/9550:23,interoperability,messag,message,23,"[rbrowser] add warning message when RBrowser stared for TBrowser, 6.26; Provides minimal information that happens and how original. browser implementation can be enabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9550
https://github.com/root-project/root/pull/9550:81,usability,minim,minimal,81,"[rbrowser] add warning message when RBrowser stared for TBrowser, 6.26; Provides minimal information that happens and how original. browser implementation can be enabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9550
https://github.com/root-project/root/pull/9551:1115,deployability,updat,updated,1115,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9551:1039,energy efficiency,adapt,adapted,1039,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9551:1039,integrability,adapt,adapted,1039,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9551:1039,interoperability,adapt,adapted,1039,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9551:1039,modifiability,adapt,adapted,1039,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9551:739,performance,content,content,739,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9551:1014,safety,Test,Tests,1014,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9551:1085,safety,test,tested,1085,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9551:1115,safety,updat,updated,1115,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9551:16,security,sign,signature,16,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9551:101,security,sign,signature,101,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9551:1115,security,updat,updated,1115,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9551:1014,testability,Test,Tests,1014,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9551:1085,testability,test,tested,1085,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9551:298,usability,interact,interactive,298,"[DF] Change the signature of RInterface::Describe (Fix #8893); # This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`. As brief description is the output from `RInterface::DescribeDataset`. As full description is the remaining code from `RInterface::Describe`. Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:. * `AsString(bool)` -> returning brief/full description as a string. * `Print(bool)` -> printing the content of `AsString(bool)`. * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`. * printValue -> returns string corresponding to AsString(shortFomat=false). * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9551
https://github.com/root-project/root/pull/9552:182,deployability,observ,observables,182,"[RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. This bug was discovered thanks to a [forum post](https://root-forum.cern.ch/t/problems-with-2d-simultaneous-fit/48249/4) that provided a code snippet that crashed in ROOT master and 6.24 because the cached normalization sets were used after the servers were redirected. Needs to be backported to 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9552
https://github.com/root-project/root/pull/9552:240,integrability,discover,discovered,240,"[RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. This bug was discovered thanks to a [forum post](https://root-forum.cern.ch/t/problems-with-2d-simultaneous-fit/48249/4) that provided a code snippet that crashed in ROOT master and 6.24 because the cached normalization sets were used after the servers were redirected. Needs to be backported to 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9552
https://github.com/root-project/root/pull/9552:240,interoperability,discover,discovered,240,"[RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. This bug was discovered thanks to a [forum post](https://root-forum.cern.ch/t/problems-with-2d-simultaneous-fit/48249/4) that provided a code snippet that crashed in ROOT master and 6.24 because the cached normalization sets were used after the servers were redirected. Needs to be backported to 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9552
https://github.com/root-project/root/pull/9552:11,performance,cach,cached,11,"[RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. This bug was discovered thanks to a [forum post](https://root-forum.cern.ch/t/problems-with-2d-simultaneous-fit/48249/4) that provided a code snippet that crashed in ROOT master and 6.24 because the cached normalization sets were used after the servers were redirected. Needs to be backported to 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9552
https://github.com/root-project/root/pull/9552:95,performance,cach,cached,95,"[RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. This bug was discovered thanks to a [forum post](https://root-forum.cern.ch/t/problems-with-2d-simultaneous-fit/48249/4) that provided a code snippet that crashed in ROOT master and 6.24 because the cached normalization sets were used after the servers were redirected. Needs to be backported to 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9552
https://github.com/root-project/root/pull/9552:426,performance,cach,cached,426,"[RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. This bug was discovered thanks to a [forum post](https://root-forum.cern.ch/t/problems-with-2d-simultaneous-fit/48249/4) that provided a code snippet that crashed in ROOT master and 6.24 because the cached normalization sets were used after the servers were redirected. Needs to be backported to 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9552
https://github.com/root-project/root/pull/9552:182,testability,observ,observables,182,"[RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. This bug was discovered thanks to a [forum post](https://root-forum.cern.ch/t/problems-with-2d-simultaneous-fit/48249/4) that provided a code snippet that crashed in ROOT master and 6.24 because the cached normalization sets were used after the servers were redirected. Needs to be backported to 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9552
https://github.com/root-project/root/pull/9552:322,testability,simul,simultaneous-fit,322,"[RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. This bug was discovered thanks to a [forum post](https://root-forum.cern.ch/t/problems-with-2d-simultaneous-fit/48249/4) that provided a code snippet that crashed in ROOT master and 6.24 because the cached normalization sets were used after the servers were redirected. Needs to be backported to 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9552
https://github.com/root-project/root/pull/9552:240,usability,discov,discovered,240,"[RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. This bug was discovered thanks to a [forum post](https://root-forum.cern.ch/t/problems-with-2d-simultaneous-fit/48249/4) that provided a code snippet that crashed in ROOT master and 6.24 because the cached normalization sets were used after the servers were redirected. Needs to be backported to 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9552
https://github.com/root-project/root/pull/9553:9,performance,memor,memory,9,"[RF] Fix memory leak in `RooAbsData::split`; Fix a memory leak that was introduced in [1], where the owning pointer. returned by `RooAbsArg::getObservables` was not deleted. [1] ""New RooAbsData::split function for smaller datasets in categories"",. commit 5736fd2 in the `master` branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9553
https://github.com/root-project/root/pull/9553:51,performance,memor,memory,51,"[RF] Fix memory leak in `RooAbsData::split`; Fix a memory leak that was introduced in [1], where the owning pointer. returned by `RooAbsArg::getObservables` was not deleted. [1] ""New RooAbsData::split function for smaller datasets in categories"",. commit 5736fd2 in the `master` branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9553
https://github.com/root-project/root/pull/9553:9,usability,memor,memory,9,"[RF] Fix memory leak in `RooAbsData::split`; Fix a memory leak that was introduced in [1], where the owning pointer. returned by `RooAbsArg::getObservables` was not deleted. [1] ""New RooAbsData::split function for smaller datasets in categories"",. commit 5736fd2 in the `master` branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9553
https://github.com/root-project/root/pull/9553:51,usability,memor,memory,51,"[RF] Fix memory leak in `RooAbsData::split`; Fix a memory leak that was introduced in [1], where the owning pointer. returned by `RooAbsArg::getObservables` was not deleted. [1] ""New RooAbsData::split function for smaller datasets in categories"",. commit 5736fd2 in the `master` branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9553
https://github.com/root-project/root/issues/9556:88,deployability,contain,contained,88,"[DF] Prettier, more helpful graphviz computation graph representations; The information contained in some nodes could be made more helpful, e.g. `Histo1D` nodes could display the names of the columns used for filling the histogram and/or the name of the histogram produced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9556
https://github.com/root-project/root/issues/9556:20,usability,help,helpful,20,"[DF] Prettier, more helpful graphviz computation graph representations; The information contained in some nodes could be made more helpful, e.g. `Histo1D` nodes could display the names of the columns used for filling the histogram and/or the name of the histogram produced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9556
https://github.com/root-project/root/issues/9556:131,usability,help,helpful,131,"[DF] Prettier, more helpful graphviz computation graph representations; The information contained in some nodes could be made more helpful, e.g. `Histo1D` nodes could display the names of the columns used for filling the histogram and/or the name of the histogram produced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9556
https://github.com/root-project/root/pull/9557:157,deployability,automat,automatically,157,"[RF] RooAddPdf: Avoid UB in checkObservables; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9557
https://github.com/root-project/root/pull/9557:414,energy efficiency,optim,optimizes,414,"[RF] RooAddPdf: Avoid UB in checkObservables; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9557
https://github.com/root-project/root/pull/9557:414,performance,optimiz,optimizes,414,"[RF] RooAddPdf: Avoid UB in checkObservables; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9557
https://github.com/root-project/root/pull/9557:16,safety,Avoid,Avoid,16,"[RF] RooAddPdf: Avoid UB in checkObservables; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9557
https://github.com/root-project/root/pull/9557:157,testability,automat,automatically,157,"[RF] RooAddPdf: Avoid UB in checkObservables; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9557
https://github.com/root-project/root/pull/9557:390,usability,behavi,behavior,390,"[RF] RooAddPdf: Avoid UB in checkObservables; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9557
https://github.com/root-project/root/pull/9559:48,deployability,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 1; This is a backport of all the RooFit PRs that were merged to `master` in the last two weeks to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9478. 2. https://github.com/root-project/root/pull/9504. 3. https://github.com/root-project/root/pull/9458. 4. https://github.com/root-project/root/pull/9553. 5. https://github.com/root-project/root/pull/9447. 6. https://github.com/root-project/root/pull/9552",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9559
https://github.com/root-project/root/pull/9559:171,deployability,patch,patches,171,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 1; This is a backport of all the RooFit PRs that were merged to `master` in the last two weeks to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9478. 2. https://github.com/root-project/root/pull/9504. 3. https://github.com/root-project/root/pull/9458. 4. https://github.com/root-project/root/pull/9553. 5. https://github.com/root-project/root/pull/9447. 6. https://github.com/root-project/root/pull/9552",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9559
https://github.com/root-project/root/pull/9559:48,safety,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 1; This is a backport of all the RooFit PRs that were merged to `master` in the last two weeks to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9478. 2. https://github.com/root-project/root/pull/9504. 3. https://github.com/root-project/root/pull/9458. 4. https://github.com/root-project/root/pull/9553. 5. https://github.com/root-project/root/pull/9447. 6. https://github.com/root-project/root/pull/9552",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9559
https://github.com/root-project/root/pull/9559:171,safety,patch,patches,171,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 1; This is a backport of all the RooFit PRs that were merged to `master` in the last two weeks to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9478. 2. https://github.com/root-project/root/pull/9504. 3. https://github.com/root-project/root/pull/9458. 4. https://github.com/root-project/root/pull/9553. 5. https://github.com/root-project/root/pull/9447. 6. https://github.com/root-project/root/pull/9552",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9559
https://github.com/root-project/root/pull/9559:48,security,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 1; This is a backport of all the RooFit PRs that were merged to `master` in the last two weeks to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9478. 2. https://github.com/root-project/root/pull/9504. 3. https://github.com/root-project/root/pull/9458. 4. https://github.com/root-project/root/pull/9553. 5. https://github.com/root-project/root/pull/9447. 6. https://github.com/root-project/root/pull/9552",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9559
https://github.com/root-project/root/pull/9559:171,security,patch,patches,171,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 1; This is a backport of all the RooFit PRs that were merged to `master` in the last two weeks to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9478. 2. https://github.com/root-project/root/pull/9504. 3. https://github.com/root-project/root/pull/9458. 4. https://github.com/root-project/root/pull/9553. 5. https://github.com/root-project/root/pull/9447. 6. https://github.com/root-project/root/pull/9552",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9559
https://github.com/root-project/root/pull/9560:188,deployability,observ,observables,188,"[v624][RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. A unit test based on the code that originally unveiled this issue is. also implemented. This is a backport of https://github.com/root-project/root/pull/9552.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9560
https://github.com/root-project/root/pull/9560:17,performance,cach,cached,17,"[v624][RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. A unit test based on the code that originally unveiled this issue is. also implemented. This is a backport of https://github.com/root-project/root/pull/9552.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9560
https://github.com/root-project/root/pull/9560:101,performance,cach,cached,101,"[v624][RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. A unit test based on the code that originally unveiled this issue is. also implemented. This is a backport of https://github.com/root-project/root/pull/9552.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9560
https://github.com/root-project/root/pull/9560:240,safety,test,test,240,"[v624][RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. A unit test based on the code that originally unveiled this issue is. also implemented. This is a backport of https://github.com/root-project/root/pull/9552.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9560
https://github.com/root-project/root/pull/9560:188,testability,observ,observables,188,"[v624][RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. A unit test based on the code that originally unveiled this issue is. also implemented. This is a backport of https://github.com/root-project/root/pull/9552.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9560
https://github.com/root-project/root/pull/9560:235,testability,unit,unit,235,"[v624][RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. A unit test based on the code that originally unveiled this issue is. also implemented. This is a backport of https://github.com/root-project/root/pull/9552.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9560
https://github.com/root-project/root/pull/9560:240,testability,test,test,240,"[v624][RF] Reset cached normalization sets if servers are redirected; If a server is redirected, the cached normalization sets in `RooAbsPdf`. and `RooAddPdf` might not point to the right observables anymore. We. need to reset them. A unit test based on the code that originally unveiled this issue is. also implemented. This is a backport of https://github.com/root-project/root/pull/9552.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9560
https://github.com/root-project/root/issues/9561:73,deployability,contain,contains,73,"[DF] Teach CSV datasource to handle NaN values; Original report, it also contains a test: https://root-forum.cern.ch/t/nan-values-in-one-column-break-histogram-of-another-column/37091 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9561
https://github.com/root-project/root/issues/9561:84,safety,test,test,84,"[DF] Teach CSV datasource to handle NaN values; Original report, it also contains a test: https://root-forum.cern.ch/t/nan-values-in-one-column-break-histogram-of-another-column/37091 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9561
https://github.com/root-project/root/issues/9561:84,testability,test,test,84,"[DF] Teach CSV datasource to handle NaN values; Original report, it also contains a test: https://root-forum.cern.ch/t/nan-values-in-one-column-break-histogram-of-another-column/37091 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9561
https://github.com/root-project/root/pull/9563:341,deployability,updat,updated,341,"Add missing include for strlcpy(); # This Pull request:. ## Changes or fixes:. With `dev=1`, `asserts=1`, `pythia6=1`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug`, and `LLVM_ENABLE_ASSERTIONS=1`, a missing `#include ""strlcpy.h"" is exposed in `TPythia6.cxx` which is fixed by this PR. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9563
https://github.com/root-project/root/pull/9563:311,safety,test,tested,311,"Add missing include for strlcpy(); # This Pull request:. ## Changes or fixes:. With `dev=1`, `asserts=1`, `pythia6=1`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug`, and `LLVM_ENABLE_ASSERTIONS=1`, a missing `#include ""strlcpy.h"" is exposed in `TPythia6.cxx` which is fixed by this PR. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9563
https://github.com/root-project/root/pull/9563:341,safety,updat,updated,341,"Add missing include for strlcpy(); # This Pull request:. ## Changes or fixes:. With `dev=1`, `asserts=1`, `pythia6=1`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug`, and `LLVM_ENABLE_ASSERTIONS=1`, a missing `#include ""strlcpy.h"" is exposed in `TPythia6.cxx` which is fixed by this PR. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9563
https://github.com/root-project/root/pull/9563:237,security,expos,exposed,237,"Add missing include for strlcpy(); # This Pull request:. ## Changes or fixes:. With `dev=1`, `asserts=1`, `pythia6=1`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug`, and `LLVM_ENABLE_ASSERTIONS=1`, a missing `#include ""strlcpy.h"" is exposed in `TPythia6.cxx` which is fixed by this PR. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9563
https://github.com/root-project/root/pull/9563:341,security,updat,updated,341,"Add missing include for strlcpy(); # This Pull request:. ## Changes or fixes:. With `dev=1`, `asserts=1`, `pythia6=1`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug`, and `LLVM_ENABLE_ASSERTIONS=1`, a missing `#include ""strlcpy.h"" is exposed in `TPythia6.cxx` which is fixed by this PR. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9563
https://github.com/root-project/root/pull/9563:94,testability,assert,asserts,94,"Add missing include for strlcpy(); # This Pull request:. ## Changes or fixes:. With `dev=1`, `asserts=1`, `pythia6=1`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug`, and `LLVM_ENABLE_ASSERTIONS=1`, a missing `#include ""strlcpy.h"" is exposed in `TPythia6.cxx` which is fixed by this PR. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9563
https://github.com/root-project/root/pull/9563:311,testability,test,tested,311,"Add missing include for strlcpy(); # This Pull request:. ## Changes or fixes:. With `dev=1`, `asserts=1`, `pythia6=1`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug`, and `LLVM_ENABLE_ASSERTIONS=1`, a missing `#include ""strlcpy.h"" is exposed in `TPythia6.cxx` which is fixed by this PR. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9563
https://github.com/root-project/root/issues/9564:487,availability,error,errors,487,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:596,availability,fault,fault,596,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:3536,availability,operat,operator,3536,"t@entry=false). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #8 0x00007ffff1447bad in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0x97b0bf0, pointer=pointer@entry=0x432d290). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3960. #9 0x00007fffefbd0606 in TBranchElement::Streamer (this=0x432d290, R__b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TBranchElement.cxx:5345. #10 0x00007ffff144caaf in TClass::Streamer (onfile_class=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645. #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@entry=0xb5bea80, obj=obj@entry=0x432d290, ptrClass=0xc84340). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2699. #13 0x00007ffff239d6e4 in operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407. #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:4714,availability,operat,operator,4714,"/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7025,availability,Operat,Operating,7025,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7508,availability,down,download,7508,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:55,deployability,patch,patches,55,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:1591,deployability,Build,BuildRealData,1591,"ult. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620. #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tree/tree/G__Tree.cxx:3835. #6 0x00007ffff23c571d in TClass::CallShowMembers (this=this@entry=0x97b0bf0, obj=obj@entry=0x432d290, insp=..., isATObject=<optimized out>, isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1883. #7 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97b0bf0, pointer=pointer@entry=0x432d290, isTransient=isTransient@entry=false). at /u/rlalik/hades/software/root-v5/core/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:2443,deployability,Build,BuildRealData,2443,"sp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620. #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tree/tree/G__Tree.cxx:3835. #6 0x00007ffff23c571d in TClass::CallShowMembers (this=this@entry=0x97b0bf0, obj=obj@entry=0x432d290, insp=..., isATObject=<optimized out>, isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1883. #7 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97b0bf0, pointer=pointer@entry=0x432d290, isTransient=isTransient@entry=false). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #8 0x00007ffff1447bad in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0x97b0bf0, pointer=pointer@entry=0x432d290). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3960. #9 0x00007fffefbd0606 in TBranchElement::Streamer (this=0x432d290, R__b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TBranchElement.cxx:5345. #10 0x00007ffff144caaf in TClass::Streamer (onfile_class=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645. #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@entry=0xb5bea80, obj=obj@entry=0x432d290, ptrClass=0xc84340). at /u/rl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:5448,deployability,build,build,5448,"0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Had",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:5909,deployability,continu,continue,5909,"ce (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6973,deployability,patch,patches,6973,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7070,deployability,Version,Version,7070,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7413,deployability,Releas,Release,7413,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7490,deployability,instal,install,7490,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:596,energy efficiency,fault,fault,596,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:833,energy efficiency,core,core,833,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:1154,energy efficiency,core,core,1154,"ject/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620. #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:1318,energy efficiency,core,core,1318,"e very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620. #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tree/tree/G__Tree.cxx:3835. #6 0x00007ffff23c571d in TClass::CallShowMembers (this=this@entry=0x97b0bf0, obj=obj@entry=0x432d290, insp=..., isATObject=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:1527,energy efficiency,core,core,1527,"ck to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620. #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tree/tree/G__Tree.cxx:3835. #6 0x00007ffff23c571d in TClass::CallShowMembers (this=this@entry=0x97b0bf0, obj=obj@entry=0x432d290, insp=..., isATObject=<optimized out>, isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1883. #7 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97b0bf0, pointer=pointer@entry=0x432d290, isTransient",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:1721,energy efficiency,core,core,1721,", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620. #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tree/tree/G__Tree.cxx:3835. #6 0x00007ffff23c571d in TClass::CallShowMembers (this=this@entry=0x97b0bf0, obj=obj@entry=0x432d290, insp=..., isATObject=<optimized out>, isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1883. #7 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97b0bf0, pointer=pointer@entry=0x432d290, isTransient=isTransient@entry=false). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #8 0x00007ffff1447bad in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0x97b0bf0, poi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:1864,energy efficiency,optim,optimized,1864," (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620. #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tree/tree/G__Tree.cxx:3835. #6 0x00007ffff23c571d in TClass::CallShowMembers (this=this@entry=0x97b0bf0, obj=obj@entry=0x432d290, insp=..., isATObject=<optimized out>, isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1883. #7 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97b0bf0, pointer=pointer@entry=0x432d290, isTransient=isTransient@entry=false). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #8 0x00007ffff1447bad in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0x97b0bf0, pointer=pointer@entry=0x432d290). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3960. #9 0x00007fffefbd0606 in TBranchElement::Stream",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:1992,energy efficiency,core,core,1992,"fbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620. #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tree/tree/G__Tree.cxx:3835. #6 0x00007ffff23c571d in TClass::CallShowMembers (this=this@entry=0x97b0bf0, obj=obj@entry=0x432d290, insp=..., isATObject=<optimized out>, isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1883. #7 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97b0bf0, pointer=pointer@entry=0x432d290, isTransient=isTransient@entry=false). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #8 0x00007ffff1447bad in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0x97b0bf0, pointer=pointer@entry=0x432d290). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3960. #9 0x00007fffefbd0606 in TBranchElement::Streamer (this=0x432d290, R__b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TBranchElement.cxx:5345. #10 0x00007ffff144ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:2305,energy efficiency,optim,optimized,2305,"d_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620. #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tree/tree/G__Tree.cxx:3835. #6 0x00007ffff23c571d in TClass::CallShowMembers (this=this@entry=0x97b0bf0, obj=obj@entry=0x432d290, insp=..., isATObject=<optimized out>, isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1883. #7 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97b0bf0, pointer=pointer@entry=0x432d290, isTransient=isTransient@entry=false). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #8 0x00007ffff1447bad in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0x97b0bf0, pointer=pointer@entry=0x432d290). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3960. #9 0x00007fffefbd0606 in TBranchElement::Streamer (this=0x432d290, R__b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TBranchElement.cxx:5345. #10 0x00007ffff144caaf in TClass::Streamer (onfile_class=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:2379,energy efficiency,core,core,2379,"llShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620. #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tree/tree/G__Tree.cxx:3835. #6 0x00007ffff23c571d in TClass::CallShowMembers (this=this@entry=0x97b0bf0, obj=obj@entry=0x432d290, insp=..., isATObject=<optimized out>, isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1883. #7 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97b0bf0, pointer=pointer@entry=0x432d290, isTransient=isTransient@entry=false). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #8 0x00007ffff1447bad in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0x97b0bf0, pointer=pointer@entry=0x432d290). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3960. #9 0x00007fffefbd0606 in TBranchElement::Streamer (this=0x432d290, R__b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TBranchElement.cxx:5345. #10 0x00007ffff144caaf in TClass::Streamer (onfile_class=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645. #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:2592,energy efficiency,core,core,2592,"ldRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620. #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tree/tree/G__Tree.cxx:3835. #6 0x00007ffff23c571d in TClass::CallShowMembers (this=this@entry=0x97b0bf0, obj=obj@entry=0x432d290, insp=..., isATObject=<optimized out>, isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1883. #7 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97b0bf0, pointer=pointer@entry=0x432d290, isTransient=isTransient@entry=false). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #8 0x00007ffff1447bad in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0x97b0bf0, pointer=pointer@entry=0x432d290). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3960. #9 0x00007fffefbd0606 in TBranchElement::Streamer (this=0x432d290, R__b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TBranchElement.cxx:5345. #10 0x00007ffff144caaf in TClass::Streamer (onfile_class=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645. #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@entry=0xb5bea80, obj=obj@entry=0x432d290, ptrClass=0xc84340). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2699. #13 0x00007ffff239d6e4 in operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/sof",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:3727,energy efficiency,core,core,3727,"ointer@entry=0x432d290). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3960. #9 0x00007fffefbd0606 in TBranchElement::Streamer (this=0x432d290, R__b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TBranchElement.cxx:5345. #10 0x00007ffff144caaf in TClass::Streamer (onfile_class=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645. #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@entry=0xb5bea80, obj=obj@entry=0x432d290, ptrClass=0xc84340). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2699. #13 0x00007ffff239d6e4 in operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407. #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:3834,energy efficiency,optim,optimized,3834,"0606 in TBranchElement::Streamer (this=0x432d290, R__b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TBranchElement.cxx:5345. #10 0x00007ffff144caaf in TClass::Streamer (onfile_class=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645. #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@entry=0xb5bea80, obj=obj@entry=0x432d290, ptrClass=0xc84340). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2699. #13 0x00007ffff239d6e4 in operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407. #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:3992,energy efficiency,optim,optimized,3992,"in TClass::Streamer (onfile_class=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645. #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@entry=0xb5bea80, obj=obj@entry=0x432d290, ptrClass=0xc84340). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2699. #13 0x00007ffff239d6e4 in operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407. #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:4025,energy efficiency,optim,optimized,4025,"=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645. #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@entry=0xb5bea80, obj=obj@entry=0x432d290, ptrClass=0xc84340). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2699. #13 0x00007ffff239d6e4 in operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407. #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:4051,energy efficiency,optim,optimized,4051,", this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645. #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@entry=0xb5bea80, obj=obj@entry=0x432d290, ptrClass=0xc84340). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2699. #13 0x00007ffff239d6e4 in operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407. #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:4530,energy efficiency,optim,optimized,4530," operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407. #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:4554,energy efficiency,optim,optimized,4554,"90, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407. #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:4732,energy efficiency,optim,optimized,4732,"src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:4754,energy efficiency,optim,optimized,4754," #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:5598,energy efficiency,optim,optimized,5598,"-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/ha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:5725,energy efficiency,optim,optimized,5725,"=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@ent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6029,energy efficiency,optim,optimized,6029,"0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6053,energy efficiency,optim,optimized,6053,"ufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6219,energy efficiency,optim,optimized,6219,"3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6797,energy efficiency,optim,optimized,6797,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7079,energy efficiency,core,core-,7079,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7094,energy efficiency,core,core-,7094,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7110,energy efficiency,core,core-,7110,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7125,energy efficiency,core,core-,7125,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7141,energy efficiency,core,core-,7141,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7156,energy efficiency,core,core-,7156,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7172,energy efficiency,core,core-,7172,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7187,energy efficiency,core,core-,7187,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7203,energy efficiency,core,core-,7203,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7218,energy efficiency,core,core-,7218,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7234,energy efficiency,core,core-,7234,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7249,energy efficiency,core,core-,7249,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:4788,integrability,buffer,buffer,4788,"s::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:5457,integrability,Event,EventHandlingDict,5457,"64d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6455,integrability,event,eventLoop,6455,"ntHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How yo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6587,integrability,event,eventhandling,6587,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7070,integrability,Version,Version,7070,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7344,interoperability,Distribut,Distributor,7344,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:888,modifiability,Inherit,InheritsFrom,888,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7070,modifiability,Version,Version,7070,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:487,performance,error,errors,487,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:596,performance,fault,fault,596,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:1864,performance,optimiz,optimized,1864," (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620. #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tree/tree/G__Tree.cxx:3835. #6 0x00007ffff23c571d in TClass::CallShowMembers (this=this@entry=0x97b0bf0, obj=obj@entry=0x432d290, insp=..., isATObject=<optimized out>, isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1883. #7 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97b0bf0, pointer=pointer@entry=0x432d290, isTransient=isTransient@entry=false). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #8 0x00007ffff1447bad in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0x97b0bf0, pointer=pointer@entry=0x432d290). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3960. #9 0x00007fffefbd0606 in TBranchElement::Stream",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:2305,performance,optimiz,optimized,2305,"d_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620. #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tree/tree/G__Tree.cxx:3835. #6 0x00007ffff23c571d in TClass::CallShowMembers (this=this@entry=0x97b0bf0, obj=obj@entry=0x432d290, insp=..., isATObject=<optimized out>, isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1883. #7 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97b0bf0, pointer=pointer@entry=0x432d290, isTransient=isTransient@entry=false). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #8 0x00007ffff1447bad in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0x97b0bf0, pointer=pointer@entry=0x432d290). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3960. #9 0x00007fffefbd0606 in TBranchElement::Streamer (this=0x432d290, R__b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TBranchElement.cxx:5345. #10 0x00007ffff144caaf in TClass::Streamer (onfile_class=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:3834,performance,optimiz,optimized,3834,"0606 in TBranchElement::Streamer (this=0x432d290, R__b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TBranchElement.cxx:5345. #10 0x00007ffff144caaf in TClass::Streamer (onfile_class=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645. #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@entry=0xb5bea80, obj=obj@entry=0x432d290, ptrClass=0xc84340). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2699. #13 0x00007ffff239d6e4 in operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407. #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:3992,performance,optimiz,optimized,3992,"in TClass::Streamer (onfile_class=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645. #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@entry=0xb5bea80, obj=obj@entry=0x432d290, ptrClass=0xc84340). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2699. #13 0x00007ffff239d6e4 in operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407. #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:4025,performance,optimiz,optimized,4025,"=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645. #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@entry=0xb5bea80, obj=obj@entry=0x432d290, ptrClass=0xc84340). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2699. #13 0x00007ffff239d6e4 in operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407. #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:4051,performance,optimiz,optimized,4051,", this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645. #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@entry=0xb5bea80, obj=obj@entry=0x432d290, ptrClass=0xc84340). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2699. #13 0x00007ffff239d6e4 in operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407. #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:4530,performance,optimiz,optimized,4530," operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407. #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:4554,performance,optimiz,optimized,4554,"90, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407. #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:4732,performance,optimiz,optimized,4732,"src/TObjArray.cxx:460. #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:4754,performance,optimiz,optimized,4754," #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451. #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352. #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, . last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599. #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:5598,performance,optimiz,optimized,5598,"-v5/io/io/src/TStreamerInfoActions.cxx:174. #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/ha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:5725,performance,optimiz,optimized,5725,"=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...). at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111. #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013. #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@ent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6029,performance,optimiz,optimized,6029,"0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6053,performance,optimiz,optimized,6053,"ufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6219,performance,optimiz,optimized,6219,"3981. #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379. #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430. #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6543,performance,time,timeQuota,6543,"c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6560,performance,time,timeQuota,6560,"19 ""T"", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6797,performance,optimiz,optimized,6797,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:596,reliability,fault,fault,596,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:1914,reliability,fTa,fTargetClass,1914,"0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620. #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tree/tree/G__Tree.cxx:3835. #6 0x00007ffff23c571d in TClass::CallShowMembers (this=this@entry=0x97b0bf0, obj=obj@entry=0x432d290, insp=..., isATObject=<optimized out>, isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1883. #7 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97b0bf0, pointer=pointer@entry=0x432d290, isTransient=isTransient@entry=false). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #8 0x00007ffff1447bad in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0x97b0bf0, pointer=pointer@entry=0x432d290). at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3960. #9 0x00007fffefbd0606 in TBranchElement::Streamer (this=0x432d290, R__b=...) at /u/rlalik/hades/so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:55,safety,patch,patches,55,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:487,safety,error,errors,487,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:596,safety,fault,fault,596,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6973,safety,patch,patches,6973,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:55,security,patch,patches,55,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:567,security,sign,signal,567,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6973,security,patch,patches,6973,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7265,security,secur,security-,7265,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7284,security,secur,security-,7284,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7304,security,secur,security-,7304,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:7323,security,secur,security-,7323,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:487,usability,error,errors,487,"SegFault in TBuildRealData::Inspect in root-5@v5-34-00-patches; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. 549 if (!fRealDataClass->InheritsFrom(cl)) {. (gdb) bt. #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549. #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082. #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866. #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true). at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719. #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", . add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/issues/9564:6887,usability,Custom,Custom,6887,""", bufsize=1024, motherDir=<optimized out>). at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253. #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024). at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960. --Type <RET> for more, q to quit, c to continue without paging--. #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0). at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839. #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249. #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262. #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20). at eventhandling/hades.cc:956. #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512. #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547. (gdb). ```. ### To Reproduce. Custom code requires whole framework, hard to regenerate. ### Setup. 1. root@v5-34-00-patches (sorry that I still need to use root-5). 2. Operating system. ```. $ lsb_release -a. LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch. Distributor ID: Debian. Description: Debian GNU/Linux 8.11 (jessie). Release: 8.11. Codename: jessie. ```. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9564
https://github.com/root-project/root/pull/9565:22,availability,cluster,cluster,22,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:79,availability,cluster,cluster,79,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:95,availability,Cluster,Cluster,95,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:228,availability,cluster,cluster,228,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:533,availability,cluster,cluster,533,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:601,availability,cluster,cluster,601,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:620,availability,cluster,cluster,620,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:644,availability,Cluster,Cluster,644,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:679,availability,cluster,cluster,679,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:758,availability,cluster,clusters,758,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:801,availability,cluster,cluster,801,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:870,availability,cluster,clusters,870,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:1006,availability,cluster,cluster,1006,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:1029,availability,cluster,cluster,1029,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:22,deployability,cluster,cluster,22,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:79,deployability,cluster,cluster,79,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:95,deployability,Cluster,Cluster,95,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:228,deployability,cluster,cluster,228,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:468,deployability,build,builder,468,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:533,deployability,cluster,cluster,533,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:601,deployability,cluster,cluster,601,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:620,deployability,cluster,cluster,620,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:644,deployability,Cluster,Cluster,644,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:667,deployability,contain,contain,667,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:679,deployability,cluster,cluster,679,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:758,deployability,cluster,clusters,758,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:801,deployability,cluster,cluster,801,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:870,deployability,cluster,clusters,870,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:1006,deployability,cluster,cluster,1006,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:1029,deployability,cluster,cluster,1029,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:265,energy efficiency,load,loading,265,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:820,energy efficiency,load,loaded,820,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:909,energy efficiency,load,load,909,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:1079,energy efficiency,load,loaded,1079,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:503,integrability,event,eventually,503,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:689,integrability,event,event,689,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:1105,integrability,event,event,1105,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:1146,integrability,event,event,1146,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:66,interoperability,format,format,66,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:158,interoperability,format,format,158,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:265,performance,load,loading,265,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:820,performance,load,loaded,820,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:909,performance,load,load,909,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:1079,performance,load,loaded,1079,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:1184,security,control,controlled,1184,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:1184,testability,control,controlled,1184,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9565:1202,usability,user,user,1202,"[ntuple] Represent v1 cluster groups in descriptor; The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9565
https://github.com/root-project/root/pull/9566:344,availability,error,error,344,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:40,deployability,modul,modulemap,40,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:59,deployability,modul,module,59,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:66,deployability,depend,dependency,66,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:105,deployability,modul,module,105,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:160,deployability,modul,module,160,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:263,deployability,modul,module,263,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:645,deployability,modul,modules,645,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:668,deployability,modul,module,668,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:822,deployability,modul,module,822,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:424,energy efficiency,alloc,allocator,424,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:543,energy efficiency,alloc,allocator,543,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:66,integrability,depend,dependency,66,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:190,interoperability,platform,platforms,190,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:231,interoperability,mismatch,mismatch,231,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:40,modifiability,modul,modulemap,40,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:59,modifiability,modul,module,59,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:66,modifiability,depend,dependency,66,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:105,modifiability,modul,module,105,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:160,modifiability,modul,module,160,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:263,modifiability,modul,module,263,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:645,modifiability,modul,modules,645,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:668,modifiability,modul,module,668,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:822,modifiability,modul,module,822,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:174,performance,memor,memory,174,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:344,performance,error,error,344,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:40,safety,modul,modulemap,40,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:59,safety,modul,module,59,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:66,safety,depend,dependency,66,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:105,safety,modul,module,105,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:160,safety,modul,module,160,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:263,safety,modul,module,263,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:344,safety,error,error,344,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:645,safety,modul,modules,645,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:668,safety,modul,module,668,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:822,safety,modul,module,822,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:66,testability,depend,dependency,66,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:174,usability,memor,memory,174,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9566:344,usability,error,error,344,"[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency; The std.condition_variable module can be exported via the std.condition_variable. module or std.memory. On some platforms (gcc10) that causes definition mismatch. problems of kind:. In module 'std' imported from input_line_1:1:. c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here. struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>. ^. /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9566
https://github.com/root-project/root/pull/9568:160,deployability,automat,automatically,160,"RooAddPdf: Avoid UB in checkObservables [v6.26]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9568
https://github.com/root-project/root/pull/9568:417,energy efficiency,optim,optimizes,417,"RooAddPdf: Avoid UB in checkObservables [v6.26]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9568
https://github.com/root-project/root/pull/9568:417,performance,optimiz,optimizes,417,"RooAddPdf: Avoid UB in checkObservables [v6.26]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9568
https://github.com/root-project/root/pull/9568:11,safety,Avoid,Avoid,11,"RooAddPdf: Avoid UB in checkObservables [v6.26]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9568
https://github.com/root-project/root/pull/9568:160,testability,automat,automatically,160,"RooAddPdf: Avoid UB in checkObservables [v6.26]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9568
https://github.com/root-project/root/pull/9568:393,usability,behavi,behavior,393,"RooAddPdf: Avoid UB in checkObservables [v6.26]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9568
https://github.com/root-project/root/pull/9569:160,deployability,automat,automatically,160,"RooAddPdf: Avoid UB in checkObservables [v6.24]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9569
https://github.com/root-project/root/pull/9569:417,energy efficiency,optim,optimizes,417,"RooAddPdf: Avoid UB in checkObservables [v6.24]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9569
https://github.com/root-project/root/pull/9569:417,performance,optimiz,optimizes,417,"RooAddPdf: Avoid UB in checkObservables [v6.24]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9569
https://github.com/root-project/root/pull/9569:11,safety,Avoid,Avoid,11,"RooAddPdf: Avoid UB in checkObservables [v6.24]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9569
https://github.com/root-project/root/pull/9569:160,testability,automat,automatically,160,"RooAddPdf: Avoid UB in checkObservables [v6.24]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9569
https://github.com/root-project/root/pull/9569:393,usability,behavi,behavior,393,"RooAddPdf: Avoid UB in checkObservables [v6.24]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9569
https://github.com/root-project/root/pull/9570:160,deployability,automat,automatically,160,"RooAddPdf: Avoid UB in checkObservables [v6.22]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9570
https://github.com/root-project/root/pull/9570:417,energy efficiency,optim,optimizes,417,"RooAddPdf: Avoid UB in checkObservables [v6.22]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9570
https://github.com/root-project/root/pull/9570:417,performance,optimiz,optimizes,417,"RooAddPdf: Avoid UB in checkObservables [v6.22]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9570
https://github.com/root-project/root/pull/9570:11,safety,Avoid,Avoid,11,"RooAddPdf: Avoid UB in checkObservables [v6.22]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9570
https://github.com/root-project/root/pull/9570:160,testability,automat,automatically,160,"RooAddPdf: Avoid UB in checkObservables [v6.22]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9570
https://github.com/root-project/root/pull/9570:393,usability,behavi,behavior,393,"RooAddPdf: Avoid UB in checkObservables [v6.22]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9570
https://github.com/root-project/root/pull/9571:160,deployability,automat,automatically,160,"RooAddPdf: Avoid UB in checkObservables [v6.20]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9571
https://github.com/root-project/root/pull/9571:417,energy efficiency,optim,optimizes,417,"RooAddPdf: Avoid UB in checkObservables [v6.20]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9571
https://github.com/root-project/root/pull/9571:417,performance,optimiz,optimizes,417,"RooAddPdf: Avoid UB in checkObservables [v6.20]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9571
https://github.com/root-project/root/pull/9571:11,safety,Avoid,Avoid,11,"RooAddPdf: Avoid UB in checkObservables [v6.20]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9571
https://github.com/root-project/root/pull/9571:160,testability,automat,automatically,160,"RooAddPdf: Avoid UB in checkObservables [v6.20]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9571
https://github.com/root-project/root/pull/9571:393,usability,behavi,behavior,393,"RooAddPdf: Avoid UB in checkObservables [v6.20]; A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return. a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9571
https://github.com/root-project/root/pull/9572:193,deployability,modul,module,193,"[cxxmodules] Disentangle Vc and VecCore; It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context. of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore. might have not exposed Vc... This change improves root-project/root@f2ac9b349f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9572
https://github.com/root-project/root/pull/9572:154,energy efficiency,Adapt,Adapt,154,"[cxxmodules] Disentangle Vc and VecCore; It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context. of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore. might have not exposed Vc... This change improves root-project/root@f2ac9b349f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9572
https://github.com/root-project/root/pull/9572:181,energy efficiency,load,load,181,"[cxxmodules] Disentangle Vc and VecCore; It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context. of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore. might have not exposed Vc... This change improves root-project/root@f2ac9b349f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9572
https://github.com/root-project/root/pull/9572:68,integrability,wrap,wrapper,68,"[cxxmodules] Disentangle Vc and VecCore; It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context. of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore. might have not exposed Vc... This change improves root-project/root@f2ac9b349f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9572
https://github.com/root-project/root/pull/9572:154,integrability,Adapt,Adapt,154,"[cxxmodules] Disentangle Vc and VecCore; It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context. of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore. might have not exposed Vc... This change improves root-project/root@f2ac9b349f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9572
https://github.com/root-project/root/pull/9572:68,interoperability,wrapper,wrapper,68,"[cxxmodules] Disentangle Vc and VecCore; It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context. of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore. might have not exposed Vc... This change improves root-project/root@f2ac9b349f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9572
https://github.com/root-project/root/pull/9572:154,interoperability,Adapt,Adapt,154,"[cxxmodules] Disentangle Vc and VecCore; It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context. of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore. might have not exposed Vc... This change improves root-project/root@f2ac9b349f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9572
https://github.com/root-project/root/pull/9572:154,modifiability,Adapt,Adapt,154,"[cxxmodules] Disentangle Vc and VecCore; It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context. of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore. might have not exposed Vc... This change improves root-project/root@f2ac9b349f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9572
https://github.com/root-project/root/pull/9572:193,modifiability,modul,module,193,"[cxxmodules] Disentangle Vc and VecCore; It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context. of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore. might have not exposed Vc... This change improves root-project/root@f2ac9b349f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9572
https://github.com/root-project/root/pull/9572:181,performance,load,load,181,"[cxxmodules] Disentangle Vc and VecCore; It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context. of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore. might have not exposed Vc... This change improves root-project/root@f2ac9b349f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9572
https://github.com/root-project/root/pull/9572:193,safety,modul,module,193,"[cxxmodules] Disentangle Vc and VecCore; It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context. of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore. might have not exposed Vc... This change improves root-project/root@f2ac9b349f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9572
https://github.com/root-project/root/pull/9572:252,security,expos,exposed,252,"[cxxmodules] Disentangle Vc and VecCore; It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context. of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore. might have not exposed Vc... This change improves root-project/root@f2ac9b349f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9572
https://github.com/root-project/root/pull/9572:113,testability,context,context,113,"[cxxmodules] Disentangle Vc and VecCore; It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context. of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore. might have not exposed Vc... This change improves root-project/root@f2ac9b349f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9572
https://github.com/root-project/root/pull/9573:136,deployability,updat,updated,136,fix doxygen typo; # This Pull request:. ## Changes or fixes:. Some doxygen warnings. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9573
https://github.com/root-project/root/pull/9573:106,safety,test,tested,106,fix doxygen typo; # This Pull request:. ## Changes or fixes:. Some doxygen warnings. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9573
https://github.com/root-project/root/pull/9573:136,safety,updat,updated,136,fix doxygen typo; # This Pull request:. ## Changes or fixes:. Some doxygen warnings. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9573
https://github.com/root-project/root/pull/9573:136,security,updat,updated,136,fix doxygen typo; # This Pull request:. ## Changes or fixes:. Some doxygen warnings. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9573
https://github.com/root-project/root/pull/9573:106,testability,test,tested,106,fix doxygen typo; # This Pull request:. ## Changes or fixes:. Some doxygen warnings. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9573
https://github.com/root-project/root/pull/9575:168,deployability,updat,updated,168,Fix doxygen warnings in core ; # This Pull request:. ## Changes or fixes:. Several doxygen warnings in core classes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9575
https://github.com/root-project/root/pull/9575:24,energy efficiency,core,core,24,Fix doxygen warnings in core ; # This Pull request:. ## Changes or fixes:. Several doxygen warnings in core classes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9575
https://github.com/root-project/root/pull/9575:103,energy efficiency,core,core,103,Fix doxygen warnings in core ; # This Pull request:. ## Changes or fixes:. Several doxygen warnings in core classes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9575
https://github.com/root-project/root/pull/9575:138,safety,test,tested,138,Fix doxygen warnings in core ; # This Pull request:. ## Changes or fixes:. Several doxygen warnings in core classes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9575
https://github.com/root-project/root/pull/9575:168,safety,updat,updated,168,Fix doxygen warnings in core ; # This Pull request:. ## Changes or fixes:. Several doxygen warnings in core classes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9575
https://github.com/root-project/root/pull/9575:168,security,updat,updated,168,Fix doxygen warnings in core ; # This Pull request:. ## Changes or fixes:. Several doxygen warnings in core classes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9575
https://github.com/root-project/root/pull/9575:138,testability,test,tested,138,Fix doxygen warnings in core ; # This Pull request:. ## Changes or fixes:. Several doxygen warnings in core classes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9575
https://github.com/root-project/root/pull/9576:154,deployability,updat,updated,154,geom doxygen warnings; # This Pull request:. ## Changes or fixes:. doxygen warnings from geom classes. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9576
https://github.com/root-project/root/pull/9576:124,safety,test,tested,124,geom doxygen warnings; # This Pull request:. ## Changes or fixes:. doxygen warnings from geom classes. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9576
https://github.com/root-project/root/pull/9576:154,safety,updat,updated,154,geom doxygen warnings; # This Pull request:. ## Changes or fixes:. doxygen warnings from geom classes. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9576
https://github.com/root-project/root/pull/9576:154,security,updat,updated,154,geom doxygen warnings; # This Pull request:. ## Changes or fixes:. doxygen warnings from geom classes. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9576
https://github.com/root-project/root/pull/9576:124,testability,test,tested,124,geom doxygen warnings; # This Pull request:. ## Changes or fixes:. doxygen warnings from geom classes. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9576
https://github.com/root-project/root/pull/9581:718,deployability,fail,failing,718,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9581
https://github.com/root-project/root/pull/9581:273,interoperability,prox,proxy,273,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9581
https://github.com/root-project/root/pull/9581:726,interoperability,platform,platform,726,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9581
https://github.com/root-project/root/pull/9581:886,interoperability,prox,proxy,886,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9581
https://github.com/root-project/root/pull/9581:969,interoperability,prox,proxy,969,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9581
https://github.com/root-project/root/pull/9581:843,performance,I/O,I/O,843,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9581
https://github.com/root-project/root/pull/9581:718,reliability,fail,failing,718,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9581
https://github.com/root-project/root/pull/9581:253,testability,emul,emulated,253,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9581
https://github.com/root-project/root/pull/9581:812,testability,emul,emulated,812,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9581
https://github.com/root-project/root/pull/9581:479,usability,prefer,prefers,479,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9581
https://github.com/root-project/root/pull/9581:605,usability,prefer,prefers,605,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9581
https://github.com/root-project/root/pull/9581:926,usability,prefer,prefer,926,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9581
https://github.com/root-project/root/pull/9581:1059,usability,prefer,prefer,1059,"TStreamerInfo::New needs to use the CollectionProxy::New; This fixes issue #9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`. * consequently we use an ""emulated collection proxy"" for that collection. * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy. * TStreamerInfo::fSize is set to the value of TClass::fSizeOf. * TClass:New prefers the constructor from the interpreter. * TStreamerInfo::New was using TClass::New for that case. * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for. * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9581
https://github.com/root-project/root/pull/9582:170,deployability,build,build,170,"[netxng] Avoid XRootD warnings in generated source; It pulls in XRootD headers via `TNetXNGFile.h`, so the include directories must be added as `SYSTEM`. This should fix build warnings on CentOS 8 without the builtin XRootD, but rather the distribution version 5.4.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9582
https://github.com/root-project/root/pull/9582:253,deployability,version,version,253,"[netxng] Avoid XRootD warnings in generated source; It pulls in XRootD headers via `TNetXNGFile.h`, so the include directories must be added as `SYSTEM`. This should fix build warnings on CentOS 8 without the builtin XRootD, but rather the distribution version 5.4.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9582
https://github.com/root-project/root/pull/9582:253,integrability,version,version,253,"[netxng] Avoid XRootD warnings in generated source; It pulls in XRootD headers via `TNetXNGFile.h`, so the include directories must be added as `SYSTEM`. This should fix build warnings on CentOS 8 without the builtin XRootD, but rather the distribution version 5.4.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9582
https://github.com/root-project/root/pull/9582:240,interoperability,distribut,distribution,240,"[netxng] Avoid XRootD warnings in generated source; It pulls in XRootD headers via `TNetXNGFile.h`, so the include directories must be added as `SYSTEM`. This should fix build warnings on CentOS 8 without the builtin XRootD, but rather the distribution version 5.4.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9582
https://github.com/root-project/root/pull/9582:253,modifiability,version,version,253,"[netxng] Avoid XRootD warnings in generated source; It pulls in XRootD headers via `TNetXNGFile.h`, so the include directories must be added as `SYSTEM`. This should fix build warnings on CentOS 8 without the builtin XRootD, but rather the distribution version 5.4.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9582
https://github.com/root-project/root/pull/9582:9,safety,Avoid,Avoid,9,"[netxng] Avoid XRootD warnings in generated source; It pulls in XRootD headers via `TNetXNGFile.h`, so the include directories must be added as `SYSTEM`. This should fix build warnings on CentOS 8 without the builtin XRootD, but rather the distribution version 5.4.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9582
https://github.com/root-project/root/issues/9583:28,availability,failur,failure,28,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1337,availability,Operat,Operating,1337,"d to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1412,availability,down,download,1412,"er"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2232,availability,Error,Error,2232,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2605,availability,error,error,2605,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:28,deployability,fail,failure,28,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:559,deployability,fail,fails,559,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1093,deployability,build,build,1093,"<!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `ru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1270,deployability,build,build,1270,"ng reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1325,deployability,version,version,1325,"welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1394,deployability,instal,install,1394,"ts in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1596,deployability,build,build,1596,"st a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1602,deployability,log,logs,1602,"ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1850,deployability,modul,module,1850,". ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1893,deployability,modul,module,1893,"e the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1952,deployability,contain,containing,1952,"st a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2391,deployability,Modul,Module,2391,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2693,deployability,infrastructur,infrastructure,2693,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2822,deployability,log,log,2822,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2916,deployability,log,log,2916,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2982,deployability,log,log,2982,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:3095,deployability,log,log,3095,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1931,energy efficiency,load,loads,1931,"ggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2292,energy efficiency,green,greenc,2292,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1259,integrability,configur,configure,1259,"or existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1325,integrability,version,version,1325,"welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1534,integrability,configur,configured,1534,"oducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1787,integrability,Event,Event,1787,"pected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1914,integrability,Event,Event,1914,"our code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1992,integrability,Event,Event,1992,"n ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2197,integrability,messag,messages,2197,"Make >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1560,interoperability,standard,standard,1560," when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2197,interoperability,messag,messages,2197,"Make >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1259,modifiability,configur,configure,1259,"or existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1325,modifiability,version,version,1325,"welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1534,modifiability,configur,configured,1534,"oducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1850,modifiability,modul,module,1850,". ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1893,modifiability,modul,module,1893,"e the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2391,modifiability,Modul,Module,2391,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2398,modifiability,extens,extension,2398,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:28,performance,failur,failure,28,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1931,performance,load,loads,1931,"ggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2232,performance,Error,Error,2232,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2605,performance,error,error,2605,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:28,reliability,fail,failure,28,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:559,reliability,fail,fails,559,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2011,reliability,doe,does,2011,"n't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:554,safety,test,test,554,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:813,safety,Test,Tests,813,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1047,safety,input,input,1047,"cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the alias",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1293,safety,test,tests,1293,"e. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/gree",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1602,safety,log,logs,1602,"ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1850,safety,modul,module,1850,". ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1893,safety,modul,module,1893,"e the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2232,safety,Error,Error,2232,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2391,safety,Modul,Module,2391,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2605,safety,error,error,2605,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2752,safety,except,exception,2752,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2822,safety,log,log,2822,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2916,safety,log,log,2916,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2982,safety,log,log,2982,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:3095,safety,log,log,3095,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1259,security,configur,configure,1259,"or existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1534,security,configur,configured,1534,"oducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1602,security,log,logs,1602,"ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1873,security,ident,identifies,1873," Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/78722",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2822,security,log,log,2822,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2916,security,log,log,2916,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2982,security,log,log,2982,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:3095,security,log,log,3095,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:554,testability,test,test,554,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:680,testability,Verif,Verified,680,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:813,testability,Test,Tests,813,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1293,testability,test,tests,1293,"e. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/gree",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1462,testability,verif,verified,1462,"concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1602,testability,log,logs,1602,"ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1635,testability,context,context,1635,"ut passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1664,testability,context,context,1664,"dules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2479,testability,assert,asserts,2479,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2822,testability,log,log,2822,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2916,testability,log,log,2916,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2982,testability,log,log,2982,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:3095,testability,log,log,3095,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:456,usability,clear,clear,456,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:504,usability,behavi,behavior,504,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:728,usability,behavi,behavior,728,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:746,usability,clear,clear,746,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:902,usability,behavi,behavior,902,"Interpreter autoload lookup failure when `runtime_cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:1047,usability,input,input,1047,"cxxmodules=ON`; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Ensure you are using ROOT >= 6.24/00. 1. Ensure you are using CMake >= 3.22.0. 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the alias",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2232,usability,Error,Error,2232,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2605,usability,error,error,2605,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9583:2615,usability,indicat,indicative,2615,"ovided `runit` script to configure, build, and execute the tests. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. Problem verified on 6.24/06 and 6.25/02. 2. SLF7. 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context. <!--. Add any other context about the problem here. -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:. ```Console. Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system. ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception? ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz). * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz). * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9583
https://github.com/root-project/root/issues/9584:0,availability,Error,Error,0,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:787,availability,Error,Error,787,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:930,availability,Error,Error,930,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:2322,availability,Operat,Operating,2322,"ile via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24/06. Davix 0.7.6. OS: cc7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:2397,availability,down,download,2397,"ile via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24/06. Davix 0.7.6. OS: cc7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:1015,deployability,fail,failed,1015,"/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 Septembe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:1476,deployability,build,build,1476,"ile via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24/06. Davix 0.7.6. OS: cc7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:2310,deployability,version,version,2310,"ile via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24/06. Davix 0.7.6. OS: cc7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:2379,deployability,instal,install,2379,"ile via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24/06. Davix 0.7.6. OS: cc7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:652,energy efficiency,cloud,cloud,652,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:976,energy efficiency,cloud,cloud,976,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:2225,energy efficiency,cloud,cloud,2225,"ile via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24/06. Davix 0.7.6. OS: cc7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:2310,integrability,version,version,2310,"ile via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24/06. Davix 0.7.6. OS: cc7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:2310,modifiability,version,version,2310,"ile via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24/06. Davix 0.7.6. OS: cc7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:0,performance,Error,Error,0,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:787,performance,Error,Error,787,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:930,performance,Error,Error,930,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:1597,performance,CACh,CACheck,1597,"ile via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24/06. Davix 0.7.6. OS: cc7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:1015,reliability,fail,failed,1015,"/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 Septembe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:0,safety,Error,Error,0,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:787,safety,Error,Error,787,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:930,safety,Error,Error,930,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:1430,safety,input,input,1430,"When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:752,security,Access,AccessKey,752,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:763,security,Access,Access,763,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:1631,security,ssl,ssl,1631,"ile via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24/06. Davix 0.7.6. OS: cc7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:1897,security,Team,Team,1897,"ile via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24/06. Davix 0.7.6. OS: cc7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:0,usability,Error,Error,0,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:787,usability,Error,Error,787,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:930,usability,Error,Error,930,"Error when opening/creating new file via Davix-S3; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | Fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:1127,usability,behavi,behavior,1127,"com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:1285,usability,behavi,behavior,1285,"u find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:1430,usability,input,input,1430,"When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:1681,usability,interact,interactively,1681,"ile via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24/06. Davix 0.7.6. OS: cc7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/issues/9584:2046,usability,help,help,2046,"ile via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:. ```. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""). Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot . Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18). Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data. (TFile *) nullptr. ```. Leaving behind only a file with size 0. ### Expected behavior. I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. - MinIO s3 object storage. - `~/.rootrc` file:. ```. Davix.Debug: 2. Davix.GSI.CACheck: y. Davix.GSI.CAdir: /etc/ssl/certs. Davix.S3.Alternate: y. ```. - and then interactively:. ```. $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.24/06 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |. | From tag , 1 September 2021 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24/06. Davix 0.7.6. OS: cc7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9584
https://github.com/root-project/root/pull/9585:22,integrability,schema,schema,22,"Fix the fix to #7754 (schema evolution in nested collections incl. TClonesArray); Without this the fix for #7754 breaks some CMSSW use cases (see https://github.com/root-project/roottest/pull/804). This PR *also* includes the content of https://github.com/root-project/root/pull/8429 as they touch the same area and have not been tested separately (it does not make sense to do so). The only *new* code is the last commit ""TBranchElement: do not set fOnfileObject for collection parent (type …""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9585
https://github.com/root-project/root/pull/9585:226,performance,content,content,226,"Fix the fix to #7754 (schema evolution in nested collections incl. TClonesArray); Without this the fix for #7754 breaks some CMSSW use cases (see https://github.com/root-project/roottest/pull/804). This PR *also* includes the content of https://github.com/root-project/root/pull/8429 as they touch the same area and have not been tested separately (it does not make sense to do so). The only *new* code is the last commit ""TBranchElement: do not set fOnfileObject for collection parent (type …""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9585
https://github.com/root-project/root/pull/9585:352,reliability,doe,does,352,"Fix the fix to #7754 (schema evolution in nested collections incl. TClonesArray); Without this the fix for #7754 breaks some CMSSW use cases (see https://github.com/root-project/roottest/pull/804). This PR *also* includes the content of https://github.com/root-project/root/pull/8429 as they touch the same area and have not been tested separately (it does not make sense to do so). The only *new* code is the last commit ""TBranchElement: do not set fOnfileObject for collection parent (type …""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9585
https://github.com/root-project/root/pull/9585:330,safety,test,tested,330,"Fix the fix to #7754 (schema evolution in nested collections incl. TClonesArray); Without this the fix for #7754 breaks some CMSSW use cases (see https://github.com/root-project/roottest/pull/804). This PR *also* includes the content of https://github.com/root-project/root/pull/8429 as they touch the same area and have not been tested separately (it does not make sense to do so). The only *new* code is the last commit ""TBranchElement: do not set fOnfileObject for collection parent (type …""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9585
https://github.com/root-project/root/pull/9585:330,testability,test,tested,330,"Fix the fix to #7754 (schema evolution in nested collections incl. TClonesArray); Without this the fix for #7754 breaks some CMSSW use cases (see https://github.com/root-project/roottest/pull/804). This PR *also* includes the content of https://github.com/root-project/root/pull/8429 as they touch the same area and have not been tested separately (it does not make sense to do so). The only *new* code is the last commit ""TBranchElement: do not set fOnfileObject for collection parent (type …""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9585
https://github.com/root-project/root/pull/9586:79,availability,error,error,79,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:420,availability,error,error,420,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:117,deployability,build,builddir,117,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:126,deployability,build,build,126,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:132,deployability,BUILD,BUILD,132,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:319,deployability,build,builddir,319,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:328,deployability,build,build,328,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:334,deployability,BUILD,BUILD,334,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:983,deployability,build,builddir,983,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:992,deployability,build,build,992,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:998,deployability,BUILD,BUILD,998,"ix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1083,deployability,build,builddir,1083," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1092,deployability,build,build,1092," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1098,deployability,BUILD,BUILD,1098," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1180,deployability,build,builddir,1180," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1189,deployability,build,build,1189," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1195,deployability,BUILD,BUILD,1195," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1275,deployability,build,builddir,1275," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1284,deployability,build,build,1284," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1290,deployability,BUILD,BUILD,1290," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1370,deployability,build,builddir,1370," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1379,deployability,build,build,1379," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1385,deployability,BUILD,BUILD,1385," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1456,deployability,build,builddir,1456," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1465,deployability,build,build,1465," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1471,deployability,BUILD,BUILD,1471," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1547,deployability,build,builddir,1547," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1556,deployability,build,build,1556," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1562,deployability,BUILD,BUILD,1562," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1648,deployability,build,builddir,1648," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1657,deployability,build,build,1657," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1663,deployability,BUILD,BUILD,1663," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1992,deployability,updat,updated,1992," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:603,energy efficiency,alloc,allocator,603,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:79,performance,error,error,79,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:420,performance,error,error,420,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:79,safety,error,error,79,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:420,safety,error,error,420,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1916,safety,review,reviews,1916," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1962,safety,test,tested,1962," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1992,safety,updat,updated,1992," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1992,security,updat,updated,1992," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1916,testability,review,reviews,1916," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:1962,testability,test,tested,1962," 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:79,usability,error,error,79,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9586:420,usability,error,error,420,"Fix compilation with gcc 12; # This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function. ~~~. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':. /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'. 1319 | return nullptr;. | ^~~~~~~. In file included from /usr/include/c++/12/string:53,. from /usr/include/c++/12/bits/locale_classes.h:40,. from /usr/include/c++/12/bits/ios_base.h:41,. from /usr/include/c++/12/streambuf:41,. from /usr/include/c++/12/bits/streambuf_iterator.h:35,. from /usr/include/c++/12/iterator:66,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,. from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:. /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here. 732 | basic_string(nullptr_t) = delete;. | ^~~~~~~~~~~~. ~~~. Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally. - [ ] updated ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9586
https://github.com/root-project/root/pull/9587:104,deployability,updat,updated,104,"[TCling] Remove ""."" again from diagnostic; Fixes `roottest_cling_specialobj_runf02` with the previously updated reference file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9587
https://github.com/root-project/root/pull/9587:31,reliability,diagno,diagnostic,31,"[TCling] Remove ""."" again from diagnostic; Fixes `roottest_cling_specialobj_runf02` with the previously updated reference file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9587
https://github.com/root-project/root/pull/9587:104,safety,updat,updated,104,"[TCling] Remove ""."" again from diagnostic; Fixes `roottest_cling_specialobj_runf02` with the previously updated reference file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9587
https://github.com/root-project/root/pull/9587:104,security,updat,updated,104,"[TCling] Remove ""."" again from diagnostic; Fixes `roottest_cling_specialobj_runf02` with the previously updated reference file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9587
https://github.com/root-project/root/pull/9587:31,testability,diagno,diagnostic,31,"[TCling] Remove ""."" again from diagnostic; Fixes `roottest_cling_specialobj_runf02` with the previously updated reference file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9587
https://github.com/root-project/root/pull/9588:76,availability,avail,available,76,Avoid gif; Avoid generating gif output files in tutorials. Gif might not be available on some machine snd if a tutorial generates a gif it will produce an error when generating the doxygen documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9588
https://github.com/root-project/root/pull/9588:155,availability,error,error,155,Avoid gif; Avoid generating gif output files in tutorials. Gif might not be available on some machine snd if a tutorial generates a gif it will produce an error when generating the doxygen documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9588
https://github.com/root-project/root/pull/9588:155,performance,error,error,155,Avoid gif; Avoid generating gif output files in tutorials. Gif might not be available on some machine snd if a tutorial generates a gif it will produce an error when generating the doxygen documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9588
https://github.com/root-project/root/pull/9588:76,reliability,availab,available,76,Avoid gif; Avoid generating gif output files in tutorials. Gif might not be available on some machine snd if a tutorial generates a gif it will produce an error when generating the doxygen documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9588
https://github.com/root-project/root/pull/9588:0,safety,Avoid,Avoid,0,Avoid gif; Avoid generating gif output files in tutorials. Gif might not be available on some machine snd if a tutorial generates a gif it will produce an error when generating the doxygen documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9588
https://github.com/root-project/root/pull/9588:11,safety,Avoid,Avoid,11,Avoid gif; Avoid generating gif output files in tutorials. Gif might not be available on some machine snd if a tutorial generates a gif it will produce an error when generating the doxygen documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9588
https://github.com/root-project/root/pull/9588:76,safety,avail,available,76,Avoid gif; Avoid generating gif output files in tutorials. Gif might not be available on some machine snd if a tutorial generates a gif it will produce an error when generating the doxygen documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9588
https://github.com/root-project/root/pull/9588:155,safety,error,error,155,Avoid gif; Avoid generating gif output files in tutorials. Gif might not be available on some machine snd if a tutorial generates a gif it will produce an error when generating the doxygen documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9588
https://github.com/root-project/root/pull/9588:76,security,availab,available,76,Avoid gif; Avoid generating gif output files in tutorials. Gif might not be available on some machine snd if a tutorial generates a gif it will produce an error when generating the doxygen documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9588
https://github.com/root-project/root/pull/9588:155,usability,error,error,155,Avoid gif; Avoid generating gif output files in tutorials. Gif might not be available on some machine snd if a tutorial generates a gif it will produce an error when generating the doxygen documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9588
https://github.com/root-project/root/pull/9588:189,usability,document,documentation,189,Avoid gif; Avoid generating gif output files in tutorials. Gif might not be available on some machine snd if a tutorial generates a gif it will produce an error when generating the doxygen documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9588
https://github.com/root-project/root/pull/9589:82,availability,avail,available,82,Do not use gif; - Do not use gif output in tutorials. On machine where gif is not available is generated error when build the doxygen manual . - use `auto`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9589
https://github.com/root-project/root/pull/9589:105,availability,error,error,105,Do not use gif; - Do not use gif output in tutorials. On machine where gif is not available is generated error when build the doxygen manual . - use `auto`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9589
https://github.com/root-project/root/pull/9589:116,deployability,build,build,116,Do not use gif; - Do not use gif output in tutorials. On machine where gif is not available is generated error when build the doxygen manual . - use `auto`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9589
https://github.com/root-project/root/pull/9589:105,performance,error,error,105,Do not use gif; - Do not use gif output in tutorials. On machine where gif is not available is generated error when build the doxygen manual . - use `auto`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9589
https://github.com/root-project/root/pull/9589:82,reliability,availab,available,82,Do not use gif; - Do not use gif output in tutorials. On machine where gif is not available is generated error when build the doxygen manual . - use `auto`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9589
https://github.com/root-project/root/pull/9589:82,safety,avail,available,82,Do not use gif; - Do not use gif output in tutorials. On machine where gif is not available is generated error when build the doxygen manual . - use `auto`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9589
https://github.com/root-project/root/pull/9589:105,safety,error,error,105,Do not use gif; - Do not use gif output in tutorials. On machine where gif is not available is generated error when build the doxygen manual . - use `auto`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9589
https://github.com/root-project/root/pull/9589:82,security,availab,available,82,Do not use gif; - Do not use gif output in tutorials. On machine where gif is not available is generated error when build the doxygen manual . - use `auto`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9589
https://github.com/root-project/root/pull/9589:105,usability,error,error,105,Do not use gif; - Do not use gif output in tutorials. On machine where gif is not available is generated error when build the doxygen manual . - use `auto`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9589
https://github.com/root-project/root/issues/9590:53,deployability,build,build,53,[Feature request] It would be great to have the ROOT build with VS 2022.; ### Is your feature request related to a problem? Please describe. It would be great to have the ROOT build with VS 2022. ### Describe the solution you'd like. ROOT 6.24 binary build with VS 2022. ### Describe alternatives you've considered. ROOT 6.24 binary build with VS 2019. Does not work with VS 2022. ### Additional context. I'm not even sure if one can easily get older VS.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9590
https://github.com/root-project/root/issues/9590:176,deployability,build,build,176,[Feature request] It would be great to have the ROOT build with VS 2022.; ### Is your feature request related to a problem? Please describe. It would be great to have the ROOT build with VS 2022. ### Describe the solution you'd like. ROOT 6.24 binary build with VS 2022. ### Describe alternatives you've considered. ROOT 6.24 binary build with VS 2019. Does not work with VS 2022. ### Additional context. I'm not even sure if one can easily get older VS.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9590
https://github.com/root-project/root/issues/9590:251,deployability,build,build,251,[Feature request] It would be great to have the ROOT build with VS 2022.; ### Is your feature request related to a problem? Please describe. It would be great to have the ROOT build with VS 2022. ### Describe the solution you'd like. ROOT 6.24 binary build with VS 2022. ### Describe alternatives you've considered. ROOT 6.24 binary build with VS 2019. Does not work with VS 2022. ### Additional context. I'm not even sure if one can easily get older VS.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9590
https://github.com/root-project/root/issues/9590:333,deployability,build,build,333,[Feature request] It would be great to have the ROOT build with VS 2022.; ### Is your feature request related to a problem? Please describe. It would be great to have the ROOT build with VS 2022. ### Describe the solution you'd like. ROOT 6.24 binary build with VS 2022. ### Describe alternatives you've considered. ROOT 6.24 binary build with VS 2019. Does not work with VS 2022. ### Additional context. I'm not even sure if one can easily get older VS.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9590
https://github.com/root-project/root/issues/9590:353,reliability,Doe,Does,353,[Feature request] It would be great to have the ROOT build with VS 2022.; ### Is your feature request related to a problem? Please describe. It would be great to have the ROOT build with VS 2022. ### Describe the solution you'd like. ROOT 6.24 binary build with VS 2022. ### Describe alternatives you've considered. ROOT 6.24 binary build with VS 2019. Does not work with VS 2022. ### Additional context. I'm not even sure if one can easily get older VS.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9590
https://github.com/root-project/root/issues/9590:396,testability,context,context,396,[Feature request] It would be great to have the ROOT build with VS 2022.; ### Is your feature request related to a problem? Please describe. It would be great to have the ROOT build with VS 2022. ### Describe the solution you'd like. ROOT 6.24 binary build with VS 2022. ### Describe alternatives you've considered. ROOT 6.24 binary build with VS 2019. Does not work with VS 2022. ### Additional context. I'm not even sure if one can easily get older VS.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9590
https://github.com/root-project/root/pull/9591:58,availability,state,statements,58,Refactored df001_introduction.py; refactor: changed print statements to use a newer style of string formatting. Back compatible with 2.7. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9591
https://github.com/root-project/root/pull/9591:233,deployability,updat,updated,233,Refactored df001_introduction.py; refactor: changed print statements to use a newer style of string formatting. Back compatible with 2.7. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9591
https://github.com/root-project/root/pull/9591:58,integrability,state,statements,58,Refactored df001_introduction.py; refactor: changed print statements to use a newer style of string formatting. Back compatible with 2.7. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9591
https://github.com/root-project/root/pull/9591:100,interoperability,format,formatting,100,Refactored df001_introduction.py; refactor: changed print statements to use a newer style of string formatting. Back compatible with 2.7. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9591
https://github.com/root-project/root/pull/9591:117,interoperability,compatib,compatible,117,Refactored df001_introduction.py; refactor: changed print statements to use a newer style of string formatting. Back compatible with 2.7. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9591
https://github.com/root-project/root/pull/9591:0,modifiability,Refact,Refactored,0,Refactored df001_introduction.py; refactor: changed print statements to use a newer style of string formatting. Back compatible with 2.7. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9591
https://github.com/root-project/root/pull/9591:34,modifiability,refact,refactor,34,Refactored df001_introduction.py; refactor: changed print statements to use a newer style of string formatting. Back compatible with 2.7. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9591
https://github.com/root-project/root/pull/9591:0,performance,Refactor,Refactored,0,Refactored df001_introduction.py; refactor: changed print statements to use a newer style of string formatting. Back compatible with 2.7. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9591
https://github.com/root-project/root/pull/9591:34,performance,refactor,refactor,34,Refactored df001_introduction.py; refactor: changed print statements to use a newer style of string formatting. Back compatible with 2.7. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9591
https://github.com/root-project/root/pull/9591:203,safety,test,tested,203,Refactored df001_introduction.py; refactor: changed print statements to use a newer style of string formatting. Back compatible with 2.7. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9591
https://github.com/root-project/root/pull/9591:233,safety,updat,updated,233,Refactored df001_introduction.py; refactor: changed print statements to use a newer style of string formatting. Back compatible with 2.7. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9591
https://github.com/root-project/root/pull/9591:233,security,updat,updated,233,Refactored df001_introduction.py; refactor: changed print statements to use a newer style of string formatting. Back compatible with 2.7. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9591
https://github.com/root-project/root/pull/9591:203,testability,test,tested,203,Refactored df001_introduction.py; refactor: changed print statements to use a newer style of string formatting. Back compatible with 2.7. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9591
https://github.com/root-project/root/pull/9592:28,deployability,modul,module,28,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:123,deployability,modul,modules,123,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:164,deployability,modul,modules,164,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:220,deployability,modul,module,220,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:374,deployability,modul,module,374,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:450,deployability,patch,patch,450,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:360,energy efficiency,load,load,360,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:308,integrability,Event,Event,308,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:321,integrability,Event,Event,321,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:28,modifiability,modul,module,28,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:123,modifiability,modul,modules,123,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:164,modifiability,modul,modules,164,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:220,modifiability,modul,module,220,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:374,modifiability,modul,module,374,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:360,performance,load,load,360,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:28,safety,modul,module,28,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:123,safety,modul,modules,123,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:164,safety,modul,modules,164,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:220,safety,modul,module,220,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:374,safety,modul,module,374,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:450,safety,patch,patch,450,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:268,security,ident,identifier,268,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9592:450,security,patch,patch,450,"[cxxmodules] Use the global module index only when no rootmap candidate is found; In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9592
https://github.com/root-project/root/pull/9593:12,availability,error,errors,12,Fix doxygen errors or inconsistencies; # This Pull request:. ## Changes or fixes:. Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9593
https://github.com/root-project/root/pull/9593:88,availability,error,errors,88,Fix doxygen errors or inconsistencies; # This Pull request:. ## Changes or fixes:. Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9593
https://github.com/root-project/root/pull/9593:194,deployability,updat,updated,194,Fix doxygen errors or inconsistencies; # This Pull request:. ## Changes or fixes:. Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9593
https://github.com/root-project/root/pull/9593:12,performance,error,errors,12,Fix doxygen errors or inconsistencies; # This Pull request:. ## Changes or fixes:. Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9593
https://github.com/root-project/root/pull/9593:88,performance,error,errors,88,Fix doxygen errors or inconsistencies; # This Pull request:. ## Changes or fixes:. Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9593
https://github.com/root-project/root/pull/9593:12,safety,error,errors,12,Fix doxygen errors or inconsistencies; # This Pull request:. ## Changes or fixes:. Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9593
https://github.com/root-project/root/pull/9593:88,safety,error,errors,88,Fix doxygen errors or inconsistencies; # This Pull request:. ## Changes or fixes:. Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9593
https://github.com/root-project/root/pull/9593:164,safety,test,tested,164,Fix doxygen errors or inconsistencies; # This Pull request:. ## Changes or fixes:. Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9593
https://github.com/root-project/root/pull/9593:194,safety,updat,updated,194,Fix doxygen errors or inconsistencies; # This Pull request:. ## Changes or fixes:. Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9593
https://github.com/root-project/root/pull/9593:194,security,updat,updated,194,Fix doxygen errors or inconsistencies; # This Pull request:. ## Changes or fixes:. Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9593
https://github.com/root-project/root/pull/9593:164,testability,test,tested,164,Fix doxygen errors or inconsistencies; # This Pull request:. ## Changes or fixes:. Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9593
https://github.com/root-project/root/pull/9593:12,usability,error,errors,12,Fix doxygen errors or inconsistencies; # This Pull request:. ## Changes or fixes:. Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9593
https://github.com/root-project/root/pull/9593:88,usability,error,errors,88,Fix doxygen errors or inconsistencies; # This Pull request:. ## Changes or fixes:. Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9593
https://github.com/root-project/root/pull/9593:128,usability,document,documentation,128,Fix doxygen errors or inconsistencies; # This Pull request:. ## Changes or fixes:. Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9593
https://github.com/root-project/root/issues/9594:17,availability,failur,failure,17,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:239,availability,error,error,239,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:1110,availability,Operat,Operating,1110,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:1203,availability,down,download,1203,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:11,deployability,build,build,11,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:17,deployability,fail,failure,17,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:57,deployability,build,builds,57,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:204,deployability,build,builds,204,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:211,deployability,fail,fail,211,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:357,deployability,Modul,ModuleFile,357,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:392,deployability,Modul,ModuleFile,392,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:533,deployability,build,build,533,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:539,deployability,log,log,539,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:656,deployability,build,build,656,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:1038,deployability,build,build,1038,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:1185,deployability,instal,install,1185,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:357,modifiability,Modul,ModuleFile,357,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:392,modifiability,Modul,ModuleFile,392,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:17,performance,failur,failure,17,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:239,performance,error,error,239,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:17,reliability,fail,failure,17,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:211,reliability,fail,fail,211,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:239,safety,error,error,239,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:357,safety,Modul,ModuleFile,357,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:392,safety,Modul,ModuleFile,392,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:539,safety,log,log,539,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:992,safety,input,input,992,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:539,security,log,log,539,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:539,testability,log,log,539,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:1280,testability,context,context,1280,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:239,usability,error,error,239,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:554,usability,clear,clear,554,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:602,usability,behavi,behavior,602,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:633,usability,behavi,behavior,633,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:676,usability,clear,clear,676,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:847,usability,behavi,behavior,847,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9594:992,usability,input,input,992,"Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th; - [X] Checked for duplicates. None found. ### Describe the bug. Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in. ```. clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int). ```. See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. A successful build ;-) . <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. LCG nightlies (lcgcmake). Did not try yet in standalone. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT master. 2. Operating system: centos7, centos8. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context. None for the moment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9594
https://github.com/root-project/root/issues/9595:13719,availability,operat,operator,13719,"l/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14245,availability,error,error,14245,"o"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14490,availability,error,error,14490,"0 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14676,availability,error,error,14676,"9 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14885,availability,error,error,14885,"57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15390,availability,error,error,15390,"cessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28039,availability,operat,operator,28039,"l/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make swi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:29428,availability,down,download,29428,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:29892,availability,echo,echo,29892,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14,deployability,build,building,14,"Segfault when building conda nightlies; . - [x] Checked for duplicates. ### Describe the bug. The conda nightly builds started segfaulting late last year while generating `hsimple.root`. I think I've isolated the problem to the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:112,deployability,build,builds,112,"Segfault when building conda nightlies; . - [x] Checked for duplicates. ### Describe the bug. The conda nightly builds started segfaulting late last year while generating `hsimple.root`. I think I've isolated the problem to the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:297,deployability,build,build,297,"Segfault when building conda nightlies; . - [x] Checked for duplicates. ### Describe the bug. The conda nightly builds started segfaulting late last year while generating `hsimple.root`. I think I've isolated the problem to the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:806,deployability,stack,stack,806,"Segfault when building conda nightlies; . - [x] Checked for duplicates. ### Describe the bug. The conda nightly builds started segfaulting late last year while generating `hsimple.root`. I think I've isolated the problem to the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:1213,deployability,stack,stack,1213,"blem to the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:1619,deployability,Stack,StackTrace,1619," so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::ge",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:5570,deployability,Modul,ModuleBuilder,5570,"lang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:6229,deployability,Build,BuildModuleInclude,6229,"in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalPa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:7784,deployability,modul,modulename,7784,"er.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:8487,deployability,modul,modulename,8487,"h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:8498,deployability,modul,modulename,8498,"0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsAr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13473,deployability,modul,module,13473,"07f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:16140,deployability,stack,stack,16140,"ut>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::Code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:19915,deployability,Modul,ModuleBuilder,19915,"lang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:20574,deployability,Build,BuildModuleInclude,20574,"in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalPa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22129,deployability,modul,modulename,22129,"er.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22832,deployability,modul,modulename,22832,"h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22843,deployability,modul,modulename,22843,"0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:27793,deployability,modul,module,27793,"07f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28856,deployability,build,build,28856,"=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mamba",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28982,deployability,contain,container,28982,"07f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:29318,deployability,contain,container,29318,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:29328,deployability,instal,install,29328,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:29412,deployability,releas,releases,29412,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:29705,deployability,contain,container,29705,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:1477,energy efficiency,optim,optimized,1477,"GS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. ent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:1567,energy efficiency,core,core,1567,"lers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:1705,energy efficiency,core,core,1705,"this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_pac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:1901,energy efficiency,core,core,1901," EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:2079,energy efficiency,optim,optimized,2079,"k *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:2834,energy efficiency,optim,optimized,2834,"olation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:3459,energy efficiency,optim,optimized,3459,"0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:3983,energy efficiency,optim,optimized,3983,"0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:4263,energy efficiency,optim,optimized,4263,"l/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:4317,energy efficiency,optim,optimized,4317,".cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:5118,energy efficiency,optim,optimized,5118,"en/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:5296,energy efficiency,optim,optimized,5296,"0, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:5315,energy efficiency,optim,optimized,5315,"imized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:5671,energy efficiency,optim,optimized,5671,"odeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:6071,energy efficiency,optim,optimized,6071,"EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::Incremen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:6509,energy efficiency,optim,optimized,6509,"t /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:7964,energy efficiency,optim,optimized,7964,"v/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:7993,energy efficiency,optim,optimized,7993,"ude/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BA",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:8023,energy efficiency,optim,optimized,8023,"h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:8402,energy efficiency,core,core,8402,"ase_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:9720,energy efficiency,core,core,9720,"f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:10764,energy efficiency,load,loadLibrary,10764,"4b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:11052,energy efficiency,load,loadLibrary,11052,"x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:11071,energy efficiency,optim,optimized,11071,"x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::Met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:11109,energy efficiency,optim,optimized,11109,") from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:11308,energy efficiency,load,loadFile,11308," _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:135. #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:11369,energy efficiency,optim,optimized,11369,"007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:135. #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13094,energy efficiency,core,core,13094,"t /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:135. #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118. #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13164,energy efficiency,Load,Load,13164,"lib/MetaProcessor/MetaParser.cpp:135. #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118. #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13260,energy efficiency,optim,optimized,13260,"0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118. #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13446,energy efficiency,Load,Load,13446,"etaParser.cpp:118. #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13626,energy efficiency,core,core,13626," result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13855,energy efficiency,core,core,13855,"terpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::Process",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13920,energy efficiency,optim,optimized,13920,"7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c05",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13946,energy efficiency,optim,optimized,13946,"-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13967,energy efficiency,optim,optimized,13967," compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14002,energy efficiency,optim,optimized,14002,"nterpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14029,energy efficiency,optim,optimized,14029,"t=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TAppl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14054,energy efficiency,optim,optimized,14054,"conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TAp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14123,energy efficiency,core,core,14123,"442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14229,energy efficiency,optim,optimized,14229,"ug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14320,energy efficiency,core,core,14320,"1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14565,energy efficiency,core,core,14565,"alse) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14660,energy efficiency,optim,optimized,14660,"0007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14704,energy efficiency,optim,optimized,14704,"tring&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14773,energy efficiency,core,core,14773,"nthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14869,energy efficiency,optim,optimized,14869,"em.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ==================================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15015,energy efficiency,core,core,15015," build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15110,energy efficiency,optim,optimized,15110,"-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bug",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15132,energy efficiency,optim,optimized,15132,"TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15221,energy efficiency,core,core,15221,"line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15337,energy efficiency,optim,optimized,15337,"ing.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15465,energy efficiency,core,core,15465,"-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15644,energy efficiency,core,core,15644,"teFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15711,energy efficiency,optim,optimized,15711,"t>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:16424,energy efficiency,optim,optimized,16424,"/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:17179,energy efficiency,optim,optimized,17179,"addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:17804,energy efficiency,optim,optimized,17804,"0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:18328,energy efficiency,optim,optimized,18328,"0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:18608,energy efficiency,optim,optimized,18608,"l/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:18662,energy efficiency,optim,optimized,18662,".cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:19463,energy efficiency,optim,optimized,19463,"en/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:19641,energy efficiency,optim,optimized,19641,"0, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:19660,energy efficiency,optim,optimized,19660,"imized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:20016,energy efficiency,optim,optimized,20016,"odeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:20416,energy efficiency,optim,optimized,20416,"EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::Incremen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:20854,energy efficiency,optim,optimized,20854,"t /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22309,energy efficiency,optim,optimized,22309,"v/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22338,energy efficiency,optim,optimized,22338,"ude/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BA",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22368,energy efficiency,optim,optimized,22368,"h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline hea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22747,energy efficiency,core,core,22747,"ase_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:24040,energy efficiency,core,core,24040,"s=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:25084,energy efficiency,load,loadLibrary,25084,"4b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:25372,energy efficiency,load,loadLibrary,25372,"x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:25391,energy efficiency,optim,optimized,25391,"x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::Met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:25429,energy efficiency,optim,optimized,25429,") from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:25628,energy efficiency,load,loadFile,25628," _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:135. #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:25689,energy efficiency,optim,optimized,25689,"007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:135. #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:27414,energy efficiency,core,core,27414,"t /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:135. #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118. #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:27484,energy efficiency,Load,Load,27484,"lib/MetaProcessor/MetaParser.cpp:135. #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118. #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:27580,energy efficiency,optim,optimized,27580,"0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118. #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate call",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:27766,energy efficiency,Load,Load,27766,"etaParser.cpp:118. #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with doc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:27946,energy efficiency,core,core,27946," result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28175,energy efficiency,core,core,28175,"terpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28240,energy efficiency,optim,optimized,28240,"7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28266,energy efficiency,optim,optimized,28266,"-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" cen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28287,energy efficiency,optim,optimized,28287," compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28322,energy efficiency,optim,optimized,28322,"nterpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28349,energy efficiency,optim,optimized,28349,"t=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28374,energy efficiency,optim,optimized,28374,"conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28443,energy efficiency,core,core,28443,"442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambafor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28626,energy efficiency,core,core,28626,"bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:16074,integrability,sub,submit,16074,"Line (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:1024,interoperability,share,shared,1024,"a nightlies; . - [x] Checked for duplicates. ### Describe the bug. The conda nightly builds started segfaulting late last year while generating `hsimple.root`. I think I've isolated the problem to the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:10545,interoperability,platform,platform,10545,"nonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:10685,interoperability,Platform,PlatformPosix,10685,"oot_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:24865,interoperability,platform,platform,24865,"nonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:25005,interoperability,Platform,PlatformPosix,25005,"oot_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:5570,modifiability,Modul,ModuleBuilder,5570,"lang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:7784,modifiability,modul,modulename,7784,"er.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:8487,modifiability,modul,modulename,8487,"h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:8498,modifiability,modul,modulename,8498,"0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsAr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13473,modifiability,modul,module,13473,"07f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:19915,modifiability,Modul,ModuleBuilder,19915,"lang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22129,modifiability,modul,modulename,22129,"er.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22832,modifiability,modul,modulename,22832,"h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22843,modifiability,modul,modulename,22843,"0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:27793,modifiability,modul,module,27793,"07f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:1477,performance,optimiz,optimized,1477,"GS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. ent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:2079,performance,optimiz,optimized,2079,"k *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:2834,performance,optimiz,optimized,2834,"olation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:3446,performance,Perform,PerformInit,3446,"y=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:3459,performance,optimiz,optimized,3459,"0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:3747,performance,Perform,PerformInit,3747,"10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:3759,performance,Perform,PerformInit,3759,"4c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:3983,performance,optimiz,optimized,3983,"0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:4032,performance,Perform,PerformInit,4032,"alue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:4044,performance,Perform,PerformInit,4044,"=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:4263,performance,optimiz,optimized,4263,"l/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:4317,performance,optimiz,optimized,4317,".cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:5118,performance,optimiz,optimized,5118,"en/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:5296,performance,optimiz,optimized,5296,"0, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:5315,performance,optimiz,optimized,5315,"imized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:5626,performance,Multiplex,MultiplexConsumer,5626,"8 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Par",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:5671,performance,optimiz,optimized,5671,"odeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:5752,performance,Multiplex,MultiplexConsumer,5752,"conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:6020,performance,Multiplex,MultiplexConsumer,6020,"7f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:6071,performance,optimiz,optimized,6071,"EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::Incremen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:6163,performance,Multiplex,MultiplexConsumer,6163,"-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:6509,performance,optimiz,optimized,6509,"t /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:7964,performance,optimiz,optimized,7964,"v/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:7993,performance,optimiz,optimized,7993,"ude/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BA",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:8023,performance,optimiz,optimized,8023,"h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:10764,performance,load,loadLibrary,10764,"4b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:11052,performance,load,loadLibrary,11052,"x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:11071,performance,optimiz,optimized,11071,"x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::Met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:11109,performance,optimiz,optimized,11109,") from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:11308,performance,load,loadFile,11308," _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:135. #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:11369,performance,optimiz,optimized,11369,"007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:135. #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13164,performance,Load,Load,13164,"lib/MetaProcessor/MetaParser.cpp:135. #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118. #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13260,performance,optimiz,optimized,13260,"0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118. #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13446,performance,Load,Load,13446,"etaParser.cpp:118. #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13920,performance,optimiz,optimized,13920,"7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c05",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13946,performance,optimiz,optimized,13946,"-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13967,performance,optimiz,optimized,13967," compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14002,performance,optimiz,optimized,14002,"nterpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14029,performance,optimiz,optimized,14029,"t=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TAppl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14054,performance,optimiz,optimized,14054,"conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TAp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14229,performance,optimiz,optimized,14229,"ug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14245,performance,error,error,14245,"o"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14490,performance,error,error,14490,"0 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14660,performance,optimiz,optimized,14660,"0007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14676,performance,error,error,14676,"9 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14704,performance,optimiz,optimized,14704,"tring&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14869,performance,optimiz,optimized,14869,"em.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ==================================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14885,performance,error,error,14885,"57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15110,performance,optimiz,optimized,15110,"-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bug",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15132,performance,optimiz,optimized,15132,"TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15337,performance,optimiz,optimized,15337,"ing.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15390,performance,error,error,15390,"cessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15711,performance,optimiz,optimized,15711,"t>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:16424,performance,optimiz,optimized,16424,"/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:17179,performance,optimiz,optimized,17179,"addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:17791,performance,Perform,PerformInit,17791,"y=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:17804,performance,optimiz,optimized,17804,"0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:18092,performance,Perform,PerformInit,18092,"10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:18104,performance,Perform,PerformInit,18104,"4c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:18328,performance,optimiz,optimized,18328,"0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:18377,performance,Perform,PerformInit,18377,"alue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:18389,performance,Perform,PerformInit,18389,"=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:18608,performance,optimiz,optimized,18608,"l/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:18662,performance,optimiz,optimized,18662,".cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:19463,performance,optimiz,optimized,19463,"en/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:19641,performance,optimiz,optimized,19641,"0, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:19660,performance,optimiz,optimized,19660,"imized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:19971,performance,Multiplex,MultiplexConsumer,19971,"8 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Par",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:20016,performance,optimiz,optimized,20016,"odeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:20097,performance,Multiplex,MultiplexConsumer,20097,"conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:20365,performance,Multiplex,MultiplexConsumer,20365,"7f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:20416,performance,optimiz,optimized,20416,"EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::Incremen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:20508,performance,Multiplex,MultiplexConsumer,20508,"-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:20854,performance,optimiz,optimized,20854,"t /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22309,performance,optimiz,optimized,22309,"v/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22338,performance,optimiz,optimized,22338,"ude/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BA",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22368,performance,optimiz,optimized,22368,"h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline hea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:25084,performance,load,loadLibrary,25084,"4b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:25372,performance,load,loadLibrary,25372,"x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:25391,performance,optimiz,optimized,25391,"x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::Met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:25429,performance,optimiz,optimized,25429,") from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:25628,performance,load,loadFile,25628," _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:135. #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:25689,performance,optimiz,optimized,25689,"007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2. #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2. #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err. entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this. entry=0x55ed24bf4fb0, libStem=..., permanent=permanent. entry=false, resolved=resolved. entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372. #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581. #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction. entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147. #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:135. #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:27484,performance,Load,Load,27484,"lib/MetaProcessor/MetaParser.cpp:135. #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118. #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:27580,performance,optimiz,optimized,27580,"0x7fffe1b09d30, actionResult=. 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118. #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate call",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:27766,performance,Load,Load,27766,"etaParser.cpp:118. #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with doc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28240,performance,optimiz,optimized,28240,"7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28266,performance,optimiz,optimized,28266,"-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" cen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28287,performance,optimiz,optimized,28287," compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28322,performance,optimiz,optimized,28322,"nterpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28349,performance,optimiz,optimized,28349,"t=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28374,performance,optimiz,optimized,28374,"conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:9223,reliability,pra,pragma,9223,"::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:9236,reliability,diagno,diagnostic,9236,"naryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:9278,reliability,pra,pragma,9278,"mpl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:9291,reliability,diagno,diagnostic,9291,"eaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:9337,reliability,pra,pragma,9337,"e=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:9350,reliability,diagno,diagno,9350,"usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:23549,reliability,pra,pragma,23549,"nonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:23562,reliability,diagno,diagnostic,23562,"ace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:23601,reliability,pra,pragma,23601,"_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:23614,reliability,diagno,diagnostic,23614,"_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:23657,reliability,pra,pragma,23657,"ration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:23670,reliability,diagno,diagno,23670," hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:200,safety,isol,isolated,200,"Segfault when building conda nightlies; . - [x] Checked for duplicates. ### Describe the bug. The conda nightly builds started segfaulting late last year while generating `hsimple.root`. I think I've isolated the problem to the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:948,safety,test,test,948,"Segfault when building conda nightlies; . - [x] Checked for duplicates. ### Describe the bug. The conda nightly builds started segfaulting late last year while generating `hsimple.root`. I think I've isolated the problem to the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:971,safety,test,test,971,"Segfault when building conda nightlies; . - [x] Checked for duplicates. ### Describe the bug. The conda nightly builds started segfaulting late last year while generating `hsimple.root`. I think I've isolated the problem to the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:5570,safety,Modul,ModuleBuilder,5570,"lang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:6889,safety,input,input,6889,"rc/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDicti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:7117,safety,input,input,7117,"rc/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitializatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:7336,safety,input,input,7336,"onda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:7594,safety,input,input,7594,". #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(ano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:7784,safety,modul,modulename,7784,"er.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:8487,safety,modul,modulename,8487,"h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:8498,safety,modul,modulename,8498,"0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsAr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:9057,safety,test,test,9057,"61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:13473,safety,modul,module,13473,"07f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14245,safety,error,error,14245,"o"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14477,safety,test,test,14477,"=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14490,safety,error,error,14490,"0 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14676,safety,error,error,14676,"9 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14885,safety,error,error,14885,"57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14928,safety,test,test,14928,"out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15377,safety,test,test,15377,"in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15390,safety,error,error,15390,"cessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:19915,safety,Modul,ModuleBuilder,19915,"lang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346. #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394. #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344. #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271. #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:21234,safety,input,input,21234,"rc/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDicti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:21462,safety,input,input,21462,"rc/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitializatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:21681,safety,input,input,21681,"onda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:21939,safety,input,input,21939,". #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(ano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22129,safety,modul,modulename,22129,"er.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22832,safety,modul,modulename,22832,"h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:22843,safety,modul,modulename,22843,"0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:23390,safety,test,test,23390,"unc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:27793,safety,modul,module,27793,"07f54c1c14331 in cling::MetaProcessor::process (this=this. entry=0x55ed255fe680, input_line=..., compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result. entry=0x0, disableValuePrinting=disableValuePrinting. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=. 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442. #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28606,safety,except,exception,28606,"mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c http",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:29929,safety,test,test,29929,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:29994,safety,test,test,29994,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:30069,safety,test,test,30069,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:30123,safety,test,test,30123,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:30227,safety,test,test,30227,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:200,security,iso,isolated,200,"Segfault when building conda nightlies; . - [x] Checked for duplicates. ### Describe the bug. The conda nightly builds started segfaulting late last year while generating `hsimple.root`. I think I've isolated the problem to the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:1941,security,sign,signal,1941," -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:2658,security,Access,AccessType,2658,"al/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:2850,security,Access,AccessType,2850,"/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:2866,security,Access,AccessType,2866,"/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:17003,security,Access,AccessType,17003," Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:17195,security,Access,AccessType,17195,"hing else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:17211,security,Access,AccessType,17211,"might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:200,testability,isol,isolated,200,"Segfault when building conda nightlies; . - [x] Checked for duplicates. ### Describe the bug. The conda nightly builds started segfaulting late last year while generating `hsimple.root`. I think I've isolated the problem to the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:812,testability,trace,trace,812,"Segfault when building conda nightlies; . - [x] Checked for duplicates. ### Describe the bug. The conda nightly builds started segfaulting late last year while generating `hsimple.root`. I think I've isolated the problem to the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:948,testability,test,test,948,"Segfault when building conda nightlies; . - [x] Checked for duplicates. ### Describe the bug. The conda nightly builds started segfaulting late last year while generating `hsimple.root`. I think I've isolated the problem to the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:971,testability,test,test,971,"Segfault when building conda nightlies; . - [x] Checked for duplicates. ### Describe the bug. The conda nightly builds started segfaulting late last year while generating `hsimple.root`. I think I've isolated the problem to the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:1219,testability,trace,trace,1219,"o the addition of `-O1` to the default cling arguments. For debugging I've build Friday's master with https://github.com/root-project/root/commit/eff25e526f23d86077819211898f0fcae3153dc8 reverted so the issue can be triggered at will by setting `EXTRA_CLING_ARGS=-O1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>. <p>. ```cpp. (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++... Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6. #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6. #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108. #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399. #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619. #5 <signal handler called>. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:9057,testability,test,test,9057,"61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:9236,testability,diagno,diagnostic,9236,"naryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:9291,testability,diagno,diagnostic,9291,"eaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:9350,testability,diagno,diagno,9350,"usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""./test.cpp\""\n\n#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored \""-Wkeyword-compat\""\n#pragma clang diagnostic ignored \""-Wignored-attributes\""\n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14477,testability,test,test,14477,"=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14928,testability,test,test,14928,"out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15377,testability,test,test,15377,"in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:16146,testability,trace,trace,16146,"rr=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenMod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:23390,testability,test,test,23390,"unc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:23562,testability,diagno,diagnostic,23562,"ace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:23614,testability,diagno,diagnostic,23614,"_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:23670,testability,diagno,diagno,23670," hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths. entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode. entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifndef __ACLIC__n #define __ACLIC__ 1n#endifnn#define _BACKWARD_BACKWARD_WARNING_Hn// Inline headersn#include ""./test.cpp""nn#undef _BACKWARD_BACKW""..., fwdDeclCode=fwdDeclCode. entry=0x7f54bf6200d8 ""n#line 1 ""test_cpp_ACLiC_dict dictionary forward declarations' payload""n#pragma clang diagnostic ignored ""-Wkeyword-compat""n#pragma clang diagnostic ignored ""-Wignored-attributes""n#pragma clang diagno""..., triggerFunc=triggerFunc. entry=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TROOT.cxx:2558. #35 0x00007f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88. #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2. #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2. #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2. #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2. #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2. #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:29803,testability,simpl,simple,29803,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:29929,testability,test,test,29929,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:29994,testability,test,test,29994,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:30069,testability,test,test,30069,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:30123,testability,test,test,30123,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:30227,testability,test,test,30227,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:3446,usability,Perform,PerformInit,3446,"y=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:3747,usability,Perform,PerformInit,3747,"10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:3759,usability,Perform,PerformInit,3759,"4c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:4032,usability,Perform,PerformInit,4032,"alue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:4044,usability,Perform,PerformInit,4044,"=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:6889,usability,input,input,6889,"rc/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDicti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:7117,usability,input,input,7117,"rc/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitializatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:7336,usability,input,input,7336,"onda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:7594,usability,input,input,7594,". #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(ano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14245,usability,error,error,14245,"o"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14490,usability,error,error,14490,"0 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14676,usability,error,error,14676,"9 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:14885,usability,error,error,14885,"57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542. #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15390,usability,error,error,15390,"cessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520. #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591. #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15907,usability,hint,hint,15907,"le=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:15951,usability,help,help,15951,"4b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463. #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:16222,usability,help,help,16222,"e/base/src/TApplication.cxx:1436. #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795. #64 0x00007f54c943fe5e in TRint::Run (this=this. entry=0x55ed24b82e70, retrn=retrn. entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446. #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this. entry=0x55ed2cce0be0, Ty=<optimized out>, Ty. entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174. #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354. #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this. entry=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:17791,usability,Perform,PerformInit,17791,"y=0x55ed2cce0be0, QTy=QTy. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204. #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227. #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:18092,usability,Perform,PerformInit,18092,"10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:18104,usability,Perform,PerformInit,18104,"4c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType. entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668. #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:18377,usability,Perform,PerformInit,18377,"alue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:18389,usability,Perform,PerformInit,18389,"=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126. #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37. #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215. #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this. entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670. #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this. entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr. entry=0x55ed2cd76b08, PerformInit=PerformInit. entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481. #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this. entry=0x55ed2cce1280, D=<optimized out>, D. entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024. #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this. entry=0x55ed2cce1280, GD=..., GV=GV. entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793. #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this. entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540. #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168. #20 0x00007f54c1dc530a in clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:21234,usability,input,input,21234,"rc/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230. #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDicti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:21462,usability,input,input,21462,"rc/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317. #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitializatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:21681,usability,input,input,21681,"onda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431. #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this. entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406. #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:21939,usability,input,input,21939,". #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl. entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638. #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940. #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this. entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943. #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332. #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename. entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers. entry=0x7f54bf6220b0 <(ano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:28676,usability,behavi,behavior,28676,"linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154. #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942. #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364. #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9595:29803,usability,simpl,simple,29803,"imized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813. ===========================================================. Root > pure virtual method called. terminate called without an active exception. Aborted (core dumped). ```. </p>. </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash. PATH_FOR_REPRODUCING=/scratch2/root-debug2. mkdir -p ""$PATH_FOR_REPRODUCING"". docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash. ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash. curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh. bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge. source $PWD/mambaforge/bin/activate. mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge. exit. ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash. source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1"". echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp. # These always work. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp. EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++. # This crashes under centos:7 but not centos:8. EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9595
https://github.com/root-project/root/issues/9596:333,availability,servic,services,333,"doxygen gets confused with ClassDef and Streamer; - [x] Checked for duplicates. ### Describe the bug. ClassDef macro implements the ;:Streamer declaration in hundreds of classes. However, when generating the documentation, doxygen seems not to be able to detect its presence, and gives thousands of warnings, see e.g. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull. . of the type:. ```. geom/geom/src/TGeoArb8.cxx:1280: warning: no uniquely matching class member found for . void TGeoArb8::Streamer(TBuffer &R__b). ```. ### Expected behavior. - Maybe the ClassDef macro can be tweaked so that doxygen finds correctly the link. - Or if it is a bug in doxygen, I could file a report to them. . - If none of the above solutions work, maybe hide this functions from doxygen? ### To Reproduce. https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9596
https://github.com/root-project/root/issues/9596:333,deployability,servic,services,333,"doxygen gets confused with ClassDef and Streamer; - [x] Checked for duplicates. ### Describe the bug. ClassDef macro implements the ;:Streamer declaration in hundreds of classes. However, when generating the documentation, doxygen seems not to be able to detect its presence, and gives thousands of warnings, see e.g. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull. . of the type:. ```. geom/geom/src/TGeoArb8.cxx:1280: warning: no uniquely matching class member found for . void TGeoArb8::Streamer(TBuffer &R__b). ```. ### Expected behavior. - Maybe the ClassDef macro can be tweaked so that doxygen finds correctly the link. - Or if it is a bug in doxygen, I could file a report to them. . - If none of the above solutions work, maybe hide this functions from doxygen? ### To Reproduce. https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9596
https://github.com/root-project/root/issues/9596:333,integrability,servic,services,333,"doxygen gets confused with ClassDef and Streamer; - [x] Checked for duplicates. ### Describe the bug. ClassDef macro implements the ;:Streamer declaration in hundreds of classes. However, when generating the documentation, doxygen seems not to be able to detect its presence, and gives thousands of warnings, see e.g. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull. . of the type:. ```. geom/geom/src/TGeoArb8.cxx:1280: warning: no uniquely matching class member found for . void TGeoArb8::Streamer(TBuffer &R__b). ```. ### Expected behavior. - Maybe the ClassDef macro can be tweaked so that doxygen finds correctly the link. - Or if it is a bug in doxygen, I could file a report to them. . - If none of the above solutions work, maybe hide this functions from doxygen? ### To Reproduce. https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9596
https://github.com/root-project/root/issues/9596:333,modifiability,servic,services,333,"doxygen gets confused with ClassDef and Streamer; - [x] Checked for duplicates. ### Describe the bug. ClassDef macro implements the ;:Streamer declaration in hundreds of classes. However, when generating the documentation, doxygen seems not to be able to detect its presence, and gives thousands of warnings, see e.g. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull. . of the type:. ```. geom/geom/src/TGeoArb8.cxx:1280: warning: no uniquely matching class member found for . void TGeoArb8::Streamer(TBuffer &R__b). ```. ### Expected behavior. - Maybe the ClassDef macro can be tweaked so that doxygen finds correctly the link. - Or if it is a bug in doxygen, I could file a report to them. . - If none of the above solutions work, maybe hide this functions from doxygen? ### To Reproduce. https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9596
https://github.com/root-project/root/issues/9596:255,safety,detect,detect,255,"doxygen gets confused with ClassDef and Streamer; - [x] Checked for duplicates. ### Describe the bug. ClassDef macro implements the ;:Streamer declaration in hundreds of classes. However, when generating the documentation, doxygen seems not to be able to detect its presence, and gives thousands of warnings, see e.g. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull. . of the type:. ```. geom/geom/src/TGeoArb8.cxx:1280: warning: no uniquely matching class member found for . void TGeoArb8::Streamer(TBuffer &R__b). ```. ### Expected behavior. - Maybe the ClassDef macro can be tweaked so that doxygen finds correctly the link. - Or if it is a bug in doxygen, I could file a report to them. . - If none of the above solutions work, maybe hide this functions from doxygen? ### To Reproduce. https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9596
https://github.com/root-project/root/issues/9596:255,security,detect,detect,255,"doxygen gets confused with ClassDef and Streamer; - [x] Checked for duplicates. ### Describe the bug. ClassDef macro implements the ;:Streamer declaration in hundreds of classes. However, when generating the documentation, doxygen seems not to be able to detect its presence, and gives thousands of warnings, see e.g. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull. . of the type:. ```. geom/geom/src/TGeoArb8.cxx:1280: warning: no uniquely matching class member found for . void TGeoArb8::Streamer(TBuffer &R__b). ```. ### Expected behavior. - Maybe the ClassDef macro can be tweaked so that doxygen finds correctly the link. - Or if it is a bug in doxygen, I could file a report to them. . - If none of the above solutions work, maybe hide this functions from doxygen? ### To Reproduce. https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9596
https://github.com/root-project/root/issues/9596:1034,security,Team,Team,1034,"doxygen gets confused with ClassDef and Streamer; - [x] Checked for duplicates. ### Describe the bug. ClassDef macro implements the ;:Streamer declaration in hundreds of classes. However, when generating the documentation, doxygen seems not to be able to detect its presence, and gives thousands of warnings, see e.g. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull. . of the type:. ```. geom/geom/src/TGeoArb8.cxx:1280: warning: no uniquely matching class member found for . void TGeoArb8::Streamer(TBuffer &R__b). ```. ### Expected behavior. - Maybe the ClassDef macro can be tweaked so that doxygen finds correctly the link. - Or if it is a bug in doxygen, I could file a report to them. . - If none of the above solutions work, maybe hide this functions from doxygen? ### To Reproduce. https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9596
https://github.com/root-project/root/issues/9596:1383,testability,context,context,1383,"doxygen gets confused with ClassDef and Streamer; - [x] Checked for duplicates. ### Describe the bug. ClassDef macro implements the ;:Streamer declaration in hundreds of classes. However, when generating the documentation, doxygen seems not to be able to detect its presence, and gives thousands of warnings, see e.g. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull. . of the type:. ```. geom/geom/src/TGeoArb8.cxx:1280: warning: no uniquely matching class member found for . void TGeoArb8::Streamer(TBuffer &R__b). ```. ### Expected behavior. - Maybe the ClassDef macro can be tweaked so that doxygen finds correctly the link. - Or if it is a bug in doxygen, I could file a report to them. . - If none of the above solutions work, maybe hide this functions from doxygen? ### To Reproduce. https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9596
https://github.com/root-project/root/issues/9596:208,usability,document,documentation,208,"doxygen gets confused with ClassDef and Streamer; - [x] Checked for duplicates. ### Describe the bug. ClassDef macro implements the ;:Streamer declaration in hundreds of classes. However, when generating the documentation, doxygen seems not to be able to detect its presence, and gives thousands of warnings, see e.g. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull. . of the type:. ```. geom/geom/src/TGeoArb8.cxx:1280: warning: no uniquely matching class member found for . void TGeoArb8::Streamer(TBuffer &R__b). ```. ### Expected behavior. - Maybe the ClassDef macro can be tweaked so that doxygen finds correctly the link. - Or if it is a bug in doxygen, I could file a report to them. . - If none of the above solutions work, maybe hide this functions from doxygen? ### To Reproduce. https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9596
https://github.com/root-project/root/issues/9596:578,usability,behavi,behavior,578,"doxygen gets confused with ClassDef and Streamer; - [x] Checked for duplicates. ### Describe the bug. ClassDef macro implements the ;:Streamer declaration in hundreds of classes. However, when generating the documentation, doxygen seems not to be able to detect its presence, and gives thousands of warnings, see e.g. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull. . of the type:. ```. geom/geom/src/TGeoArb8.cxx:1280: warning: no uniquely matching class member found for . void TGeoArb8::Streamer(TBuffer &R__b). ```. ### Expected behavior. - Maybe the ClassDef macro can be tweaked so that doxygen finds correctly the link. - Or if it is a bug in doxygen, I could file a report to them. . - If none of the above solutions work, maybe hide this functions from doxygen? ### To Reproduce. https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9596
https://github.com/root-project/root/issues/9596:1239,usability,help,help,1239,"doxygen gets confused with ClassDef and Streamer; - [x] Checked for duplicates. ### Describe the bug. ClassDef macro implements the ;:Streamer declaration in hundreds of classes. However, when generating the documentation, doxygen seems not to be able to detect its presence, and gives thousands of warnings, see e.g. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull. . of the type:. ```. geom/geom/src/TGeoArb8.cxx:1280: warning: no uniquely matching class member found for . void TGeoArb8::Streamer(TBuffer &R__b). ```. ### Expected behavior. - Maybe the ClassDef macro can be tweaked so that doxygen finds correctly the link. - Or if it is a bug in doxygen, I could file a report to them. . - If none of the above solutions work, maybe hide this functions from doxygen? ### To Reproduce. https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9596
https://github.com/root-project/root/pull/9597:918,energy efficiency,adapt,adapted,918,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9597
https://github.com/root-project/root/pull/9597:918,integrability,adapt,adapted,918,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9597
https://github.com/root-project/root/pull/9597:918,interoperability,adapt,adapted,918,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9597
https://github.com/root-project/root/pull/9597:918,modifiability,adapt,adapted,918,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9597
https://github.com/root-project/root/pull/9597:631,performance,content,content,631,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9597
https://github.com/root-project/root/pull/9597:893,safety,Test,Tests,893,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9597
https://github.com/root-project/root/pull/9597:16,security,sign,signature,16,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9597
https://github.com/root-project/root/pull/9597:893,testability,Test,Tests,893,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9597
https://github.com/root-project/root/pull/9597:197,usability,interact,interactive,197,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9597
https://github.com/root-project/root/pull/9598:918,energy efficiency,adapt,adapted,918,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9598
https://github.com/root-project/root/pull/9598:918,integrability,adapt,adapted,918,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9598
https://github.com/root-project/root/pull/9598:918,interoperability,adapt,adapted,918,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9598
https://github.com/root-project/root/pull/9598:918,modifiability,adapt,adapted,918,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9598
https://github.com/root-project/root/pull/9598:631,performance,content,content,631,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9598
https://github.com/root-project/root/pull/9598:893,safety,Test,Tests,893,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9598
https://github.com/root-project/root/pull/9598:16,security,sign,signature,16,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9598
https://github.com/root-project/root/pull/9598:893,testability,Test,Tests,893,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9598
https://github.com/root-project/root/pull/9598:197,usability,interact,interactive,197,"[DF] Change the signature of RInterface::Describe (Fix #8893); A new class DFDescription is introduced. It has 2 member strings, corresponding to the brief and the full description. It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object. As brief description is the output from RInterface::DescribeDataset. As full description is the remaining code from RInterface::Describe. Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:. * AsString(bool) -> returning brief/full description as a string. * Print(bool) -> printing the content of AsString(bool). * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false). * printValue -> returns string corresponding to AsString(shortFomat=false). * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9598
https://github.com/root-project/root/issues/9599:20,deployability,instal,installation,20,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:81,deployability,build,building,81,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:154,deployability,instal,installed,154,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:171,deployability,instal,installation,171,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:297,deployability,version,version,297,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:325,deployability,stack,stack,325,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:460,deployability,instal,installation,460,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:681,deployability,version,version,681,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:748,deployability,build,build,748,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:297,integrability,version,version,297,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:681,integrability,version,version,681,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:397,interoperability,distribut,distributed,397,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:297,modifiability,version,version,297,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:681,modifiability,version,version,681,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:716,testability,context,context,716,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9599:258,usability,behavi,behavior,258,"Possible incomplete installation of internal TBB; ### Describe the bug. ALICE is building ROOT without external TBB. The resulting TBB libs are correctly installed in the installation directories. However, for the TBB headers, this is not true. ### Expected behavior. In order to just use one TBB version within our software stack, it would be good and convenient if headers could be (optionally) distributed, too. ### To Reproduce. Searching through the ROOT installation path, I find:. ```. find ./ -name ""*tbb*"". ./lib/libtbb.so. ./lib/libtbb.so.2. ./lib/libtbbmalloc.so. ./lib/libtbbmalloc.so.2. ./lib/libtbbmalloc_proxy.so. ./lib/libtbbmalloc_proxy.so.2. ```. ### Setup. ROOT version `v6-24-06`. ### Additional context. Built with `alibuild` (build recipe is here: https://github.com/alisw/alidist/blob/master/root.sh).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9599
https://github.com/root-project/root/issues/9600:2187,availability,error,error,2187,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2812,availability,Error,Error,2812,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2891,availability,failur,failure,2891,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:8,deployability,depend,dependency,8,"Missing dependency when building roottest as part of ROOT.; When building from scratch I get:. ```. [2/2614] Generating stl_makeproject_test.cxx, stl_makeproject_test.pcm. FAILED: roottest/root/meta/MakeProject/stl_makeproject_test.cxx roottest/root/meta/MakeProject/stl_makeproject_test.pcm. cd /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/pcanal/root_working/build/master-debug/lib: ROOTIGNOREPREFIX=. 1 /home/pcanal/root_working/build/master-debug/bin/rootcling -rootbuild -v2 -f stl_makeproject_test.cxx -cxxmodule -s /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:24,deployability,build,building,24,"Missing dependency when building roottest as part of ROOT.; When building from scratch I get:. ```. [2/2614] Generating stl_makeproject_test.cxx, stl_makeproject_test.pcm. FAILED: roottest/root/meta/MakeProject/stl_makeproject_test.cxx roottest/root/meta/MakeProject/stl_makeproject_test.pcm. cd /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/pcanal/root_working/build/master-debug/lib: ROOTIGNOREPREFIX=. 1 /home/pcanal/root_working/build/master-debug/bin/rootcling -rootbuild -v2 -f stl_makeproject_test.cxx -cxxmodule -s /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:65,deployability,build,building,65,"Missing dependency when building roottest as part of ROOT.; When building from scratch I get:. ```. [2/2614] Generating stl_makeproject_test.cxx, stl_makeproject_test.pcm. FAILED: roottest/root/meta/MakeProject/stl_makeproject_test.cxx roottest/root/meta/MakeProject/stl_makeproject_test.pcm. cd /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/pcanal/root_working/build/master-debug/lib: ROOTIGNOREPREFIX=. 1 /home/pcanal/root_working/build/master-debug/bin/rootcling -rootbuild -v2 -f stl_makeproject_test.cxx -cxxmodule -s /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:172,deployability,FAIL,FAILED,172,"Missing dependency when building roottest as part of ROOT.; When building from scratch I get:. ```. [2/2614] Generating stl_makeproject_test.cxx, stl_makeproject_test.pcm. FAILED: roottest/root/meta/MakeProject/stl_makeproject_test.cxx roottest/root/meta/MakeProject/stl_makeproject_test.pcm. cd /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/pcanal/root_working/build/master-debug/lib: ROOTIGNOREPREFIX=. 1 /home/pcanal/root_working/build/master-debug/bin/rootcling -rootbuild -v2 -f stl_makeproject_test.cxx -cxxmodule -s /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:322,deployability,build,build,322,"Missing dependency when building roottest as part of ROOT.; When building from scratch I get:. ```. [2/2614] Generating stl_makeproject_test.cxx, stl_makeproject_test.pcm. FAILED: roottest/root/meta/MakeProject/stl_makeproject_test.cxx roottest/root/meta/MakeProject/stl_makeproject_test.pcm. cd /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/pcanal/root_working/build/master-debug/lib: ROOTIGNOREPREFIX=. 1 /home/pcanal/root_working/build/master-debug/bin/rootcling -rootbuild -v2 -f stl_makeproject_test.cxx -cxxmodule -s /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:439,deployability,build,build,439,"Missing dependency when building roottest as part of ROOT.; When building from scratch I get:. ```. [2/2614] Generating stl_makeproject_test.cxx, stl_makeproject_test.pcm. FAILED: roottest/root/meta/MakeProject/stl_makeproject_test.cxx roottest/root/meta/MakeProject/stl_makeproject_test.pcm. cd /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/pcanal/root_working/build/master-debug/lib: ROOTIGNOREPREFIX=. 1 /home/pcanal/root_working/build/master-debug/bin/rootcling -rootbuild -v2 -f stl_makeproject_test.cxx -cxxmodule -s /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:510,deployability,build,build,510,"Missing dependency when building roottest as part of ROOT.; When building from scratch I get:. ```. [2/2614] Generating stl_makeproject_test.cxx, stl_makeproject_test.pcm. FAILED: roottest/root/meta/MakeProject/stl_makeproject_test.cxx roottest/root/meta/MakeProject/stl_makeproject_test.pcm. cd /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/pcanal/root_working/build/master-debug/lib: ROOTIGNOREPREFIX=. 1 /home/pcanal/root_working/build/master-debug/bin/rootcling -rootbuild -v2 -f stl_makeproject_test.cxx -cxxmodule -s /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:626,deployability,build,build,626,"Missing dependency when building roottest as part of ROOT.; When building from scratch I get:. ```. [2/2614] Generating stl_makeproject_test.cxx, stl_makeproject_test.pcm. FAILED: roottest/root/meta/MakeProject/stl_makeproject_test.cxx roottest/root/meta/MakeProject/stl_makeproject_test.pcm. cd /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/pcanal/root_working/build/master-debug/lib: ROOTIGNOREPREFIX=. 1 /home/pcanal/root_working/build/master-debug/bin/rootcling -rootbuild -v2 -f stl_makeproject_test.cxx -cxxmodule -s /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:790,deployability,build,build,790,"Missing dependency when building roottest as part of ROOT.; When building from scratch I get:. ```. [2/2614] Generating stl_makeproject_test.cxx, stl_makeproject_test.pcm. FAILED: roottest/root/meta/MakeProject/stl_makeproject_test.cxx roottest/root/meta/MakeProject/stl_makeproject_test.pcm. cd /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/pcanal/root_working/build/master-debug/lib: ROOTIGNOREPREFIX=. 1 /home/pcanal/root_working/build/master-debug/bin/rootcling -rootbuild -v2 -f stl_makeproject_test.cxx -cxxmodule -s /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:1651,deployability,build,build,1651,"root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:1824,deployability,build,build,1824,"issingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2194,deployability,modul,module,2194,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2233,deployability,build,build,2233,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2322,deployability,modul,module,2322,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2476,deployability,modul,module,2476,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2524,deployability,build,build,2524,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2705,deployability,modul,module,2705,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2749,deployability,build,build,2749,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2845,deployability,build,build,2845,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2891,deployability,fail,failure,2891,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2926,deployability,build,build,2926,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:3066,deployability,build,build,3066,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:3164,deployability,depend,dependency,3164,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:8,integrability,depend,dependency,8,"Missing dependency when building roottest as part of ROOT.; When building from scratch I get:. ```. [2/2614] Generating stl_makeproject_test.cxx, stl_makeproject_test.pcm. FAILED: roottest/root/meta/MakeProject/stl_makeproject_test.cxx roottest/root/meta/MakeProject/stl_makeproject_test.pcm. cd /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/pcanal/root_working/build/master-debug/lib: ROOTIGNOREPREFIX=. 1 /home/pcanal/root_working/build/master-debug/bin/rootcling -rootbuild -v2 -f stl_makeproject_test.cxx -cxxmodule -s /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:3164,integrability,depend,dependency,3164,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:8,modifiability,depend,dependency,8,"Missing dependency when building roottest as part of ROOT.; When building from scratch I get:. ```. [2/2614] Generating stl_makeproject_test.cxx, stl_makeproject_test.pcm. FAILED: roottest/root/meta/MakeProject/stl_makeproject_test.cxx roottest/root/meta/MakeProject/stl_makeproject_test.pcm. cd /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/pcanal/root_working/build/master-debug/lib: ROOTIGNOREPREFIX=. 1 /home/pcanal/root_working/build/master-debug/bin/rootcling -rootbuild -v2 -f stl_makeproject_test.cxx -cxxmodule -s /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2194,modifiability,modul,module,2194,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2322,modifiability,modul,module,2322,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2476,modifiability,modul,module,2476,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2705,modifiability,modul,module,2705,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:3164,modifiability,depend,dependency,3164,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2187,performance,error,error,2187,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2812,performance,Error,Error,2812,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2891,performance,failur,failure,2891,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:172,reliability,FAIL,FAILED,172,"Missing dependency when building roottest as part of ROOT.; When building from scratch I get:. ```. [2/2614] Generating stl_makeproject_test.cxx, stl_makeproject_test.pcm. FAILED: roottest/root/meta/MakeProject/stl_makeproject_test.cxx roottest/root/meta/MakeProject/stl_makeproject_test.pcm. cd /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/pcanal/root_working/build/master-debug/lib: ROOTIGNOREPREFIX=. 1 /home/pcanal/root_working/build/master-debug/bin/rootcling -rootbuild -v2 -f stl_makeproject_test.cxx -cxxmodule -s /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2891,reliability,fail,failure,2891,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:8,safety,depend,dependency,8,"Missing dependency when building roottest as part of ROOT.; When building from scratch I get:. ```. [2/2614] Generating stl_makeproject_test.cxx, stl_makeproject_test.pcm. FAILED: roottest/root/meta/MakeProject/stl_makeproject_test.cxx roottest/root/meta/MakeProject/stl_makeproject_test.pcm. cd /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/pcanal/root_working/build/master-debug/lib: ROOTIGNOREPREFIX=. 1 /home/pcanal/root_working/build/master-debug/bin/rootcling -rootbuild -v2 -f stl_makeproject_test.cxx -cxxmodule -s /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2187,safety,error,error,2187,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2194,safety,modul,module,2194,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2322,safety,modul,module,2322,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2476,safety,modul,module,2476,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2705,safety,modul,module,2705,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2812,safety,Error,Error,2812,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:3164,safety,depend,dependency,3164,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2329,security,sign,signature,2329,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:8,testability,depend,dependency,8,"Missing dependency when building roottest as part of ROOT.; When building from scratch I get:. ```. [2/2614] Generating stl_makeproject_test.cxx, stl_makeproject_test.pcm. FAILED: roottest/root/meta/MakeProject/stl_makeproject_test.cxx roottest/root/meta/MakeProject/stl_makeproject_test.pcm. cd /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/pcanal/root_working/build/master-debug/lib: ROOTIGNOREPREFIX=. 1 /home/pcanal/root_working/build/master-debug/bin/rootcling -rootbuild -v2 -f stl_makeproject_test.cxx -cxxmodule -s /home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeP. roject/stl_makeproject_test.so -excludePath /home/pcanal/root_working/code/root -excludePath /home/pcanal/root_working/build/master-debug -DClingWorkAroundMissingDynamicScope -DClingWorkA. roundUnnamedInclude -DClingWorkAroundMissingSmartInclude -DClingWorkAroundNoDotInclude -DClingWorkAroundMissingAutoLoadingForTemplates -DClingWorkAroundAutoParseUsingNamespace -DClingWork. AroundTClassUpdateDouble32 -DClingWorkAroundAutoParseDeclaration -DClingWorkAroundMissingUnloading -DClingWorkAroundBrokenUnnamedReturn -DClingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:3164,testability,depend,dependency,3164,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2187,usability,error,error,2187,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/issues/9600:2812,usability,Error,Error,2812,"lingWorkAroundUnnamedDetection2 -compilerI/usr/i. nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/. usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i. nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p. canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root. /meta/MakeProject/stl_makeproject_test_linkdef.h. In file included from input_line_10:36:. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out . of date and needs to be rebuilt: could not read module signature. #include ""TH1D.h"". ^. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte. st/root/meta/MakeProject/MathCore.pcm'. /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r. oot/meta/MakeProject/Hist.pcm'. Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a. 3e30369_dictUmbrella.h). ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9600
https://github.com/root-project/root/pull/9601:9,availability,failur,failure,9,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:148,availability,Failur,Failure,148,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:423,availability,Failur,Failure,423,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:9,deployability,fail,failure,9,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:148,deployability,Fail,Failure,148,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:423,deployability,Fail,Failure,423,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:931,deployability,updat,updated,931,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:598,modifiability,paramet,parameter,598,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:9,performance,failur,failure,9,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:148,performance,Failur,Failure,148,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:423,performance,Failur,Failure,423,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:9,reliability,fail,failure,9,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:148,reliability,Fail,Failure,148,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:423,reliability,Fail,Failure,423,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:4,safety,test,test,4,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:116,safety,test,test,116,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:391,safety,test,test,391,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:901,safety,test,tested,901,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:931,safety,updat,updated,931,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:931,security,updat,updated,931,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:4,testability,test,test,4,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:116,testability,test,test,116,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:391,testability,test,test,391,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:901,testability,test,tested,901,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9601:675,usability,minim,minimum,675,"Fix test failure on ppc64le and aarch64 with gcc 12; # This Pull request:. ## Changes or fixes:. ~~~. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where. cont1 evaluates to 54886.064319363642,. cont2 evaluates to 54886.064319363628, and. delta evaluates to 9.999999960041972e-12. .../hist/hist/test/test_tprofile2poly.cxx:61: Failure. The difference between cont1 and cont2 is 1.4551915228366852e-11, where. cont1 evaluates to 109868.61342004745,. cont2 evaluates to 109868.61342004743. The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead. ~~~. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9601
https://github.com/root-project/root/pull/9602:83,deployability,contain,contains,83,"Fix adding isotopes for default elements; # This Pull request:. When the GDML file contains definitions of elements with isotopes and the element name matches one of the predefined standard elements, the pre-defined element is overwritten rather than being reused, since this is the expected behaviour. ## Changes or fixes:. Added support for modifying a pre-defined element (adding isotopes). ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9421 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9602
https://github.com/root-project/root/pull/9602:446,deployability,updat,updated,446,"Fix adding isotopes for default elements; # This Pull request:. When the GDML file contains definitions of elements with isotopes and the element name matches one of the predefined standard elements, the pre-defined element is overwritten rather than being reused, since this is the expected behaviour. ## Changes or fixes:. Added support for modifying a pre-defined element (adding isotopes). ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9421 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9602
https://github.com/root-project/root/pull/9602:181,interoperability,standard,standard,181,"Fix adding isotopes for default elements; # This Pull request:. When the GDML file contains definitions of elements with isotopes and the element name matches one of the predefined standard elements, the pre-defined element is overwritten rather than being reused, since this is the expected behaviour. ## Changes or fixes:. Added support for modifying a pre-defined element (adding isotopes). ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9421 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9602
https://github.com/root-project/root/pull/9602:257,modifiability,reu,reused,257,"Fix adding isotopes for default elements; # This Pull request:. When the GDML file contains definitions of elements with isotopes and the element name matches one of the predefined standard elements, the pre-defined element is overwritten rather than being reused, since this is the expected behaviour. ## Changes or fixes:. Added support for modifying a pre-defined element (adding isotopes). ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9421 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9602
https://github.com/root-project/root/pull/9602:416,safety,test,tested,416,"Fix adding isotopes for default elements; # This Pull request:. When the GDML file contains definitions of elements with isotopes and the element name matches one of the predefined standard elements, the pre-defined element is overwritten rather than being reused, since this is the expected behaviour. ## Changes or fixes:. Added support for modifying a pre-defined element (adding isotopes). ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9421 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9602
https://github.com/root-project/root/pull/9602:446,safety,updat,updated,446,"Fix adding isotopes for default elements; # This Pull request:. When the GDML file contains definitions of elements with isotopes and the element name matches one of the predefined standard elements, the pre-defined element is overwritten rather than being reused, since this is the expected behaviour. ## Changes or fixes:. Added support for modifying a pre-defined element (adding isotopes). ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9421 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9602
https://github.com/root-project/root/pull/9602:11,security,iso,isotopes,11,"Fix adding isotopes for default elements; # This Pull request:. When the GDML file contains definitions of elements with isotopes and the element name matches one of the predefined standard elements, the pre-defined element is overwritten rather than being reused, since this is the expected behaviour. ## Changes or fixes:. Added support for modifying a pre-defined element (adding isotopes). ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9421 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9602
https://github.com/root-project/root/pull/9602:121,security,iso,isotopes,121,"Fix adding isotopes for default elements; # This Pull request:. When the GDML file contains definitions of elements with isotopes and the element name matches one of the predefined standard elements, the pre-defined element is overwritten rather than being reused, since this is the expected behaviour. ## Changes or fixes:. Added support for modifying a pre-defined element (adding isotopes). ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9421 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9602
https://github.com/root-project/root/pull/9602:343,security,modif,modifying,343,"Fix adding isotopes for default elements; # This Pull request:. When the GDML file contains definitions of elements with isotopes and the element name matches one of the predefined standard elements, the pre-defined element is overwritten rather than being reused, since this is the expected behaviour. ## Changes or fixes:. Added support for modifying a pre-defined element (adding isotopes). ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9421 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9602
https://github.com/root-project/root/pull/9602:383,security,iso,isotopes,383,"Fix adding isotopes for default elements; # This Pull request:. When the GDML file contains definitions of elements with isotopes and the element name matches one of the predefined standard elements, the pre-defined element is overwritten rather than being reused, since this is the expected behaviour. ## Changes or fixes:. Added support for modifying a pre-defined element (adding isotopes). ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9421 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9602
https://github.com/root-project/root/pull/9602:446,security,updat,updated,446,"Fix adding isotopes for default elements; # This Pull request:. When the GDML file contains definitions of elements with isotopes and the element name matches one of the predefined standard elements, the pre-defined element is overwritten rather than being reused, since this is the expected behaviour. ## Changes or fixes:. Added support for modifying a pre-defined element (adding isotopes). ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9421 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9602
https://github.com/root-project/root/pull/9602:416,testability,test,tested,416,"Fix adding isotopes for default elements; # This Pull request:. When the GDML file contains definitions of elements with isotopes and the element name matches one of the predefined standard elements, the pre-defined element is overwritten rather than being reused, since this is the expected behaviour. ## Changes or fixes:. Added support for modifying a pre-defined element (adding isotopes). ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9421 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9602
https://github.com/root-project/root/pull/9602:292,usability,behavi,behaviour,292,"Fix adding isotopes for default elements; # This Pull request:. When the GDML file contains definitions of elements with isotopes and the element name matches one of the predefined standard elements, the pre-defined element is overwritten rather than being reused, since this is the expected behaviour. ## Changes or fixes:. Added support for modifying a pre-defined element (adding isotopes). ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9421 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9602
https://github.com/root-project/root/pull/9602:331,usability,support,support,331,"Fix adding isotopes for default elements; # This Pull request:. When the GDML file contains definitions of elements with isotopes and the element name matches one of the predefined standard elements, the pre-defined element is overwritten rather than being reused, since this is the expected behaviour. ## Changes or fixes:. Added support for modifying a pre-defined element (adding isotopes). ## Checklist:. - [x ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9421 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9602
https://github.com/root-project/root/pull/9603:12,availability,error,errors,12,"fix doxygen errors in gui hist and graf; # This Pull request:. ## Changes or fixes:. Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9603
https://github.com/root-project/root/pull/9603:107,availability,error,errors,107,"fix doxygen errors in gui hist and graf; # This Pull request:. ## Changes or fixes:. Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9603
https://github.com/root-project/root/pull/9603:198,deployability,updat,updated,198,"fix doxygen errors in gui hist and graf; # This Pull request:. ## Changes or fixes:. Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9603
https://github.com/root-project/root/pull/9603:12,performance,error,errors,12,"fix doxygen errors in gui hist and graf; # This Pull request:. ## Changes or fixes:. Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9603
https://github.com/root-project/root/pull/9603:107,performance,error,errors,107,"fix doxygen errors in gui hist and graf; # This Pull request:. ## Changes or fixes:. Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9603
https://github.com/root-project/root/pull/9603:12,safety,error,errors,12,"fix doxygen errors in gui hist and graf; # This Pull request:. ## Changes or fixes:. Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9603
https://github.com/root-project/root/pull/9603:107,safety,error,errors,107,"fix doxygen errors in gui hist and graf; # This Pull request:. ## Changes or fixes:. Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9603
https://github.com/root-project/root/pull/9603:168,safety,test,tested,168,"fix doxygen errors in gui hist and graf; # This Pull request:. ## Changes or fixes:. Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9603
https://github.com/root-project/root/pull/9603:198,safety,updat,updated,198,"fix doxygen errors in gui hist and graf; # This Pull request:. ## Changes or fixes:. Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9603
https://github.com/root-project/root/pull/9603:198,security,updat,updated,198,"fix doxygen errors in gui hist and graf; # This Pull request:. ## Changes or fixes:. Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9603
https://github.com/root-project/root/pull/9603:168,testability,test,tested,168,"fix doxygen errors in gui hist and graf; # This Pull request:. ## Changes or fixes:. Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9603
https://github.com/root-project/root/pull/9603:12,usability,error,errors,12,"fix doxygen errors in gui hist and graf; # This Pull request:. ## Changes or fixes:. Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9603
https://github.com/root-project/root/pull/9603:93,usability,document,documentation,93,"fix doxygen errors in gui hist and graf; # This Pull request:. ## Changes or fixes:. Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9603
https://github.com/root-project/root/pull/9603:107,usability,error,errors,107,"fix doxygen errors in gui hist and graf; # This Pull request:. ## Changes or fixes:. Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9603
https://github.com/root-project/root/pull/9604:44,deployability,fail,fail,44,fit tmathtext.C; The previous fix made test fail. The return was suppressed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9604
https://github.com/root-project/root/pull/9604:44,reliability,fail,fail,44,fit tmathtext.C; The previous fix made test fail. The return was suppressed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9604
https://github.com/root-project/root/pull/9604:39,safety,test,test,39,fit tmathtext.C; The previous fix made test fail. The return was suppressed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9604
https://github.com/root-project/root/pull/9604:39,testability,test,test,39,fit tmathtext.C; The previous fix made test fail. The return was suppressed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9604
https://github.com/root-project/root/pull/9605:11,availability,state,statement,11,"Add return statement to tmathtext.C; This was removed in commit 5ef5d8e8ab (""Do not use gif"") and makes the test fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9605
https://github.com/root-project/root/pull/9605:113,deployability,fail,fail,113,"Add return statement to tmathtext.C; This was removed in commit 5ef5d8e8ab (""Do not use gif"") and makes the test fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9605
https://github.com/root-project/root/pull/9605:11,integrability,state,statement,11,"Add return statement to tmathtext.C; This was removed in commit 5ef5d8e8ab (""Do not use gif"") and makes the test fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9605
https://github.com/root-project/root/pull/9605:113,reliability,fail,fail,113,"Add return statement to tmathtext.C; This was removed in commit 5ef5d8e8ab (""Do not use gif"") and makes the test fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9605
https://github.com/root-project/root/pull/9605:108,safety,test,test,108,"Add return statement to tmathtext.C; This was removed in commit 5ef5d8e8ab (""Do not use gif"") and makes the test fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9605
https://github.com/root-project/root/pull/9605:108,testability,test,test,108,"Add return statement to tmathtext.C; This was removed in commit 5ef5d8e8ab (""Do not use gif"") and makes the test fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9605
https://github.com/root-project/root/pull/9606:104,integrability,messag,message,104,[DF][NFC] Change RDF reference guide; Refactored reference guide webpage of RDataFrame. See each commit message for the parts that have been changed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9606
https://github.com/root-project/root/pull/9606:104,interoperability,messag,message,104,[DF][NFC] Change RDF reference guide; Refactored reference guide webpage of RDataFrame. See each commit message for the parts that have been changed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9606
https://github.com/root-project/root/pull/9606:38,modifiability,Refact,Refactored,38,[DF][NFC] Change RDF reference guide; Refactored reference guide webpage of RDataFrame. See each commit message for the parts that have been changed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9606
https://github.com/root-project/root/pull/9606:38,performance,Refactor,Refactored,38,[DF][NFC] Change RDF reference guide; Refactored reference guide webpage of RDataFrame. See each commit message for the parts that have been changed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9606
https://github.com/root-project/root/pull/9606:31,usability,guid,guide,31,[DF][NFC] Change RDF reference guide; Refactored reference guide webpage of RDataFrame. See each commit message for the parts that have been changed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9606
https://github.com/root-project/root/pull/9606:59,usability,guid,guide,59,[DF][NFC] Change RDF reference guide; Refactored reference guide webpage of RDataFrame. See each commit message for the parts that have been changed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9606
https://github.com/root-project/root/issues/9607:163,availability,error,errors,163,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:40,deployability,fail,failed,40,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:50,deployability,build,build,50,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:175,deployability,build,building,175,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:362,deployability,build,build,362,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:701,deployability,Configurat,Configuration,701,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:715,deployability,Releas,Release,715,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:816,deployability,Build,Build,816,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:822,deployability,log,log,822,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:845,deployability,build,build,845,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:851,deployability,log,log,851,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:907,deployability,build,build,907,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:913,deployability,log,log,913,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:934,deployability,build,build,934,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:940,deployability,log,log,940,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:996,deployability,build,build,996,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:1002,deployability,log,log,1002,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:701,integrability,Configur,Configuration,701,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:685,interoperability,Platform,Platform,685,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:701,modifiability,Configur,Configuration,701,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:163,performance,error,errors,163,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:40,reliability,fail,failed,40,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:22,safety,permiss,permissive,22,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:136,safety,test,testing,136,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:163,safety,error,errors,163,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:217,safety,permiss,permissive,217,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:410,safety,permiss,permissive,410,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:610,safety,permiss,permissive,610,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:822,safety,log,log,822,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:851,safety,log,log,851,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:913,safety,log,log,913,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:920,safety,permiss,permissive,920,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:940,safety,log,log,940,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:1002,safety,log,log,1002,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:96,security,team,team,96,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:701,security,Configur,Configuration,701,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:822,security,log,log,822,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:851,security,log,log,851,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:913,security,log,log,913,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:940,security,log,log,940,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:1002,security,log,log,1002,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:136,testability,test,testing,136,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:807,testability,context,context,807,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:822,testability,log,log,822,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:851,testability,log,log,851,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:913,testability,log,log,913,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:940,testability,log,log,940,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:1002,testability,log,log,1002,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:163,usability,error,errors,163,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:248,usability,help,help,248,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:333,usability,behavi,behavior,333,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/issues/9607:764,usability,Visual,Visual,764,[MSVC][std:c++latest][permissive-] root failed to build on MSVC; ### Describe the bug. The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance. ### Expected behavior. root project could build successfully under '/std:c++latest' and '/permissive-' mode. ### To Reproduce. 1. git clone https://github.com/root-project/root F:\gitP\root-project\root. 2. mkdir F:\gitP\root-project\root\build_amd64. 2. set CL= /std:c++latest or set CL= /permissive-. 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### Setup. Visual Studio 2019 16.11.8. ### Additional context. Build.log:. /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log). /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9607
https://github.com/root-project/root/pull/9608:34,deployability,Updat,Update,34,"[genvector] Rework documentation; Update and move content into the main group page, remove duplicated pages. ```. Co-authored-by: Bertrand Bellenot <Bertrand.Bellenot@cern.ch>. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>. ```. [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9608
