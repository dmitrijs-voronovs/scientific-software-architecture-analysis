tactics:
  - quality_attribute: Availability
    tactic_categories:
      - category_name: Detect Faults
        tactics:
          - name: Ping/Echo
            description: An asynchronous request/response message pair exchanged between nodes to determine reachability and responsiveness.
          - name: Monitor
            description: A component that monitors the state of health of various parts of the system such as processors, processes, I/O, and memory.
          - name: Heartbeat
            description: A fault detection mechanism that employs periodic message exchange between a system monitor and a process being monitored.
          - name: Timestamp
            description: Used to detect incorrect sequences of events by assigning the state of a local clock to events immediately after they occur.
          - name: Sanity Checking
            description: Checks the validity or reasonableness of specific operations or outputs of a component.
          - name: Condition Monitoring
            description: Involves checking conditions in a process or device to prevent a system from producing faulty behavior.
          - name: Voting
            description: Employs multiple components that do the same thing with identical inputs and forwards their output to voting logic to detect inconsistencies.
          - name: Exception Detection
            description: The detection of a system condition that alters the normal flow of execution.
          - name: Self-Test
            description: Components can run procedures to test themselves for correct operation.
      - category_name: Recover from Faults_Preparation and Repair
        tactics:
          - name: Active Redundancy
            description: A configuration where all nodes receive and process identical inputs in parallel, allowing redundant spares to maintain synchronous state with active nodes.
          - name: Passive Redundancy
            description: A configuration where only active members process input traffic and provide redundant spares with periodic state updates.
          - name: Spare
            description: Cold sparing where redundant spares remain out of service until a fail-over occurs.
          - name: Exception Handling
            description: Mechanisms employed to handle detected exceptions using information to mask the fault.
          - name: Rollback
            description: Permits the system to revert to a previous known good state upon detection of a failure.
          - name: Software Upgrade
            description: Achieves in-service upgrades to executable code images in a non-service-affecting manner.
          - name: Retry
            description: Assumes that the fault causing a failure is transient and retrying the operation may lead to success.
          - name: Ignore Faulty Behavior
            description: Calls for ignoring messages from a particular source when determined to be spurious.
          - name: Degradation
            description: Maintains critical system functions in the presence of component failures by dropping less critical functions.
          - name: Reconfiguration
            description: Recovers from component failures by reassigning responsibilities to remaining functional resources.
      - category_name: Recover from Faults_Reintroduction
        tactics:
          - name: Shadow
            description: Operates a previously failed component in "shadow mode" for a predefined duration before reverting it to an active role.
          - name: State Resynchronization
            description: Ensures that failed components are brought back to a consistent state with active components.
          - name: Escalating Restart
            description: Allows system recovery by varying the granularity of components restarted while minimizing service impact.
          - name: Non-Stop Forwarding
            description: Splits functionality into control and data planes to continue operations while recovering the supervisory information.
      - category_name: Prevent Faults
        tactics:
          - name: Removal from Service
            description: Temporarily placing a system component in an out-of-service state to mitigate potential system failures.
          - name: Transactions
            description: Ensures that asynchronous messages exchanged between distributed components are atomic, consistent, isolated, and durable.
          - name: Predictive Model
            description: Used with monitors to ensure a system operates within nominal parameters and take corrective action for conditions predictive of future faults.
          - name: Exception Prevention
            description: Techniques employed to prevent system exceptions from occurring.
          - name: Increase Competence Set
            description: Expanding the set of states in which a program is competent to operate to handle more cases as part of normal operation.

  - quality_attribute: Interoperability
    tactic_categories:
      - category_name: Locate
        tactics:
          - name: Discover Service
            description: Locates a service through searching a known directory service at runtime.
      - category_name: Manage Interfaces
        tactics:
          - name: Orchestrate
            description: Uses a control mechanism to coordinate, manage and sequence the invocation of particular services that could be ignorant of each other.
          - name: Tailor Interface
            description: Adds or removes capabilities to an interface, such as translation, buffering, or hiding particular functions from untrusted users.

  - quality_attribute: Modifiability
    tactic_categories:
      - category_name: Reduce Size of a Module
        tactics:
          - name: Split Module
            description: Refining a module into several smaller modules to reduce the average cost of future changes.

      - category_name: Increase Cohesion
        tactics:
          - name: Increase Semantic Coherence
            description: Moving responsibilities that don't serve the same purpose to different modules to reduce the likelihood of side effects.

      - category_name: Reduce Coupling
        tactics:
          - name: Encapsulate
            description: Introducing an explicit interface to a module to reduce the probability that a change to one module propagates to other modules.
          - name: Use an Intermediary
            description: Breaking a dependency between responsibilities by using an intermediary that depends on the type of dependency.
          - name: Restrict Dependencies
            description: Restricting the modules that a given module interacts with or depends on through visibility or authorization.
          - name: Refactor
            description: Factoring out common responsibilities from modules where they exist and assigning them an appropriate home to reduce duplication.
          - name: Abstract Common Services
            description: Implementing similar services once in a more general (abstract) form to reduce modification costs.

      - category_name: Defer Binding
        tactics:
          - name: Component Replacement
            description: Binding values at compile time or build time through replacement in build scripts or makefiles.
          - name: Compile-time Parameterization
            description: Binding values at compile time through parameterization.
          - name: Aspects
            description: Binding values at compile time or build time using aspects.
          - name: Configuration-time Binding
            description: Binding values at deployment time through configuration.
          - name: Resource Files
            description: Binding values at startup or initialization time using resource files.
          - name: Runtime Registration
            description: Binding values at runtime through registration.
          - name: Dynamic Lookup
            description: Binding values at runtime through dynamic lookup for services.
          - name: Interpret Parameters
            description: Binding values at runtime by interpreting parameters.
          - name: Startup Time Binding
            description: Binding values at runtime during startup.
          - name: Name Servers
            description: Binding values at runtime using name servers.
          - name: Plug-ins
            description: Binding values at runtime through plug-ins.
          - name: Publish-Subscribe
            description: Binding values at runtime using the publish-subscribe pattern.
          - name: Shared Repositories
            description: Binding values at runtime through shared repositories.
          - name: Polymorphism
            description: Binding values at runtime using polymorphism.

  - quality_attribute: Performance
    tactic_categories:
      - category_name: Control Resource Demand
        tactics:
          - name: Manage Sampling Rate
            description: Reduce the frequency at which environmental data is captured to decrease demand, typically with some loss of fidelity.
          - name: Limit Event Response
            description: Process events only up to a set maximum rate to ensure more predictable processing when events are processed.
          - name: Prioritize Events
            description: Impose a priority scheme that ranks events according to how important it is to service them.
          - name: Reduce Overhead
            description: Reduce the resources consumed in processing an event stream by removing intermediaries.
          - name: Bound Execution Times
            description: Place a limit on how much execution time is used to respond to an event.
          - name: Increase Resource Efficiency
            description: Improve the algorithms used in critical areas to decrease latency.
      - category_name: Manage Resources
        tactics:
          - name: Increase Resources
            description: Use faster processors, additional processors, additional memory, and faster networks to reduce latency.
          - name: Introduce Concurrency
            description: Process requests in parallel to reduce the blocked time.
          - name: Maintain Multiple Copies of Computations
            description: Use multiple servers in a client-server pattern as replicas of computation to reduce the contention.
          - name: Maintain Multiple Copies of Data
            description: Keep copies of data on storage with different access speeds to reduce the contention from multiple simultaneous accesses.
          - name: Bound Queue Sizes
            description: Control the maximum number of queued arrivals and consequently the resources used to process the arrivals.
          - name: Schedule Resources
            description: Understand the characteristics of each resource's use and choose the scheduling strategy that is compatible with it.

