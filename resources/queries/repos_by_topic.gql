query($topic_name: String!, $number_of_repos: Int!, $cursor: String) {
  topic(name: $topic_name) {
    name
    repositories(privacy: PUBLIC, orderBy: {field: STARGAZERS, direction: DESC}, first: $number_of_repos, after: $cursor) {
      totalCount
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
      nodes {
        name
        owner {
          login
        }
        description
        url
        resourcePath
        stars: stargazerCount
        watchers {
          totalCount
        }
        forkCount
        licenseInfo {
          name
        }
        # approximately equal to contributors
        contributors: mentionableUsers {
          totalCount
        }
        branches: refs(refPrefix: "refs/heads/") {
          totalCount
        }
        tags: refs(refPrefix: "refs/tags/") {
          totalCount
        }
        repositoryTopics(first: 50) {
          nodes {
            topic {
              name
            }
          }
        }
        deployments {
          totalCount
        }
        issuesOpen: issues(states: OPEN) {
          totalCount
        }
        issuesClosed: issues(states: CLOSED) {
          totalCount
        }
        issuesAll: issues(states: [OPEN, CLOSED]) {
          totalCount
        }
        PRsOpen: pullRequests(states: OPEN) {
          totalCount
        }
        PRsClosed: pullRequests(states: CLOSED) {
          totalCount
        }
        PRsMerged: pullRequests(states: MERGED) {
          totalCount
        }
        PRsAll: pullRequests(states: [MERGED, CLOSED, OPEN]) {
          totalCount
        }
        primaryLanguage {
          name
        }
        languages(first: 100) {
          totalCount
          nodes {
            name
          }
        }
        releases {
          totalCount
        }
        latestRelease {
          name
          description
          tag {
            name
          }
          author {
            name
            email
            login
          }
        }
        diskUsage
        lastCommit: object(expression: "HEAD") {
          ... on Commit {
            oid
            messageHeadline
            committedDate
            author {
              name
              email
              user {
                login
              }
            }
          }
        }
        readme: object(expression: "HEAD:README.md") {
          ... on Blob {
            text
          }
        }
      }
    }
  }
  rateLimit {
    cost
    limit
    nodeCount
    remaining
    resetAt
    used
  }
}