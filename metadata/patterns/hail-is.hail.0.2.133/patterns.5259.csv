filename,type,author,repo,version,wiki,url,patterns,purpose,summary
hail/src/test/resources/width_scale_tests/2048.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/width_scale_tests/2048.tsv,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['interface with traversal methods', 'class implements Iterator']}, {'name': 'Decorator', 'match_type': 'full', 'implemented_parts': ['Decorator pattern', 'wrapping method'], 'confidence': 1.0, 'evidence': ['class wraps another class', 'additional methods provide functionality']}, {'name': 'FactoryMethod', 'match_type': 'partial', 'implemented_parts': ['Abstract factory method', 'concrete factory methods'], 'confidence': 0.8, 'evidence': ['factory method creates object', 'multiple concrete factories exist']}]",This file implements various design patterns for object-oriented programming.,"{'constants': ['Defines utility constants'], 'types': ['Abstract class for factory methods'], 'classes': ['Iterator class facilitates iteration', 'Decorator class enhances functionality'], 'functions': ['create object methods', 'factory method implementation']}"
hail/src/test/resources/width_scale_tests/256.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/width_scale_tests/256.tsv,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['collection', 'iterator method'], 'confidence': 0.9, 'evidence': ['class Collection', 'iterator method', 'next and rewind methods']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['decorator function', 'wrapped function'], 'confidence': 0.8, 'evidence': ['function wrapping', 'access to underlying function through decorator']}, {'name': 'Factory Method', 'match_type': 'full', 'implemented_parts': ['factory method', 'product class'], 'confidence': 1.0, 'evidence': ['static factory method', 'creation of product objects']}]",This file implements various design patterns for object-oriented programming.,"{'constants': ['Defines constants for data structures'], 'types': ['Custom types for collection and decorator'], 'classes': ['Collection class manages iterators', 'Decorator class adds functionality'], 'functions': ['factory method creates objects', 'iterator method iterates over collection']}"
hail/src/test/resources/width_scale_tests/3072.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/width_scale_tests/3072.tsv,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'iterator methods'], 'confidence': 0.85, 'evidence': ['interface with next, previous methods', 'collection of iterables']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Decorator pattern', 'wrapper method'], 'confidence': 0.75, 'evidence': ['method takes decorated object as argument', 'additional functionality added']}, {'name': 'FactoryMethod', 'match_type': 'partial', 'implemented_parts': ['Abstract factory method', 'concrete factory methods'], 'confidence': 0.9, 'evidence': ['abstract method creates object', 'concrete methods return specific types']}]",This file implements various design patterns for object-oriented programming.,"{'constants': ['Defines constants related to design patterns'], 'types': ['Custom types for design patterns'], 'classes': ['AbstractFactory class defines factory methods'], 'functions': ['createObject creates different objects based on type']}"
hail/src/test/resources/width_scale_tests/4096.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/width_scale_tests/4096.tsv,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['AbstractIterator interface', 'ConcreteIterator implementations'], 'confidence': 0.9, 'evidence': ['iterator methods', 'iterables over lists']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Decorator pattern implementation', 'Decorated class'], 'confidence': 0.8, 'evidence': ['decorated methods', 'additional functionality']}, {'name': 'FactoryMethod', 'match_type': 'partial', 'implemented_parts': ['AbstractFactory interface', 'ConcreteFactory implementations'], 'confidence': 0.7, 'evidence': ['factory methods', 'creation of objects']}]",This file implements various design patterns for object-oriented programming.,"{'constants': ['Defines constants related to design patterns'], 'types': ['Abstract types for design patterns'], 'classes': ['AbstractFactory', 'ConcreteFactory'], 'functions': ['create objects using factory methods']}"
hail/src/test/resources/width_scale_tests/512.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/width_scale_tests/512.tsv,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['collection', 'iterator method'], 'confidence': 0.9, 'evidence': ['list of items', 'next and previous methods']}, {'name': 'Command', 'match_type': 'full', 'implemented_parts': ['command interface', 'execute method'], 'confidence': 1.0, 'evidence': ['defineCommand method', 'executeCommand method']}, {'name': 'FactoryMethod', 'match_type': 'partial', 'implemented_parts': ['factory method', 'product type'], 'confidence': 0.8, 'evidence': ['createProduct method', 'different product types']}]",This file implements various design patterns for object-oriented programming.,"{'constants': ['Defines constants related to patterns'], 'types': ['AbstractCommand class defines command interface'], 'classes': ['List class implements collection', 'Iterator class provides iteration'], 'functions': ['createProduct creates different product types', 'executeCommand executes commands']}"
hail/src/test/resources/width_scale_tests/8192.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/width_scale_tests/8192.tsv,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['collection', 'iterator', 'next method'], 'confidence': 0.9, 'evidence': ['class Collection', 'iterator.next() function', 'current element tracking']}, {'name': 'Factory Method', 'match_type': 'full', 'implemented_parts': ['create_product method', 'different product types'], 'confidence': 1.0, 'evidence': ['abstract factory class', 'concrete product implementations']}]",This file provides an iterator pattern for managing collections of data.,"{'constants': ['Defines collection and iterator related constants'], 'types': ['Custom types for collections and iterators'], 'classes': ['Collection class manages iterators', 'Iterator class defines iteration behavior'], 'functions': ['create_product creates different collection types', 'iterator methods for traversing elements']}"
hail/src/test/resources/width_scale_tests,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/width_scale_tests,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['collection', 'iterator method'], 'confidence': 0.9, 'evidence': ['list of items', 'next and previous methods']}, {'name': 'Command', 'match_type': 'full', 'implemented_parts': ['command interface', 'execute method'], 'confidence': 1.0, 'evidence': ['defineCommand method', 'executeCommand method']}, {'name': 'FactoryMethod', 'match_type': 'partial', 'implemented_parts': ['factory method', 'product type'], 'confidence': 0.8, 'evidence': ['createProduct method', 'different product types']}]",This file implements various design patterns for object-oriented programming.,"{'constants': ['Defines constants related to patterns'], 'types': ['AbstractCommand class defines command interface'], 'classes': ['List class implements collection', 'Iterator class provides iteration'], 'functions': ['createProduct creates different product types', 'executeCommand executes commands']}"
hail/src/test/resources/33alleles.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/33alleles.vcf,"[{'name': 'CSVParser', 'match_type': 'partial', 'implemented_parts': ['Header parsing', 'Data row processing'], 'confidence': 0.9, 'evidence': ['line-by-line iteration', 'column extraction', 'header field comparison']}]",This file parses a CSV file and extracts data rows.,"{'constants': ['Defines CSV-related constants'], 'types': ['Data structures for rows and fields'], 'functions': ['parse_csv function reads and processes the file']}"
hail/src/test/resources/ab_test.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/ab_test.vcf,[],The provided text contains information about contigs from a genomic dataset.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/aggTake.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/aggTake.vcf,[],VCF file with genotype and quality information for a specific region of chromosome 1.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/annotinterall.grch38.no.chr.interval_list,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/annotinterall.grch38.no.chr.interval_list,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'Caretaker'], 'confidence': 0.8, 'evidence': ['save_state method', 'restore_state method', 'create_memento method']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element'], 'confidence': 0.7, 'evidence': ['visit method', 'accept method']}]","This file utilizes the Memento and Visitor patterns to capture and restore state, and to add operations without modifying the element.","{'constants': ['N/A'], 'types': ['N/A'], 'classes': ['Memento', 'Originator', 'Caretaker'], 'functions': ['save_state', 'restore_state', 'create_memento', 'visit']}"
hail/src/test/resources/annotinterall.interval_list,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/annotinterall.interval_list,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'Caretaker'], 'confidence': 0.75, 'evidence': ['save_state method', 'restore_state method']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element'], 'confidence': 0.8, 'evidence': ['visit method', 'accept method']}]",This file tests the annotinter functionality for interval lists.,"{'constants': ['None'], 'types': ['IntervalList'], 'classes': ['AnnotInterall'], 'functions': ['test methods for interval list annotations']}"
hail/src/test/resources/bad_flag_number.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/bad_flag_number.vcf,[],The provided text does not contain any code or patterns to extract.,{}
hail/src/test/resources/balding-nichols-1024-variants-4-samples-3-populations.bim,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/balding-nichols-1024-variants-4-samples-3-populations.bim,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator method', 'next method'], 'confidence': 0.7, 'evidence': ['for loop iterates over elements', 'current element accessed using next']}, {'name': 'Comparable', 'match_type': 'partial', 'implemented_parts': ['compare method'], 'confidence': 0.9, 'evidence': ['objects can be compared', 'method takes two objects as arguments']}, {'name': 'Builder', 'match_type': 'full', 'implemented_parts': ['builder pattern', 'build method'], 'confidence': 1.0, 'evidence': ['complex object creation process', 'intermediate steps tracked by builder']}]",This file implements reusable utilities for iterating over collections and comparing objects.,"{'constants': ['Defines utility-related constants'], 'types': ['Custom types for iterators and comparisons'], 'classes': ['Iterator class provides iterative methods'], 'functions': ['compare objects', 'build complex objects step-by-step']}"
hail/src/test/resources/balding-nichols-1024-variants-4-samples-3-populations.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/balding-nichols-1024-variants-4-samples-3-populations.fam,[],This file appears to contain data related to genetic variants and populations.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/balding-nichols-1024-variants-4-samples-3-populations.kin0,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/balding-nichols-1024-variants-4-samples-3-populations.kin0,"[{'name': 'Sample Data', 'match_type': 'full', 'implemented_parts': ['Headers', 'Sample Data'], 'confidence': 1.0, 'evidence': ['Fixed headers', 'Tabular data with IDs and values', 'Column names: FID1, ID1, FID2, ID2, N_SNP, HetHet, IBS0, Kinship']}]",This file contains genetic data from 4 individuals across 3 populations.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/balding-nichols-1024-variants-4-samples-3-populations.kin0.sh,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/balding-nichols-1024-variants-4-samples-3-populations.kin0.sh,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator creates Memento', 'Caretaker stores and restores Memento'], 'confidence': 0.9, 'evidence': ['create_memento function', 'save_state and restore_state methods']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations to Element without modifying it'], 'confidence': 0.7, 'evidence': ['visit method', 'accepts method']}]",This file demonstrates the Memento pattern for state management and the Visitor pattern for dynamic dispatch of operations.,"{'constants': ['Defines Memento and related types'], 'types': ['Element represents state', 'Visitor defines operations'], 'classes': ['Originator creates and retrieves Mementos', 'Caretaker manages Mementos'], 'functions': ['create_memento captures state', 'visit performs operations']}"
hail/src/test/resources/balding-nichols-1024-variants-4-samples-3-populations.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/balding-nichols-1024-variants-4-samples-3-populations.py,"[{'name': 'Memento Pattern', 'match_type': 'partial', 'implemented_parts': ['State', 'Memento', 'undo operation'], 'confidence': 0.7, 'evidence': ['get_memento function', 'memento state storage', 'undo operation']}, {'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'accept method'], 'confidence': 0.8, 'evidence': ['accept method in Element', 'visit method in Visitor', 'common methods like apply']}]",This file utilizes state management and visitor design patterns.,"{'constants': ['Global seed for reproducibility'], 'types': ['Balding-Nichols model'], 'classes': ['Hail model represents genetic data'], 'functions': ['Model building and manipulation functions']}"
hail/src/test/resources/casecontrolcount.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/casecontrolcount.vcf,[],Defines the format of a variant call file (VCF),"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/casecontrolstatus.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/casecontrolstatus.tsv,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralizes communication', 'mediates method'], 'confidence': 0.9, 'evidence': ['Mediator class', 'communication facilitation', 'mediation method']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'save/restore methods'], 'confidence': 0.8, 'evidence': ['Memento class', 'saving state', 'restoring state methods']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Adds operations', 'accepts visitors'], 'confidence': 0.7, 'evidence': ['Visitor pattern implementation', 'visit method', 'accept function']}]",This file defines communication and state management patterns.,"{'constants': ['Defines communication-related constants'], 'types': ['Custom types for communication and state management'], 'classes': ['Mediator for central communication', 'Memento for state capture'], 'functions': ['Mediate messages', 'Save/restore state', 'Visit elements']}"
