filename,type,author,repo,version,wiki,url,patterns,purpose,summary
batch/sql/dedup_agg_batch_resources.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/dedup_agg_batch_resources.py,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['__iter__ method', 'next method'], 'confidence': 0.9, 'evidence': ['class implements iterable protocol', 'iterates over data structure']}, {'name': 'Comparable', 'match_type': 'partial', 'implemented_parts': ['__eq__ method', '__gt__ method'], 'confidence': 0.8, 'evidence': ['class defines comparison operators', 'allows sorting and filtering']}]",This file defines utility functions for iterating over and comparing data structures.,"{'constants': ['Defines helper constants for comparison'], 'types': ['Custom types for iterables'], 'classes': ['Utility class for iterating over collections'], 'functions': ['iterates over elements', 'compares data structures']}"
batch/sql/dedup_attempt_resources.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/dedup_attempt_resources.py,"[{'name': 'Iterator pattern', 'match_type': 'partial', 'implemented_parts': ['__iter__ method', '__next__ method'], 'confidence': 0.95, 'evidence': ['class supports iteration', 'implementing iter protocol']}, {'name': 'Decorator pattern', 'match_type': 'partial', 'implemented_parts': ['@decorator decorator function'], 'confidence': 0.8, 'evidence': ['wraps function with additional behavior', 'allows extending functionality']}, {'name': 'Command pattern', 'match_type': 'partial', 'implemented_parts': ['Command interface', 'ConcreteCommand classes'], 'confidence': 0.75, 'evidence': ['defines abstract command interface', 'multiple concrete commands implemented']}]",This file contains utilities for managing tasks and workflows.,"{'constants': ['Defines constants related to commands'], 'types': ['Command interface for generic command handling'], 'classes': ['ConcreteCommand classes for specific tasks'], 'functions': ['execute runs commands', 'undo and redo functionalities']}"
batch/sql/dedup_billing_project_users.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/dedup_billing_project_users.py,"[{'name': 'Iterator pattern', 'match_type': 'partial', 'implemented_parts': ['__iter__ method', 'next method'], 'confidence': 0.9, 'evidence': ['class with iter method', 'supports iteration over elements']}, {'name': 'Decorator pattern', 'match_type': 'partial', 'implemented_parts': ['decorator function', 'wraps another function'], 'confidence': 0.8, 'evidence': ['function with additional behavior', 'allows customization of existing functions']}, {'name': 'Factory pattern', 'match_type': 'full', 'implemented_parts': ['create_product method', 'abstracts product creation'], 'confidence': 1.0, 'evidence': ['multiple product types', 'centralized creation logic']}]",This file contains utility functions for iterating over collections and applying modifications.,"{'constants': ['Defines constants related to iteration'], 'types': ['Generic iterator type'], 'classes': ['Iterator class provides utilities for iteration'], 'functions': ['map iterates over elements', 'filter removes elements']}"
batch/sql/dedup_billing_project_users_by_date.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/dedup_billing_project_users_by_date.py,"[{'name': 'Iterator pattern', 'match_type': 'partial', 'implemented_parts': ['__iter__ method', 'next method'], 'confidence': 0.9, 'evidence': ['class has iterable methods', 'supports looping over instances']}, {'name': 'Decorator pattern', 'match_type': 'partial', 'implemented_parts': ['@decorator decorator function'], 'confidence': 0.8, 'evidence': ['function decorator syntax', 'alters behavior of decorated function']}]",This file implements reusable components and functionalities through various design patterns.,"{'constants': ['Defines reusable constants'], 'types': ['Custom types for specific functionalities'], 'classes': ['Decorator class exemplifies decorator pattern'], 'functions': ['Reusable utility functions']}"
batch/sql/dedup_billing_project_users_v2.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/dedup_billing_project_users_v2.py,"[{'name': 'Iterator pattern', 'match_type': 'partial', 'implemented_parts': ['__iter__ method', 'next method'], 'confidence': 0.9, 'evidence': ['iterates over a collection', 'supports iteration protocols']}, {'name': 'Decorator pattern', 'match_type': 'partial', 'implemented_parts': ['decorator function', 'wraps original function'], 'confidence': 0.8, 'evidence': ['adds functionality without changing original code', 'allows reusable extensions']}, {'name': 'Factory pattern', 'match_type': 'full', 'implemented_parts': ['create method', 'abstract factory'], 'confidence': 1.0, 'evidence': ['abstracts object creation', 'provides consistent interface']}]",This file contains utility functions for iterating over and manipulating data structures.,"{'constants': ['Defines utility constants'], 'types': ['Custom data structures'], 'classes': ['Iterator class for iterating over lists'], 'functions': ['map iterates over elements', 'filter selects elements']}"
batch/sql/dedup_job_resources.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/dedup_job_resources.py,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['__iter__ method', 'next method'], 'confidence': 0.9, 'evidence': ['implements iterable protocol', 'supports iteration over collection']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['__eq__ method', '__ne__ method'], 'confidence': 1.0, 'evidence': ['supports equality comparison', 'overrides comparison operators']}]",This file defines a data structure that can be iterated over and supports comparison operations.,"{'constants': ['Defines constants related to iteration'], 'types': ['Custom types with comparison capabilities'], 'classes': ['Custom collection type'], 'functions': ['Compare elements', 'iterate over elements']}"
batch/sql/do-not-lock-entire-batch.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/do-not-lock-entire-batch.sql,"[{'name': 'Job Completion Tracking', 'match_type': 'partial', 'implemented_parts': ['Batch table update', 'Jobs table update with parent status', 'Notification based on completion state'], 'confidence': 0.95, 'evidence': ['SELECT statement on batches table', 'JOIN with job_parents table', 'UPDATE jobs based on completion status']}, {'name': 'Batch Status Tracking', 'match_type': 'full', 'implemented_parts': ['Batch table update with completion metrics'], 'confidence': 1.0, 'evidence': ['UPDATE batches set n_completed, n_cancelled, n_failed, n_succeeded']}]",This code snippet tracks the completion status of jobs and batches.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/driver_behavior.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/driver_behavior.py,"[{'name': 'Database Schema Update', 'match_type': 'partial', 'implemented_parts': ['Table schema modification', 'Data update'], 'confidence': 0.9, 'evidence': ['ALTER TABLE statements for adding and modifying columns', 'UPDATE statements to populate new columns', 'Constants related to maximum instances and worker time']}]",This file updates the database schema to add new columns to several tables.,"{'constants': ['Defines values for new columns'], 'types': ['Integer type for new columns'], 'classes': [], 'functions': []}"
batch/sql/estimated-current.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/estimated-current.sql,"[{'name': 'Job Completion Detection', 'match_type': 'partial', 'implemented_parts': ['Job state update', 'Parent-child relationships', 'Telemetry data integration'], 'confidence': 0.95, 'evidence': ['Jobs table updated with state and completion timestamps', 'Job-parent relationship table established', 'Telemetry data used for job status tracking']}, {'name': 'Concurrency Control', 'match_type': 'partial', 'implemented_parts': ['Pending job count tracking', 'Ready state transition logic', 'Cancellation handling'], 'confidence': 0.85, 'evidence': ['Jobs table tracks pending job count', 'State transition from Pending to Ready based on parent completion', 'Jobs are cancelled when a parent job fails']}]",This code snippet manages job concurrency in a batch processing system.,"{'constants': ['Defines batch and job related constants'], 'types': ['Job status types'], 'classes': ['Job class represents batch jobs'], 'functions': ['Job completion detection algorithm', 'Concurrency control logic', 'Job cancellation process']}"
batch/sql/faster-regions-pool-scheduler.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/faster-regions-pool-scheduler.sql,[],Creates an index on the `jobs` table.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/finalize-job-groups.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/finalize-job-groups.sql,"[{'name': 'Job group collection', 'match_type': 'full', 'implemented_parts': ['Job group ID foreign key constraint', 'Primary key on batch_id, update_id, job_group_id, inst_coll, token', 'Job group ID not null constraint'], 'confidence': 1.0, 'evidence': ['ALTER TABLE job_groups_inst_coll_staging', 'ALTER TABLE job_group_inst_coll_cancellable_resources', 'ALTER TABLE aggregated_job_group_resources_v3']}, {'name': 'Job group referencing', 'match_type': 'partial', 'implemented_parts': ['Foreign key constraint on batch_id, job_group_id', 'Primary key on batch_id, job_group_id, resource_id, token'], 'confidence': 0.95, 'evidence': ['ALTER TABLE aggregated_job_group_resources_v3', 'ALTER TABLE job_groups_n_jobs_in_complete_states']}]",This file defines the structure of job groups and their associated collections.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/fix-billing-triggers-deduped-resource-id.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/fix-billing-triggers-deduped-resource-id.sql,"[{'name': 'StatefulIterator', 'match_type': 'partial', 'implemented_parts': ['Stateful iterator design pattern', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['Stateful class with state variable', 'iterating over elements', 'modifying state during iteration']}, {'name': 'IteratorObserver', 'match_type': 'partial', 'implemented_parts': ['Observes iteration state', 'updates observers on state changes', 'collects iteration results'], 'confidence': 0.8, 'evidence': ['Observer class receives iteration updates', 'observer methods triggered on state changes', 'aggregated results stored']}]",This file implements a stateful iterator design pattern for iterating over data structures while maintaining state.,"{'constants': ['Defines iteration-related constants'], 'types': ['Stateful iterator class'], 'classes': ['StatefulIterator class manages iteration state'], 'functions': ['init initializes iterator', 'hasNext checks if iteration is finished', 'next advances iteration']}"
batch/sql/fix-job-groups-state-enum.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/fix-job-groups-state-enum.sql,"[{'name': 'Trigger Insert', 'match_type': 'partial', 'implemented_parts': ['Trigger definition', 'NEW and OLD row access', 'INSERT statements with NEW values'], 'confidence': 0.95, 'evidence': ['CREATE TRIGGER statement', 'NEW and OLD keywords used to access updated row values', 'INSERT statements with NEW values from trigger body']}]",This file defines a trigger that inserts data into related tables when a batch record is updated.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/fix-mark-job-complete-deadlocks.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/fix-mark-job-complete-deadlocks.sql,"[{'name': 'Dependency Injection', 'match_type': 'partial', 'implemented_parts': ['constructor injection', 'field injection'], 'confidence': 0.9, 'evidence': ['dependency injection annotations', 'constructor parameters', 'field access via injection']}, {'name': 'Factory Method', 'match_type': 'full', 'implemented_parts': ['create method', 'abstract class'], 'confidence': 1.0, 'evidence': ['abstract class with create method', 'concrete class implements factory method']}]",This file utilizes dependency injection and factory methods for object creation.,"{'constants': ['Defines constants for dependency injection'], 'types': ['Abstract class for factory method'], 'classes': ['Dependency class', 'Concrete factories'], 'functions': ['create method', 'constructor injection']}"
batch/sql/fix-mark-job-complete-on-error.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/fix-mark-job-complete-on-error.sql,"[{'name': 'Job Tracking', 'match_type': 'partial', 'implemented_parts': ['Batch management', 'Job state tracking', 'Notifications on completion'], 'confidence': 0.95, 'evidence': ['Batches table with n_jobs, n_completed, n_cancelled', 'Jobs table with state and cancelled flag', 'Notification logic based on job state change']}, {'name': 'Concurrency Control', 'match_type': 'partial', 'implemented_parts': ['Parent-child job relationships', 'State synchronization', 'Resource allocation monitoring'], 'confidence': 0.85, 'evidence': ['Job_parents table for hierarchical relationships', 'State updates in jobs table', 'Monitoring cores/mcpu usage']}]",This code manages batches of concurrent jobs and tracks their progress.,"{'constants': ['Defines job states and batch configurations'], 'types': ['Job represents a single task', 'Batch encapsulates a group of jobs'], 'classes': ['Jobs', 'Batches'], 'functions': ['Track job state changes', 'Manage batch progress', 'Monitor resource utilization']}"
batch/sql/fix-n-cancelled-creating-jobs.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/fix-n-cancelled-creating-jobs.sql,"[{'name': 'Canceler Pattern', 'match_type': 'partial', 'implemented_parts': ['cancel function', 'cancel token', 'n_cancelled_creating_jobs counter'], 'confidence': 0.95, 'evidence': ['cancel function triggers cancellation', 'cancel token is generated for cancellation', 'n_cancelled_creating_jobs counter tracks cancelled jobs']}, {'name': 'Resource Manager', 'match_type': 'full', 'implemented_parts': ['Resource allocation and deallocation', 'token-based resource management'], 'confidence': 1.0, 'evidence': ['Random token generation for resource allocation', 'Resource count tracking for different states', 'Token-based allocation and deallocation of resources']}]","This file manages instances of a resource collection, tracking their creation, cancellation, and utilization.","{'constants': ['Defines constants for resource-related actions'], 'types': ['Resource token represents allocated resources'], 'classes': ['UserInstanceCollResources class manages resource allocation'], 'functions': ['allocate assigns resources', 'cancel cancels resource allocation']}"
batch/sql/fix-provisioning-bug.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/fix-provisioning-bug.sql,"[{'name': 'Trigger update', 'match_type': 'partial', 'implemented_parts': ['Trigger', 'OLD', 'NEW', 'UPDATE', 'IF-ELSE conditional statements'], 'confidence': 0.9, 'evidence': ['CREATE TRIGGER statement', 'OLD and NEW keywords for referencing previous and new values', 'Conditional updates based on time and reason fields']}]",This file defines a trigger that automatically updates the start and end times of attempts in the database.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/fix-schedule-job.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/fix-schedule-job.sql,"[{'name': 'Job Synchronization', 'match_type': 'partial', 'implemented_parts': ['Job tracking table', 'Attempt tracking table', 'Instance status update', 'Job state update'], 'confidence': 0.95, 'evidence': ['Jobs table with cancelled/running status', 'Attempts table with job-attempt mapping', 'Instances table with active/inactive status', 'Job state update based on instance status']}, {'name': 'Pool Aware Allocation', 'match_type': 'partial', 'implemented_parts': ['Core allocation adjustment'], 'confidence': 0.85, 'evidence': ['Detection of pool instance', 'Conditional core allocation adjustment based on pool status']}]",This code manages job synchronization and resource allocation across instances.,"{'constants': ['Defines constants related to job tracking'], 'types': ['Custom data types for job and attempt tracking'], 'classes': ['Job class tracks job status'], 'functions': ['Job submission and tracking', 'Attempt creation and resource allocation', 'Instance status monitoring and core adjustment']}"
batch/sql/improve-cancel.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/improve-cancel.sql,"[{'name': 'Job scheduling', 'match_type': 'partial', 'implemented_parts': ['start_ready_jobs function', 'ready_cores_mcpu variable', 'INSERT INTO ready_cores query'], 'confidence': 0.9, 'evidence': ['Job token randomization', 'Cores allocation tracking', 'Insertion of ready cores into database']}, {'name': 'Batch cancelability', 'match_type': 'partial', 'implemented_parts': ['cancellable flag in batch metadata', 'INSERT INTO batch_cancellable_resources query'], 'confidence': 0.8, 'evidence': ['Tracking of cancellable jobs', 'Insertion of cancellable resources into database']}, {'name': 'Resource tracking', 'match_type': 'partial', 'implemented_parts': ['user_resources table', 'INSERT INTO user_resources queries'], 'confidence': 0.9, 'evidence': ['Tracking of user-associated resources', 'Insertion of resource usage data into database']}]",This file manages job scheduling and resource allocation in a distributed system.,"{'constants': ['Defines constants related to job scheduling'], 'types': ['Data structures for job metadata'], 'classes': ['Job scheduler class', 'Resource tracker class'], 'functions': ['Schedule jobs', 'Track resource usage', 'Cancel jobs']}"
batch/sql/increase-spec-size.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/increase-spec-size.sql,[],This SQL statement modifies the `spec` column in the `jobs` table to increase its size.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
