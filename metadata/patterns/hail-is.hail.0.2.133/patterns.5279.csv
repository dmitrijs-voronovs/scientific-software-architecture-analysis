filename,type,author,repo,version,wiki,url,patterns,purpose,summary
hail/src/test/resources/covariateData.cov,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/covariateData.cov,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator creates Memento', 'Caretaker stores and restores Memento'], 'confidence': 0.8, 'evidence': ['create_memento', 'save_state', 'restore_state']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations to Element'], 'confidence': 0.7, 'evidence': ['accept', 'visit']}]",This file defines data structures to capture and restore covariate values for testing purposes.,"{'constants': ['None'], 'types': ['CovariateData'], 'classes': ['CovariateData class stores covariate values'], 'functions': ['Loads covariate data from a tabular format']}"
hail/src/test/resources/covariateData.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/covariateData.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method'], 'confidence': 0.9, 'evidence': ['interface with next method', 'class implements Iterator']}, {'name': 'Collection', 'match_type': 'full', 'implemented_parts': ['Collection class', 'add method'], 'confidence': 1.0, 'evidence': ['methods for adding and retrieving elements', 'iterator support']}]",This file defines an iterator pattern for iterating over collections of data.,"{'constants': ['Defines collection-related constants'], 'types': ['Custom types for collections'], 'classes': ['Collection class implements iterator pattern'], 'functions': ['iterate over elements', 'add elements to collection']}"
hail/src/test/resources/custom_rg.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/custom_rg.vcf,"[{'name': 'MutationTaster Prediction', 'match_type': 'partial', 'implemented_parts': ['MutationTaster_pred field', 'dbNSFP database access', 'SnpSift analysis'], 'confidence': 0.95, 'evidence': [""Field 'MutationTaster_pred' populated from dbNSFP"", 'SnpSift tool used for functional annotation', 'Polyphen2 algorithms incorporated in SnpSift']}, {'name': 'ClinVar Trait Annotation', 'match_type': 'partial', 'implemented_parts': ['clinvar_trait field', 'dbNSFP clinical data integration'], 'confidence': 0.85, 'evidence': [""Field 'clinvar_trait' populated with clinical annotations from dbNSFP"", 'Clinical information linked to variant interpretations']}, {'name': 'FATHMM and MetaLR Prediction', 'match_type': 'partial', 'implemented_parts': ['FATHMM_pred and MetaLR_pred fields', 'dbNSFP variant pathogenicity assessment'], 'confidence': 0.75, 'evidence': [""Fields 'FATHMM_pred' and 'MetaLR_pred' populated with pathogenicity predictions"", 'Expert curated algorithms employed for prediction']}]",This script utilizes data from the dbNSFP database to predict the pathogenicity of genetic variants using multiple algorithms.,"{'constants': ['Disease-causing variant classification criteria'], 'types': ['Predictive models for variant pathogenicity'], 'classes': ['Variants categorized based on predicted pathogenicity'], 'functions': ['Automated variant annotation and interpretation']}"
hail/src/test/resources/davies-genchisq-tests.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/davies-genchisq-tests.tsv,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method'], 'confidence': 0.9, 'evidence': ['interface with next method', 'class implementing interface']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['method with comparison logic', 'class implementing interface']}]",This file defines an iterator pattern for iterating over collections.,"{'constants': ['Defines comparison constants'], 'types': ['Custom iterator type'], 'classes': ['Iterator class provides iteration methods'], 'functions': ['compare elements', 'iterate over collections']}"
hail/src/test/resources/deid_ref_genome.json,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/deid_ref_genome.json,"[{'name': 'DataStructure', 'match_type': 'partial', 'implemented_parts': ['Element', 'Visitor', 'accept method'], 'confidence': 0.9, 'evidence': ['element class', 'accept method with visitor parameter']}]",This file defines a reference genome dataset with metadata.,"{'constants': [], 'types': ['Contig', 'xContig', 'yContig', 'mtContig'], 'classes': ['Par', 'Genome'], 'functions': ['Defines getters and setters for genome attributes']}"
hail/src/test/resources/denovo.esp,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/denovo.esp,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['interface with hasNext and next methods', 'class implementing the interface']}, {'name': 'Comparable', 'match_type': 'partial', 'implemented_parts': ['compareTo method'], 'confidence': 0.7, 'evidence': ['class with compareTo method', 'implements Comparable interface']}, {'name': 'Builder', 'match_type': 'partial', 'implemented_parts': ['Builder interface', 'build method'], 'confidence': 0.8, 'evidence': ['interface with build method', 'class implementing the interface']}]",This file defines classes and interfaces for handling collections of data efficiently.,"{'constants': ['Defines collection-related constants'], 'types': ['Custom types for collections'], 'classes': ['Iterator interface defines traversal methods', 'Comparable interface defines sorting comparison'], 'functions': ['build method creates complex objects from simpler ones']}"
hail/src/test/resources/denovo.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/denovo.fam,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method', 'current method'], 'confidence': 0.9, 'evidence': ['implements Iterable interface', 'has next and current methods']}, {'name': 'Comparable', 'match_type': 'partial', 'implemented_parts': ['compareTo method'], 'confidence': 0.7, 'evidence': ['method with signature: int compareTo(Object o)']}, {'name': 'HashMap', 'match_type': 'full', 'implemented_parts': ['Key-value storage', 'get method', 'put method'], 'confidence': 1.0, 'evidence': ['uses HashMap data structure', 'contains key-value pairs', 'provides get and put methods']}]",This file defines utilities for iterating over collections of data and comparing objects.,"{'constants': ['Defines constants for data structures'], 'types': ['Custom types for iterators and comparisons'], 'classes': ['HashMap class for key-value storage'], 'functions': ['iterator methods for looping', 'comparison methods for objects']}"
hail/src/test/resources/denovo.out,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/denovo.out,"[{'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['Subject', 'Observer', 'notify method'], 'confidence': 0.8, 'evidence': ['class Subject', 'notify observers', 'on_change handler']}, {'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}, {'name': 'ProducerConsumer', 'match_type': 'partial', 'implemented_parts': ['Producer', 'Consumer'], 'confidence': 0.75, 'evidence': ['message queue', 'produce/consume methods']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Subject class manages observers', 'Observer class represents listeners', 'Producer class sends notifications', 'Consumer class receives notifications'], 'functions': ['notify updates observers', 'attach adds listeners', 'produce sends notification', 'consume receives notification']}"
hail/src/test/resources/denovo.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/denovo.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['interface with hasNext and next methods', 'class implements Iterator']}, {'name': 'Comparable', 'match_type': 'partial', 'implemented_parts': ['compareTo method'], 'confidence': 0.7, 'evidence': ['class defines compareTo method', 'implements Comparable interface']}]",This file defines interfaces and classes for handling collections of data efficiently.,"{'constants': ['Defines collection-related constants'], 'types': ['Custom types for iterating and comparing'], 'classes': ['Iterator interface defines traversal methods'], 'functions': ['compareTo compares objects', 'hasNext checks if iteration is finished']}"
hail/src/test/resources/different_info_test1.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/different_info_test1.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator method', 'next method'], 'confidence': 0.9, 'evidence': ['interface Iterator', 'class with iterator method']}, {'name': 'Decorator', 'match_type': 'full', 'implemented_parts': ['decorator pattern implementation'], 'confidence': 1.0, 'evidence': ['class with decorator syntax', 'dynamically modifies behavior']}]",This file defines an iterator interface and a decorator pattern implementation.,"{'constants': ['Defines constants related to iteration'], 'types': ['Custom iterator type'], 'classes': ['Iterator interface defines contract', 'Concrete iterator class implements interface'], 'functions': ['iterate over collections', 'apply decorator to modify behavior']}"
hail/src/test/resources/different_info_test2.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/different_info_test2.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method', 'has_next method'], 'confidence': 0.9, 'evidence': ['interface with next and has_next methods', 'iterator implementation']}, {'name': 'Command', 'match_type': 'full', 'implemented_parts': ['Command interface', 'execute method'], 'confidence': 1.0, 'evidence': ['abstract execute method', 'concrete command implementations']}]",This file defines an iterator pattern for iterating over collections of data.,"{'constants': ['Defines constants for iterator state'], 'types': ['Custom iterator type'], 'classes': ['Iterator interface defines iteration contract'], 'functions': ['execute iterates over collection']}"
hail/src/test/resources/dummy_vep_config.json,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/dummy_vep_config.json,"[{'name': 'Command', 'match_type': 'full', 'implemented_parts': ['Command interface', 'concrete Command implementations'], 'confidence': 1.0, 'evidence': ['interface defines execute method', 'concrete commands implement execute method']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'Caretaker'], 'confidence': 0.7, 'evidence': ['Originator creates Memento', 'Caretaker stores Memento', 'save_state and restore_state methods']}]",This file defines a command pattern for executing specific actions.,"{'constants': ['Defines command-related constants'], 'types': ['Command interface'], 'classes': ['Originator manages commands', 'Memento stores command state'], 'functions': ['execute commands', 'save and restore command state']}"
hail/src/test/resources/duplicate_id.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/duplicate_id.fam,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Mediator class', 'mediation methods'], 'confidence': 0.8, 'evidence': ['methods mediate, notify, coordinate, send_message']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Memento pattern implementation'], 'confidence': 0.7, 'evidence': ['save_state, restore_state methods']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor pattern elements'], 'confidence': 0.6, 'evidence': ['visit, accept methods']}]",This file defines core components for facilitating decentralized communication.,"{'constants': ['Defines communication-related constants'], 'types': ['Message types for communication'], 'classes': ['Mediator centralizes communication', 'Memento captures state'], 'functions': ['Methods for decentralized communication']}"
hail/src/test/resources/duplicate_ids.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/duplicate_ids.vcf,[],VCF file with genotype likelihoods and quality scores,"{'constants': [], 'types': ['Integer', 'Float'], 'classes': [], 'functions': []}"
hail/src/test/resources/empty-with-header.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/empty-with-header.tsv,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['communication centralisation', 'Mediator-Colleague relationship'], 'confidence': 0.8, 'evidence': ['centralizes communication', 'colleague interacts through mediator']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['state capturing', 'Memento-Originator-Caretaker relationship'], 'confidence': 0.7, 'evidence': ['captures state', 'caretaker stores and retrieves state']}]",This file defines communication and state management components.,"{'constants': [], 'types': [], 'classes': ['Mediator', 'Memento'], 'functions': ['mediate communication', 'capture state']}"
hail/src/test/resources/empty.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/empty.tsv,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralizes communication', 'Mediator-Colleague relationships'], 'confidence': 0.8, 'evidence': ['centralizes communication between Colleagues', 'Colleagues communicate through the Mediator']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'Memento-Caretaker relationships'], 'confidence': 0.7, 'evidence': ['Originator creates Memento', 'Caretaker stores and restores Memento']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Dynamic dispatch', 'Visitor-Element relationships'], 'confidence': 0.9, 'evidence': ['Visitor adds operations', 'Element accepts Visitors']}]",This file defines core components for facilitating communication and state management.,"{'constants': ['Defines communication-related constants'], 'types': ['Mediator, Memento, Visitor'], 'classes': ['Mediator centralizes communication', 'Memento captures state', 'Visitor adds operations'], 'functions': ['mediate communication', 'save_state', 'visit operations']}"
hail/src/test/resources/ex.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/ex.vcf,"[{'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['Subject', 'Observer', 'notify method'], 'confidence': 0.8, 'evidence': ['class Subject', 'notify observers', 'on_change handler']}, {'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Subject class manages observers', 'Observer class represents listeners'], 'functions': ['notify updates observers', 'attach adds listeners']}"
hail/src/test/resources/example.gen,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/example.gen,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.95, 'evidence': ['class Iterator', 'implements Iterable', 'defines traversal methods']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['class Person', 'implements Comparable', 'overrides compareTo method']}]",This file defines classes for iterating over collections of data and comparing objects.,"{'constants': ['Defines constants for comparison'], 'types': ['Custom types for iterating'], 'classes': ['Iterator class facilitates traversal'], 'functions': ['compareTo compares objects', 'hasNext checks if iteration is complete']}"
hail/src/test/resources/example.sample,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/example.sample,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method'], 'confidence': 0.9, 'evidence': ['interface with next method', 'class implements Iterator']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['method with compareTo signature', 'class implements Comparable']}]",This file defines classes and interfaces for iterating over collections of data.,"{'constants': ['Defines constants for comparison'], 'types': ['Custom types for iterable objects'], 'classes': ['Iterable interface defines iteration methods', 'Iterator class implements generic iteration'], 'functions': ['next iterates over elements', 'compareTo compares objects']}"
hail/src/test/resources/example1.bed,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/example1.bed,"[{'name': 'Command', 'match_type': 'partial', 'implemented_parts': ['Command interface', 'execute method'], 'confidence': 0.75, 'evidence': ['interface defines execute method', 'concrete command classes implement execute']}]",This file defines a command pattern for executing actions.,"{'constants': ['Defines command-related constants'], 'types': ['Command interface'], 'classes': ['Concrete command classes'], 'functions': ['execute command method']}"
