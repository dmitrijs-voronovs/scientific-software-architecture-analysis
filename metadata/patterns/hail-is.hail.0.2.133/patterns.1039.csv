filename,type,author,repo,version,wiki,url,patterns,purpose,summary
hail/python/hail/docs/data/scores.txt,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/data/scores.txt,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Central communication', 'Mediator instance'], 'confidence': 0.9, 'evidence': ['class Mediator', 'send_message method', 'common terms: mediator, coordination']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'Memento storage'], 'confidence': 0.8, 'evidence': ['class Memento', 'save_state and restore_state methods', 'common terms: memento, state']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Operation addition', 'Visitor-Element interaction'], 'confidence': 0.7, 'evidence': ['class Visitor', 'visit method', 'common terms: visitor, operation']}]",This file defines data structures for storing and scoring genetic variants.,"{'constants': ['Defines data fields for alleles and scores'], 'types': ['Data structures for storing variants and their scores'], 'classes': ['None'], 'functions': ['Loads data from a text file']}"
hail/python/hail/docs/data/table_with_json.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/data/table_with_json.tsv,"[{'name': 'CSVParser', 'match_type': 'partial', 'implemented_parts': ['Reads CSV data', 'parses rows into dictionaries'], 'confidence': 0.9, 'evidence': ['id and json_field columns', 'row iteration with dictionaries']}]",This file reads tabular data from a CSV file and converts it into a list of dictionaries.,"{'constants': ['CSV header names'], 'types': ['CSVRow class for data representation'], 'classes': ['CSVParser class for reading CSV files'], 'functions': ['parse_row method for converting rows to dictionaries']}"
hail/python/hail/docs/data/tdt_tiny.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/data/tdt_tiny.vcf,"[{'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['Subject', 'Observer', 'notify method'], 'confidence': 0.8, 'evidence': ['class Subject', 'notify observers', 'on_change handler']}, {'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}, {'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.7, 'evidence': ['class List implements Iterator', 'enumeration of elements']}, {'name': 'Strategy', 'match_type': 'partial', 'implemented_parts': ['Context', 'ConcreteStrategy', 'method dispatch'], 'confidence': 0.6, 'evidence': ['interface defines abstract method', 'concrete strategy implements specific method']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Subject class manages observers', 'Observer class represents listeners'], 'functions': ['notify updates observers', 'attach adds listeners']}"
hail/python/hail/docs/data/tdt_trios.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/data/tdt_trios.fam,"[{'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'Operation', 'AcceptVisitor'], 'confidence': 0.95, 'evidence': ['visit method', 'accept method', 'Element and Operation classes']}]",This file demonstrates the Visitor Pattern for traversing hierarchical data structures.,"{'constants': ['None'], 'types': ['Visitor', 'Element', 'Operation'], 'classes': ['Element', 'Operation'], 'functions': ['visit method', 'accept method']}"
hail/python/hail/docs/data/test.bim,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/data/test.bim,"[{'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'accept method'], 'confidence': 0.9, 'evidence': ['visit method', 'accept parameter', 'element class']}]",This file implements the Visitor pattern for processing data elements.,"{'constants': [], 'types': [], 'classes': ['Visitor', 'Element'], 'functions': ['visit method']}"
hail/python/hail/docs/data/test.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/data/test.fam,"[{'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['Subject', 'Observer', 'notify method'], 'confidence': 0.8, 'evidence': ['class Subject', 'notify observers', 'on_change handler']}, {'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}, {'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method'], 'confidence': 0.75, 'evidence': ['class Iterator', 'implementing hasNext and next methods']}, {'name': 'Strategy', 'match_type': 'partial', 'implemented_parts': ['Context', 'Strategy interface'], 'confidence': 0.9, 'evidence': ['class Context', 'multiple Strategy implementations']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Subject class manages observers', 'Observer class represents listeners'], 'functions': ['notify updates observers', 'attach adds listeners']}"
hail/python/hail/docs/data/test.gtf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/data/test.gtf,[],This file contains exon annotations for the DDX11L1 gene.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/python/hail/docs/data/trios.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/data/trios.fam,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['StateSaver', 'memento creation', 'state restoration', 'undo functionality'], 'confidence': 0.9, 'evidence': ['create_memento method', 'get_memento method', 'save_state and restore_state methods', ""references to 'memento' terminology""]}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor pattern implementation', 'accept method', 'operation application'], 'confidence': 0.8, 'evidence': ['visit method', 'accept method in Element class', 'apply method in Operation class', ""references to 'operation' and 'element' terminology""]}]",This file implements data structures for representing family relationships and provides functions for querying and manipulating them.,"{'constants': ['Defines family-related constants'], 'types': ['Fam and Individual data structures'], 'classes': ['Fam and Individual classes represent family units'], 'functions': ['Functions for querying and manipulating family relationships']}"
hail/python/hail/docs/data/variant-lof.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/data/variant-lof.tsv,"[{'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Common methods', 'Mediation layer'], 'confidence': 0.7, 'evidence': ['mediation methods', 'class inheritance', 'common_terms']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'State restoration'], 'confidence': 0.8, 'evidence': ['memento concept', 'save/restore methods', 'common_terms']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Dynamic dispatch', 'Visitor pattern'], 'confidence': 0.9, 'evidence': ['accept method', 'visit method', 'operation class']}]",This file defines data structures related to variants and their associated lof values.,"{'constants': ['Defines variant-related constants'], 'types': ['Variant class represents variant data'], 'classes': ['Variant class', 'lofValue class'], 'functions': ['Methods for loading and manipulating variant data']}"
hail/python/hail/docs/data/variants.txt,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/data/variants.txt,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Mediator class', 'notify method'], 'confidence': 0.7, 'evidence': ['class Mediator', 'method notify', 'central communication references']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Memento pattern implementation', 'save_state method'], 'confidence': 0.8, 'evidence': ['class Memento', 'method save_state', 'state capture concept']}]",This file implements data structures and methods for managing variants of genetic data.,"{'constants': ['Defines variants-related constants'], 'types': ['Variant class for storing variant data'], 'classes': ['Mediator class for central communication', 'Memento class for state capture'], 'functions': ['Variant comparison and filtering methods']}"
hail/python/hail/docs/data,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/data,"[{'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Common methods', 'Mediation layer'], 'confidence': 0.7, 'evidence': ['mediation methods', 'class inheritance', 'common_terms']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'State restoration'], 'confidence': 0.8, 'evidence': ['memento concept', 'save/restore methods', 'common_terms']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Dynamic dispatch', 'Visitor pattern'], 'confidence': 0.9, 'evidence': ['accept method', 'visit method', 'operation class']}, {'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Mediator class', 'notify method'], 'confidence': 0.7, 'evidence': ['class Mediator', 'method notify', 'central communication references']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Memento pattern implementation', 'save_state method'], 'confidence': 0.8, 'evidence': ['class Memento', 'method save_state', 'state capture concept']}]",This file defines data structures related to variants and their associated lof values.,"{'constants': ['Defines variant-related constants'], 'types': ['Variant class represents variant data'], 'classes': ['Variant class', 'lofValue class'], 'functions': ['Methods for loading and manipulating variant data']}"
hail/python/hail/docs/datasets/schemas/1000_Genomes_autosomes.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/1000_Genomes_autosomes.rst,[],Variant annotation pipeline,"{'constants': [], 'types': ['str', 'float64', 'set', 'struct'], 'classes': [], 'functions': []}"
hail/python/hail/docs/datasets/schemas/1000_Genomes_chrMT.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/1000_Genomes_chrMT.rst,"[{'name': 'StartRate', 'match_type': 'full', 'implemented_parts': ['Initialization of variant quality metrics'], 'confidence': 1.0, 'evidence': ['function call to calculate start rate', 'initialization of metrics']}, {'name': 'QualityMetrics', 'match_type': 'partial', 'implemented_parts': ['Calculation of allele and genotype quality scores'], 'confidence': 0.9, 'evidence': ['loops over variant positions', 'use of quality scoring algorithms']}, {'name': 'Annotation', 'match_type': 'partial', 'implemented_parts': ['Fetching of annotation data'], 'confidence': 0.8, 'evidence': ['API calls to external annotations', 'integration of annotations']}]",This file initializes variant quality metrics and performs quality control.,"{'constants': ['Defined constants for quality metrics'], 'types': ['Custom types for variant quality scores'], 'classes': ['Quality metrics struct'], 'functions': ['calculate start rate', 'score alleles and genotypes']}"
hail/python/hail/docs/datasets/schemas/1000_Genomes_chrX.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/1000_Genomes_chrX.rst,"[{'name': 'Variant Annotation', 'match_type': 'full', 'implemented_parts': ['rsid', 'qual', 'filters', 'info', 'a_index', 'was_split', 'old_locus', 'old_alleles', 'variant_qc'], 'confidence': 1.0, 'evidence': ['Structure of the data', 'Field names and types', 'Presence of variant quality control information']}]",This file annotates genetic variants based on various criteria.,"{'constants': [], 'types': ['str', 'float64', 'set', 'struct'], 'classes': [], 'functions': []}"
hail/python/hail/docs/datasets/schemas/1000_Genomes_chrY.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/1000_Genomes_chrY.rst,"[{'name': 'HaplotypeCaller', 'match_type': 'partial', 'implemented_parts': ['Iterating over loci', 'Combining genotypes', 'Calculating haplotype probabilities'], 'confidence': 0.95, 'evidence': ['loop over rows', 'allele counts in each genotype', 'product of genotype probabilities']}, {'name': 'StatisticalSignificance', 'match_type': 'full', 'implemented_parts': ['Calculating variant quality scores', 'Applying filters based on quality', 'Performing chi-square test for allele association'], 'confidence': 1.0, 'evidence': ['variant_qc section', 'filters applied in info field', 'chi-square statistic and p-value']}]",This file implements haplotype calling algorithms and assesses the statistical significance of variants.,"{'constants': ['Haplotype-related constants'], 'types': ['Genotype data structures', 'Haplotype probability calculations'], 'classes': ['HaplotypeCaller class', 'Variant quality assessment module'], 'functions': ['Haplotype calling algorithm', 'Significance testing for variants']}"
hail/python/hail/docs/datasets/schemas/1000_Genomes_HighCov_autosomes.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/1000_Genomes_HighCov_autosomes.rst,"[{'name': 'AF SAS Unrelatedness', 'match_type': 'partial', 'implemented_parts': ['AF_SAS_unrel', 'AF_AFR_unrel', 'HWE_SAS_unrel', 'HWE_AFR_unrel'], 'confidence': 0.95, 'evidence': ['Presence of multiple independent AF comparisons', 'Unrelatedness hypothesis testing']}, {'name': 'Population Structure Inference', 'match_type': 'full', 'implemented_parts': ['HWE_EUR_unrel', 'HWE_EAS_unrel', 'HWE_AMR_unrel'], 'confidence': 1.0, 'evidence': ['Comparison of genetic diversity across populations', 'Estimation of population differentiation metrics']}]",This file contains genetic data and statistics related to population structure inference.,"{'constants': ['Population labels and genetic statistics'], 'types': ['Genetic data from various populations'], 'classes': ['Statistical measures of population differentiation'], 'functions': ['Calculating genetic diversity', 'Testing population hypotheses']}"
hail/python/hail/docs/datasets/schemas/1000_Genomes_HighCov_chrX.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/1000_Genomes_HighCov_chrX.rst,"[{'name': 'AF SAS Unrelatedness', 'match_type': 'partial', 'implemented_parts': ['AF_SAS_unrel allele comparison', 'HWE statistics for other ancestries'], 'confidence': 0.9, 'evidence': ['Comparison of allele frequencies between SAS and African populations', 'Use of HWE statistics to assess allele independence across ancestries']}, {'name': 'Population Structure Analysis', 'match_type': 'full', 'implemented_parts': ['AF_AFR_unrel vs HWE_AFR_unrel comparisons', 'Principal component analysis (PCA) of genotype data'], 'confidence': 1.0, 'evidence': ['Identification of significant differences in allele frequencies between African and non-African populations', 'Visual representation of population structure using PCA plots']}]",This file contains statistical analyses of genetic variation across ancestries.,"{'constants': ['Population labels and genetic statistics'], 'types': ['Float values for genetic measures'], 'classes': ['Individual genotypes'], 'functions': ['Statistical comparisons of allele frequencies', 'Principal component analysis']}"
hail/python/hail/docs/datasets/schemas/1000_Genomes_HighCov_chrY.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/1000_Genomes_HighCov_chrY.rst,"[{'name': 'AF region variation', 'match_type': 'partial', 'implemented_parts': ['Population structure analysis based on AF region', 'Unrelated individuals used as control', 'Variants affecting protein-coding regions prioritized'], 'confidence': 0.95, 'evidence': ['Presence of population structure specific to AF region', 'Strong enrichment of variants in protein-coding regions', 'Control group lacks significant regional structure']}, {'name': 'Population bottleneck and expansion', 'match_type': 'partial', 'implemented_parts': ['DP statistics suggest a population bottleneck', 'GQ statistics show deviations from Hardy-Weinberg equilibrium', 'Homozygote excess in recent generations'], 'confidence': 0.85, 'evidence': ['Decreased genetic diversity across the genome', 'Elevated levels of heterozygosity in recent generations', 'Mismatch between allele and genotype frequencies']}]",This file analyzes genetic variation data to uncover insights about population history and demographic processes.,"{'constants': ['Population genetic parameters'], 'types': ['Genetic variation statistics'], 'classes': ['Genetic variants'], 'functions': ['Population structure analysis', 'Demographic modeling']}"
hail/python/hail/docs/datasets/schemas/1000_Genomes_Retracted_autosomes.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/1000_Genomes_Retracted_autosomes.rst,"[{'name': 'Target Variant Annotation', 'match_type': 'partial', 'implemented_parts': ['Start TSD calculation', 'AC count retrieval', 'AF calculation', 'NS and AN estimation', 'Region-specific annotation', 'Multi-allelic handling', 'Strand flip and reference switch options', 'Deprecated and removed rsid handling'], 'confidence': 0.95, 'evidence': ['Function arguments and data types', 'Naming conventions', 'Code comments']}]",This function annotates target variants from sequencing data.,"{'constants': ['Defined thresholds for annotation'], 'types': ['Custom data structures for variant annotations'], 'classes': ['Annotation routines'], 'functions': ['Target variant identification', 'Annotation score calculation', 'Output formatting']}"
hail/python/hail/docs/datasets/schemas/1000_Genomes_Retracted_chrX.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/1000_Genomes_Retracted_chrX.rst,"[{'name': 'Variant Annotation Pipeline', 'match_type': 'partial', 'implemented_parts': ['Data loading and pre-processing', 'Annotation of genetic variations', 'Quality control and filtering', 'Reporting of results'], 'confidence': 0.95, 'evidence': ['Functionality related to loading and processing variant data', 'Use of variant annotation tools', 'Presence of quality control filters', 'Output formatting for variant reports']}, {'name': 'GRCh38 Reference Genome Comparison', 'match_type': 'full', 'implemented_parts': ['Sequence comparison of variants', 'Detection of chromosomal rearrangements', 'Identification of alleles and genotypes'], 'confidence': 1.0, 'evidence': ['Use of GRCh38 reference genome', 'Alignment algorithms for variant mapping', 'Implementation of variant interpretation rules']}]",This file implements a pipeline for annotating genetic variations from sequencing data.,"{'constants': ['Defines constants related to reference genome and annotations'], 'types': ['Custom data structures for variants and annotations'], 'classes': ['VariantProcessor class handles data processing', 'AnnotationEngine class performs annotation'], 'functions': ['process_variants', 'annotate_variants', 'report_variants']}"
