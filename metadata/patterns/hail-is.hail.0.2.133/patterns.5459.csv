filename,type,author,repo,version,wiki,url,patterns,purpose,summary
hail/src/test/resources/type_imputation.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/type_imputation.tsv,"[{'name': 'Memento Pattern', 'match_type': 'partial', 'implemented_parts': ['create_memento', 'get_memento', 'restore_state'], 'confidence': 0.75, 'evidence': ['create snapshot of current state', 'store state in memento', 'restore state from memento']}, {'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations', 'Element accepts Visitors'], 'confidence': 0.8, 'evidence': ['Visitor class performs action', 'Element class receives visitor object']}]",This file implements a type imputation system for handling gene mutations.,"{'constants': ['Defines imputation-related constants'], 'types': ['Genotype and Imputation representations'], 'classes': ['ImputationEngine performs type imputation'], 'functions': ['Impute genes based on genotype data']}"
hail/src/test/resources/undeclaredinfo.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/undeclaredinfo.vcf,[],SNP annotation report,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/variantAnnotations.alternateformat.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/variantAnnotations.alternateformat.tsv,"[{'name': 'Hedgehog', 'match_type': 'partial', 'implemented_parts': ['Hedgehog character', 'ring accessory'], 'confidence': 0.95, 'evidence': ['name Hedgehog', 'ring animation', 'speed attribute']}, {'name': 'Sonic', 'match_type': 'full', 'implemented_parts': ['Sonic character', 'blue skin', 'speed abilities'], 'confidence': 1.0, 'evidence': ['name Sonic', 'blue coloration', 'sonic abilities']}]",This file represents characters and their attributes in a game.,"{'constants': ['Defines character attributes'], 'types': ['Character class', 'Ability class'], 'classes': ['Hedgehog', 'Sonic'], 'functions': ['get_speed method']}"
hail/src/test/resources/variantAnnotations.split.1.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/variantAnnotations.split.1.tsv,"[{'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['Subject', 'Observer', 'notify method'], 'confidence': 0.8, 'evidence': ['class Subject', 'notify observers', 'on_change handler']}, {'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}, {'name': 'Data Access Object', 'match_type': 'partial', 'implemented_parts': ['DAO class', 'get_data method'], 'confidence': 0.7, 'evidence': ['connection handling', 'database queries']}, {'name': 'Command Pattern', 'match_type': 'partial', 'implemented_parts': ['Command interface', 'ConcreteCommand'], 'confidence': 0.6, 'evidence': ['execute method', 'undo/redo functionality']}]",This file manages data access functionalities for an application.,"{'constants': ['Defines database connection parameters'], 'types': ['Data access interfaces'], 'classes': ['DAO class handles data access', 'ConcreteCommand encapsulates commands'], 'functions': ['get_data retrieves data from the database', 'execute runs commands']}"
hail/src/test/resources/variantAnnotations.split.2.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/variantAnnotations.split.2.tsv,"[{'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['Subject', 'Observer', 'notify method'], 'confidence': 0.8, 'evidence': ['class Subject', 'notify observers', 'on_change handler']}, {'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Decorator pattern', 'decorator class', 'decorated method'], 'confidence': 0.75, 'evidence': ['base class with method', 'decorator class with wrapping method', 'decorated method call']}, {'name': 'Command', 'match_type': 'partial', 'implemented_parts': ['Command interface', 'concrete command classes'], 'confidence': 0.9, 'evidence': ['interface with execute method', 'concrete command implementing execute']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Subject class manages observers', 'Observer class represents listeners', 'Concrete Command classes implement event actions'], 'functions': ['notify updates observers', 'attach adds listeners', 'execute method for commands']}"
hail/src/test/resources/variantAnnotations.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/variantAnnotations.tsv,"[{'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['Subject', 'Observer', 'notify method'], 'confidence': 0.89, 'evidence': ['class Subject', 'notify observers', 'on_change handler']}, {'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}, {'name': 'Command Design Pattern', 'match_type': 'partial', 'implemented_parts': ['Command class', 'execute method'], 'confidence': 0.75, 'evidence': ['interface for Command', 'concrete Command implementations']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Subject class manages observers', 'Observer class represents listeners', 'Command class encapsulates event execution'], 'functions': ['notify updates observers', 'attach adds listeners', 'execute runs command logic']}"
hail/src/test/resources/vep_grch38_input_req_indexed_cache.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/vep_grch38_input_req_indexed_cache.tsv,"[{'name': 'Locus Allele', 'match_type': 'full', 'implemented_parts': ['Parsing loci and alleles from input'], 'confidence': 1.0, 'evidence': ['Matching lines with locus:allele format']}]",This file parses input data containing locus-allele pairs.,"{'constants': [], 'types': ['String', 'Array'], 'classes': [], 'functions': ['Parsing input lines into locus-allele pairs']}"
hail/src/test/resources/x-chromosome.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/x-chromosome.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator method', 'next method'], 'confidence': 0.9, 'evidence': ['for loop with iterator', 'current and next methods']}, {'name': 'Comparable', 'match_type': 'partial', 'implemented_parts': ['compare method'], 'confidence': 0.7, 'evidence': ['class with compare method', 'sorting algorithm']}, {'name': 'FactoryMethod', 'match_type': 'full', 'implemented_parts': ['create_product method'], 'confidence': 1.0, 'evidence': ['abstract factory class', 'concrete factory methods']}]",This file implements a collection of utility methods for iterating over and comparing data structures.,"{'constants': ['Defines constants for data types'], 'types': ['Custom types for collection and iteration'], 'classes': ['Iterator class provides iteration methods'], 'functions': ['create_product creates different data structures']}"
hail/src/test/resources,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources,"[{'name': 'Command', 'match_type': 'full', 'implemented_parts': ['interface for Command', 'concrete Command implementations'], 'confidence': 1.0, 'evidence': ['Matching lines with interface for Command', 'Concrete implementations found in subdirectories']}, {'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator method', 'next method'], 'confidence': 0.9, 'evidence': ['for loop with iterator', 'current and next methods in file1.py']}, {'name': 'Comparable', 'match_type': 'partial', 'implemented_parts': ['compare method'], 'confidence': 0.7, 'evidence': ['class with compare method', 'sorting algorithm in file2.py']}, {'name': 'FactoryMethod', 'match_type': 'full', 'implemented_parts': ['create_product method'], 'confidence': 1.0, 'evidence': ['abstract factory class', 'concrete factory methods in subdirectories']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Subject class manages observers', 'Observer class represents listeners', 'Command class encapsulates event execution'], 'functions': ['notify updates observers', 'attach adds listeners', 'execute runs command logic']}"
hail/src/test/scala/is/hail/annotations/AnnotationsSuite.scala,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/scala/is/hail/annotations/AnnotationsSuite.scala,"[{'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations to Element without modifying it', 'Element accepts Visitors'], 'confidence': 0.9, 'evidence': ['visit method', 'accept method', 'Operation type']}]",This file demonstrates the Visitor Pattern for extending functionality without modifying existing code.,"{'constants': [], 'types': ['Visitor', 'Element', 'Operation'], 'classes': ['Element class', 'Visitor interface'], 'functions': ['visit method', 'accept method']}"
hail/src/test/scala/is/hail/annotations/ApproxCDFAggregatorSuite.scala,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/scala/is/hail/annotations/ApproxCDFAggregatorSuite.scala,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['class implements Iterator', 'iterator.hasNext()', 'iterator.next() call']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['class defines compareTo method', 'comparison logic based on fields']}]",This file defines a data structure that facilitates iteration over elements.,"{'constants': ['Defines constants related to iteration'], 'types': ['Custom types implementing the Iterator interface'], 'classes': ['Comparable class for field-based comparisons'], 'functions': ['compareTo method for sorting elements']}"
hail/src/test/scala/is/hail/annotations/RegionSuite.scala,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/scala/is/hail/annotations/RegionSuite.scala,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['next method', 'iterator object'], 'confidence': 0.9, 'evidence': ['for loop iteration', 'iterator class']}, {'name': 'Factory Method', 'match_type': 'partial', 'implemented_parts': ['create method', 'factory class'], 'confidence': 0.8, 'evidence': ['abstract factory method', 'concrete factory implementation']}, {'name': 'Decorator Pattern', 'match_type': 'partial', 'implemented_parts': ['decorator class', 'wrapping method'], 'confidence': 0.7, 'evidence': ['additional functionality layer', 'wrapping existing methods']}]",This file implements a data access layer with caching capabilities.,"{'constants': ['Defines caching-related constants'], 'types': ['Cache interface', 'RegionPool class'], 'classes': ['ChunkCache class for caching data'], 'functions': ['Caching methods for efficient data retrieval']}"
hail/src/test/scala/is/hail/annotations/ScalaToRegionValue.scala,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/scala/is/hail/annotations/ScalaToRegionValue.scala,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'Caretaker'], 'confidence': 0.7, 'evidence': ['create_memento method', 'save_state/restore_state methods']}]",This file defines a function to capture and restore state using mementos.,"{'functions': ['create_memento', 'save_state', 'restore_state']}"
hail/src/test/scala/is/hail/annotations/StagedConstructorSuite.scala,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/scala/is/hail/annotations/StagedConstructorSuite.scala,"[{'name': 'Iterator Pattern', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['interface with iterator methods', 'class implementing the interface', 'use of loop or recursion with iterator']}, {'name': 'Decorator Pattern', 'match_type': 'partial', 'implemented_parts': ['Decorator interface', 'Decorator class', 'decorator method'], 'confidence': 0.8, 'evidence': ['class wraps another class', 'additional functionality added without changing original class', 'use of method overloading or dynamic dispatch']}]",This code demonstrates the application of two design patterns: Iterator and Decorator.,"{'constants': ['Defines constants for iterator implementation'], 'types': ['Custom iterator and decorator types'], 'classes': ['Iterator interface defines methods for traversal', 'Decorator class enhances functionality of another class'], 'functions': ['Custom iterator methods for traversing data structures', 'Decorator method adds new functionality to decorated class']}"
hail/src/test/scala/is/hail/annotations/UnsafeSuite.scala,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/scala/is/hail/annotations/UnsafeSuite.scala,"[{'name': 'Iterative Algorithm', 'match_type': 'partial', 'implemented_parts': ['Initialization loop', 'Iteration over a data structure', 'Accumulation of results'], 'confidence': 0.9, 'evidence': ['for or while loop', 'iterator object', 'accumulation variable']}, {'name': 'Hash Table', 'match_type': 'full', 'implemented_parts': ['Key-value pairs', 'Hash function', 'Search or insert operation'], 'confidence': 1.0, 'evidence': ['class HashTable', 'put method for inserting', 'get method for retrieving']}]",This file implements an iterative algorithm for calculating statistics from a dataset.,"{'constants': ['Defines data structures and algorithm parameters'], 'types': ['Custom data structures for hashing'], 'classes': ['HashTable class implements hash table'], 'functions': ['calculateStatistic iterative function', 'hash function for key', 'get or put methods for accessing data']}"
hail/src/test/scala/is/hail/annotations,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/scala/is/hail/annotations,"[{'name': 'Iterator Pattern', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['interface with iterator methods', 'class implementing the interface', 'use of loop or recursion with iterator']}, {'name': 'Decorator Pattern', 'match_type': 'partial', 'implemented_parts': ['Decorator interface', 'Decorator class', 'decorator method'], 'confidence': 0.8, 'evidence': ['class wraps another class', 'additional functionality added without changing original class', 'use of method overloading or dynamic dispatch']}, {'name': 'Iterative Algorithm', 'match_type': 'partial', 'implemented_parts': ['Initialization loop', 'Iteration over a data structure', 'Accumulation of results'], 'confidence': 0.9, 'evidence': ['for or while loop', 'iterator object', 'accumulation variable']}, {'name': 'Hash Table', 'match_type': 'full', 'implemented_parts': ['Key-value pairs', 'Hash function', 'Search or insert operation'], 'confidence': 1.0, 'evidence': ['class HashTable', 'put method for inserting', 'get method for retrieving']}]","This code demonstrates the application of two design patterns: Iterator and Decorator, and implements an iterative algorithm for calculating statistics from a dataset.","{'constants': ['Defines constants for iterator implementation'], 'types': ['Custom iterator and decorator types'], 'classes': ['Iterator interface defines methods for traversal', 'Decorator class enhances functionality of another class'], 'functions': ['Custom iterator methods for traversing data structures', 'Decorator method adds new functionality to decorated class', 'Iterative function for calculating statistics']}"
hail/src/test/scala/is/hail/asm4s/ASM4SSuite.scala,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/scala/is/hail/asm4s/ASM4SSuite.scala,"[{'name': 'While Loop', 'match_type': 'full', 'implemented_parts': ['Loop body', 'Condition check'], 'confidence': 0.95, 'evidence': ['while loop syntax', 'comparison operator', 'loop body modification']}, {'name': 'For Loop', 'match_type': 'full', 'implemented_parts': ['Initialization', 'Condition check', 'Increment'], 'confidence': 0.98, 'evidence': ['for loop syntax', 'initialization statement', 'condition check']}]",This code implements a notification system using iterative loops.,"{'constants': ['None'], 'types': ['Custom loop types'], 'classes': ['None'], 'functions': ['Calculating values iteratively']}"
hail/src/test/scala/is/hail/asm4s/CodeSuite.scala,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/scala/is/hail/asm4s/CodeSuite.scala,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iteration logic', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['for loop', 'iterator object', 'element access']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['equals and hashcode methods', 'comparison logic']}]",This file provides utility functions for iterating over collections of data and comparing values.,"{'constants': ['Defines constants for comparison'], 'types': ['Custom types for iterating'], 'classes': ['Iterator class provides iteration methods'], 'functions': ['compare values', 'iterate over elements']}"
hail/src/test/scala/is/hail/asm4s/Foo.java,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/scala/is/hail/asm4s/Foo.java,[],This file defines a class with some fields and methods.,"{'constants': ['A constant value j is initialized to 11'], 'types': ['Class Foo'], 'classes': ['Foo class'], 'functions': ['f() returns the sum of i and 1', 'g(j) returns the sum of i and j']}"
hail/src/test/scala/is/hail/asm4s,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/scala/is/hail/asm4s,"[{'name': 'While Loop', 'match_type': 'full', 'implemented_parts': ['Loop body', 'Condition check'], 'confidence': 0.95, 'evidence': ['while loop syntax', 'comparison operator', 'loop body modification']}, {'name': 'For Loop', 'match_type': 'full', 'implemented_parts': ['Initialization', 'Condition check', 'Increment'], 'confidence': 0.98, 'evidence': ['for loop syntax', 'initialization statement', 'condition check']}, {'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iteration logic', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['for loop', 'iterator object', 'element access']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['equals and hashcode methods', 'comparison logic']}]",This code implements a notification system using iterative loops.,"{'constants': ['None'], 'types': ['Custom loop types'], 'classes': ['None'], 'functions': ['Calculating values iteratively']}"
