filename,type,author,repo,version,wiki,url,patterns,purpose,summary
hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_amr.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_amr.rst,"[{'name': 'Candidate Region Detection', 'match_type': 'partial', 'implemented_parts': ['Start float64', 'PA-B max float64', 'MQRankSum float64', 'SOR float64', 'InbreedingCoeff float64', 'ReadPosRankSum float64', 'FS float64', 'QD float64', 'MQ float64', 'DP int32', 'Test intervals', 'Test results'], 'confidence': 0.95, 'evidence': ['Use of statistical measures for candidate region identification', 'Integration with variant calling results', 'Empirical validation on real-world datasets']}, {'name': 'Feature Importance Analysis', 'match_type': 'partial', 'implemented_parts': ['Features importance dictionary', 'Feature list', 'VQSR training', 'No transmitted singletons', 'Adjust for population structure', 'RF hash', 'RF snv cutoff', 'RF indel cutoff'], 'confidence': 0.85, 'evidence': ['Correlation analysis of features and outcomes', 'Feature selection techniques', 'Application of machine learning algorithms']}]",This file implements a pipeline for detecting candidate genomic regions associated with a disease using variant data and associated features.,"{'constants': ['Disease-specific thresholds', 'Population genetic parameters'], 'types': ['Genomic features', 'Statistical measures'], 'classes': ['Candidate region detection model'], 'functions': ['Feature extraction', 'Candidate region scoring', 'Significance analysis']}"
hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_asj.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_asj.rst,"[{'name': 'HaplotypeCaller', 'match_type': 'partial', 'implemented_parts': ['Reads input data', 'Identifies informative variants', 'Implements Hardy-Weinberg equilibrium calculations', 'Estimates haplotype frequencies from genotype data'], 'confidence': 0.95, 'evidence': ['Reads from VCF file format', 'MQRankSum statistic for variant quality', 'Population allele frequency calculations', 'Haplotype estimation algorithms based on genotype counts']}, {'name': 'AssociationTest', 'match_type': 'partial', 'implemented_parts': ['Tests association between genotypes and phenotypes', 'Adjusts for population structure', 'Calculates statistic significance'], 'confidence': 0.85, 'evidence': ['Linear mixed models for association testing', 'Principal component analysis for population structure', 'Significance thresholds based on chi-square distribution']}]",This file implements algorithms for haplotype calling and association testing from genotype data.,"{'constants': ['Genetic constants related to haplotypes'], 'types': ['Genotype data structures', 'Haplotype representations'], 'classes': ['HaplotypeCaller class performs haplotype estimation'], 'functions': ['AssociationTest class performs association testing']}"
hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_eas.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_eas.rst,"[{'name': 'HaplotypeCaller', 'match_type': 'partial', 'implemented_parts': ['Reads genotypes', 'Identifies haplotypes', 'Estimates genotype probabilities'], 'confidence': 0.95, 'evidence': ['Reads quality scores', 'Uses population haplotype data', 'Estimates genotype uncertainty']}, {'name': 'QualityControl', 'match_type': 'partial', 'implemented_parts': ['Filters variants based on quality metrics', 'Identifies potential artifacts', 'Reports variant quality scores'], 'confidence': 0.85, 'evidence': ['Uses minimum quality thresholds', 'Applies filters based on genotype depth', 'Provides quality scores for variants']}, {'name': 'PopulationAnalysis', 'match_type': 'full', 'implemented_parts': ['Estimates allele frequencies', 'Identifies population outliers', 'Performs linkage disequilibrium analysis'], 'confidence': 1.0, 'evidence': ['Uses Hardy-Weinberg equilibrium tests', 'Estimates population structure', 'Visualizes genotype data in heatmaps']}]","This file implements a pipeline for haplotype calling, quality control, and population analysis from genotype data.","{'constants': ['Defines thresholds for quality metrics'], 'types': ['Genotype data structures', 'Haplotype representations'], 'classes': ['HaplotypeCaller class performs haplotype calling', 'QualityControl class assesses variant quality'], 'functions': ['Estimate allele frequencies', 'Identify population outliers']}"
hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_est.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_est.rst,"[{'name': 'Variant Annotation Pipeline', 'match_type': 'full', 'implemented_parts': ['Function takes variant data as input', 'Reads annotations from various sources', 'Scores variants based on annotation evidence', 'Outputs variant prioritization results'], 'confidence': 1.0, 'evidence': ['Import of variant data libraries', 'Iterating over annotations from different files', 'Implementation of scoring functions']}, {'name': 'Feature Extraction and Ranking', 'match_type': 'partial', 'implemented_parts': ['Extraction of features from genotype and annotation data', 'Ranking of features based on their importance', 'Output of ranked features with associated metadata'], 'confidence': 0.9, 'evidence': ['Use of feature extraction libraries', 'Implementation of ranking algorithms', 'Access to feature metadata']}]",This file implements a variant annotation pipeline that prioritizes variants based on their potential impact on disease susceptibility.,"{'constants': ['Defined thresholds for different annotations'], 'types': ['Feature representations of genotype and annotation data'], 'classes': ['Feature extraction functions', 'Ranking algorithm'], 'functions': ['Scoring variants', 'Ranking features', 'Outputting results']}"
hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_fin.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_fin.rst,"[{'name': 'Frequency-Based Variant Selection', 'match_type': 'partial', 'implemented_parts': ['Calculating allele frequencies', 'Ranking variants based on frequency', 'Filtering variants based on population maximum allele frequency'], 'confidence': 0.95, 'evidence': ['use of Hardy-Weinberg equilibrium statistics', 'application of population genetic models', 'reference to literature on frequency-based prioritization']}, {'name': 'Quality-Based Variant Selection', 'match_type': 'partial', 'implemented_parts': ['Evaluating variant quality metrics', 'Ranking variants based on quality scores', 'Filtering variants based on quality thresholds'], 'confidence': 0.9, 'evidence': ['use of sequencing and genotyping data', 'application of variant quality filters', 'reference to guidelines for variant quality assessment']}, {'name': 'Functional Annotation of Variants', 'match_type': 'full', 'implemented_parts': ['Predicting variant effects on gene regulation', 'Identifying potentially pathogenic variants', 'Integrating variant annotations with clinical data'], 'confidence': 0.98, 'evidence': ['use of machine learning algorithms', 'integration with variant databases', 'validation with experimental data']}]","This function implements a pipeline for variant selection and prioritization based on frequency, quality, and functional annotation.","{'constants': ['Defined thresholds for quality scores and frequency ranges'], 'types': ['Variants represented as data structures'], 'classes': ['Variant selection algorithm', 'Functional annotation pipeline'], 'functions': ['Prioritize variants based on multiple criteria', 'Summarize variant selection results']}"
hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_nfe.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_nfe.rst,"[{'name': 'Candidate Selection', 'match_type': 'partial', 'implemented_parts': ['Feature extraction', 'Ranking candidates', 'Filtering based on quality metrics'], 'confidence': 0.95, 'evidence': ['Candidate selection algorithm', 'Quality score calculation', 'Integration with variant calling pipeline']}, {'name': 'Genetic Variation Analysis', 'match_type': 'full', 'implemented_parts': ['Variant calling', 'Population frequency analysis', 'Quality control and filtering'], 'confidence': 1.0, 'evidence': ['Alignment against reference genome', 'Haplotype calling', 'Variant annotation and prioritization']}]",This file performs genetic variation analysis from sequencing data.,"{'constants': ['Reference genome', 'Quality thresholds'], 'types': ['Variants', 'Population statistics'], 'classes': ['Variant caller', 'Population analyzer'], 'functions': ['Variant calling from reads', 'Population frequency estimation', 'Quality control and filtering of variants']}"
hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_nwe.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_nwe.rst,"[{'name': 'Candidate Region Ranking', 'match_type': 'partial', 'implemented_parts': ['Feature extraction', 'MQRankSum statistic', 'SOR statistic', 'Inbreeding coefficient calculation', 'Read position rank sum statistic', 'FS statistic', 'QD statistic', 'MQ statistic', 'DP statistic', 'Prediction based on ranked features', 'Selection of candidate regions'], 'confidence': 0.95, 'evidence': ['Code references to MQRankSum statistic', 'Use of SOR statistic for haplotype inference', 'Inbreeding coefficient used for assessing genetic diversity', 'Read position rank sum statistic for assessing variant importance', 'FS statistic for filtering low-frequency variants', 'QD statistic for assessing genotype quality', 'MQ statistic for measuring mapping quality', 'DP statistic for estimating coverage depth', 'Prediction based on combination of features', 'Selection of regions with high ranking scores']}, {'name': 'Variant Quality Scoring', 'match_type': 'partial', 'implemented_parts': ['Variant annotation', 'VQSR training', 'Feature extraction for variant quality', 'Prediction of variant pathogenicity', 'Classification of variants into different categories'], 'confidence': 0.85, 'evidence': ['Use of variant annotation databases', 'Implementation of VQSR algorithm', 'Feature extraction based on sequence context', 'Machine learning model for predicting variant impact', 'Classification of variants into benign, likely pathogenic, or pathogenic']}]",This code implements methods for identifying potentially pathogenic variants from high-throughput sequencing data.,"{'constants': ['Defined thresholds for variant quality scores'], 'types': ['Structures for variant annotations and predictions'], 'classes': ['VariantQualityScoring model for assessing variant pathogenicity'], 'functions': ['Annotate variants with relevant information', 'Train a VQSR model for predicting variant quality', 'Extract features from variant sequences', 'Classify variants based on their pathogenicity potential', 'Provide comprehensive reports on variant quality scores']}"
hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_seu.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_ld_variant_indices_seu.rst,"[{'name': 'Feature Selection', 'match_type': 'partial', 'implemented_parts': ['Feature importance calculation', 'Feature selection based on importance', 'Output of selected features'], 'confidence': 0.95, 'evidence': ['Feature importance dictionary', 'Feature selection algorithm implementation', 'Output of selected features in results']}, {'name': 'Random Forest Prediction', 'match_type': 'full', 'implemented_parts': ['Training of a random forest classifier', 'Prediction of class labels', 'Output of prediction results'], 'confidence': 1.0, 'evidence': ['Random forest training code', 'Classification algorithm implementation', 'Output of prediction probabilities and labels']}]",This code implements a machine learning pipeline for predicting disease risk based on genetic features.,"{'constants': ['Disease-related thresholds', 'Feature ranges'], 'types': ['Genetic features', 'Classification labels'], 'classes': ['Feature extraction methods', 'Machine learning model'], 'functions': ['Feature transformation', 'Classification prediction', 'Evaluation metrics']}"
hail/python/hail/docs/datasets/schemas/gnomad_lof_metrics.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_lof_metrics.rst,"[{'name': 'Differential Expression Analysis', 'match_type': 'partial', 'implemented_parts': ['Gene expression data processing', 'Differential expression calculation', 'Significance analysis'], 'confidence': 0.95, 'evidence': ['Reads gene expression data from file', 'Uses Bioconductor library for differential expression', 'Outputs p-values and fold changes']}, {'name': 'Variant Annotation and Prioritization', 'match_type': 'full', 'implemented_parts': ['Variant calling from sequencing data', 'Annotation with functional databases', 'Prioritization based on pathogenicity and conservation'], 'confidence': 1.0, 'evidence': ['Uses variant calling tools like GATK or BCFtools', 'Integrates with databases like ClinVar or dbSNP', 'Considers functional impact and population frequency']}]",This file performs differential gene expression analysis and annotates genetic variants from sequencing data.,"{'constants': ['Defines thresholds for significance'], 'types': ['Gene expression data', 'Variant data'], 'classes': ['Differential expression analysis pipeline'], 'functions': ['Calculates differential expression', 'Annotates variants', 'Prioritizes disease-causing variants']}"
hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d01.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d01.rst,"[{'name': 'Table Definition', 'match_type': 'partial', 'implemented_parts': ['Class definition with name and version', 'Reference genome build', 'Column definitions'], 'confidence': 0.9, 'evidence': ['class `hail.Table`', 'versions attribute', 'column names and types']}]",This file defines a Hail Table object for the Gnomad MNV Genome dataset.,"{'constants': ['N/A'], 'types': ['`hail.Table` class'], 'classes': ['`hail.Table` class'], 'functions': ['N/A']}"
hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d02.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d02.rst,"[{'name': 'Schema Definition', 'match_type': 'full', 'implemented_parts': ['Table declaration', 'Schema definition'], 'confidence': 1.0, 'evidence': ['class Table', 'schema definition block', 'field declarations with types and descriptions']}]",This file defines the schema for the Gnomad MNV Genome dataset.,"{'constants': [], 'types': ['locus', 'str', 'int32'], 'classes': ['Table'], 'functions': []}"
hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d03.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d03.rst,"[{'name': 'Schema Definition', 'match_type': 'full', 'implemented_parts': ['Class definition with fields and key'], 'confidence': 1.0, 'evidence': ['class gnomad_mnv_genome_d03', 'field definitions', 'key definition']}]",This file defines the schema of a Hail table representing Gnomad MNV genome data.,"{'constants': [], 'types': ['Custom type for locus'], 'classes': ['gnomad_mnv_genome_d03 class'], 'functions': []}"
hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d04.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d04.rst,"[{'name': 'Schema Definition', 'match_type': 'partial', 'implemented_parts': ['Global and row fields definition', 'Key definition', 'Type annotation'], 'confidence': 0.9, 'evidence': ['Field declarations with types', 'Global and row field names', 'Key definition with multiple fields']}]",This file defines the schema of a genetic dataset.,"{'constants': [], 'types': ['GRCh37', 'int32', 'str'], 'classes': [], 'functions': []}"
hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d05.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d05.rst,"[{'name': 'Schema Definition', 'match_type': 'full', 'implemented_parts': ['Table definition', 'Schema fields', 'Key definition'], 'confidence': 1.0, 'evidence': ['class `hail.Table`', 'schema definition with fields', 'key definition based on multiple fields']}]",This file defines the schema for a Hail Table called `gnomad_mnv_genome_d05`.,"{'constants': [], 'types': ['Table'], 'classes': [], 'functions': []}"
hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d06.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d06.rst,"[{'name': 'Schema Definition', 'match_type': 'full', 'implemented_parts': ['Global and row fields definition', 'Key definition'], 'confidence': 1.0, 'evidence': ['Field declaration syntax', 'Key field definition with multiple columns']}]",This file defines the schema of a Hail table representing Gnomad MNV genome data.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d07.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d07.rst,"[{'name': 'Schema Definition', 'match_type': 'full', 'implemented_parts': ['Table definition', 'Schema specification'], 'confidence': 1.0, 'evidence': ['class `hail.Table`', 'schema definition block with fields and key']}]",This file defines a Hail table schema for the Gnomad MNV Genome dataset.,"{'constants': [], 'types': ['Custom data types for genomic features'], 'classes': ['Table class'], 'functions': []}"
hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d08.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d08.rst,"[{'name': 'Schema Definition', 'match_type': 'full', 'implemented_parts': ['Table declaration', 'Schema definition'], 'confidence': 1.0, 'evidence': ['class `hail.Table`', 'Schema definition block with fields and key']}]",This file defines the schema of a Hail dataset for Gnomad MNV genome data.,"{'constants': [], 'types': ['GRCh37'], 'classes': ['Table'], 'functions': []}"
hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d09.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d09.rst,"[{'name': 'Schema Definition', 'match_type': 'partial', 'implemented_parts': ['Class definition with name and version', 'Field declaration with type and description', 'Key definition based on multiple columns'], 'confidence': 0.95, 'evidence': ['Class gnomad_mnv_genome_d09 defined', 'Fields with types like locus, str, int32', 'Key defined using multiple columns: locus, refs, alts']}]",This file defines the schema for the Gnomad MNV Genome dataset.,"{'constants': [], 'types': [], 'classes': ['gnomad_mnv_genome_d09'], 'functions': []}"
hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d10.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_mnv_genome_d10.rst,"[{'name': 'Schema Definition', 'match_type': 'partial', 'implemented_parts': ['Row fields', 'Key'], 'confidence': 0.95, 'evidence': ['Row fields declaration with types', 'Key defined using column names']}, {'name': 'Table Metadata', 'match_type': 'partial', 'implemented_parts': ['Versions', 'Reference genome builds'], 'confidence': 0.85, 'evidence': ['Versions and reference genome builds listed as metadata']}]",This file defines the schema for the Gnomad MNV Genome dataset.,"{'constants': [], 'types': ['Locus type', 'String type'], 'classes': [], 'functions': []}"
hail/python/hail/docs/datasets/schemas/gnomad_pca_variant_loadings.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/datasets/schemas/gnomad_pca_variant_loadings.rst,"[{'name': 'Schema Definition', 'match_type': 'full', 'implemented_parts': ['Table definition', 'Field declaration', 'Key definition'], 'confidence': 1.0, 'evidence': ['class `hail.Table`', 'field declarations with types', 'key definition based on multiple fields']}]",This file defines a Hail table schema for storing Gnomad PCA variant loadings.,"{'constants': [], 'types': ['Table'], 'classes': ['Table'], 'functions': []}"
