filename,type,author,repo,version,wiki,url,patterns,purpose,summary
hail/src/test/resources/filter.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/filter.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['collection', 'iterator', 'next method'], 'confidence': 0.9, 'evidence': ['class Collection', 'iterator object', 'hasNext and next methods']}, {'name': 'FactoryMethod', 'match_type': 'full', 'implemented_parts': ['create method', 'concrete factory methods'], 'confidence': 1.0, 'evidence': ['factory method returns object of concrete type', 'different factory methods for different types']}]",This file provides utilities for iterating over collections of data.,"{'constants': ['Defines collection-related constants'], 'types': ['Generic collection type'], 'classes': ['Collection class manages iterators'], 'functions': ['iterate over collections', 'create different iterators']}"
hail/src/test/resources/filter_replace.txt,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/filter_replace.txt,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralized communication', 'Mediator role'], 'confidence': 0.7, 'evidence': ['Mediator centralizes communication between colleagues', 'Colleagues communicate through the Mediator']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture and restoration', 'Originator and Caretaker roles'], 'confidence': 0.8, 'evidence': ['Originator creates Memento to capture state', 'Caretaker stores and restores Memento']}]",This file utilizes design patterns for central communication and state management.,"{'constants': ['None identified'], 'types': ['None identified'], 'classes': ['Mediator', 'Originator', 'Caretaker'], 'functions': ['mediate', 'notify', 'save_state', 'restore_state']}"
hail/src/test/resources/first_half_example.gen,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/first_half_example.gen,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method'], 'confidence': 0.9, 'evidence': ['interface with next method', 'implementing classes provide iteration']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['class defines compareTo method', 'supports sorting']}]",This file defines interfaces and classes for iterating over collections and comparing objects.,"{'constants': ['Defines constants for comparison'], 'types': ['Custom types implementing Comparable'], 'classes': ['Iterator interface defines iteration methods'], 'functions': ['compareTo performs object comparisons']}"
hail/src/test/resources/fisherExactTest.r,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/fisherExactTest.r,"[{'name': 'Command', 'match_type': 'partial', 'implemented_parts': ['Receiver', 'Command', 'execute method'], 'confidence': 0.7, 'evidence': ['function takes arguments', 'execute method in receiver']}]",This file contains unit tests for the Hail Exact algorithm.,"{'constants': ['Defines test-related constants'], 'functions': ['Runs tests for Hail Exact algorithm']}"
hail/src/test/resources/flag_at_end.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/flag_at_end.vcf,[],This file contains metadata and technical information about variant calls from a sequencing experiment.,"{'constants': [], 'types': ['Float', 'Integer', 'String'], 'classes': [], 'functions': []}"
hail/src/test/resources/floating_point_array.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/floating_point_array.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['interface with iterator methods', 'concrete implementation with loop']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['comparison operator implementation', 'class implements Comparable']}]",This file defines interfaces and implementations for iterating over collections and comparing objects.,"{'constants': ['Defines constants for comparison'], 'types': ['Custom types for iterating'], 'classes': ['Iterator interface defines iteration contract', 'Concrete iterator classes'], 'functions': ['compareTo compares objects', 'hasNext checks if iteration is finished']}"
hail/src/test/resources/generic.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/generic.vcf,"[{'name': 'Variant Calling', 'match_type': 'partial', 'implemented_parts': ['Reads processing', 'Quality score calculation', 'Genotype calling'], 'confidence': 0.95, 'evidence': ['FORMAT fields for AD, DP, GQ, GT, GTA, GTZ, PL', 'Filtering based on quality score', 'Genotype determination based on likelihoods']}, {'name': 'Quality Control', 'match_type': 'partial', 'implemented_parts': ['Filtering by low quality', 'Approximate read depth calculation'], 'confidence': 0.85, 'evidence': ['FILTER section with LowQual criteria', 'FORMAT field for DP']}]",This file contains variant call information for a set of DNA sequences.,"{'constants': ['Defines quality score thresholds'], 'types': ['Variant representations'], 'classes': ['VCF record structure'], 'functions': ['Parsing and interpreting variant data']}"
hail/src/test/resources/global_list.txt,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/global_list.txt,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralizes communication', 'Mediates between Colleagues'], 'confidence': 0.9, 'evidence': ['Mediator class', 'Colleagues communicate through Mediator']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'State restoration'], 'confidence': 0.7, 'evidence': ['Memento pattern usage', 'save_state and restore_state methods']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Dynamically adds operations', 'Element accepts visitors'], 'confidence': 0.8, 'evidence': ['Visitor pattern implementation', 'visit and accept methods']}]",This file defines global gene lists for testing purposes.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/global_table.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/global_table.tsv,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'Caretaker'], 'confidence': 0.9, 'evidence': ['create_memento', 'save_state', 'restore_state']}]",This file provides a way to capture and restore the state of a data structure.,"{'constants': ['None'], 'types': ['State', 'Memento'], 'classes': ['Originator', 'Caretaker'], 'functions': ['save_state', 'restore_state']}"
hail/src/test/resources/gqbydp_test.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/gqbydp_test.vcf,[],The provided text contains gene sequence information.,"{'genes': ['Multiple genes listed with ID and length'], 'references': ['Homo sapiens assembly 19'], 'annotations': ['Length of each gene is specified']}"
hail/src/test/resources/haploid.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/haploid.vcf,[],VCF file format specification.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/HWE_test.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/HWE_test.vcf,"[{'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}, {'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['Subject', 'Observer', 'notify method'], 'confidence': 0.8, 'evidence': ['class Subject', 'notify observers', 'on_change handler']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Subject class manages observers', 'Observer class represents listeners'], 'functions': ['notify updates observers', 'attach adds listeners']}"
hail/src/test/resources/importAnnot.json,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/importAnnot.json,[],The provided JSON data represents variant calls from a genomic sequencing experiment.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/importFam.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/importFam.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['interface with iterable methods', 'concrete iterator class']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['comparison method for sorting']}]",This file defines interfaces and implementations for iterating over collections of data.,"{'constants': ['Defines constants for comparison'], 'types': ['Custom types for iterating'], 'classes': ['Iterator interface defines iteration contract', 'Concrete iterator class implements interface'], 'functions': ['compare values for sorting']}"
hail/src/test/resources/importFamCaseControl.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/importFamCaseControl.fam,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Central communication', 'Mediator instance'], 'confidence': 0.7, 'evidence': ['class Mediator', 'create_message method', 'common_terms: mediator']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'Memento storage'], 'confidence': 0.8, 'evidence': ['class Memento', 'save_state method', 'common_terms: memento']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor pattern implementation', 'Visitor-Element interaction'], 'confidence': 0.9, 'evidence': ['class Visitor', 'visit method', 'common_terms: visitor']}]","This file utilizes patterns for central communication, state management, and visitor pattern.","{'constants': ['None identified'], 'types': ['Custom types for communication and state'], 'classes': ['Mediator', 'Memento'], 'functions': ['create_message', 'save_state', 'visit']}"
hail/src/test/resources/importFamCaseControlNumericException.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/importFamCaseControlNumericException.fam,"[{'name': 'Command', 'match_type': 'partial', 'implemented_parts': ['Receiver receives commands', 'Command interface defines execute method'], 'confidence': 0.7, 'evidence': ['method names: execute, receive']}, {'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterating over elements', 'Iterator interface defines next and has methods'], 'confidence': 0.8, 'evidence': ['method names: next, has']}]",This file defines a family case control exception that is numeric.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/importFamQPheno.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/importFamQPheno.fam,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Mediator', 'Target'], 'confidence': 0.9, 'evidence': ['create_memento method', 'store and restore state', 'central communication terminology']}, {'name': 'Memento', 'match_type': 'full', 'implemented_parts': ['Originator creates Memento', 'Caretaker stores and restores Memento'], 'confidence': 1.0, 'evidence': ['save_state', 'restore_state', 'memento terminology']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations', 'Element accepts Visitors'], 'confidence': 0.8, 'evidence': ['visit method', 'accept method', 'operation terminology']}]",This file implements a mediator pattern for coordinating communication between multiple objects.,"{'constants': ['Defines constants for mediator'], 'types': ['Classes for originator, mediator, and target'], 'classes': ['Mediator manages communication between originator and target'], 'functions': ['create_memento', 'save_state', 'restore_state']}"
hail/src/test/resources/importFamQPheno.space.m9.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/importFamQPheno.space.m9.fam,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Central communication', 'Mediator role'], 'confidence': 0.7, 'evidence': [""use of 'common_terms' related to mediator pattern""]}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'Memento pattern elements'], 'confidence': 0.8, 'evidence': [""use of 'memento' and 'state' terminology""]}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor pattern roles', 'Dynamic dispatch'], 'confidence': 0.9, 'evidence': [""presence of 'visit' method and 'accept' relationship""]}]",This file defines a family tree data structure and associated operations.,"{'constants': ['Defines family-related constants'], 'types': ['Node represents individuals'], 'classes': ['Node class defines family relationships'], 'functions': ['Import and traversal of family tree']}"
hail/src/test/resources/import_matrix_table_devlish.ninesv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/import_matrix_table_devlish.ninesv,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Caretaker', 'Memento'], 'confidence': 0.9, 'evidence': ['create_memento', 'save_state', 'restore_state']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'accept method'], 'confidence': 0.8, 'evidence': ['visit method', 'accept visitors', 'operation class']}]",This file implements a state management system using Memento pattern.,"{'constants': ['None'], 'types': ['Memento'], 'classes': ['Originator', 'Caretaker'], 'functions': ['create_memento', 'save_state', 'restore_state']}"
hail/src/test/resources/infochar.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/infochar.vcf,[],This file contains sequence information for multiple genomic contigs.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
