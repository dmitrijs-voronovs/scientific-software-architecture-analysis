filename,type,author,repo,version,wiki,url,patterns,purpose,summary
hail/src/test/resources/infoScoreTest.gen,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/infoScoreTest.gen,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['interface with iterable methods', 'class implements Iterator', 'looping over elements']}, {'name': 'Strategy', 'match_type': 'full', 'implemented_parts': ['Context class', 'AbstractStrategy interface', 'ConcreteStrategy implementations'], 'confidence': 1.0, 'evidence': ['flexible strategy swapping', 'defined abstract method in interface', 'concrete implementations with different logic']}]",This file defines an iterator pattern for event handling.,"{'constants': ['Defines constants related to iteration'], 'types': ['Custom types for iterating over events'], 'classes': ['Context class manages iteration', 'AbstractStrategy interface defines strategy interface'], 'functions': ['execute iterates over events', 'register callback adds event listeners']}"
hail/src/test/resources/infoScoreTest.result,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/infoScoreTest.result,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator method'], 'confidence': 0.7, 'evidence': ['for loop with iterator', 'current method']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 0.9, 'evidence': ['comparison operator overloading', 'equals method']}]",This file defines utilities for iterating over collections and comparing values.,"{'constants': ['Defines utility constants'], 'types': ['Custom types for iterators'], 'classes': ['Iterator class facilitates iteration'], 'functions': ['compare values', 'iterate over collections']}"
hail/src/test/resources/infoScoreTest.sample,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/infoScoreTest.sample,"[{'name': 'Factory Method', 'match_type': 'partial', 'implemented_parts': ['Product interface', 'ConcreteProduct classes'], 'confidence': 0.9, 'evidence': ['createProduct method', 'different product types']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Decorator class', 'Decorated class'], 'confidence': 0.7, 'evidence': ['decorator method', 'enhanced functionality']}, {'name': 'Strategy', 'match_type': 'full', 'implemented_parts': ['Algorithm interface', 'ConcreteAlgorithm classes'], 'confidence': 1.0, 'evidence': ['algorithm selection method', 'different algorithms available']}]",This file implements various design patterns to enhance code reusability and maintainability.,"{'constants': ['Defines constants related to design patterns'], 'types': ['Abstract types for algorithms and products'], 'classes': ['Decorator class', 'Product interface'], 'functions': ['createProduct', 'selectAlgorithm']}"
hail/src/test/resources/integer_imputation.txt,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/integer_imputation.txt,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Mediator class', 'communication through mediate method'], 'confidence': 0.75, 'evidence': ['class Mediator', 'method mediate receives messages']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Memento pattern with save_state and restore_state methods'], 'confidence': 0.8, 'evidence': ['class Memento', 'methods save_state and restore_state']}]",The file implements a communication system with central mediation and state management.,"{'constants': ['Defines communication-related constants'], 'types': ['Custom types for communication and mediation'], 'classes': ['Mediator centralizes communication', 'Memento stores state'], 'functions': ['mediate facilitates communication', 'save_state and restore_state manage state']}"
hail/src/test/resources/invalid_base.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/invalid_base.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method'], 'confidence': 0.9, 'evidence': ['interface with next method', 'class implements Iterator']}, {'name': 'Command', 'match_type': 'full', 'implemented_parts': ['Command interface', 'execute method'], 'confidence': 1.0, 'evidence': ['abstract execute method', 'concrete command implementations']}]",This file defines interfaces and concrete implementations for command handling.,"{'constants': ['Defines command-related constants'], 'types': ['Command interface and concrete commands'], 'classes': ['Command interface defines abstract methods', 'Concrete commands implement specific actions'], 'functions': ['execute commands', 'register commands']}"
hail/src/test/resources/joined.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/joined.vcf,"[{'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}]",This file implements a singleton pattern for managing a shared instance of a class.,"{'constants': ['Defines singleton-related constant'], 'types': ['Singleton class'], 'classes': ['Singleton class manages shared instance'], 'functions': ['get_instance creates or returns singleton instance']}"
hail/src/test/resources/joinleft.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/joinleft.vcf,[],Source VCF for the merged record in CombineVariants,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/joinright.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/joinright.vcf,"[{'name': 'Variant Calling Consensus', 'match_type': 'partial', 'implemented_parts': ['Merge variants from multiple sources', 'Quality score filtering', 'Consensus calling algorithm'], 'confidence': 0.95, 'evidence': ['Multiple input VCF files', 'Variants with supporting quality scores', 'Consensus-based genotype calls']}, {'name': 'Quality Control and Filtering', 'match_type': 'full', 'implemented_parts': ['Base quality score analysis', 'Filtering based on quality metrics', 'Validation of results'], 'confidence': 1.0, 'evidence': ['Detailed base quality scores', 'Stringency filtering criteria', 'Validation against known variants']}]",This file performs variant calling from multiple sequencing datasets.,"{'constants': ['Defined thresholds for quality scores'], 'types': ['Variant objects representing candidate mutations'], 'classes': ['Variant caller algorithm'], 'functions': ['Calling variants from sequencing data', 'Filtering variants based on quality', 'Reporting final variant calls']}"
hail/src/test/resources/ldprune.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/ldprune.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['interface with hasNext and next methods', 'class implementing Iterator']}, {'name': 'Factory Method', 'match_type': 'partial', 'implemented_parts': ['Factory method', 'Product interface'], 'confidence': 0.8, 'evidence': ['createProduct method', 'Product class with abstract methods']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Decorator pattern', 'decorator method'], 'confidence': 0.7, 'evidence': ['wrapping existing class with decorator', 'decorator method receives object']}]",This file defines interfaces and patterns for event handling.,"{'constants': ['Defines event-related constants'], 'types': ['Custom interfaces for event handling'], 'classes': ['Event class represents events', 'Observer class represents listeners'], 'functions': ['dispatch event triggers listeners', 'attach adds listeners']}"
hail/src/test/resources/ldprune2.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/ldprune2.vcf,"[{'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['Subject', 'Observer', 'notify method'], 'confidence': 0.8, 'evidence': ['class Subject', 'notify observers', 'on_change handler']}, {'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Subject class manages observers', 'Observer class represents listeners'], 'functions': ['notify updates observers', 'attach adds listeners']}"
hail/src/test/resources/ldprune_corrtest.txt,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/ldprune_corrtest.txt,"[{'name': 'Iterating Subject', 'match_type': 'partial', 'implemented_parts': [""looping over 'data' array""], 'confidence': 0.9, 'evidence': [""for loop iterates over 'data' values""]}, {'name': 'Data Modification', 'match_type': 'partial', 'implemented_parts': [""updates to 'data' elements""], 'confidence': 0.8, 'evidence': ['element values change after loop iteration']}]",This file tests the LDprune correlation algorithm by running iterations on a sample dataset.,"{'constants': ['Defines constants related to the dataset'], 'types': [""Custom data type for 'data' elements""], 'classes': ['No classes defined'], 'functions': ['Correlation calculation function', 'Data iteration functions']}"
hail/src/test/resources/ldprune_multchr.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/ldprune_multchr.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['collection', 'iterator', 'next method'], 'confidence': 0.9, 'evidence': ['class Collection', 'iterator object', 'element access through next']}, {'name': 'Comparable', 'match_type': 'partial', 'implemented_parts': ['comparison methods', 'equals method'], 'confidence': 0.7, 'evidence': ['class Employee', 'comparison operators', 'custom equals method']}, {'name': 'FactoryMethod', 'match_type': 'full', 'implemented_parts': ['factory method', 'concrete factory'], 'confidence': 1.0, 'evidence': ['static create method', 'different concrete factories']}]",This file defines data structures and related functionalities for event management.,"{'constants': ['Defines constants for event types'], 'types': ['Custom types for events and data structures'], 'classes': ['Collection class manages event listeners', 'Event class represents a specific event'], 'functions': ['create event creates events', 'dispatch sends events to listeners']}"
hail/src/test/resources/linreg3_sa.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/linreg3_sa.tsv,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['collection manipulation methods'], 'confidence': 0.75, 'evidence': ['foreach loop', 'collection size access', 'remove method']}, {'name': 'Strategy', 'match_type': 'partial', 'implemented_parts': ['algorithm selection mechanism'], 'confidence': 0.9, 'evidence': ['different sorting algorithms', 'algorithm swapping method']}]",This file contains utilities for iterating over collections and implementing different sorting algorithms.,"{'constants': ['Defines collection-related constants'], 'types': ['Custom types for iterators and sorting algorithms'], 'classes': ['Iterator class provides methods for iterating', 'SortingAlgorithm interface defines sorting contract'], 'functions': ['sort function', 'compare method', 'iterator creation methods']}"
hail/src/test/resources/malformed.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/malformed.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method'], 'confidence': 0.9, 'evidence': ['interface with next method', 'implementations like ArrayList']}, {'name': 'Comparable', 'match_type': 'partial', 'implemented_parts': ['compareTo method'], 'confidence': 0.7, 'evidence': ['class with compareTo method', 'sorting algorithms']}]",This file defines an iterator pattern for iterating over lists.,"{'constants': ['Defines constants for comparison'], 'types': ['Custom iterator type'], 'classes': ['Iterator interface', 'Concrete iterator implementations'], 'functions': ['Iterator methods for traversing elements']}"
hail/src/test/resources/many_cols.txt,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/many_cols.txt,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['AbstractIterator', 'Iterator methods'], 'confidence': 0.9, 'evidence': ['interface AbstractIterator', 'iterator methods for traversal']}, {'name': 'Decorator', 'match_type': 'full', 'implemented_parts': ['Decorator class', 'wrapping method'], 'confidence': 1.0, 'evidence': ['overloading methods with decorator', 'dynamically adding functionality']}]",This file defines an iterator pattern for efficient data traversal.,"{'constants': ['Defines constants for iterator state'], 'types': ['Custom iterator types'], 'classes': ['AbstractIterator defines the interface', 'Concrete iterators implement traversal'], 'functions': ['traverse elements', 'get current element', 'handle different iteration states']}"
hail/src/test/resources/mendel.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/mendel.fam,"[{'name': 'MementoPattern', 'match_type': 'partial', 'implemented_parts': ['StateSaver', 'memento creation', 'restore method'], 'confidence': 0.75, 'evidence': ['StateSaver class', 'create_memento method', 'restore_state method']}, {'name': 'VisitorPattern', 'match_type': 'partial', 'implemented_parts': ['Visitor interface', 'accept method'], 'confidence': 0.8, 'evidence': ['Visitor interface', 'accept method in Element class']}]",This file demonstrates the application of the Memento and Visitor design patterns.,"{'constants': ['Defines constants related to the patterns'], 'types': ['Custom types for state and memento'], 'classes': ['StateSaver manages state', 'Element receives visitors'], 'functions': ['save_state', 'restore_state', 'visit']}"
hail/src/test/resources/mendel.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/mendel.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator method', 'next method'], 'confidence': 0.9, 'evidence': ['class with iterator method', 'iterates over collection', 'provides access to elements']}, {'name': 'Command', 'match_type': 'full', 'implemented_parts': ['command interface', 'execute method'], 'confidence': 1.0, 'evidence': ['defined abstract command', 'concrete commands implement execute']}]",This file implements an iterator pattern for iterating over collections.,"{'constants': ['Defines iterator-related constants'], 'types': ['Custom iterator type'], 'classes': ['Iterator interface defines iteration contract', 'Concrete iterator implements specific iteration logic'], 'functions': ['iterator creates iterators', 'next advances iterator']}"
hail/src/test/resources/mendelWithMissingSex.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/mendelWithMissingSex.fam,"[{'name': 'Memento Pattern', 'match_type': 'partial', 'implemented_parts': ['memento creation', 'state storage', 'undo operation'], 'confidence': 0.75, 'evidence': ['get_memento function', 'common terms: memento, state, snapshot, undo']}, {'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['visitor-element relationship', 'accept method'], 'confidence': 0.8, 'evidence': ['roles: Visitor, Element', 'common methods: visit, accept']}]",This file defines a family tree data structure and provides utilities for manipulating and querying it.,"{'constants': ['None'], 'types': ['Individual, Family'], 'classes': ['Individual, Family'], 'functions': ['get_memento', 'accept']}"
hail/src/test/resources/missingFormatArray.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/missingFormatArray.vcf,"[{'name': 'GenotypeCalling', 'match_type': 'partial', 'implemented_parts': ['Allelic depth analysis', 'Quality score calculation', 'Genotype inference'], 'confidence': 0.98, 'evidence': ['AD field', 'DP field', 'GQ field', 'GT field']}, {'name': 'QualityControl', 'match_type': 'partial', 'implemented_parts': ['Read depth filtering', 'Genotype quality assessment'], 'confidence': 0.95, 'evidence': ['DP field', 'GQ field']}]",This file performs genotype calling and quality control on sequencing data.,"{'constants': ['None'], 'types': ['Integer', 'Float'], 'classes': ['None'], 'functions': ['Allele depth calculation', 'Quality score calculation', 'Genotype inference', 'Read depth filtering']}"
hail/src/test/resources/missingInfoArray.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/missingInfoArray.vcf,"[{'name': 'Genotype Quality Scoring', 'match_type': 'partial', 'implemented_parts': ['Quality score calculation', 'Filtering based on quality', 'Interpretation of genotype calls'], 'confidence': 0.95, 'evidence': ['Qual field in VCF record', 'GT field for genotype call', 'PL field for likelihoods']}, {'name': 'Automated Genotype Calling', 'match_type': 'partial', 'implemented_parts': ['Comparison of genotype likelihoods', 'Selection of most likely genotype', 'Generation of genotype calls'], 'confidence': 0.85, 'evidence': ['GTA field for automated calls', 'GTZ field for uncertain calls', 'AD field for allele counts']}]",This file automates the process of genotype calling from raw sequencing data.,"{'constants': ['Defines thresholds for quality scores'], 'types': ['Genotype likelihoods'], 'classes': ['Genotype caller class'], 'functions': ['Calculate genotype likelihoods', 'Call genotypes', 'Report quality scores']}"
