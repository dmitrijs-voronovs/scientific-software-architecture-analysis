filename,type,author,repo,version,wiki,url,patterns,purpose,summary
batch/jvm-entryway/gradlew,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/jvm-entryway/gradlew,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['has_next method', 'next method'], 'confidence': 0.9, 'evidence': ['class with iterable methods', 'loops using iterator']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['class with comparison logic', 'sorting algorithms']}]",This file defines utility methods for iterating over collections of data.,"{'constants': ['Defines constants for iteration'], 'types': ['Iterables representing collections'], 'classes': ['Iterator class provides methods for iteration'], 'functions': ['compare elements', 'iterate over collections']}"
batch/jvm-entryway/gradlew.bat,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/jvm-entryway/gradlew.bat,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['class Collection', 'iterates over elements']}, {'name': 'Comparable', 'match_type': 'partial', 'implemented_parts': ['compareTo method'], 'confidence': 0.8, 'evidence': ['class String', 'compares string values']}]",This file defines utilities for iterating and comparing elements in collections.,"{'constants': ['Defines constants for comparison'], 'types': ['Custom types for iterable elements'], 'classes': ['Collection class manages iterables'], 'functions': ['iterates over elements', 'compares elements']}"
batch/jvm-entryway,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/jvm-entryway,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['has_next method', 'next method'], 'confidence': 0.9, 'evidence': ['class with iterable methods', 'loops using iterator']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['class with comparison logic', 'sorting algorithms']}, {'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['class Collection', 'iterates over elements']}, {'name': 'Comparable', 'match_type': 'partial', 'implemented_parts': ['compareTo method'], 'confidence': 0.8, 'evidence': ['class String', 'compares string values']}]",This file defines utility methods for iterating over collections of data.,"{'constants': ['Defines constants for iteration'], 'types': ['Iterables representing collections'], 'classes': ['Iterator class provides methods for iteration'], 'functions': ['compare elements', 'iterate over collections']}"
batch/load-test/test-max-scheduling-rate.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/load-test/test-max-scheduling-rate.py,"[{'name': 'CLI Argument Parser', 'match_type': 'partial', 'implemented_parts': ['Command line argument parsing', 'argparse module'], 'confidence': 0.9, 'evidence': ['import argparse', 'parser = argparse.ArgumentParser()']}, {'name': 'Batch Job Scheduler', 'match_type': 'partial', 'implemented_parts': ['Hailtop Batch service interaction', 'service backend', 'batch object'], 'confidence': 0.8, 'evidence': ['import hailtop.batch as hb', 'hb.ServiceBackend()', 'hb.Batch()']}]",This file loads tests the Hailtop Batch service by scheduling jobs with a specified maximum scheduling rate.,"{'constants': ['Maximum scheduling rate', 'Number of machines', 'Duration'], 'types': ['int'], 'classes': ['Batch object'], 'functions': ['new_job creates jobs', 'run starts the batch']}"
batch/load-test,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/load-test,"[{'name': 'CLI Argument Parser', 'match_type': 'partial', 'implemented_parts': ['Command line argument parsing', 'argparse module'], 'confidence': 0.9, 'evidence': ['import argparse', 'parser = argparse.ArgumentParser()']}, {'name': 'Batch Job Scheduler', 'match_type': 'partial', 'implemented_parts': ['Hailtop Batch service interaction', 'service backend', 'batch object'], 'confidence': 0.8, 'evidence': ['import hailtop.batch as hb', 'hb.ServiceBackend()', 'hb.Batch()']}]",This file loads tests the Hailtop Batch service by scheduling jobs with a specified maximum scheduling rate.,"{'constants': ['Maximum scheduling rate', 'Number of machines', 'Duration'], 'types': ['int'], 'classes': ['Batch object'], 'functions': ['new_job creates jobs', 'run starts the batch']}"
batch/sql/add-agg-billing-by-date.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-agg-billing-by-date.sql,"[{'name': 'Resource Tracking', 'match_type': 'partial', 'implemented_parts': ['Resource tracking functions', 'Aggregate billing resources'], 'confidence': 0.95, 'evidence': ['Resource aggregation in billing systems', 'Tracking usage by users and projects']}, {'name': 'Job Resource Management', 'match_type': 'full', 'implemented_parts': ['Job resource allocation', 'Usage tracking per job'], 'confidence': 1.0, 'evidence': ['Resource allocation in job scheduling', 'Detailed job resource reports']}]",This file manages resource utilization and billing for jobs and batches.,"{'constants': ['Defines resource-related constants'], 'types': ['Data structures for tracking resource usage'], 'classes': ['Resource tracking class aggregates resource usage'], 'functions': ['Track resource usage', 'Allocate resources to jobs', 'Generate billing reports']}"
batch/sql/add-aggregated-batch-resources-tokens.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-aggregated-batch-resources-tokens.sql,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Collection interface', 'iterator method'], 'confidence': 0.9, 'evidence': ['interface with iteratable method', 'iterator class with next and done methods']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['Comparable interface', 'compareTo method'], 'confidence': 1.0, 'evidence': ['interface defines compareTo method', 'class implements interface']}]",This file defines an iterator pattern for efficiently iterating over collections of data.,"{'constants': ['Defines constants for comparison'], 'types': ['Iteratable interface for iterating', 'Comparable interface for comparing'], 'classes': ['Iterator class for iterating over collections'], 'functions': ['compare method for comparing objects']}"
batch/sql/add-aggregated-billing-project-resources.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-aggregated-billing-project-resources.sql,[],Calculates job resource usage and aggregates billing data.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-att-resources-format-version-lt-3.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-att-resources-format-version-lt-3.sql,"[{'name': 'Iterator pattern', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'AbstractIterator class', 'ConcreteIterator implementations'], 'confidence': 0.95, 'evidence': ['Iterator methods for traversing collection', 'AbstractIterator generic methods', 'Concrete iterators for specific collections']}, {'name': 'Command pattern', 'match_type': 'full', 'implemented_parts': ['Command interface', 'ConcreteCommand implementations', 'Invoker class to execute commands'], 'confidence': 1.0, 'evidence': ['Command encapsulation', 'Receiver dependency injection', 'Invoker dispatch method']}]",This file defines a command pattern for executing actions.,"{'constants': ['Defines constants for command types'], 'types': ['Command interface defines abstract method'], 'classes': ['ConcreteCommand implementations handle specific actions', 'Invoker class orchestrates command execution'], 'functions': ['execute method triggers command action']}"
batch/sql/add-batch-create-token.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-batch-create-token.sql,[],Adds a new column and index to the batches table.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-batch-state-index.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-batch-state-index.sql,[],Creates an index on the `state` column of the `batches` table.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-batch-updates.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-batch-updates.sql,"[{'name': 'Job Tracking', 'match_type': 'partial', 'implemented_parts': ['cancellable running jobs', 'tracking metrics', 'concurrency management'], 'confidence': 0.9, 'evidence': ['user_inst_coll_resources table', 'batch_inst_coll_cancellable_resources table', 'concurrency control logic']}, {'name': 'Resource Management', 'match_type': 'full', 'implemented_parts': ['Resource allocation', 'tracking utilization', 'dynamic provisioning'], 'confidence': 1.0, 'evidence': ['user_inst_coll_resources table schema', 'resource allocation functions', 'dynamic provisioning logic']}]",This file manages job execution and resource utilization for a batch processing system.,"{'constants': ['Defines constants related to job tracking'], 'types': ['Data structures for job and resource state'], 'classes': ['Resource manager handles allocation and tracking'], 'functions': ['Job submission and tracking', 'Resource allocation and utilization', 'Concurrency control and cancellation']}"
batch/sql/add-batches-time-closed.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-batches-time-closed.sql,"[{'name': 'Transaction Logic', 'match_type': 'partial', 'implemented_parts': ['SELECT statement', 'UPDATE statement', 'IF-ELSE condition', 'ROLLBACK', 'COMMIT'], 'confidence': 0.95, 'evidence': ['Transaction-related keywords', 'Data manipulation using SELECT and UPDATE', 'Rollback in case of error', 'Commit after successful transaction']}, {'name': 'Resource Allocation', 'match_type': 'partial', 'implemented_parts': ['User resource tracking', 'Ready core allocation', 'User-resource assignment', 'Resource update tracking'], 'confidence': 0.85, 'evidence': ['Tracking user resources in a database', 'Assigning ready cores to users', 'Updating resource count during allocation', 'Maintaining resource allocation history']}]",This code manages job execution and resource allocation for a batch processing system.,"{'constants': ['Defines constants for batch processing'], 'types': ['Data structures for job tracking'], 'classes': ['Batch processing core classes'], 'functions': ['Job execution tracking', 'Resource allocation and tracking', 'Batch state management', 'Notifications and updates']}"
batch/sql/add-batches-time-created-index.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-batches-time-created-index.sql,[],Creates an index on the `time_created` column of the `batches` table.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-billing-index-token.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-billing-index-token.sql,[],Creates two indexes for the `aggregated_billing_project_user_resources_v3` and `aggregated_billing_project_user_resources_by_date_v3` tables.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-commit-updates.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-commit-updates.sql,"[{'name': 'Iterator pattern', 'match_type': 'partial', 'implemented_parts': ['AbstractIterator interface', 'ConcreteIterator implementations'], 'confidence': 0.95, 'evidence': ['iterative method', 'current element tracking', 'iterator creation logic']}, {'name': 'Decorator pattern', 'match_type': 'partial', 'implemented_parts': ['Decorator interface', 'ConcreteDecorator implementations'], 'confidence': 0.85, 'evidence': ['method delegation', 'decorator chaining', 'additional functionality']}]",This file defines an iterator pattern for iterating over collections of data.,"{'constants': ['Defines constants for iterator states'], 'types': ['AbstractIterator', 'ConcreteIterator'], 'classes': ['AbstractIterator defines the interface', 'ConcreteIterator implementations provide specific iteration strategies'], 'functions': ['iterate over collection', 'get current element', 'check iterator state']}"
batch/sql/add-creating-job-state.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-creating-job-state.sql,"[{'name': 'Job Completion Tracking', 'match_type': 'partial', 'implemented_parts': ['Batch tracking table', 'Job state transitions', 'Parent-child job relationships'], 'confidence': 0.95, 'evidence': ['`batches` table with `n_completed` field', '`jobs` table with `state` field', '`job_parents` table for tracking hierarchical relationships']}, {'name': 'Adaptive Job Prioritization', 'match_type': 'partial', 'implemented_parts': ['Pending job tracking', 'Dynamic prioritization logic', 'Core utilization monitoring'], 'confidence': 0.85, 'evidence': ['`jobs` table with `n_pending_parents` field', 'Logic to adjust job execution order based on core utilization', 'Metrics tracking delta cores consumed']}]",This file manages job tracking and prioritization in a batch processing system.,"{'constants': ['Defines constants related to job states'], 'types': ['Data structures for job and batch information'], 'classes': ['Job class represents a batch job'], 'functions': ['Tracks job completion status', 'Prioritizes jobs dynamically based on core utilization', 'Monitors job execution metrics']}"
batch/sql/add-deduped-resource-ids-to-attempt-resources.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-deduped-resource-ids-to-attempt-resources.sql,[],Adds a new column to the attempt_resources table.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-deduped-resource-ids-to-resources.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-deduped-resource-ids-to-resources.sql,[],This file adds a new column to the resources table and creates an index.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-enable-standing-worker.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-enable-standing-worker.py,"[{'name': 'Transaction', 'match_type': 'partial', 'implemented_parts': ['Database connection', 'Transaction method', 'SQL statement execution'], 'confidence': 0.9, 'evidence': ['Database class', 'async_init method', 'execute_update method with transaction decorator']}]",This file adds a new `enable_standing_worker` flag to the `globals` table.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
