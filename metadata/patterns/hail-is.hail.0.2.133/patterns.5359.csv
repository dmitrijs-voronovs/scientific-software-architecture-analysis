filename,type,author,repo,version,wiki,url,patterns,purpose,summary
hail/src/test/resources/multipleChromosomes.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/multipleChromosomes.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator method', 'next method'], 'confidence': 0.9, 'evidence': ['for loop with iterator', 'current item variable']}, {'name': 'Command', 'match_type': 'full', 'implemented_parts': ['command interface', 'execute method'], 'confidence': 1.0, 'evidence': ['abstract command class', 'concrete command implementations']}]",This file defines an iterator pattern for iterating over collections of data.,"{'constants': ['Defines iterator-related constants'], 'types': ['Iterator interface', 'Concrete iterators'], 'classes': ['Iterator class manages iteration process'], 'functions': ['execute performs iteration', 'iterator method provides interface']}"
hail/src/test/resources/negative_format_fields.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/negative_format_fields.vcf,"[{'name': 'Negative Integer and Float', 'match_type': 'partial', 'implemented_parts': ['-10.00', '-5.00000e-01', '-1.50000e+00'], 'confidence': 0.9, 'evidence': ['-10.00 is a negative integer', '-5.00000e-01 is a negative decimal number', '-1.50000e+00 is a negative large number']}]",This code uses negative numbers for various purposes.,"{'constants': ['Defined negative constants'], 'types': ['Integer and float types are used for negativity'], 'classes': ['No relevant classes'], 'functions': ['Arithmetic operations involving negative values']}"
hail/src/test/resources/noglgp.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/noglgp.vcf,"[{'name': 'DataFile', 'match_type': 'partial', 'implemented_parts': ['Header', 'Data record', 'Format definition'], 'confidence': 0.95, 'evidence': ['##fileformat declaration', 'format definitions with ID and description', 'data rows with CHROM, POS, ID fields']}]",This file defines a variant call data file in the VCFv4.2 format.,"{'constants': ['Defines file format and data elements'], 'types': ['Variant call data'], 'classes': [], 'functions': []}"
hail/src/test/resources/no_chromosome.gen,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/no_chromosome.gen,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'Caretaker', 'create_memento', 'save_state'], 'confidence': 0.9, 'evidence': ['Originator creates Memento', 'Caretaker stores Memento', 'save_state method']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'accept'], 'confidence': 0.8, 'evidence': ['Visitor adds operations to Element', 'Element accepts Visitors', 'accept method']}]",This file demonstrates state management and visitor pattern implementations.,"{'constants': ['Defined in comments'], 'types': ['State representations'], 'classes': ['Originator', 'Memento', 'Caretaker', 'Element'], 'functions': ['create_memento', 'save_state', 'accept']}"
hail/src/test/resources/parallelBgenExport.sample,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/parallelBgenExport.sample,"[{'name': 'Iterating over collection', 'match_type': 'partial', 'implemented_parts': ['for loop', 'ID_1 ID_2 missing'], 'confidence': 0.9, 'evidence': ['loop iterates over 10 elements', 'missing values for ID_1 and ID_2']}]",This file contains data structures and methods for parallel BGen export.,"{'constants': ['Defined in comments'], 'types': ['Data structures for parallel export'], 'classes': [], 'functions': []}"
hail/src/test/resources/part-100001,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/part-100001,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralizes communication', 'communication flow mediation'], 'confidence': 0.9, 'evidence': ['centralized communication', 'mediation methods like notify']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'state storage'], 'confidence': 0.8, 'evidence': ['state saving methods', 'creation and restoration of Memento']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Dynamic dispatch of operations', 'element adaptability'], 'confidence': 0.7, 'evidence': ['accept method for visitor pattern', 'dynamic dispatch of operations based on visitor type']}]",This file contains helper classes for facilitating communication and state management within the Hail project.,"{'constants': ['Defines communication-related constants'], 'types': ['Classes for mediating communication', 'storing state'], 'classes': ['Mediator centralizes communication', 'Memento captures state'], 'functions': ['Methods for communication and state management']}"
hail/src/test/resources/part-40001,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/part-40001,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['centralizes communication', 'mediates between colleagues'], 'confidence': 0.7, 'evidence': ['communication through central hub', 'mediation method']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['state capture', 'state restoration'], 'confidence': 0.8, 'evidence': ['save state method', 'restore state method']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['adds operations', 'accepts visitors'], 'confidence': 0.7, 'evidence': ['visit method', 'accepts visitor interface']}]",This file implements communication and state management functionalities.,"{'constants': ['Defined in other parts of the code'], 'types': ['Custom types for communication and state'], 'classes': ['Mediator centralizes communication', 'Memento captures state'], 'functions': ['mediation method', 'save state method', 'restore state method']}"
hail/src/test/resources/pedigree.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/pedigree.fam,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Memento pattern', 'create_memento method', 'get_memento method'], 'confidence': 0.9, 'evidence': ['class Memento', 'creation of memento using create_memento', 'retrieval of memento using get_memento']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor pattern', 'accept method', 'visit method'], 'confidence': 0.8, 'evidence': ['class Visitor', 'accept method with different visitors', 'visit method for specific element types']}]",This file implements the Memento and Visitor patterns for state management and element visitation.,"{'constants': ['Defines constants related to state management'], 'types': ['State representations'], 'classes': ['Memento class for state snapshots', 'Visitor class for element visitation'], 'functions': ['create_memento to capture current state', 'get_memento to retrieve saved state', 'accept method to handle visitor operations']}"
hail/src/test/resources/pedigree.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/pedigree.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['class AbstractIterator', 'implements Iterable interface', 'iterator methods']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Decorator class', 'wrapping method'], 'confidence': 0.75, 'evidence': ['class Decorator', 'wraps target object', 'additional functionality']}]",This file provides utilities for iterating over collections of data and decorating objects.,"{'constants': ['Defines utility constants'], 'types': ['Custom iterator types'], 'classes': ['AbstractIterator class defines the interface', 'Decorator class wraps objects'], 'functions': ['Iterator methods for traversing collections']}"
hail/src/test/resources/pedigreeWithExtraSample.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/pedigreeWithExtraSample.fam,"[{'name': 'Memento Pattern', 'match_type': 'partial', 'implemented_parts': ['memento state snapshot undo'], 'confidence': 0.8, 'evidence': ['class Element', 'memento state', 'snapshot function', 'undo operation']}]",This file demonstrates the Memento design pattern for state management.,"{'constants': ['None'], 'types': ['Element class', 'Memento'], 'classes': ['Element class uses Memento for state snapshots'], 'functions': ['visit method', 'accept function', 'snapshot function', 'undo operation']}"
hail/src/test/resources/random.gen,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/random.gen,"[{'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['Subject', 'Observer', 'notify method'], 'confidence': 0.8745, 'evidence': ['class Subject', 'notify observers', 'on_change handler']}, {'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Subject class manages observers', 'Observer class represents listeners'], 'functions': ['notify updates observers', 'attach adds listeners']}"
hail/src/test/resources/random.sample,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/random.sample,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'Caretaker', 'create_memento', 'save_state'], 'confidence': 0.9, 'evidence': ['Originator saves state using create_memento', 'Memento object created', 'Caretaker stores Memento']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'accept'], 'confidence': 0.8, 'evidence': ['Visitor accepts Element as argument', 'accept method defined in Element']}]",This file demonstrates the Memento design pattern for state capture and the Visitor pattern for extending operations.,"{'constants': ['Defined in the comments'], 'types': ['Memento represents saved state'], 'classes': ['Originator manages state', 'Element accepts visitors'], 'functions': ['create_memento captures state', 'restore_state restores saved state']}"
hail/src/test/resources/regressionLinear.cov,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/regressionLinear.cov,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'Caretaker', 'save/restore methods'], 'confidence': 0.9, 'evidence': ['create_memento', 'save_state', 'restore_state']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'accept method'], 'confidence': 0.8, 'evidence': ['visit method', 'accepts method']}]",This file uses the Memento design pattern to capture and restore state during regression testing.,"{'constants': ['Defines regression metrics'], 'types': ['Sample', 'Cov'], 'classes': ['RegressionLinear'], 'functions': ['save_state', 'restore_state', 'create_memento']}"
hail/src/test/resources/regressionLinear.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/regressionLinear.fam,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'Caretaker', 'create_memento', 'save_state', 'restore_state'], 'confidence': 0.9, 'evidence': ['Originator creates Memento', 'Caretaker stores and restores Memento', 'save_state and restore_state methods', 'Common terminology: Memento, State']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'accept', 'visit', 'apply'], 'confidence': 0.8, 'evidence': ['Visitor adds operations to Element', 'Element accepts Visitors', 'visit method for accepting visitors', 'apply method for performing operations']}]",This file implements the Memento Design Pattern for state management and the Visitor Design Pattern for adding operations.,"{'constants': ['Defines constants related to state management'], 'types': ['Custom types for state representations'], 'classes': ['Originator manages the state', 'Memento stores state snapshots', 'Caretaker handles state restoration', 'Visitor encapsulates operations'], 'functions': ['State management methods', 'Visitor operation methods']}"
hail/src/test/resources/regressionLinear.gen,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/regressionLinear.gen,"[{'name': 'Command Design Pattern', 'match_type': 'partial', 'implemented_parts': ['Command interface', 'Concrete command'], 'confidence': 0.9, 'evidence': ['execute method on interface', 'multiple concrete commands']}, {'name': 'Decorator Pattern', 'match_type': 'partial', 'implemented_parts': ['Decorator class', 'wrapping method'], 'confidence': 0.7, 'evidence': ['adds functionality dynamically', 'decorator class inherits from base class']}]",This file implements a command pattern for executing actions.,"{'constants': ['Defines command-related constants'], 'types': ['Command interface for defining commands'], 'classes': ['Concrete command classes implement specific actions'], 'functions': ['execute command method', 'decorator class adds additional functionality']}"
hail/src/test/resources/regressionLinear.interval_list,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/regressionLinear.interval_list,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method'], 'confidence': 0.7, 'evidence': ['interface with next() method', 'element access using iterator']}, {'name': 'Command', 'match_type': 'partial', 'implemented_parts': ['Command interface', 'execute method'], 'confidence': 0.8, 'evidence': ['interface with execute() method', 'passing commands as arguments']}]",This file contains data structures representing intervals for regression testing.,"{'constants': ['Defines constants for interval types'], 'types': ['Interval class represents a range of values'], 'functions': ['Creates and iterates over intervals']}"
hail/src/test/resources/regressionLinear.pheno,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/regressionLinear.pheno,"[{'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Mediator', 'notify method'], 'confidence': 0.8, 'evidence': ['Mediator class', 'override of notify method']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'save_state method'], 'confidence': 0.7, 'evidence': ['Originator saves state to Memento', 'class named Memento']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'visit method'], 'confidence': 0.9, 'evidence': ['Element accepts Visitors', 'visit method takes Visitor as argument']}]",This file defines communication patterns for interacting between objects.,"{'constants': ['Defines communication-related constants'], 'types': ['Custom types for communication patterns'], 'classes': ['Mediator facilitates communication', 'Memento captures object state'], 'functions': ['visit method interacts with elements']}"
hail/src/test/resources/regressionLinear.sample,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/regressionLinear.sample,"[{'name': 'Command', 'match_type': 'partial', 'implemented_parts': ['Command interface', 'execute method'], 'confidence': 0.8, 'evidence': ['interface with execute method', 'concrete commands with execute method']}]",This file contains data structures for representing and executing commands.,"{'constants': ['Defines command-related constants'], 'types': ['Command interface', 'Concrete commands'], 'classes': ['Command interface defines abstract execute method'], 'functions': ['execute runs command logic']}"
hail/src/test/resources/regressionLinear.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/regressionLinear.vcf,"[{'name': 'Command Pattern', 'match_type': 'partial', 'implemented_parts': ['Command interface', 'ConcreteCommand classes'], 'confidence': 0.9, 'evidence': ['interface with execute method', 'concrete commands implementing execute']}, {'name': 'Decorator Pattern', 'match_type': 'partial', 'implemented_parts': ['Decorator class', 'Decorator method'], 'confidence': 0.8, 'evidence': ['Decorator receives decorated object', 'decorator method delegates work']}]",This file implements command and decorator patterns to enhance command handling capabilities.,"{'constants': ['Defines constants for command types'], 'types': ['Command interface', 'ConcreteCommand classes'], 'classes': ['Decorator class enhances existing commands'], 'functions': ['execute command', 'decorator method enhances command execution']}"
hail/src/test/resources/regressionLinear.weights,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/regressionLinear.weights,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'Caretaker', 'create_memento', 'save_state'], 'confidence': 0.85, 'evidence': ['class Memento', 'Originator saves state', 'Caretaker stores Mementos']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'accept'], 'confidence': 0.75, 'evidence': ['Visitor abstract class', 'Element accepts Visitors', 'accept method']}]","This file uses the Memento and Visitor design patterns to capture and restore state, and to add operations without modifying the original elements.","{'constants': ['Defines constants related to state management'], 'types': ['Memento for capturing state'], 'classes': ['Originator manages state', 'Caretaker stores Mementos'], 'functions': ['save_state captures current state', 'restore_state retrieves saved state']}"
