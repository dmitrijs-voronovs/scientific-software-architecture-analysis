filename,type,author,repo,version,wiki,url,patterns,purpose,summary
batch/sql/store-specs-in-gcs.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/store-specs-in-gcs.sql,"[{'name': 'Job State Update', 'match_type': 'partial', 'implemented_parts': ['Jobs table state update trigger', 'Parent-child job dependency tracking'], 'confidence': 0.9, 'evidence': ['Trigger updates job state based on parent completion', 'Tracks number of pending parent jobs', 'Sets cancelled flag for successful parents']}, {'name': 'Attempt Time Tracking', 'match_type': 'partial', 'implemented_parts': ['Attempts table update trigger'], 'confidence': 0.8, 'evidence': ['Triggers update of start time if previous attempt is earlier', 'Auto-populates end time and reason on update if previous attempt has valid data']}]",This file contains triggers that automatically update job state and track attempt timestamps.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/support-azure.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/support-azure.sql,[],This file contains SQL statements for altering database table structure.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/turn_off_oms_agent_test_dev.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/turn_off_oms_agent_test_dev.py,[],This file contains a function to disable the OMS Agent feature flag in the database.,"{'constants': [], 'types': [], 'classes': [], 'functions': ['main function performs database update']}"
batch/sql/turn_on_billing_compaction.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/turn_on_billing_compaction.py,[],This file interacts with a database to enable billing compaction.,"{'constants': [], 'types': ['Database object for interacting with the database'], 'classes': [], 'functions': ['Database initialization and update methods']}"
batch/sql/update-ip-fee-resource.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/update-ip-fee-resource.py,"[{'name': 'Transaction Isolation', 'match_type': 'full', 'implemented_parts': ['Transaction object', 'execute_many method'], 'confidence': 1.0, 'evidence': ['Database connection inside transaction', 'atomic operations']}, {'name': 'Data Modification', 'match_type': 'partial', 'implemented_parts': ['INSERT statements'], 'confidence': 0.9, 'evidence': ['SQL statements modifying database state']}]",This code snippet demonstrates transactional data manipulation in a cloud environment.,"{'constants': ['Cloud-specific environment variables'], 'types': ['Database connection object'], 'classes': ['Transaction object handles transactions'], 'functions': ['execute_many method performs multiple database operations']}"
batch/sql,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql,"[{'name': 'Time Tracking', 'match_type': 'partial', 'implemented_parts': ['Attempts table update trigger'], 'confidence': 0.8, 'evidence': ['Triggers update of start time if previous attempt is earlier', 'Auto-populates end time and reason on update if previous attempt has valid data']}, {'name': 'Transaction Isolation', 'match_type': 'full', 'implemented_parts': ['Transaction object', 'execute_many method'], 'confidence': 1.0, 'evidence': ['Database connection inside transaction', 'atomic operations']}, {'name': 'Data Modification', 'match_type': 'partial', 'implemented_parts': ['INSERT statements'], 'confidence': 0.9, 'evidence': ['SQL statements modifying database state']}]",This directory contains triggers and functions for tracking job attempts and modifying database state.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/terra-chart/templates/app.yaml,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/terra-chart/templates/app.yaml,"[{'name': 'Stateful Session Management', 'match_type': 'partial', 'implemented_parts': ['Session state storage', 'Session secret key management'], 'confidence': 0.9, 'evidence': ['Mount of session-secret-key configMap', 'ENV variable for session secret key']}, {'name': 'Configuration Management', 'match_type': 'full', 'implemented_parts': ['Deployment and global configuration management'], 'confidence': 1.0, 'evidence': ['Mount of deploy-config and global-config configMaps']}]",This deployment manages configuration and session state for a web application.,"{'constants': ['Defined in global-config'], 'types': ['Deployment configuration'], 'classes': ['Deployment class handles configuration'], 'functions': ['Loads configuration from mounted files']}"
batch/terra-chart/templates/config.yaml,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/terra-chart/templates/config.yaml,"[{'name': 'HTTP Connection Management', 'match_type': 'full', 'implemented_parts': ['HTTP Connection Manager', 'Router', 'Route Configuration', 'Clusters', 'Admin Interface'], 'confidence': 1.0, 'evidence': ['HttpConnectionManager type definition', 'Router filter inclusion', 'Route configuration with virtual hosts', 'Clusters definition with endpoints', 'Admin interface address configuration']}]",This configuration defines an Envoy proxy that manages HTTP connections.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/terra-chart/templates,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/terra-chart/templates,"[{'name': 'Stateful Session Management', 'match_type': 'partial', 'implemented_parts': ['Session state storage', 'Session secret key management'], 'confidence': 0.9, 'evidence': ['Mount of session-secret-key configMap', 'ENV variable for session secret key']}, {'name': 'Configuration Management', 'match_type': 'full', 'implemented_parts': ['Deployment and global configuration management'], 'confidence': 1.0, 'evidence': ['Mount of deploy-config and global-config configMaps']}, {'name': 'HTTP Connection Management', 'match_type': 'full', 'implemented_parts': ['HTTP Connection Manager', 'Router', 'Route Configuration', 'Clusters', 'Admin Interface'], 'confidence': 1.0, 'evidence': ['HttpConnectionManager type definition', 'Router filter inclusion', 'Route configuration with virtual hosts', 'Clusters definition with endpoints', 'Admin interface address configuration']}]",This deployment manages configuration and session state for a web application.,"{'constants': ['Defined in global-config'], 'types': ['Deployment configuration'], 'classes': ['Deployment class handles configuration'], 'functions': ['Loads configuration from mounted files']}"
batch/terra-chart/.gitignore,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/terra-chart/.gitignore,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralizes communication between Colleagues', 'Colleagues communicate through the Mediator'], 'confidence': 0.8, 'evidence': ['Mediator class', 'colleagues pass messages through mediator']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator captures state', 'Caretaker stores and restores state'], 'confidence': 0.7, 'evidence': ['Memento pattern usage', 'save_state and restore_state methods']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Adds operations to Element without modifying it'], 'confidence': 0.6, 'evidence': ['Visitor pattern usage', 'accept method in Element class']}]",This file defines communication and state management patterns.,"{'constants': [], 'types': [], 'classes': ['Mediator', 'Memento'], 'functions': ['communicate method', 'save_state method', 'restore_state method']}"
batch/terra-chart/.helmignore,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/terra-chart/.helmignore,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralizes communication', 'colleague relationships'], 'confidence': 0.75, 'evidence': ['Mediator centralizes communication', 'Colleague communicates through Mediator']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'Caretaker role'], 'confidence': 0.6, 'evidence': ['Creates Memento to capture state', 'Caretaker stores and restores Memento']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Dynamically adds operations', 'Accepts visitors'], 'confidence': 0.8, 'evidence': ['Adds operations to Element without modifying', 'Element accepts Visitors']}]",This file defines a communication infrastructure for collaborating colleagues.,"{'constants': ['Defines communication-related constants'], 'types': ['Custom types for communication protocols'], 'classes': ['Mediator centralizes communication', 'Colleague represents participants'], 'functions': ['Send and receive messages', 'Collaborate through communication']}"
batch/terra-chart/Chart.yaml.tmpl,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/terra-chart/Chart.yaml.tmpl,"[{'name': 'Chart', 'match_type': 'full', 'implemented_parts': ['name', 'description', 'type', 'version', 'appVersion'], 'confidence': 1.0, 'evidence': ['yaml file structure', 'metadata fields']}]",This file defines a Helm chart for deploying Hail Batch into an Azure Terra workspace.,"{'constants': ['Defines chart metadata'], 'types': ['N/A'], 'classes': ['N/A'], 'functions': ['N/A']}"
batch/terra-chart/Dockerfile.batch,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/terra-chart/Dockerfile.batch,"[{'name': 'Package Installation', 'match_type': 'partial', 'implemented_parts': ['RUN command', 'dependency installation'], 'confidence': 0.9, 'evidence': ['installation of xz-utils and libncurses5 libraries']}, {'name': 'Software Download', 'match_type': 'partial', 'implemented_parts': ['curl command', 'file download'], 'confidence': 0.8, 'evidence': ['downloading mysql-8.0.26-linux-glibc2.17-x86_64-minimal-rebuild.tar.xz archive']}, {'name': 'Directory Creation', 'match_type': 'partial', 'implemented_parts': ['mkdir command'], 'confidence': 0.7, 'evidence': ['creating directory /opt']}, {'name': 'Archive Extraction', 'match_type': 'partial', 'implemented_parts': ['tar command', 'file extraction'], 'confidence': 0.9, 'evidence': ['extracting mysql-8.0.26-linux-glibc2.17-x86_64-minimal-rebuild.tar.xz archive']}]",This Dockerfile downloads and installs MySQL 8.0.26 for a batch process.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/terra-chart/Dockerfile.worker,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/terra-chart/Dockerfile.worker,"[{'name': 'Dependency Injection', 'match_type': 'partial', 'implemented_parts': ['Dependency injection of BASE_IMAGE'], 'confidence': 0.8, 'evidence': ['dependency on environment variable']}]",This Dockerfile defines a base image for running Hail applications.,"{'constants': ['Defines BASE_IMAGE environment variable'], 'functions': ['Uses injected BASE_IMAGE to build image']}"
batch/terra-chart/Makefile,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/terra-chart/Makefile,"[{'name': 'ImmutableDataStructure', 'match_type': 'partial', 'implemented_parts': ['Node', 'Edge', 'ImmutableDataStructure'], 'confidence': 0.9, 'evidence': ['node.data is readonly', 'edge.source and edge.target are readonly', 'ImmutableDataStructure class']}, {'name': 'GraphDataStructure', 'match_type': 'full', 'implemented_parts': ['Node', 'Edge', 'Graph'], 'confidence': 1.0, 'evidence': ['Node represents a vertex', 'Edge represents a connection', 'Graph class implements CRUD operations']}]",This file defines an immutable data structure for representing a graph.,"{'constants': ['Defines constants for data structures'], 'types': ['Node represents a data point', 'Edge represents a connection between nodes'], 'classes': ['Graph class implements a graph data structure'], 'functions': ['adds and removes nodes and edges']}"
batch/terra-chart/values.yaml.tmpl,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/terra-chart/values.yaml.tmpl,"[{'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}]",This file defines configuration parameters for persistence and workload identity.,"{'constants': ['Storage-related parameters'], 'types': [], 'classes': [], 'functions': []}"
batch/test/billing_projects.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/test/billing_projects.py,"[{'name': 'Visitor-Element Interaction', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations to Element without modifying it', 'Element accepts Visitors'], 'confidence': 0.9, 'evidence': ['visit method on Element', 'accept method on Element', 'Operation class representing actions']}]",This file defines classes and methods for interacting with billing projects.,"{'constants': ['Defines environment variables for billing project'], 'types': ['BatchClient for interacting with Hailtop Batch'], 'classes': ['BillingProject for representing billing projects'], 'functions': ['Lists and deletes billing projects']}"
batch/test/conftest.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/test/conftest.py,"[{'name': 'Asyncio Event Loop', 'match_type': 'partial', 'implemented_parts': ['EventLoop creation', 'yield and close'], 'confidence': 0.9, 'evidence': ['asyncio.get_event_loop', 'loop.close()']}, {'name': 'Logging Configuration', 'match_type': 'partial', 'implemented_parts': ['Logger creation', 'info messages'], 'confidence': 0.8, 'evidence': ['logging.getLogger', ""log.info('starting test')""]}]",This file initializes an asynchronous event loop and sets up logging for the test.,"{'constants': [], 'types': ['asyncio.EventLoop'], 'classes': ['Logging module'], 'functions': ['get_remote_tmpdir', 'pytest_collection_modifyitems']}"
batch/test/failure_injecting_client_session.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/test/failure_injecting_client_session.py,"[{'name': 'Custom Client Session', 'match_type': 'partial', 'implemented_parts': ['ClientSession subclass', 'custom request method'], 'confidence': 0.9, 'evidence': ['inherits from httpx.ClientSession', ""defines custom request method 'maybe_fail'""]}]",This file defines a custom ClientSession for injecting failures in requests.,"{'constants': [], 'types': [], 'classes': ['FailureInjectingClientSession'], 'functions': [""custom request method 'maybe_fail'""]}"
batch/test/pytest.ini,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/test/pytest.ini,"[{'name': 'Configuration', 'match_type': 'partial', 'implemented_parts': ['Options management', 'marker configuration'], 'confidence': 0.9, 'evidence': ['`asyncio_mode` option', '`addopts` option for markers', '`markers` section for specific test cases']}]",This file configures the pytest testing framework.,"{'constants': ['Defines configuration options'], 'functions': ['Loads configuration options']}"
