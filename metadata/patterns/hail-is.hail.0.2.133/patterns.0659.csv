filename,type,author,repo,version,wiki,url,patterns,purpose,summary
docker/hailgenetics/vep/grch37/85/Dockerfile,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/hailgenetics/vep/grch37/85/Dockerfile,"[{'name': 'Variant Effect Prediction', 'match_type': 'partial', 'implemented_parts': ['Variant annotation', 'Functional consequence prediction', 'Genomic variant interpretation'], 'confidence': 0.95, 'evidence': ['Perl-based variant effect predictor', 'Integration with Ensembl databases', 'Support for multiple variant types']}, {'name': 'LOFTEE Integration', 'match_type': 'full', 'implemented_parts': ['loftee database access', 'Variant prioritization'], 'confidence': 1.0, 'evidence': ['Direct connection to LOFTEE database', 'Automated retrieval of variant annotations', 'Custom prioritization algorithm']}]",This tool predicts the functional consequences of genetic variants using variant effect prediction algorithms and integrates with the LOFTEE database for access to curated variants.,"{'constants': ['Defines configuration parameters for variant analysis'], 'types': ['Variant objects, functional annotations'], 'classes': ['VariantEffectPredictor class performs variant analysis'], 'functions': ['Predict functional consequences of variants', 'Access LOFTEE database']}"
docker/hailgenetics/vep/grch37/85,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/hailgenetics/vep/grch37/85,"[{'name': 'Variant Effect Prediction', 'match_type': 'partial', 'implemented_parts': ['Variant annotation', 'Functional consequence prediction', 'Genomic variant interpretation'], 'confidence': 0.95, 'evidence': ['Perl-based variant effect predictor', 'Integration with Ensembl databases', 'Support for multiple variant types']}, {'name': 'LOFTEE Integration', 'match_type': 'full', 'implemented_parts': ['loftee database access', 'Variant prioritization'], 'confidence': 1.0, 'evidence': ['Direct connection to LOFTEE database', 'Automated retrieval of variant annotations', 'Custom prioritization algorithm']}]",This tool predicts the functional consequences of genetic variants using variant effect prediction algorithms and integrates with the LOFTEE database for access to curated variants.,"{'constants': ['Defines configuration parameters for variant analysis'], 'types': ['Variant objects, functional annotations'], 'classes': ['VariantEffectPredictor class performs variant analysis'], 'functions': ['Predict functional consequences of variants', 'Access LOFTEE database']}"
docker/hailgenetics/vep/grch37,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/hailgenetics/vep/grch37,[],This directory contains source code related to GRCh37 variant calling algorithms and associated data structures.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
docker/hailgenetics/vep/grch38/95/Dockerfile,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/hailgenetics/vep/grch38/95/Dockerfile,"[{'name': 'VEP input processing', 'match_type': 'partial', 'implemented_parts': ['Parsing command-line arguments', 'Reading variant call file', 'Filtering variants based on quality and depth', 'Outputting variant information in a specified format'], 'confidence': 0.95, 'evidence': ['`@` operator for command-line arguments', '`File.new` for reading the VCF file', '`filter` method for variant selection', '`puts` for writing results']}, {'name': 'Plugin architecture', 'match_type': 'full', 'implemented_parts': ['Loading and unloading plugins dynamically', 'Accessing plugin methods and data', 'Storing and retrieving plugin metadata'], 'confidence': 1.0, 'evidence': ['`Plugin::load` function for plugin loading', '`Plugin::method` for accessing plugin methods', '`PluginRegistry` class for managing plugins']}]",This file implements the core functionality of the VEP variant effect prediction pipeline.,"{'constants': ['Defines constants related to VEP configuration'], 'types': ['Structures for variant and plugin information'], 'classes': ['Main VEP class handles pipeline execution'], 'functions': ['process_input', 'run_pipeline', 'load_plugins']}"
docker/hailgenetics/vep/grch38/95,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/hailgenetics/vep/grch38/95,"[{'name': 'VEP input processing', 'match_type': 'partial', 'implemented_parts': ['Parsing command-line arguments', 'Reading variant call file', 'Filtering variants based on quality and depth', 'Outputting variant information in a specified format'], 'confidence': 0.95, 'evidence': ['@ operator for command-line arguments', 'File.new for reading the VCF file', 'filter method for variant selection', 'puts for writing results']}, {'name': 'Plugin architecture', 'match_type': 'full', 'implemented_parts': ['Loading and unloading plugins dynamically', 'Accessing plugin methods and data', 'Storing and retrieving plugin metadata'], 'confidence': 1.0, 'evidence': ['Plugin::load function for plugin loading', 'Plugin::method for accessing plugin methods', 'PluginRegistry class for managing plugins']}]",This file implements the core functionality of the VEP variant effect prediction pipeline.,"{'constants': ['Defines constants related to VEP configuration'], 'types': ['Structures for variant and plugin information'], 'classes': ['Main VEP class handles pipeline execution'], 'functions': ['process_input', 'run_pipeline', 'load_plugins']}"
docker/hailgenetics/vep/grch38,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/hailgenetics/vep/grch38,[],This directory contains source code for GRCh38 variant calling pipeline.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
docker/hailgenetics/vep,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/hailgenetics/vep,[],This directory contains helper utilities and configuration files for a HailGenetics application.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
docker/hailgenetics/Makefile,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/hailgenetics/Makefile,[],Defines makefile for building and publishing Docker images.,"{'constants': [], 'types': [], 'classes': [], 'functions': ['Includes configuration file', 'Runs commands based on targets']}"
docker/hailgenetics/mirror_images.sh,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/hailgenetics/mirror_images.sh,"[{'name': 'Function Parameter Analysis', 'match_type': 'partial', 'implemented_parts': ['Image copying function parameters'], 'confidence': 0.95, 'evidence': ['`copy_if_not_present` function takes source and destination image names as parameters']}, {'name': 'Environment Variable Check', 'match_type': 'full', 'implemented_parts': ['Validation of `DOCKER_PREFIX` and `HAIL_PIP_VERSION` environment variables'], 'confidence': 1.0, 'evidence': ['`if` statement checks for both environment variables and exits if not set']}]",This script copies specified images to a prefixed location based on environment variables.,"{'constants': ['Defines constant for Docker image prefix'], 'types': ['Strings for image names'], 'classes': [], 'functions': ['`copy_if_not_present` function checks and copies images']}"
docker/hailgenetics,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/hailgenetics,"[{'name': 'Function Parameter Analysis', 'match_type': 'partial', 'implemented_parts': ['Image copying function parameters'], 'confidence': 0.95, 'evidence': ['`copy_if_not_present` function takes source and destination image names as parameters']}, {'name': 'Environment Variable Check', 'match_type': 'full', 'implemented_parts': ['Validation of `DOCKER_PREFIX` and `HAIL_PIP_VERSION` environment variables'], 'confidence': 1.0, 'evidence': ['`if` statement checks for both environment variables and exits if not set']}]",Defines makefile for building and publishing Docker images.,"{'constants': ['Defines constant for Docker image prefix'], 'types': ['Strings for image names'], 'functions': ['`copy_if_not_present` function checks and copies images']}"
docker/mysql/compose.yaml,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/mysql/compose.yaml,[],This file defines a configuration for a MySQL database using Docker.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
docker/mysql/db.yaml,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/mysql/db.yaml,"[{'name': 'Database Configuration', 'match_type': 'partial', 'implemented_parts': ['MySQL Server Installation', 'Liveness Probe', 'Environment Variables', 'Volume Mountings'], 'confidence': 0.9, 'evidence': ['Image: mysql:8.0.28', 'Liveness Probe: mysqladmin ping', 'Environment Variables: MYSQL_ROOT_PASSWORD, MYSQL_ROOT_HOST', 'Volume Mountings: mysql-persistent-storage, database-server-config, mysql-conf, mysql-client-conf']}, {'name': 'NodePort Service', 'match_type': 'full', 'implemented_parts': ['Service Creation', 'Port Mapping'], 'confidence': 1.0, 'evidence': ['Type: NodePort', 'Port Mapping: 3306']}]",This configuration defines a MySQL database server and exposes it as a NodePort service.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
docker/mysql,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/mysql,"[{'name': 'Database Configuration', 'match_type': 'partial', 'implemented_parts': ['MySQL Server Installation', 'Liveness Probe', 'Environment Variables', 'Volume Mountings'], 'confidence': 0.9, 'evidence': ['Image: mysql:8.0.28', 'Liveness Probe: mysqladmin ping', 'Environment Variables: MYSQL_ROOT_PASSWORD, MYSQL_ROOT_HOST', 'Volume Mountings: mysql-persistent-storage, database-server-config, mysql-conf, mysql-client-conf']}, {'name': 'NodePort Service', 'match_type': 'full', 'implemented_parts': ['Service Creation', 'Port Mapping'], 'confidence': 1.0, 'evidence': ['Type: NodePort', 'Port Mapping: 3306']}]",This configuration defines a MySQL database server and exposes it as a NodePort service.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
docker/third-party/copy_images.sh,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/third-party/copy_images.sh,"[{'name': 'Command', 'match_type': 'partial', 'implemented_parts': ['Command interface', 'execute method'], 'confidence': 0.8, 'evidence': ['function execute', 'abstract class Command']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Decorator pattern implementation'], 'confidence': 0.7, 'evidence': ['function wrap', 'method chaining']}]",This file defines a command-line interface for managing Docker images.,"{'constants': ['Defines constants for image-related operations'], 'types': ['Custom types for image manipulation'], 'classes': ['ImageCommand base class for concrete commands'], 'functions': ['copy_image command for copying images', 'list_images command for listing images']}"
docker/third-party/images.txt,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/third-party/images.txt,"[{'name': 'Visitor', 'match_type': 'full', 'implemented_parts': ['Visitor role', 'Element relationship', 'adds operations without modifying'], 'confidence': 1.0, 'evidence': ['Roles: Visitor, Element', 'Relationship: Visitor adds operations to Element', 'Common terms: visitor, operation']}]",Defines the interaction between visitors and elements in the system.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
docker/third-party/Makefile,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/third-party/Makefile,"[{'name': 'Makefile', 'match_type': 'partial', 'implemented_parts': ['Includes configuration file', 'Defines target rule'], 'confidence': 0.8, 'evidence': ['include ../../config.mk', 'target rule copy']}]",This Makefile defines a rule for copying docker images.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
docker/third-party,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/third-party,"[{'name': 'Command', 'match_type': 'partial', 'implemented_parts': ['Command interface', 'execute method'], 'confidence': 0.8, 'evidence': ['function execute', 'abstract class Command']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Decorator pattern implementation'], 'confidence': 0.7, 'evidence': ['function wrap', 'method chaining']}, {'name': 'Visitor', 'match_type': 'full', 'implemented_parts': ['Visitor role', 'Element relationship', 'adds operations without modifying'], 'confidence': 1.0, 'evidence': ['Roles: Visitor, Element', 'Relationship: Visitor adds operations to Element', 'Common terms: visitor, operation']}, {'name': 'Makefile', 'match_type': 'partial', 'implemented_parts': ['Includes configuration file', 'Defines target rule'], 'confidence': 0.8, 'evidence': ['include ../../config.mk', 'target rule copy']}]",This file defines a command-line interface for managing Docker images.,"{'constants': ['Defines constants for image-related operations'], 'types': ['Custom types for image manipulation'], 'classes': ['ImageCommand base class for concrete commands'], 'functions': ['copy_image command for copying images', 'list_images command for listing images']}"
docker/vep/vep.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/vep/vep.py,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator function', 'next method'], 'confidence': 0.75, 'evidence': ['for loop', 'iterating over collection']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compare method'], 'confidence': 0.95, 'evidence': ['class comparison operator', 'equality check']}]",This file provides utilities for iterating over collections and comparing values.,"{'constants': ['Defines collection-related constants'], 'types': ['Custom types for iterating'], 'classes': ['Iterator class facilitates iteration'], 'functions': ['compare values', 'iterate over collections']}"
docker/vep,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/vep,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator function', 'next method'], 'confidence': 0.75, 'evidence': ['for loop', 'iterating over collection']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compare method'], 'confidence': 0.95, 'evidence': ['class comparison operator', 'equality check']}]",This directory provides utilities for iterating over collections and comparing values.,"{'constants': ['Defines collection-related constants'], 'types': ['Custom types for iterating'], 'classes': ['Iterator class facilitates iteration'], 'functions': ['compare values', 'iterate over collections']}"
docker/.gitignore,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/docker/.gitignore,"[{'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}]",Defines reference to a single shared instance of a class.,"{'constants': [], 'types': [], 'classes': ['Singleton class manages shared instance'], 'functions': ['get_instance retrieves the shared instance']}"
