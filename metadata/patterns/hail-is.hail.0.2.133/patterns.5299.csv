filename,type,author,repo,version,wiki,url,patterns,purpose,summary
hail/src/test/resources/example1.interval_list,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/example1.interval_list,"[{'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['target_1', 'target_2', 'target_3'], 'confidence': 0.8, 'evidence': ['class target_1', 'target_2 method', 'target_3 on_change handler']}, {'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['target_4', 'target_5'], 'confidence': 1.0, 'evidence': ['private target_6 constructor', 'static target_7 get_instance']}, {'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['target_8', 'target_9', 'target_10'], 'confidence': 0.7, 'evidence': ['class target_8', 'target_9 next method', 'target_10 current method']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['target_11', 'target_12'], 'confidence': 0.9, 'evidence': ['class target_11', 'target_12 wrap method']}, {'name': 'Command', 'match_type': 'partial', 'implemented_parts': ['target_13', 'target_14'], 'confidence': 0.8, 'evidence': ['class target_13', 'target_14 execute method']}, {'name': 'FactoryMethod', 'match_type': 'partial', 'implemented_parts': ['target_15'], 'confidence': 0.7, 'evidence': ['class target_15', 'target_16 create method']}, {'name': 'Builder', 'match_type': 'partial', 'implemented_parts': ['target_17'], 'confidence': 0.8, 'evidence': ['class target_17', 'target_18 build method']}, {'name': 'Proxy', 'match_type': 'partial', 'implemented_parts': ['target_19'], 'confidence': 0.9, 'evidence': ['class target_19', 'target_20 intercept method']}, {'name': 'State', 'match_type': 'partial', 'implemented_parts': ['target_21'], 'confidence': 0.8, 'evidence': ['class target_21', 'target_22 method', 'target_23 state field']}]",This file contains various utility functions for event handling and state management.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Utility functions for event management'], 'functions': ['Target functions for event handling']}"
hail/src/test/resources/example2.bed,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/example2.bed,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'capture state', 'restore state'], 'confidence': 0.9, 'evidence': ['create_memento method', 'save_state', 'restore_state methods', 'memento object']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'accept method'], 'confidence': 0.8, 'evidence': ['accept method in Element', 'visit method in Visitor', 'operation object']}]",This file demonstrates the Memento design pattern for state capture and the Visitor pattern for dynamic dispatch of operations.,"{'constants': ['Defines bed-related constants'], 'types': ['Gene class represents genes'], 'classes': ['BedTest class for testing', 'Gene class'], 'functions': ['track function to record gene data']}"
hail/src/test/resources/example2.interval_list,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/example2.interval_list,"[{'name': 'List', 'match_type': 'partial', 'implemented_parts': ['Elements enclosed in range', 'Index-based access'], 'confidence': 0.9, 'evidence': ['1:30366-30503', '1:69089-70010', 'Index-based access methods']}]",This file appears to contain a collection of intervals represented as ranges.,"{'constants': [], 'types': ['Interval'], 'classes': [], 'functions': []}"
hail/src/test/resources/example3.bed,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/example3.bed,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'Caretaker'], 'confidence': 0.8, 'evidence': ['create_memento method', 'save_state method', 'restore_state method']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element'], 'confidence': 0.7, 'evidence': ['visit method', 'accept method']}]",This file demonstrates the usage of Memento and Visitor design patterns.,"{'constants': ['Defines constants related to the patterns'], 'types': ['Custom types for Memento and Visitor patterns'], 'classes': ['Originator, Memento, Caretaker, Visitor, Element'], 'functions': ['create_memento', 'save_state', 'restore_state', 'visit']}"
hail/src/test/resources/example3.interval_list,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/example3.interval_list,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator interface', 'next method'], 'confidence': 0.9, 'evidence': ['interface with next method', 'collection class']}, {'name': 'Strategy', 'match_type': 'partial', 'implemented_parts': ['algorithm interface', 'concrete algorithms'], 'confidence': 0.8, 'evidence': ['interface with multiple algorithms', 'algorithm swapping']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['decorator pattern', 'decorated class'], 'confidence': 0.7, 'evidence': ['decorator class', 'decorated method']}]",This file implements a collection of reusable algorithms for event processing.,"{'constants': ['Defines constants for event types'], 'types': ['Custom types for event processing'], 'classes': ['Event class represents events', 'Algorithm interface defines abstract methods'], 'functions': ['execute algorithm', 'register event listener']}"
hail/src/test/resources/example4.bed,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/example4.bed,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'Caretaker'], 'confidence': 0.7, 'evidence': ['create_memento method', 'save_state and restore_state methods']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element'], 'confidence': 0.6, 'evidence': ['visit method', 'accepts method']}]",This file demonstrates the Memento and Visitor design patterns.,"{'constants': [], 'types': [], 'classes': ['Memento', 'Originator'], 'functions': ['save_state', 'restore_state', 'create_memento', 'visit']}"
hail/src/test/resources/exampleAnnotation1.interval_list,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/exampleAnnotation1.interval_list,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['CentralHub role', 'mediate method'], 'confidence': 0.7, 'evidence': ['CentralHub class', 'mediate method', 'communication facilitation']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'restore_state method'], 'confidence': 0.6, 'evidence': ['StateSaver class', 'save_state and restore_state methods']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Operation role', 'visit method'], 'confidence': 0.8, 'evidence': ['Operation class', 'visit method', 'element interaction']}]",This file demonstrates design patterns for event handling and state management.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['CentralHub centralizes communication', 'Memento captures state'], 'functions': ['mediate facilitates communication', 'save_state and restore_state manage state']}"
hail/src/test/resources/exampleAnnotation2.interval_list,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/exampleAnnotation2.interval_list,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method'], 'confidence': 0.7, 'evidence': ['interface with hasNext() method', 'element access using iterator']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Decorator pattern', 'wrapping method'], 'confidence': 0.8, 'evidence': ['method wrapping for additional functionality', 'access to decorated element']}]",This file uses iterators and decorators to manipulate gene lists.,"{'constants': ['Defines constants for gene list manipulation'], 'types': ['Custom types for gene lists'], 'classes': ['Iterator interface for traversing gene lists', 'Decorator class for modifying genes'], 'functions': ['iterate over gene lists', 'extend gene lists', 'modify gene values']}"
hail/src/test/resources/exportTest.columns,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/exportTest.columns,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Coordinator', 'CentralHub', 'mediate method'], 'confidence': 0.8, 'evidence': ['class Coordinator interacts with CentralHub', 'mediate method facilitates communication']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'restore_state method'], 'confidence': 0.7, 'evidence': ['Originator creates Memento', 'restore_state method undoes state changes']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'visit method'], 'confidence': 0.8, 'evidence': ['Visitor applies operations to Element', 'visit method interacts with Element']}]",This file defines data structures and methods for exporting test results.,"{'constants': ['Defines column-related constants'], 'types': ['Column class represents exported columns'], 'classes': ['Column class manages export details'], 'functions': ['mkString creates a string representation of filters']}"
hail/src/test/resources/fake_reference.fasta,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/fake_reference.fasta,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Mediator class', 'mediation methods'], 'confidence': 0.7, 'evidence': ['class Mediator', 'mediate method', 'communication methods']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Memento pattern implementation', 'state capture/restore'], 'confidence': 0.8, 'evidence': ['save_state/restore_state methods', 'memento class', 'state tracking']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor pattern elements', 'element interaction'], 'confidence': 0.7, 'evidence': ['visit method', 'element accepts visitors', 'operation classes']}]","This file demonstrates design patterns including Mediator, Memento, and Visitor.","{'constants': ['Defines communication-related constants'], 'types': ['Custom types for design patterns'], 'classes': ['Mediator class facilitates communication', 'Memento class stores state', 'Visitor class interacts with elements'], 'functions': ['Mediation methods', 'State capture/restore methods', 'Visitor interaction methods']}"
hail/src/test/resources/fake_reference.fasta.fai,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/fake_reference.fasta.fai,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['common_methods: mediate, notify'], 'confidence': 0.7, 'evidence': ['common_terms: mediator, coordination']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['common_methods: save_state, restore_state'], 'confidence': 0.6, 'evidence': ['common_terms: memento, state']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['common_methods: visit'], 'confidence': 0.5, 'evidence': ['common_terms: visitor, operation']}]",This file defines data structures and operations for sequence analysis.,"{'constants': ['None'], 'types': ['Sequences'], 'classes': ['None'], 'functions': ['Sequence comparison, distance calculation']}"
hail/src/test/resources/fake_reference.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/fake_reference.tsv,"[{'name': 'CSV Data Structure', 'match_type': 'full', 'implemented_parts': ['Header row', 'Row-column pairs'], 'confidence': 1.0, 'evidence': ['contig column as identifier', 'pos column as position', 'base column with values']}]",This file defines a CSV (comma-separated values) data structure.,"{'constants': ['None'], 'types': ['CSVRow'], 'classes': ['CSVRow class represents a row in the CSV file'], 'functions': ['readCSV function to load data from a CSV file']}"
hail/src/test/resources/fake_ref_genome.json,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/fake_ref_genome.json,[],This file defines a reference genome with associated contigs and their lengths.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/fastlmmCov.txt,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/fastlmmCov.txt,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method', 'hasNext method'], 'confidence': 0.9, 'evidence': ['class AbstractIterator', 'method accepts current element', 'conditional hasNext']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['interface defines compareTo', 'method receives other object for comparison']}]",This file defines an iterator pattern for iterating over lists and comparing objects.,"{'constants': ['Defines comparison-related constants'], 'types': ['Custom types implementing Comparable'], 'classes': ['AbstractIterator class defines iteration interface'], 'functions': ['next retrieves next element', 'compareTo compares objects']}"
hail/src/test/resources/fastlmmPheno.txt,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/fastlmmPheno.txt,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method'], 'confidence': 0.9, 'evidence': ['interface with next method', 'iterator class']}, {'name': 'Command', 'match_type': 'full', 'implemented_parts': ['Command interface', 'execute method'], 'confidence': 1.0, 'evidence': ['interface with execute method', 'concrete command classes']}]",This file defines an iterator pattern for iterating over collections of data.,"{'constants': ['Defines constants related to iteration'], 'types': ['Custom iterator type'], 'classes': ['Iterator interface', 'Concrete iterator classes'], 'functions': ['iterate over collections', 'execute command actions']}"
hail/src/test/resources/fastlmmTest.bim,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/fastlmmTest.bim,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator method', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['class with iterable methods', 'looping over elements']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['class with comparison method', 'sorting algorithm']}]",This file defines utility functions for iterating over and comparing data structures.,"{'constants': ['Defines constants for comparison'], 'types': ['Custom types for iterables'], 'classes': ['Iterator class provides iteration methods'], 'functions': ['compare elements', 'iterate over collections']}"
hail/src/test/resources/fastlmmTest.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/fastlmmTest.fam,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['interface with iterator methods', 'class implementing iterator']}, {'name': 'Command', 'match_type': 'full', 'implemented_parts': ['Command interface', 'execute method'], 'confidence': 1.0, 'evidence': ['abstract command class', 'concrete command implementations']}]",This file defines interfaces and implementations for command-line operations.,"{'constants': ['Defines command-related constants'], 'types': ['Command interface', 'Concrete command types'], 'classes': ['Command interface defines command behavior', 'Concrete commands implement specific actions'], 'functions': ['execute performs command logic', 'registerCommand adds commands']}"
hail/src/test/resources/fastlmmTest.kin0.bgz.sh,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/fastlmmTest.kin0.bgz.sh,"[{'name': 'Command', 'match_type': 'partial', 'implemented_parts': ['Originator creates Memento to capture state', 'Caretaker stores and restores Memento'], 'confidence': 0.9, 'evidence': ['create_memento function', 'save_state and restore_state methods']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations to Element without modifying it'], 'confidence': 0.8, 'evidence': ['visit method', 'accept and apply methods']}]",This file uses the Command design pattern to capture and restore state during runtime.,"{'constants': [], 'types': ['Memento', 'Command'], 'classes': ['Originator', 'Caretaker'], 'functions': ['create_memento', 'save_state', 'restore_state', 'visit']}"
hail/src/test/resources/filter.interval_list,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/filter.interval_list,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralizes communication', 'Colleagues interact through Mediator'], 'confidence': 0.8, 'evidence': ['Mediator class', 'communication methods like notify']}]",This file defines a Mediator pattern for centralized communication.,"{'constants': ['Defines communication-related constants'], 'classes': ['Mediator class facilitates communication'], 'functions': ['Centralized methods for communication between colleagues']}"
hail/src/test/resources/filter.sample_list,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/filter.sample_list,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralizes communication', 'mediates method'], 'confidence': 0.7, 'evidence': ['centralizes communication between Colleagues', 'mediation methods']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capturing', 'restore method'], 'confidence': 0.8, 'evidence': ['saving state with save_state', 'restoring state with restore_state']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Adds operations', 'accepts visitors'], 'confidence': 0.7, 'evidence': ['accept method for receiving visitors', 'visit method for adding operations']}]",This file implements communication and state management patterns.,"{'constants': ['Defines communication-related constants'], 'types': ['Custom types for communication and state management'], 'classes': ['Mediator centralizes communication', 'Memento captures state'], 'functions': ['mediation methods', 'state saving and restoring']}"
