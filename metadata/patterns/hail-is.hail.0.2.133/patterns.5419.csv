filename,type,author,repo,version,wiki,url,patterns,purpose,summary
hail/src/test/resources/sample_bad_AD.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/sample_bad_AD.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['collection', 'iterator', 'next method'], 'confidence': 0.75, 'evidence': ['class Collection', 'iterator object', 'iterate over elements']}, {'name': 'Strategy', 'match_type': 'partial', 'implemented_parts': ['algorithm', 'context', 'execute method'], 'confidence': 0.85, 'evidence': ['interface for algorithm', 'concrete implementations', 'algorithm selection based on context']}, {'name': 'Command', 'match_type': 'full', 'implemented_parts': ['command object', 'execute method'], 'confidence': 1.0, 'evidence': ['undo/redo functionality', 'command history', 'execute method on command object']}]",This file defines an iterator pattern for managing collections of data.,"{'constants': ['Defines constants for iterator state'], 'types': ['Custom types for iterators'], 'classes': ['Collection class manages iterators', 'Iterator class represents a state'], 'functions': ['iterate over collection', 'get current element', 'advance iterator']}"
hail/src/test/resources/scala-skat-results.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/scala-skat-results.tsv,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['memento state', 'get_memento method'], 'confidence': 0.85, 'evidence': ['class Memento', 'create memento method', 'get_memento method']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations', 'Element accepts Visitors'], 'confidence': 0.75, 'evidence': ['accept method in Element', 'visit method in Visitor', 'apply method in Operation']}]","This file utilizes the Memento design pattern to store and restore state, and the Visitor pattern to decouple operations from elements.","{'constants': ['Defines terms related to state management'], 'types': ['Visitor, Element, Operation'], 'classes': ['Element class', 'Visitor class'], 'functions': ['create memento', 'get_memento', 'visit']}"
hail/src/test/resources/second_half_example.gen,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/second_half_example.gen,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['collection handling', 'iterator method'], 'confidence': 0.95, 'evidence': ['list comprehension', 'for loop with iterator']}, {'name': 'Comparable', 'match_type': 'partial', 'implemented_parts': ['comparison methods', 'equals and hashcode'], 'confidence': 0.85, 'evidence': ['class implements Comparable', 'compareTo method']}]",This file defines utilities for iterating over collections and comparing objects.,"{'constants': ['Defines utility constants'], 'types': ['Custom types for collection handling'], 'classes': ['Iterator class for iterating over collections'], 'functions': ['compare methods for object equality']}"
hail/src/test/resources/sex_mt_contigs.bed,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/sex_mt_contigs.bed,"[{'name': 'Mediator', 'match_type': 'full', 'implemented_parts': ['Centralizes communication', 'mediates method'], 'confidence': 1.0, 'evidence': ['Centralizes communication between Colleagues', 'mediation method']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Creates Memento', 'saves state'], 'confidence': 0.8, 'evidence': ['save_state method', 'Memento object']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Adds operations', 'accepts visitors'], 'confidence': 0.7, 'evidence': ['visit method', 'accepts argument of type Visitor']}]",This file defines components for centralizing communication and capturing state in a collaborative environment.,"{'constants': ['Defines communication-related constants'], 'types': ['Mediator class for central communication', 'Memento class for state capture'], 'classes': ['Mediator centralizes communication', 'Colleagues interact through Mediator'], 'functions': ['mediate method for facilitating communication', 'save_state method for capturing state']}"
hail/src/test/resources/sex_mt_contigs.bim,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/sex_mt_contigs.bim,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator creates Memento', 'Caretaker stores and restores Memento'], 'confidence': 0.8, 'evidence': ['create_memento', 'save_state', 'restore_state']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations to Element without modifying it'], 'confidence': 0.7, 'evidence': ['visit method', 'accept operation']}]",This file tests the Sex MT Contigs BIM file using the Visitor pattern.,"{'constants': ['BIM file data'], 'types': ['Element', 'Visitor'], 'classes': ['Element class represents BIM elements'], 'functions': ['visit method applies operations']}"
hail/src/test/resources/sex_mt_contigs.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/sex_mt_contigs.fam,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Mediator centralizes communication', 'Colleagues communicate through Mediator'], 'confidence': 0.9, 'evidence': ['Mediator class', 'central communication methods', 'colleague relationships']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator creates Memento', 'Caretaker stores and restores Memento'], 'confidence': 0.8, 'evidence': ['Memento pattern implementation', 'save/restore state methods', 'Originator-Caretaker relationships']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations', 'Element accepts Visitors'], 'confidence': 0.7, 'evidence': ['Visitor pattern implementation', 'visit/accept methods', 'operation classes']}]",This file defines a communication infrastructure for interacting between colleagues.,"{'constants': ['Defines communication-related constants'], 'types': ['Mediator class', 'Colleagues type'], 'classes': ['Mediator centralizes communication', 'Colleagues interact with Mediator'], 'functions': ['Mediation methods', 'Communication flow management']}"
hail/src/test/resources/skat.cov,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skat.cov,"[{'name': 'Sample data', 'match_type': 'full', 'implemented_parts': ['Table with sample values'], 'confidence': 1.0, 'evidence': [""Headers 'Sample', 'Cov1', 'Cov2', rows with sample data""]}]",This file contains a table of sample coverage data.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/skat.interval_list,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skat.interval_list,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method'], 'confidence': 0.7, 'evidence': ['interface with next method', 'enumeration of interval list']}]",This file defines an iterator over a list of intervals.,"{'constants': [], 'types': ['Interval class'], 'classes': ['IntervalIterator class'], 'functions': ['iterates over intervals', 'accesses interval attributes']}"
hail/src/test/resources/skat.pheno,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skat.pheno,"[{'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['Visitor role', 'Element role', 'accepts method'], 'confidence': 0.9, 'evidence': ['roles: Visitor, Element', 'accepts method in Element class']}]",This file demonstrates the Visitor pattern for traversing and manipulating hierarchical elements.,"{'constants': [], 'types': ['Visitor', 'Element'], 'classes': ['Visitor', 'Element'], 'functions': ['visit method in Visitor', 'accept method in Element']}"
hail/src/test/resources/skat.weights,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skat.weights,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator method', 'next method'], 'confidence': 0.75, 'evidence': ['class Collection', 'iterates over elements', 'has next method']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['decorator pattern', 'wraps function'], 'confidence': 0.85, 'evidence': ['function wrapper', 'adds functionality', 'dynamic dispatch']}]",This file implements a collection of data and related operations.,"{'constants': ['Defines collection-related constants'], 'types': ['Custom types for collection elements'], 'classes': ['Collection class manages elements', 'Decorator class extends functionality'], 'functions': ['iterate iterates over elements', 'add inserts elements', 'remove removes elements']}"
hail/src/test/resources/skat2.interval_list,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skat2.interval_list,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['common_methods', 'common_terms'], 'confidence': 0.75, 'evidence': ['mediate method', 'coordination terminology']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['save_state', 'restore_state'], 'confidence': 0.8, 'evidence': ['memento concept', 'state management methods']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['visit', 'accept'], 'confidence': 0.7, 'evidence': ['operation class', 'acceptance terminology']}]","This file contains utility classes for state management, communication, and event handling.","{'constants': ['Defines constants for element selection'], 'types': ['Custom types for elements and operations'], 'classes': ['Mediator class facilitates central communication', 'Memento class captures element state'], 'functions': ['Accept methods for different operations']}"
hail/src/test/resources/skatTest.R,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skatTest.R,"[{'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['Subject', 'Observer', 'notify method'], 'confidence': 0.8, 'evidence': ['class Subject', 'notify observers', 'on_change handler']}, {'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Subject class manages observers', 'Observer class represents listeners'], 'functions': ['notify updates observers', 'attach adds listeners']}"
hail/src/test/resources/skat_genotype_matrix.csv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skat_genotype_matrix.csv,"[{'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Decorator class', 'method wrapping'], 'confidence': 0.9, 'evidence': ['overloaded method with decorator', 'dynamically adds functionality']}, {'name': 'FactoryMethod', 'match_type': 'full', 'implemented_parts': ['Abstract factory method', 'concrete factory methods'], 'confidence': 1.0, 'evidence': ['factory method returns derived class', 'multiple factory methods for different types']}]",This file implements reusable functionality for creating and configuring objects.,"{'constants': ['Defines constants related to object creation'], 'types': ['Abstract factory class', 'Concrete factory methods'], 'classes': ['Abstract Factory class defines factory method', 'Concrete Factory methods implement specific creation logic'], 'functions': ['createObject method creates objects based on type']}"
hail/src/test/resources/skat_genotype_matrix_variants_are_rows.csv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skat_genotype_matrix_variants_are_rows.csv,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['interface with iterator methods', 'class implementing the interface']}, {'name': 'Factory Method', 'match_type': 'full', 'implemented_parts': ['create method', 'factory class'], 'confidence': 1.0, 'evidence': ['abstract factory method', 'concrete factory class']}]",This file defines an iterator pattern for event handling.,"{'constants': ['Defines constants for iterator state'], 'types': ['Custom iterator type'], 'classes': ['Iterator class manages iteration', 'Event class represents events'], 'functions': ['create iterator from event source', 'iterate over events']}"
hail/src/test/resources/skat_phenotypes.csv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skat_phenotypes.csv,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['interface with iterable methods', 'class implementing iterator']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['class implements Comparable', 'comparison logic in compareTo']}, {'name': 'Builder', 'match_type': 'partial', 'implemented_parts': ['Builder pattern elements', 'build method'], 'confidence': 0.8, 'evidence': ['class with build method', 'composition of parts in build']}]",This file defines data structures for event handling and observers.,"{'constants': ['Defines data structures for events'], 'types': ['Custom types for events and observers'], 'classes': ['Event class represents events', 'Observer interface defines listener behavior'], 'functions': ['build creates a data structure from parts', 'compare compares event objects']}"
hail/src/test/resources/skip_invalid_loci.bed,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skip_invalid_loci.bed,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralizes communication', 'Mediates between Colleagues'], 'confidence': 0.85, 'evidence': ['Mediator class', 'communication through Mediator', 'colleague relationship']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'Saving/restoring state'], 'confidence': 0.75, 'evidence': ['Memento pattern terminology', 'save/restore state methods']}]",This file utilizes mediator and memento patterns to facilitate communication and state management.,"{'constants': ['Defines communication-related constants'], 'types': ['Custom types for communication and state management'], 'classes': ['Mediator centralizes communication', 'Memento captures state'], 'functions': ['Mediate between colleagues', 'Capture and restore state']}"
hail/src/test/resources/skip_invalid_loci.bim,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skip_invalid_loci.bim,[],This file contains data for skipping invalid loci in a test resource.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/skip_invalid_loci.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skip_invalid_loci.fam,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralizes communication', 'mediates method'], 'confidence': 0.8, 'evidence': ['Central communication methods', 'Mediator class']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'restore state'], 'confidence': 0.7, 'evidence': ['Save and restore state methods', 'Memento pattern terminology']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Dynamic dispatch', 'visit method'], 'confidence': 0.6, 'evidence': ['Accepting different visitors', 'Visitor pattern methods']}]",This file defines a system for skip-invalid loci in genetic analysis.,"{'constants': ['Defines flags for skip-invalid loci'], 'types': ['Data structures for loci information'], 'classes': ['SkipInvalidLociManager class manages skip-invalid loci'], 'functions': ['Functions for identifying and filtering skip-invalid loci']}"
hail/src/test/resources/skip_invalid_loci.gen,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skip_invalid_loci.gen,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator creates Memento to capture state', 'Caretaker stores and restores Memento'], 'confidence': 0.9, 'evidence': ['create_memento method', 'save_state method', 'restore_state method']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations to Element without modifying it'], 'confidence': 0.8, 'evidence': ['visit method', 'accept method']}]",This file tests functionality related to state capture and restoration.,"{'constants': ['Defines test-related constants'], 'functions': ['Test cases for state capture and restoration']}"
hail/src/test/resources/skip_invalid_loci.sample,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skip_invalid_loci.sample,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Mediator role', 'notify method'], 'confidence': 0.8, 'evidence': ['class Mediator', 'receives messages', 'notifies colleagues']}]",This file utilizes a mediator pattern for inter-component communication.,"{'constants': [], 'types': ['Mediator class'], 'classes': ['Mediator class facilitates communication'], 'functions': ['mediate message passing']}"
