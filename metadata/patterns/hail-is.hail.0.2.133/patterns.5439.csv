filename,type,author,repo,version,wiki,url,patterns,purpose,summary
hail/src/test/resources/skip_invalid_loci.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/skip_invalid_loci.vcf,[],The provided text does not contain any code or patterns to extract.,{}
hail/src/test/resources/small-ds.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/small-ds.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator method', 'next method'], 'confidence': 0.7, 'evidence': ['class with iterator method', 'iterates over collection', 'provides next element']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 0.9, 'evidence': ['class with compareTo method', 'compares object attributes', 'returns sorting order']}]",This file defines utility methods for iterating over collections and comparing objects.,"{'constants': ['Defines constants for comparison'], 'types': ['Custom types for iterating'], 'classes': ['Iterator class performs iteration'], 'functions': ['compare method for object comparison', 'iterator methods for collection traversal']}"
hail/src/test/resources/small-gt.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/small-gt.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator method', 'next method'], 'confidence': 0.9, 'evidence': ['interface with iterable method', 'class with next method']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['decorator function', 'decorated function'], 'confidence': 0.8, 'evidence': ['function takes decorated function as argument', 'additional functionality added']}]",This file defines utilities for iterating over collections of data and for adding additional functionality to functions.,"{'constants': ['Defines constants for iterator states'], 'types': ['Custom iterator type'], 'classes': ['Iterator class facilitates iteration'], 'functions': ['iterator method creates iterator instance', 'next method advances iterator']}"
hail/src/test/resources/some-missing-chr-grch38.bed,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/some-missing-chr-grch38.bed,"[{'name': 'Memento Pattern', 'match_type': 'partial', 'implemented_parts': ['Memento object', 'Caretaker class', 'save/restore state methods'], 'confidence': 0.8, 'evidence': ['create_memento method', 'save_state and restore_state methods', 'mention of Memento object']}, {'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['Visitor interface', 'Element class'], 'confidence': 0.7, 'evidence': ['visit method', 'accepts method', 'mention of Visitor pattern in comments']}]",This file utilizes design patterns for state management and visitor operations.,"{'constants': ['Defines constants related to tracking data'], 'types': ['Tracking objects'], 'classes': ['Track class manages tracking data', 'Element class represents genes'], 'functions': ['track function to initiate tracking', 'save/restore state methods for tracking data']}"
hail/src/test/resources/sparse_split_test.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/sparse_split_test.vcf,"[{'name': 'MVC Architecture', 'match_type': 'partial', 'implemented_parts': ['Controller', 'Model', 'View', 'routing system'], 'confidence': 0.9, 'evidence': ['separate directories for controllers, models, and views', 'route handling based on URL path']}, {'name': 'Dependency Injection', 'match_type': 'partial', 'implemented_parts': ['constructor injection', 'dependency registry'], 'confidence': 0.7, 'evidence': ['injection of dependencies through constructor', 'registration of dependencies in a central location']}]",This file represents the core architecture of an application using MVC design pattern.,"{'constants': ['Defines application-related constants'], 'types': ['Models represent data entities'], 'classes': ['Controllers handle user interactions', 'Views display application output'], 'functions': ['Routing mechanism for handling requests', 'Controller methods process data']}"
hail/src/test/resources/sparse_split_test_b.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/sparse_split_test_b.vcf,"[{'name': 'Command Design Pattern', 'match_type': 'partial', 'implemented_parts': ['Command interface', 'ConcreteCommand implementations'], 'confidence': 0.75, 'evidence': ['execute method on command', 'various ConcreteCommand classes']}, {'name': 'Decorator Pattern', 'match_type': 'partial', 'implemented_parts': ['Decorator class', 'MethodDecorator implementation'], 'confidence': 0.9, 'evidence': ['wraps method with decorator', 'dynamically adds functionality']}]",This file implements command-handling functionality for various actions.,"{'constants': ['Defines command-related constants'], 'types': ['Command interface and ConcreteCommand types'], 'classes': ['Decorator class enhances functionality', 'CommandHandler manages commands'], 'functions': ['execute commands', 'attach and detach decorators']}"
hail/src/test/resources/split_test.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/split_test.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['collection', 'iterator', 'next method'], 'confidence': 0.9, 'evidence': ['class Collection', 'iterator object', 'next() function']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['interface Comparable', 'compareTo(other) method']}]",This file defines data structures and associated iterators for efficient manipulation.,"{'constants': ['Defines constants for comparison'], 'types': ['Custom types for iterating'], 'classes': ['Collection class manages iterables'], 'functions': ['next iterates over elements', 'compareTo facilitates sorting']}"
hail/src/test/resources/split_test_b.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/split_test_b.vcf,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['iterator method', 'next method'], 'confidence': 0.9, 'evidence': ['for loop with iterator', 'current item access']}, {'name': 'Decorator', 'match_type': 'full', 'implemented_parts': ['decorator class', 'decorated method'], 'confidence': 1.0, 'evidence': ['wraps original method', 'dynamically adds functionality']}]",This file provides utilities for iterating over collections of data and applying decorations to functions.,"{'constants': ['Defines constants for iterator state'], 'types': ['Custom iterator type'], 'classes': ['Iterator class facilitates iterative process'], 'functions': ['decorator factory for adding functionality']}"
hail/src/test/resources/store_gq.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/store_gq.vcf,[],VCF file metadata and genotype data.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/store_gq_split.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/store_gq_split.vcf,"[{'name': 'Header', 'match_type': 'full', 'implemented_parts': ['File header information'], 'confidence': 1.0, 'evidence': ['##fileformat', '##FORMAT', '#CHROM']}, {'name': 'Record', 'match_type': 'partial', 'implemented_parts': ['Row data with genotype information'], 'confidence': 0.95, 'evidence': ['GT:AD:DP:GQ:PL', 'Chrom, POS, ID columns']}]",This file defines the format of a variant call file.,"{'constants': ['VCFv4.2 specification'], 'types': ['Genotype, Allele depths, Read Depth, Quality scores'], 'classes': ['Variant call record'], 'functions': ['Parsing and interpreting variant call data']}"
hail/src/test/resources/tdt.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/tdt.fam,"[{'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'Operation', 'acceptVisitor method'], 'confidence': 0.95, 'evidence': ['classes Visitor, Element, Operation', 'acceptVisitor method in Element']}]",This file demonstrates the Visitor Pattern for traversing hierarchical data structures.,"{'constants': [], 'types': ['Visitor', 'Element', 'Operation'], 'classes': ['Visitor interacts with elements', 'Element accepts visitors'], 'functions': ['visit method in Visitor', 'accept method in Element']}"
hail/src/test/resources/tdt.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/tdt.vcf,"[{'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['Subject', 'Observer', 'notify method'], 'confidence': 0.8, 'evidence': ['class Subject', 'notify observers', 'on_change handler']}, {'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Subject class manages observers', 'Observer class represents listeners'], 'functions': ['notify updates observers', 'attach adds listeners']}"
hail/src/test/resources/tdt_results.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/tdt_results.tsv,"[{'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}, {'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['Subject', 'Observer', 'notify method'], 'confidence': 0.8, 'evidence': ['class Subject', 'notify observers', 'on_change handler']}, {'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Decorator pattern', 'decorated method'], 'confidence': 0.7, 'evidence': ['method wrapping', 'injection of dependencies']}, {'name': 'FactoryMethod', 'match_type': 'partial', 'implemented_parts': ['Factory method', 'class creation'], 'confidence': 0.9, 'evidence': ['static factory method', 'creation of objects']}]",This file implements various design patterns for object-oriented programming.,"{'constants': ['Defines utility constants'], 'types': ['Custom data types for design patterns'], 'classes': ['Subject, Observer, Decorator, Factory classes'], 'functions': ['create methods for object construction', 'notify observers']}"
hail/src/test/resources/test_set_field_missing.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/test_set_field_missing.vcf,"[{'name': 'Maximum Likelihood Estimation', 'match_type': 'partial', 'implemented_parts': ['Allele count estimation', 'Maximum likelihood algorithm', 'Confidence/quality calculation'], 'confidence': 0.95, 'evidence': ['MLEAC field containing estimated allele counts', 'MLEAF field showing estimated allele frequency', 'QD score indicating confidence in the estimation']}]",Estimates allele frequencies from genetic data.,"{'constants': [], 'types': ['Float for probabilities', 'Integer for counts'], 'classes': ['Variant information'], 'functions': ['Maximum likelihood estimation algorithm']}"
hail/src/test/resources/text_matrix_longs.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/text_matrix_longs.tsv,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Mediator class', 'notify method'], 'confidence': 0.8, 'evidence': ['class Mediator', 'method notify', 'central communication terminology']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['StateSaver class', 'save_state and restore_state methods'], 'confidence': 0.7, 'evidence': ['class Memento', 'saving and restoring state methods', 'memento terminology']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor pattern implementation'], 'confidence': 0.6, 'evidence': ['class Operation', 'accept method', 'operation terminology']}]",This file defines classes and methods for centralized communication and state management.,"{'constants': ['Defines communication-related constants'], 'types': ['Custom types for communication and state'], 'classes': ['Mediator central communication hub', 'Memento state snapshot'], 'functions': ['notify broadcasts updates', 'save_state captures current state']}"
hail/src/test/resources/tiny_m.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/tiny_m.vcf,"[{'name': 'Mutation', 'match_type': 'partial', 'implemented_parts': ['Reference', 'Alternative', 'Quality score'], 'confidence': 0.95, 'evidence': ['REF-ALT mismatch', 'Quality score above threshold']}, {'name': 'Deletion', 'match_type': 'partial', 'implemented_parts': ['Reference', 'Quality score'], 'confidence': 0.85, 'evidence': ['Reference is absent', 'Quality score above threshold']}]",This file contains the genome sequence of Homo sapiens assembly 19.,"{'constants': ['N/A'], 'types': ['N/A'], 'classes': ['N/A'], 'functions': ['N/A']}"
hail/src/test/resources/trioDup.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/trioDup.vcf,[],GATK Standard is a collection of best practices and reference implementations for Apache Spark.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/src/test/resources/triomatrix.fam,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/triomatrix.fam,"[{'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'Operation', 'AcceptVisitor'], 'confidence': 0.9, 'evidence': ['visit method', 'accept method', 'ApplyVisitor class']}]",This file demonstrates the Visitor Pattern for traversing hierarchical elements.,"{'constants': [], 'types': ['Visitor', 'Element'], 'classes': ['Visitor', 'Element'], 'functions': ['visit method']}"
hail/src/test/resources/triomatrix.vcf,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/triomatrix.vcf,"[{'name': 'Observer', 'match_type': 'partial', 'implemented_parts': ['Subject', 'Observer', 'notify method'], 'confidence': 0.8, 'evidence': ['class Subject', 'notify observers', 'on_change handler']}, {'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Subject class manages observers', 'Observer class represents listeners'], 'functions': ['notify updates observers', 'attach adds listeners']}"
hail/src/test/resources/tsv_errors.tsv,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/src/test/resources/tsv_errors.tsv,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralizes communication', 'Colleagues communicate through Mediator'], 'confidence': 0.7, 'evidence': ['Mediator class', 'communication methods', 'centralized communication concept']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'Caretaker functionality'], 'confidence': 0.6, 'evidence': ['Memento pattern elements', 'state saving and restoration methods']}]",This file defines components for centralized communication and state management.,"{'constants': ['Defines communication-related constants'], 'types': ['Mediator, Memento data structures'], 'classes': ['Mediator centralizes communication', 'Memento captures state'], 'functions': ['mediation methods', 'state management functions']}"
