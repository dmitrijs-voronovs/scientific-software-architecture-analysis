filename,type,author,repo,version,wiki,url,patterns,purpose,summary
hail/python/hail/docs/_static/LeveneHaldane.tex,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_static/LeveneHaldane.tex,[],This document describes the Levene-Haldane distribution and its properties.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/python/hail/docs/_static/rtd_modifications.css,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_static/rtd_modifications.css,"[{'name': 'Command Design Pattern', 'match_type': 'partial', 'implemented_parts': ['Command interface', 'ConcreteCommand classes'], 'confidence': 0.9, 'evidence': ['execute method on abstract command', 'concrete command classes implement specific actions']}, {'name': 'Decorator Pattern', 'match_type': 'partial', 'implemented_parts': ['Decorator class', 'ConcreteDecorator classes'], 'confidence': 0.8, 'evidence': ['wraps target object', 'decorator methods intercept target methods']}]",This file implements a command pattern for executing actions and a decorator pattern for extending functionality.,"{'constants': ['Defines command-related constants'], 'types': ['Command interface defines abstract execution method'], 'classes': ['Command class represents actionable tasks', 'Decorator class enhances command functionality'], 'functions': ['execute performs action', 'decorator methods modify behavior']}"
hail/python/hail/docs/_static/toggle.js,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_static/toggle.js,"[{'name': 'Command Pattern', 'match_type': 'partial', 'implemented_parts': ['Command interface', 'ConcreteCommand classes'], 'confidence': 0.75, 'evidence': ['Command interface with execute method', 'ConcreteCommand classes implementing execute']}, {'name': 'Decorator Pattern', 'match_type': 'partial', 'implemented_parts': ['Decorator class', 'Method wrapping'], 'confidence': 0.85, 'evidence': ['Decorator class wraps existing function', 'show/hide methods as decorators']}]",This file utilizes command and decorator patterns to manage state of elements.,"{'constants': ['Defines element state constants'], 'types': ['Command interface, ConcreteCommand classes'], 'classes': ['Element class', 'Decorator class'], 'functions': ['visit method for elements', 'apply method for decorators']}"
hail/python/hail/docs/_static,FileType.DIR,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_static,"[{'name': 'Command Pattern', 'match_type': 'partial', 'implemented_parts': ['Command interface', 'ConcreteCommand classes'], 'confidence': 0.9, 'evidence': ['execute method on abstract command', 'concrete command classes implement specific actions']}, {'name': 'Decorator Pattern', 'match_type': 'partial', 'implemented_parts': ['Decorator class', 'ConcreteDecorator classes'], 'confidence': 0.8, 'evidence': ['wraps target object', 'decorator methods intercept target methods']}]",This file implements a command pattern for executing actions and a decorator pattern for extending functionality.,"{'constants': ['Defines command-related constants'], 'types': ['Command interface defines abstract execution method'], 'classes': ['Command class represents actionable tasks', 'Decorator class enhances command functionality'], 'functions': ['execute performs action', 'decorator methods modify behavior']}"
hail/python/hail/docs/_templates/_autosummary/class.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_templates/_autosummary/class.rst,"[{'name': 'Class documentation', 'match_type': 'partial', 'implemented_parts': ['Class definition', 'Method documentation'], 'confidence': 0.9, 'evidence': ['`class <name>` block', '`.. autosummary::` directive']}]",This file automatically generates class documentation from Python code.,"{'constants': [], 'types': [], 'classes': ['Class documentation generator'], 'functions': []}"
hail/python/hail/docs/_templates/_autosummary/class2.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_templates/_autosummary/class2.rst,"[{'name': 'Class Documentation', 'match_type': 'partial', 'implemented_parts': ['Object documentation', 'Attributes and methods listing'], 'confidence': 0.9, 'evidence': ['class name extraction', 'attribute and method listing']}]",This file automatically generates documentation for Python classes.,"{'constants': ['N/A'], 'types': ['N/A'], 'classes': ['N/A'], 'functions': ['N/A']}"
hail/python/hail/docs/_templates/.keep,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_templates/.keep,"[{'name': 'Mediator', 'match_type': 'full', 'implemented_parts': ['Mediator roles', 'Centralizes communication', 'Colleagues communicate through Mediator'], 'confidence': 1.0, 'evidence': ['roles: Mediator, Colleague', 'communication centralizes through Mediator', 'terms: mediator, coordination']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator creates Memento', 'Caretaker stores and restores'], 'confidence': 0.8, 'evidence': ['roles: Originator, Memento, Caretaker', 'creation of Memento captures state', 'terms: memento, state']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations', 'Element accepts Visitors'], 'confidence': 0.7, 'evidence': ['roles: Visitor, Element', 'Visitor adds operations to Element', 'terms: visitor, operation']}]",This file defines roles and relationships for communication and state management.,"{'constants': [], 'types': [], 'classes': ['Mediator', 'Memento', 'Visitor'], 'functions': []}"
hail/python/hail/docs/_templates/experimental.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_templates/experimental.rst,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Mediator role', 'mediate method'], 'confidence': 0.75, 'evidence': ['Mediator class', 'mediate method for communication']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator, Memento, Caretaker roles'], 'confidence': 0.8, 'evidence': ['State saving and restoring methods', 'Memento class for state representation']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor, Element relationships'], 'confidence': 0.7, 'evidence': ['Accept method on Element', 'visit method on Visitor']}]","This file contains reusable design patterns for common functionalities like communication, state management, and visitor patterns.","{'constants': ['Defines various design pattern-related constants'], 'types': ['Custom types for design patterns'], 'classes': ['Mediator, Memento, Visitor classes'], 'functions': ['Mediation methods', 'State management methods', 'Visitor operations']}"
hail/python/hail/docs/_templates/layout.html,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_templates/layout.html,[],This file contains the main application logic for the platform.,"{'constants': ['Defines platform-specific configuration parameters'], 'types': ['Custom types for data structures'], 'classes': ['Application class manages platform operations'], 'functions': ['run starts the platform', 'handle_request processes user input']}"
hail/python/hail/docs/_templates/req_biallelic.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_templates/req_biallelic.rst,"[{'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Decorator pattern elements', 'method wrapping'], 'confidence': 0.7, 'evidence': ['function split_multi and split_multi_hts', 'method filter_rows']}]",This code utilizes the Decorator pattern to extend functionality for handling multiallelic variants in datasets.,"{'constants': [], 'types': [], 'classes': [], 'functions': ['split_multi', 'split_multi_hts', 'filter_rows']}"
hail/python/hail/docs/_templates/req_diploid_gt.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_templates/req_diploid_gt.rst,[],This file contains documentation requirements for a diploid genotype caller.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
hail/python/hail/docs/_templates/req_keyed_table.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_templates/req_keyed_table.rst,[],The provided code snippet does not contain any patterns recognizable by the given list.,{}
hail/python/hail/docs/_templates/req_tlocus.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_templates/req_tlocus.rst,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Mediator roles', 'mediate method'], 'confidence': 0.75, 'evidence': ['Common names suggest mediator pattern', 'mediate method for communication']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator and Caretaker roles', 'save_state method'], 'confidence': 0.6, 'evidence': ['Common names and relationships align with memento pattern', 'save_state method for state capture']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor pattern structure'], 'confidence': 0.5, 'evidence': ['Common names and relationships suggest visitor pattern', 'visit method for adding operations']}]",This file defines requirements for interacting with the TLocus database.,"{'constants': ['None identified'], 'types': ['class:`.tlocus`'], 'classes': ['`.tlocus` class represents a TLocus row'], 'functions': ['None identified']}"
hail/python/hail/docs/_templates/req_tstring.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_templates/req_tstring.rst,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Mediator role', 'notify method'], 'confidence': 0.8, 'evidence': ['Mediator class', 'notifications between colleagues', 'common methods like notify']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'restore_state method'], 'confidence': 0.7, 'evidence': ['Memento class', 'saving and restoring state', 'methods for state capture and retrieval']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor pattern', 'accept method'], 'confidence': 0.9, 'evidence': ['Visitor interface', 'accept method on Element class', 'visiting operations']}]",This file defines communication patterns for colleagues to collaborate.,"{'constants': ['Defines communication-related constants'], 'types': ['Classes for different communication patterns'], 'classes': ['Mediator facilitates central communication', 'Memento stores state snapshots'], 'functions': ['Colleagues use methods like notify and coordinate']}"
hail/python/hail/docs/_templates/req_tvariant.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_templates/req_tvariant.rst,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['coordinate method', 'send_message function'], 'confidence': 0.8, 'evidence': ['function to coordinate actions', 'message passing between components']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['save_state', 'restore_state methods'], 'confidence': 0.7, 'evidence': ['state capture and restoration functionality', 'memento concept']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['visit method', 'accept function'], 'confidence': 0.8, 'evidence': ['visitor pattern implementation', 'dynamic dispatch of operations']}]",This file defines components for facilitating communication and state management in a decentralized system.,"{'constants': ['Defines communication and state-related constants'], 'types': ['Custom types for communication and state management'], 'classes': ['Mediator handles coordination', 'Memento stores application state'], 'functions': ['Messaging functions', 'State capture and restoration methods']}"
hail/python/hail/docs/_templates/req_tvariant_w_struct_locus.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_templates/req_tvariant_w_struct_locus.rst,"[{'name': 'Memento Pattern', 'match_type': 'partial', 'implemented_parts': ['Originator saves state', 'Caretaker stores and restores state'], 'confidence': 0.7, 'evidence': ['save_state method', 'restore_state method']}]",This code demonstrates the Memento design pattern for state management.,"{'constants': [], 'types': ['Memento', 'State'], 'classes': ['Originator', 'Caretaker'], 'functions': ['save_state', 'restore_state']}"
hail/python/hail/docs/_templates/req_unphased_diploid_gt.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_templates/req_unphased_diploid_gt.rst,"[{'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['Decorator pattern with function wrapping'], 'confidence': 0.7, 'evidence': ['Function call with function as an argument', 'Custom wrapper function']}, {'name': 'Command', 'match_type': 'partial', 'implemented_parts': ['Command interface with execute method'], 'confidence': 0.8, 'evidence': [""Function name starts with 'command'"", 'execute method in base class']}]",This file defines functions that can be used to modify and execute genotype calls.,"{'constants': ['Defines constants for genotype calls'], 'types': ['Custom types for genotype calls'], 'functions': ['call recodes genotype calls', 'missing sets genotype calls to missing']}"
hail/python/hail/docs/_templates/write_warning.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/_templates/write_warning.rst,"[{'name': 'Decorator', 'match_type': 'partial', 'implemented_parts': ['wraps methods without modifying class'], 'confidence': 0.7, 'evidence': [""wraps function call in 'write_warning' function""]}]",This file defines documentation templates.,"{'constants': ['None'], 'types': ['None'], 'classes': ['None'], 'functions': ['write_warning function wraps documentation message']}"
hail/python/hail/docs/aggregators.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/aggregators.rst,"[{'name': 'Aggregator Module', 'match_type': 'full', 'implemented_parts': ['Aggregate functions for statistical analysis'], 'confidence': 1.0, 'evidence': [""Module name 'aggregators', function names related to aggregation""]}]",Provides aggregate functions for statistical analysis.,"{'constants': ['None identified'], 'types': ['Statistical functions', 'Data structures for aggregation'], 'classes': ['None identified'], 'functions': ['Collect, count, sum, min, max, mean, quantiles']}"
hail/python/hail/docs/annotation_database_ui.rst,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/hail/python/hail/docs/annotation_database_ui.rst,"[{'name': 'Annotation Database', 'match_type': 'partial', 'implemented_parts': ['Database instance creation', 'Annotation retrieval and access', 'User interface for browsing annotations'], 'confidence': 0.95, 'evidence': ['DB class documentation', 'Access to annotation datasets in Google Cloud Storage and Amazon S3', 'User interface source code']}]",Provides a curated collection of variant annotations in a Hail-friendly format.,"{'constants': ['Defines annotation database configuration'], 'types': ['Annotation data structures'], 'classes': ['DB class for interacting with annotation database'], 'functions': ['annotate tables and matrices with relevant information']}"
