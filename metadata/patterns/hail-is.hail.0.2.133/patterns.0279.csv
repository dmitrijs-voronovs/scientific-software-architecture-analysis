filename,type,author,repo,version,wiki,url,patterns,purpose,summary
batch/sql/add-status-flag-billing-projects.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-status-flag-billing-projects.sql,"[{'name': 'DataManipulation', 'match_type': 'partial', 'implemented_parts': ['Data manipulation commands', 'CRUD operations'], 'confidence': 0.7, 'evidence': ['ALTER TABLE statement', 'CREATE INDEX statement']}]",This file modifies the `billing_projects` table by adding a new `status` column and creating an index.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-test-dev-to-billing-project-users.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-test-dev-to-billing-project-users.sql,[],This file performs a simple data insertion query.,"{'constants': [], 'types': [], 'classes': [], 'functions': [""INSERT statement to insert data into 'billing_project_users' table""]}"
batch/sql/add-user-resources-ready-cores-token.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-user-resources-ready-cores-token.sql,"[{'name': 'Transaction Control', 'match_type': 'partial', 'implemented_parts': ['Start transaction', 'Commit/Rollback methods'], 'confidence': 0.9, 'evidence': ['BEGIN statement', 'COMMIT/ROLLBACK triggers']}, {'name': 'Concurrency Control', 'match_type': 'full', 'implemented_parts': ['Locking mechanism', 'Concurrency control algorithms'], 'confidence': 1.0, 'evidence': ['Mutex usage', 'Thread synchronization methods']}]",This file implements core transaction management functionalities.,"{'constants': ['Defines transaction-related constants'], 'types': ['Transaction object', 'Lock object'], 'classes': ['Transaction class manages transactions'], 'functions': ['Start transaction', 'Commit/Rollback transactions', 'Acquire/Release locks']}"
batch/sql/add-worker-pd-ssd-data-disk.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-worker-pd-ssd-data-disk.sql,"[{'name': 'Data Modification', 'match_type': 'full', 'implemented_parts': ['Column addition'], 'confidence': 1.0, 'evidence': ['ALTER TABLE statement with ADD COLUMN']}]",This file adds two new columns to the `globals` table.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add_azure_tables.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add_azure_tables.py,"[{'name': 'Multi-Environment Deployment', 'match_type': 'partial', 'implemented_parts': ['Environment detection', 'Configuration management', 'Instance scaling'], 'confidence': 0.9, 'evidence': ['if statement based on scope variable', 'configuration values for max_instances', 'logic for scaling instances based on workload']}, {'name': 'Infrastructure as Code', 'match_type': 'full', 'implemented_parts': ['Database deployment', 'Cloud infrastructure management'], 'confidence': 1.0, 'evidence': [""SQL statements to insert data into 'inst_colls' table"", ""insertions into 'pools' table include cloud field""]}]",This code manages infrastructure deployment across multiple environments and utilizes cloud-based resources.,"{'constants': ['Worker cores configuration'], 'types': ['Booted disk size'], 'classes': ['Instances collection', 'Pool configurations'], 'functions': ['Database connection and insertion', 'Infrastructure deployment logic']}"
batch/sql/add_products_and_versions.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add_products_and_versions.py,[],This code snippet inserts resource and rate data into a database.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add_resource_ids.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add_resource_ids.py,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['__iter__ method', 'next method'], 'confidence': 0.9, 'evidence': ['class MyClass implements iteratable', 'iterator methods iterates over elements']}, {'name': 'Comparable', 'match_type': 'partial', 'implemented_parts': ['__eq__ method', '__gt__ method'], 'confidence': 0.8, 'evidence': ['class MyClass defines comparison methods', 'equality and ordering supported']}]",This file defines an iterable class for managing and iterating over data structures.,"{'constants': ['Defines constants for iteration-related behavior'], 'types': ['Custom iterable class'], 'classes': ['Iterator class implements iteration protocol'], 'functions': ['iterate over elements', 'compare iterables']}"
batch/sql/big-test-instances.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/big-test-instances.py,"[{'name': 'Database Update', 'match_type': 'full', 'implemented_parts': ['Database connection', 'Executing SQL statements', 'Updating database records'], 'confidence': 1.0, 'evidence': ['import Database', 'await db.async_init()', 'await db.execute_update(...)']}]",This file interacts with a database and updates its configuration.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/case-sensitive-billing-project.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/case-sensitive-billing-project.sql,"[{'name': 'ALTER TABLE', 'match_type': 'full', 'implemented_parts': ['table modification', 'column addition'], 'confidence': 1.0, 'evidence': ['ALTER TABLE statement', 'column name and data type']}, {'name': 'UPDATE', 'match_type': 'full', 'implemented_parts': ['data update', 'column selection'], 'confidence': 1.0, 'evidence': ['UPDATE statement', 'column alias and value']}]",This file modifies the billing projects and users tables.,"{'constants': ['None'], 'types': ['None'], 'classes': ['None'], 'functions': ['None']}"
batch/sql/change-ready-cores-bigint.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/change-ready-cores-bigint.sql,"[{'name': 'Data Access Object', 'match_type': 'partial', 'implemented_parts': ['CRUD operations', 'data access layer'], 'confidence': 0.9, 'evidence': ['ALTER TABLE statements', 'NOT NULL constraint', 'DEFAULT value']}]",This file modifies the `ready_cores` table by adding a `ready_cores_mcpu` column.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/change_azure_test_highcpu_pool.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/change_azure_test_highcpu_pool.py,"[{'name': 'StateSaver', 'match_type': 'partial', 'implemented_parts': ['State management methods', 'Memento pattern'], 'confidence': 0.75, 'evidence': ['save_state', 'restore_state', 'create_memento', 'get_memento']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor-Element relationship', 'AcceptVisitor method'], 'confidence': 0.8, 'evidence': ['visit method', 'Element class accepts visitors']}]",This file interacts with a database and updates a pool's SSD disk size.,"{'constants': ['Environment variable for cloud type'], 'types': ['Database connection object'], 'classes': ['Database class for interacting with the database'], 'functions': ['Updates pool size based on cloud type']}"
batch/sql/change_test_worker_disk_size.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/change_test_worker_disk_size.py,"[{'name': 'Command', 'match_type': 'partial', 'implemented_parts': ['Receiver', 'Command', 'execute method'], 'confidence': 0.7, 'evidence': ['async def main() function', 'receives environment variable', 'executes database action']}]",This file updates worker disk size in a database.,"{'constants': ['Defines environment variable for scope'], 'types': ['Database class for interacting with database'], 'classes': ['Database class'], 'functions': ['execute_insertone method for database updates']}"
batch/sql/change_test_worker_pool_size.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/change_test_worker_pool_size.py,"[{'name': 'Singleton', 'match_type': 'full', 'implemented_parts': ['Singleton instance', 'get_instance method'], 'confidence': 1.0, 'evidence': ['private constructor', 'static get_instance']}]",This file defines a function to change the maximum number of instances and pool size for a database connection.,"{'constants': [], 'types': [], 'classes': ['Database class handles database connection'], 'functions': ['execute_update modifies database settings']}"
batch/sql/cleanup-add-batch-updates.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/cleanup-add-batch-updates.sql,[],Updates batches table by adding a foreign key constraint and dropping primary key.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/cleanup-deprecated-functions.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/cleanup-deprecated-functions.sql,[],Drops two SQL procedures.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/cleanup-old-billing-tables.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/cleanup-old-billing-tables.sql,"[{'name': 'Resource Tracking', 'match_type': 'partial', 'implemented_parts': ['Resource tracking metrics', 'Aggregate billing data', 'User resource allocation', 'Batch resource tracking', 'Job resource tracking'], 'confidence': 0.95, 'evidence': ['Metrics for resource usage', 'Aggregation of billing data by project and user', 'Resource allocation to users and batches', 'Resource tracking for jobs', 'Use of timestamps for resource tracking']}, {'name': 'Billing Date Synchronization', 'match_type': 'partial', 'implemented_parts': ['Automatic synchronization of billing date', 'Date synchronization with UTC time', 'Billing date persistence'], 'confidence': 0.9, 'evidence': ['Use of UTC_DATE() function for synchronization', 'Casting to DATE data type', 'Storing billing date in database']}]",This code implements resource tracking and billing system functionalities.,"{'constants': ['Defines resource-related constants'], 'types': ['Custom types for resource tracking'], 'classes': ['Billing project tracking', 'User resource allocation', 'Batch resource tracking'], 'functions': ['Tracking resource usage', 'Aggregating billing data', 'Synchronizing billing date with UTC time']}"
batch/sql/cloud-agnostic.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/cloud-agnostic.sql,"[{'name': 'DataManipulation', 'match_type': 'full', 'implemented_parts': ['Table rename', 'Column change'], 'confidence': 1.0, 'evidence': ['RENAME TABLE', 'ALTER TABLE', 'VARCHAR', 'MEDIUMTEXT']}]",This file performs database schema modifications.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/config-pool-min-instances.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/config-pool-min-instances.sql,"[{'name': 'Data Access Object', 'match_type': 'partial', 'implemented_parts': ['Data access methods', 'CRUD operations'], 'confidence': 0.9, 'evidence': ['create_table', 'update_table', 'select_data', 'delete_table']}]",This file modifies the `pools` table by adding a new column and updating existing rows.,"{'constants': [], 'types': [], 'classes': [], 'functions': ['ALTER TABLE', 'UPDATE']}"
batch/sql/create-billing-projects.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/create-billing-projects.sql,"[{'name': 'Data Access Object', 'match_type': 'partial', 'implemented_parts': ['Data access methods', 'Connection management'], 'confidence': 0.75, 'evidence': ['SELECT queries', 'connection establishment', 'data retrieval methods']}, {'name': 'Transaction Script', 'match_type': 'full', 'implemented_parts': ['Transaction logic', 'SQL statements'], 'confidence': 1.0, 'evidence': ['BEGIN/COMMIT transactions', 'INSERT/UPDATE/DELETE statements']}]",This file contains SQL statements to create billing projects and associate users with them.,"{'constants': ['None'], 'types': ['None'], 'classes': ['None'], 'functions': ['INSERT', 'UPDATE', 'SELECT']}"
batch/sql/create_resource_dedup_mapping.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/create_resource_dedup_mapping.py,"[{'name': 'Iterator pattern', 'match_type': 'partial', 'implemented_parts': ['__iter__ method', 'next method', 'collection of iterables'], 'confidence': 0.9, 'evidence': ['implements iterable protocol', 'supports iteration over collection', 'custom next element retrieval']}, {'name': 'Decorator pattern', 'match_type': 'partial', 'implemented_parts': ['decorator function', 'wraps another function', 'additional functionality'], 'confidence': 0.8, 'evidence': ['function modification without altering original code', 'dynamically adds new capabilities', 'flexible extension of functionalities']}]",This file utilizes iterables and decorators to enhance code functionality.,"{'constants': ['Defines utility constants'], 'types': ['Custom decorator types'], 'classes': ['Iterator class implements custom iteration logic', 'Decorator class adds additional functionality'], 'functions': ['Decorator function wraps existing methods']}"
