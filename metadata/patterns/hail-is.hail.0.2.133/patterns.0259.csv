filename,type,author,repo,version,wiki,url,patterns,purpose,summary
batch/sql/add-fail-fast.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-fail-fast.sql,[],Adds a new column to the batches table.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-feature-flags.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-feature-flags.sql,"[{'name': 'Data Access Object', 'match_type': 'partial', 'implemented_parts': ['Data access methods', 'Database connection handling'], 'confidence': 0.7, 'evidence': ['CREATE TABLE statement', 'INSERT INTO statement', 'ENGINE = InnoDB']}]",This file creates a table and inserts an initial record into a database.,"{'constants': [], 'types': [], 'classes': [], 'functions': ['CREATE TABLE', 'INSERT INTO']}"
batch/sql/add-frozen-mode.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-frozen-mode.sql,"[{'name': 'DataModifier', 'match_type': 'partial', 'implemented_parts': ['Data modification methods'], 'confidence': 0.7, 'evidence': ['ALTER TABLE statement', '`frozen` column addition']}]",This file adds a `frozen` column to the `globals` table.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-gcp-support-logs-specs-and-firewall-fees.py,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-gcp-support-logs-specs-and-firewall-fees.py,"[{'name': 'Database Connection', 'match_type': 'partial', 'implemented_parts': ['Database connection establishment'], 'confidence': 0.9, 'evidence': ['Database class', 'async_init method']}, {'name': 'Transaction Management', 'match_type': 'partial', 'implemented_parts': ['Transaction initiation and execution'], 'confidence': 0.8, 'evidence': ['@transaction decorator', 'tx.execute_insertone method']}]",This file adds support for GCP-related logs and firewall fees in Hail.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-inst-colls.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-inst-colls.sql,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator object', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['class implementing Iterator', 'implements Iterable interface', 'contains loop logic']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['class defines compareTo method', 'implements Comparable interface']}]",This file defines an iterator class for iterating over lists and performing comparisons.,"{'constants': ['Defines comparison constants'], 'types': ['Custom iterator type'], 'classes': ['Iterator class for performing iteration'], 'functions': ['compares elements during iteration']}"
batch/sql/add-instance-config.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-instance-config.sql,[],Adds a new column to the instances table.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-instance-zone.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-instance-zone.sql,"[{'name': 'Data Modification', 'match_type': 'full', 'implemented_parts': ['Column addition and modification'], 'confidence': 1.0, 'evidence': ['ALTER TABLE statement', 'ADD COLUMN', 'MODIFY COLUMN']}]",This file modifies the `instances` table by adding a new `zone` column and modifying its existing `zone` column.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-job-private-inst-coll.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-job-private-inst-coll.sql,"[{'name': 'DataInsert', 'match_type': 'partial', 'implemented_parts': ['SELECT statement', 'table modification'], 'confidence': 0.9, 'evidence': ['INSERT INTO statement', 'table update with new column']}, {'name': 'DataUpdate', 'match_type': 'partial', 'implemented_parts': ['SELECT statement', 'UPDATE statement'], 'confidence': 0.8, 'evidence': ['SELECT statement with WHERE clause', 'UPDATE statement with CONCAT function']}]",This file adds private instances to a collection and updates instances with machine type and preemptibility.,"{'constants': ['Defines boot disk size and number of instances'], 'types': ['None'], 'classes': ['None'], 'functions': ['SELECT and INSERT statements for collection management', 'UPDATE statement for instances']}"
batch/sql/add-job-regions.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-job-regions.sql,"[{'name': 'Data Access Object', 'match_type': 'partial', 'implemented_parts': ['CRUD methods', 'database connection handling'], 'confidence': 0.75, 'evidence': ['CREATE TABLE statement', 'ALTER TABLE statement', 'INDEX creation', 'INT and BIGINT data types']}, {'name': 'Command Design Pattern', 'match_type': 'partial', 'implemented_parts': ['Adding new columns without modifying existing schema'], 'confidence': 0.8, 'evidence': ['ALGORITHM=INSTANT clause', 'default values for new columns']}]",This file defines the schema for the `regions` table and adds related columns to the `jobs` table.,"{'constants': ['None'], 'types': ['INT', 'VARCHAR'], 'classes': ['None'], 'functions': ['CREATE TABLE', 'ALTER TABLE']}"
batch/sql/add-jobs-ready-time.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-jobs-ready-time.sql,"[{'name': 'Transaction Control Flow', 'match_type': 'partial', 'implemented_parts': ['Transaction isolation', 'Concurrency control mechanisms', 'Rollback or commit logic'], 'confidence': 0.9, 'evidence': ['SELECT statement within transaction', 'Commit or rollback triggers', 'Isolation level configuration']}, {'name': 'Job Scheduling and Monitoring', 'match_type': 'full', 'implemented_parts': ['Batch job management', 'Job dependencies', 'Monitoring and status updates'], 'confidence': 1.0, 'evidence': ['Jobs defined with batch ID', 'Job state tracking table', 'Telemetry data collection']}]",This file orchestrates job execution and tracks their status.,"{'constants': ['Defines batch job configuration'], 'types': ['Job status enumeration'], 'classes': ['Batch class manages job batches'], 'functions': ['Schedule jobs', 'Monitor job progress']}"
batch/sql/add-jobs-update-id-index.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-jobs-update-id-index.sql,[],Creates an index on the `batch_id` and `update_id` columns of the `jobs` table.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-latest-product-versions.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-latest-product-versions.sql,"[{'name': 'Data Access Object', 'match_type': 'partial', 'implemented_parts': ['Retrieves and persists data'], 'confidence': 0.8, 'evidence': ['CREATE TABLE statement', 'time_updated timestamp']}]",This file defines a table to store the latest product versions.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-list-batches-index.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-list-batches-index.sql,[],Creates an index on the `value` column of the `batch_attributes` table.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-lock-in-share-mode.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-lock-in-share-mode.sql,[],Marks a job as started in the batch system.,"{'functions': ['Calculates cores required for job', 'Updates job status and attempt information'], 'classes': ['Attempts table', 'Jobs table'], 'constants': ['`delta_cores_mcpu` - variable for cores difference']}"
batch/sql/add-nonpreemptible-pools.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-nonpreemptible-pools.sql,"[{'name': 'HighCPU Instance', 'match_type': 'partial', 'implemented_parts': ['Cloud instance type', 'Maximum instances', 'Maximum live instances', 'Boot disk size'], 'confidence': 0.95, 'evidence': [""SELECT 'highcpu-np', 1, boot_disk_size_gb, max_instances, max_live_instances, cloud FROM inst_colls WHERE name = 'highcpu'"", 'ALTER TABLE `pools` ADD `preemptible` BOOLEAN NOT NULL DEFAULT TRUE']}]",This code defines configurations for high CPU instances in a cloud environment.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-oms-agent-flag.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-oms-agent-flag.sql,"[{'name': 'Data Access Object (DAO)', 'match_type': 'partial', 'implemented_parts': ['SQL statements'], 'confidence': 0.7, 'evidence': ['ALTER TABLE statement']}]",This file adds a new column to the `feature_flags` table.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
batch/sql/add-product-sku.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-product-sku.sql,"[{'name': 'Data Access Object', 'match_type': 'partial', 'implemented_parts': ['CRUD operations', 'connection management'], 'confidence': 0.75, 'evidence': ['SELECT', 'INSERT', 'UPDATE', 'DELETE statements', 'connection pool']}]",This file defines the interface for accessing and manipulating data in a database.,"{'constants': [], 'types': ['Database connection', 'Data record'], 'classes': ['ProductDao class performs CRUD operations'], 'functions': ['get_products', 'create_product', 'update_product', 'delete_product']}"
batch/sql/add-real-time-billing.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-real-time-billing.sql,"[{'name': 'Job Status Update', 'match_type': 'partial', 'implemented_parts': ['Batch update logic', 'Job state tracking', 'Parent-child relationships'], 'confidence': 0.95, 'evidence': ['SELECT statement updates batch time and state', 'JOIN with job_parents table to update job state', 'IF statement checks for completion of the batch']}, {'name': 'Job Cancellation Handling', 'match_type': 'partial', 'implemented_parts': ['Cancellation detection', 'Parent job state update', 'Cancelled job tracking'], 'confidence': 0.85, 'evidence': [""new_state is checked against 'Cancelled'"", ""Job state is set to 'Ready' or 'Pending' based on parent state"", 'Cancelled jobs are explicitly marked']}]",This stored procedure manages the state and cancellation of jobs within a batch.,"{'constants': ['None identified'], 'types': ['Job status', 'Batch ID'], 'classes': ['Jobs', 'Batches'], 'functions': ['Job state transition logic', 'Batch update functions']}"
batch/sql/add-resource-ids.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-resource-ids.sql,"[{'name': 'Data Modification', 'match_type': 'full', 'implemented_parts': ['ALTER TABLE statement', 'AUTO_INCREMENT', 'FOREIGN KEY constraint'], 'confidence': 1.0, 'evidence': ['ADD COLUMN resource_id', 'AUTO_INCREMENT', 'FOREIGN KEY constraint creation']}, {'name': 'Trigger Definition', 'match_type': 'partial', 'implemented_parts': ['BEFORE INSERT trigger', 'NEW.resource_id assignment'], 'confidence': 0.8, 'evidence': ['CREATE TRIGGER statement', 'NEW keyword refers to inserted data', 'resource_id assignment']}]",This file adds a resource ID column to two tables and defines a trigger to automatically assign a resource ID to new attempts.,"{'constants': ['None'], 'types': ['INT'], 'classes': ['None'], 'functions': ['ALTER TABLE', 'CREATE TRIGGER']}"
batch/sql/add-resources.sql,FileType.FILE,hail-is,hail,0.2.133,https://hail.is,https://github.com/hail-is/hail/tree/0.2.133/batch/sql/add-resources.sql,"[{'name': 'Transaction Log', 'match_type': 'partial', 'implemented_parts': ['Logging function', 'Timestamped records'], 'confidence': 0.9, 'evidence': ['SELECT FROM logs', 'INSERT INTO logs']}, {'name': 'Data Access Layer', 'match_type': 'full', 'implemented_parts': ['Database connection', 'CRUD operations'], 'confidence': 1.0, 'evidence': ['CREATE TABLE statement', 'SELECT/INSERT/UPDATE/DELETE methods']}]",This file manages data access and persistence for an application.,"{'constants': ['Defines database connection parameters'], 'types': ['Data models for various entities'], 'classes': ['DataAccess class handles data access'], 'functions': ['Retrieve, create, update, and delete data from a database']}"
