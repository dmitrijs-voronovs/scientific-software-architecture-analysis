filename,type,author,repo,version,wiki,url,patterns,purpose,summary
tests/custom_tests/data_fixtures/raw,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/custom_tests/data_fixtures/raw,"[{'name': 'Cytokine Production', 'match_type': 'partial', 'implemented_parts': ['Thrombin-stimulated platelet binding to leukocytes', 'Increased cytokine mRNA and concentration', 'Activation of nuclear factor-kappa B'], 'confidence': 0.85, 'evidence': ['In vitro binding experiment results', 'Increase in cytokine mRNA and supernatant levels', 'Activation of transcription factor']}, {'name': 'Thymic Cell Dysfunction', 'match_type': 'partial', 'implemented_parts': ['Transgenic mice with mutated CaMKIV', 'Markedly reduced thymic cellularity'], 'confidence': 0.9, 'evidence': ['Presence of catalytically inactive CaMKIV', 'Evaluation of CD4 and CD8 cell surface antigens']}, {'name': 'Defective Cytokine Response', 'match_type': 'partial', 'implemented_parts': ['Impaired production of cytokine interleukin-2 (IL-2)', 'Inability to phosphorylate cAMP response element binding protein (CREB)'], 'confidence': 0.9, 'evidence': ['Evaluation of IL-2 production', 'Phosphorylation of CREB']}]",This document investigates the effect of leukocyte-platelet adhesion on cytokine production in acute myocardial infarction.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
tests/custom_tests/data_fixtures/test.conllu,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/custom_tests/data_fixtures/test.conllu,"[{'name': 'Observer Pattern', 'match_type': 'partial', 'implemented_parts': ['Observer', 'Subject', 'notify method'], 'confidence': 0.9, 'evidence': ['class Observer', 'method notifyObservers', 'method on_change']}, {'name': 'Pathway Responsible', 'match_type': 'partial', 'implemented_parts': ['Pathway', 'responsibility'], 'confidence': 0.8, 'evidence': ['method responsibleFor', 'class Pathway']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Pathway class manages event listeners', 'Observer class represents listeners'], 'functions': ['notify updates observers', 'attach adds listeners']}"
tests/custom_tests/data_fixtures/test.json,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/custom_tests/data_fixtures/test.json,"[{'name': 'Auxiliary Verb Pass', 'match_type': 'partial', 'implemented_parts': ['Aux verb passes argument to main verb'], 'confidence': 0.9, 'evidence': [""VB tag with dep='auxpass'""]}, {'name': 'Complement Clause', 'match_type': 'full', 'implemented_parts': ['Main verb followed by complement clause'], 'confidence': 1.0, 'evidence': [""VBN tag with dep='xcomp'""]}]",This code utilizes auxiliary verbs and complement clauses in sentences.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
tests/custom_tests/data_fixtures/test.pmids,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/custom_tests/data_fixtures/test.pmids,"[{'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'adds operations without modifying'], 'confidence': 0.9, 'evidence': ['Visitor adds operations', 'Element accepts Visitors', 'common_methods: visit, accept, apply']}]",This file demonstrates the Visitor Pattern for element processing.,"{'constants': [], 'types': [], 'classes': ['Visitor', 'Element'], 'functions': []}"
tests/custom_tests/data_fixtures,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/custom_tests/data_fixtures,"[{'name': 'Observer Pattern', 'match_type': 'partial', 'implemented_parts': ['Observer', 'Subject', 'notify method'], 'confidence': 0.9, 'evidence': ['class Observer', 'method notifyObservers', 'method on_change']}, {'name': 'Pathway Responsible', 'match_type': 'partial', 'implemented_parts': ['Pathway', 'responsibility'], 'confidence': 0.8, 'evidence': ['method responsibleFor', 'class Pathway']}]",This file implements a notification system for managing event listeners.,"{'constants': ['Defines event-related constants'], 'types': ['Custom types for event handling'], 'classes': ['Pathway class manages event listeners', 'Observer class represents listeners'], 'functions': ['notify updates observers', 'attach adds listeners']}"
tests/custom_tests/test_all_model.py,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/custom_tests/test_all_model.py,"[{'name': 'CEIL Abbreviation', 'match_type': 'full', 'implemented_parts': ['Text abbreviation expansion'], 'confidence': 1.0, 'evidence': ['CEIL text appears in parentheses and is linked to its definition']}, {'name': 'Sentence Structure', 'match_type': 'partial', 'implemented_parts': ['Sentence parsing and interpretation'], 'confidence': 0.9, 'evidence': ['Activation of platelets triggers cytokine expression in leukocytes']}]",This code defines a pipeline that analyzes text and extracts relevant concepts and relationships.,"{'constants': ['CEIL abbreviation for cytokine expression in leukocytes'], 'types': ['Pipeline input and output'], 'classes': ['Pipeline class for text analysis'], 'functions': ['Text tokenization', 'Abbreviation expansion']}"
tests/custom_tests/test_custom_segmentation.py,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/custom_tests/test_custom_segmentation.py,"[{'name': 'Power Dominating Set Construction', 'match_type': 'partial', 'implemented_parts': ['Iterating over components', 'Selecting power dominating set candidates', 'Forcing vertices and components', 'Handling leaves with single uncolored neighbors'], 'confidence': 0.9, 'evidence': ['Sets containing v force all vertices in the component', 'Non-leaf vertices can be forced by sets excluding v', 'Leaf with single uncolored neighbor can force it']}]",This code constructs a power dominating set for a graph.,"{'constants': ['γP – power dominating set ratio'], 'types': ['Graph', 'Set'], 'classes': ['Graph traversal algorithms'], 'functions': ['Finding minimum power dominating set']}"
tests/custom_tests/test_custom_tokenizer.py,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/custom_tests/test_custom_tokenizer.py,"[{'name': 'Sentence Completion', 'match_type': 'partial', 'implemented_parts': ['Predicting next word based on preceding sequence'], 'confidence': 0.95, 'evidence': ['Contextual word prediction', 'Sequence-to-sequence learning', 'Neural network architecture']}, {'name': 'Number Tokenization', 'match_type': 'full', 'implemented_parts': ['Identification and separation of numerical values'], 'confidence': 1.0, 'evidence': ['Regular expression patterns for numeric values', 'Custom tokenization rule for decimal numbers']}, {'name': 'Domain-Specific Terminology Detection', 'match_type': 'partial', 'implemented_parts': ['Recognition of domain-relevant concepts'], 'confidence': 0.8, 'evidence': ['Lexical analysis of scientific publications', 'Machine learning models for domain-aware tokenization']}, {'name': 'Sentence Structure Analysis', 'match_type': 'partial', 'implemented_parts': ['Identification of grammatical relationships'], 'confidence': 0.9, 'evidence': ['Dependency parsing algorithms', 'Named entity recognition']}]",This code demonstrates advanced natural language processing techniques for sentence analysis and tokenization.,"{'constants': ['Defines constants related to tokenization'], 'types': ['Custom token types for specific scenarios'], 'classes': ['Tokenizer class for custom tokenization'], 'functions': ['Sentence completion algorithm', 'Number tokenization function']}"
tests/custom_tests/test_whitespace.py,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/custom_tests/test_whitespace.py,"[{'name': 'Whitespace Tokenization', 'match_type': 'partial', 'implemented_parts': ['Tokenization algorithm handles whitespace'], 'confidence': 0.95, 'evidence': ['Tests split single, double, and trailing spaces', 'Correctly tokenizes newline characters']}]",This code snippet demonstrates the handling of whitespace in Spacy tokenization.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
tests/custom_tests,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/custom_tests,"[{'name': 'Graph traversal algorithms', 'match_type': 'full', 'implemented_parts': ['Finding minimum power dominating set'], 'confidence': 1.0, 'evidence': ['Algorithms for graph domination', 'Applications of power domination in network security']}, {'name': 'Sentence Completion', 'match_type': 'partial', 'implemented_parts': ['Predicting next word based on preceding sequence'], 'confidence': 0.95, 'evidence': ['Contextual word prediction', 'Sequence-to-sequence learning', 'Neural network architecture']}, {'name': 'Number Tokenization', 'match_type': 'full', 'implemented_parts': ['Identification and separation of numerical values'], 'confidence': 1.0, 'evidence': ['Regular expression patterns for numeric values', 'Custom tokenization rule for decimal numbers']}, {'name': 'Domain-Specific Terminology Detection', 'match_type': 'partial', 'implemented_parts': ['Recognition of domain-relevant concepts'], 'confidence': 0.8, 'evidence': ['Lexical analysis of scientific publications', 'Machine learning models for domain-aware tokenization']}, {'name': 'Sentence Structure Analysis', 'match_type': 'partial', 'implemented_parts': ['Identification of grammatical relationships'], 'confidence': 0.9, 'evidence': ['Dependency parsing algorithms', 'Named entity recognition']}, {'name': 'Whitespace Tokenization', 'match_type': 'partial', 'implemented_parts': ['Tokenization algorithm handles whitespace'], 'confidence': 0.95, 'evidence': ['Tests split single, double, and trailing spaces', 'Correctly tokenizes newline characters']}]",This code demonstrates advanced natural language processing techniques for sentence analysis and tokenization.,"{'constants': ['Defines constants related to tokenization'], 'types': ['Custom token types for specific scenarios'], 'classes': ['Tokenizer class for custom tokenization'], 'functions': ['Sentence completion algorithm', 'Number tokenization function']}"
tests/fixtures/umls_META/MRCONSO.RRF,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/fixtures/umls_META/MRCONSO.RRF,"[{'name': 'Message', 'match_type': 'partial', 'implemented_parts': ['Message ID', 'Language', 'Priority'], 'confidence': 0.9, 'evidence': ['Message ID', 'ENG', 'P']}, {'name': 'PatientRecord', 'match_type': 'partial', 'implemented_parts': ['Patient ID', 'Gender', 'Age'], 'confidence': 0.8, 'evidence': ['L0000005', 'ENG', 'P']}, {'name': 'Observation', 'match_type': 'partial', 'implemented_parts': ['Observation ID', 'Substance', 'Result'], 'confidence': 0.9, 'evidence': ['C0000005', 'ENG', 'S']}]",This file contains observation data for clinical samples.,"{'constants': ['Observation related constants'], 'types': ['Patient ID', 'Observation ID'], 'classes': ['Observation class stores observation data'], 'functions': ['Creates and retrieves observations']}"
tests/fixtures/umls_META/MRDEF.RRF,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/fixtures/umls_META/MRDEF.RRF,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['common methods: mediate, notify, coordinate, send_message'], 'confidence': 0.9, 'evidence': ['common terms: mediator, coordination, central communication']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['save_state, restore_state, create_memento, get_memento'], 'confidence': 0.8, 'evidence': ['common terms: memento, state, snapshot']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['visit, accept'], 'confidence': 0.7, 'evidence': ['common terms: visitor, operation, element']}]",This file defines data structures and methods for representing and manipulating medical records.,"{'constants': ['Medical record-related constants'], 'types': ['Medical record data structures'], 'classes': ['Medical record class'], 'functions': ['Methods for retrieving, manipulating, and storing medical records']}"
tests/fixtures/umls_META/MRFILES.RRF,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/fixtures/umls_META/MRFILES.RRF,"[{'name': 'Word Index', 'match_type': 'full', 'implemented_parts': ['Language-specific word index'], 'confidence': 1.0, 'evidence': ['Language selection', 'Word index file']}]",This file provides access to word indices for various languages.,"{'constants': ['Defines language codes'], 'types': ['Word index data structures'], 'classes': ['Language-specific word index classes'], 'functions': ['Retrieves words from index']}"
tests/fixtures/umls_META/MRSTY.RRF,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/fixtures/umls_META/MRSTY.RRF,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['StateSaver', 'Memento', 'restore_state method'], 'confidence': 0.9, 'evidence': ['class StateSaver', 'create_memento method', 'get_memento method']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'visit method'], 'confidence': 0.8, 'evidence': ['interface Element', 'accept method', 'Visitor class']}]",This file defines patterns for state saving and visitor design patterns.,"{'constants': ['Defines constants related to the patterns'], 'types': ['StateSaver, Memento'], 'classes': ['Visitor, Element'], 'functions': ['save_state, restore_state, create_memento, get_memento']}"
tests/fixtures/umls_META,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/fixtures/umls_META,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['StateSaver', 'Memento', 'restore_state method'], 'confidence': 0.9, 'evidence': ['class StateSaver', 'create_memento method', 'get_memento method']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'visit method'], 'confidence': 0.8, 'evidence': ['interface Element', 'accept method', 'Visitor class']}, {'name': 'Word Index', 'match_type': 'full', 'implemented_parts': ['Language-specific word index'], 'confidence': 1.0, 'evidence': ['Language selection', 'Word index file']}]",This file defines patterns for state saving and visitor design patterns.,"{'constants': ['Defines constants related to the patterns'], 'types': ['StateSaver, Memento'], 'classes': ['Visitor, Element'], 'functions': ['save_state, restore_state, create_memento, get_memento']}"
tests/fixtures/med_mentions.txt,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/fixtures/med_mentions.txt,"[{'name': 'Foreign Body Response', 'match_type': 'partial', 'implemented_parts': ['Foreign body response process', 'vascular endothelial cells'], 'confidence': 0.9, 'evidence': ['foreign body response', 'vascular endothelial cell interactions']}, {'name': 'Vascular Tube Implantation', 'match_type': 'full', 'implemented_parts': ['Vascular tube implantation procedure', 'implanted medical devices'], 'confidence': 1.0, 'evidence': ['vascular tubes', 'medical device implantation']}]",This code relates to the foreign body response and vascular tube implantation procedures.,"{'constants': ['Defines medical device related constants'], 'types': ['Custom types for blood vessel measurements'], 'classes': ['Vascular endothelial cell model'], 'functions': ['Implant medical devices', 'Study foreign body response']}"
tests/fixtures/ner_test.tsv,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/fixtures/ner_test.tsv,"[{'name': 'Command', 'match_type': 'partial', 'implemented_parts': ['Receiver adds operations to Command without modifying it', 'Command accepts arguments'], 'confidence': 0.8, 'evidence': ['method takes parameters', 'execute method with parameters']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Element accepts Visitors', 'Visitor applies operations'], 'confidence': 0.7, 'evidence': ['visit method on Element', 'apply method on Operation']}]",This file defines classes for handling natural language processing tasks.,"{'constants': ['Defines constants for tokenization'], 'types': ['Custom types for NLP tasks'], 'classes': ['Element represents a token', 'Operation represents NLP operations'], 'functions': ['accept method for visitors', 'apply method for operations']}"
tests/fixtures/test_umls_tree.tsv,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/fixtures/test_umls_tree.tsv,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Mediator', 'Target'], 'confidence': 0.9, 'evidence': ['create_message method', 'send_message method', 'central communication']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'Caretaker'], 'confidence': 0.8, 'evidence': ['save_state method', 'restore_state method', 'memento creation']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element'], 'confidence': 0.7, 'evidence': ['visit method', 'accept method', 'operation application']}]",This file represents a test case involving event-triggered actions.,"{'constants': ['Defines event-related constants'], 'classes': ['Activities, Behaviors, SocialBehaviors'], 'functions': ['Identifies and associates events with actions']}"
tests/fixtures/umls_test_fixture.json,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/fixtures/umls_test_fixture.json,[],This dataset contains information about chemical substances and their properties.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
tests/fixtures,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/tests/fixtures,"[{'name': 'CommandPattern', 'match_type': 'partial', 'implemented_parts': ['Command accepts arguments', 'Operation adds operations to Command without modifying it'], 'confidence': 0.8, 'evidence': ['method takes parameters', 'execute method with parameters']}, {'name': 'VisitorPattern', 'match_type': 'partial', 'implemented_parts': ['Element accepts Visitors', 'Visitor applies operations'], 'confidence': 0.7, 'evidence': ['visit method on Element', 'apply method on Operation']}, {'name': 'MediatorPattern', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Mediator', 'Target'], 'confidence': 0.9, 'evidence': ['create_message method', 'send_message method', 'central communication']}, {'name': 'MementoPattern', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'Caretaker'], 'confidence': 0.8, 'evidence': ['save_state method', 'restore_state method', 'memento creation']}]",This file defines classes for handling natural language processing tasks.,"{'constants': ['Defines constants for tokenization'], 'types': ['Custom types for NLP tasks'], 'classes': ['Element represents a token', 'Operation represents NLP operations'], 'functions': ['accept method for visitors', 'apply method for operations']}"
