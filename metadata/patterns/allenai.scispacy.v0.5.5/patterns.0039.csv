filename,type,author,repo,version,wiki,url,patterns,purpose,summary
.git/logs/refs/remotes,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/logs/refs/remotes,[],This directory contains Git log data for remote references.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
.git/logs/refs,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/logs/refs,[],This directory contains Git log files related to the SCISPACY NLP library.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
.git/logs/HEAD,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/logs/HEAD,"[{'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'Operation', 'AcceptVisitor'], 'confidence': 0.9, 'evidence': ['visit method', 'accept method', 'ApplyVisitor class']}]",This file demonstrates the Visitor Pattern for traversing and manipulating hierarchical data structures.,"{'constants': ['Defines visitor-related constants'], 'types': ['Visitor class for traversing elements'], 'classes': ['Element class defines visit method', 'Visitor class accepts element'], 'functions': ['visit method interacts with element']}"
.git/logs,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/logs,"[{'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'Operation', 'AcceptVisitor'], 'confidence': 0.9, 'evidence': ['visit method', 'accept method', 'ApplyVisitor class']}]",Demonstrates the Visitor Pattern for traversing and manipulating hierarchical data structures.,"{'constants': ['Defines visitor-related constants'], 'types': ['Visitor class for traversing elements'], 'classes': ['Element class defines visit method', 'Visitor class accepts element'], 'functions': ['visit method interacts with element']}"
.git/objects/info,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/objects/info,[],This directory contains Git object metadata.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
.git/objects/pack,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/objects/pack,[],"This directory contains Git pack files, which are binary snapshots of Git objects at a given commit.","{'constants': [], 'types': [], 'classes': [], 'functions': []}"
.git/objects,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/objects,[],This directory contains Git object metadata.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
.git/refs/heads/main,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/refs/heads/main,"[{'name': 'Mediator', 'match_type': 'full', 'implemented_parts': ['communication through Mediator', 'roles: Mediator, Controller, Coordinator, CentralHub', 'methods: mediate, notify, coordinate, send_message'], 'confidence': 1.0, 'evidence': ['function mediate', 'class CentralHub', 'references to Controller, Coordinator']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['state capture and restoration', 'roles: Originator, Memento, Caretaker'], 'confidence': 0.9, 'evidence': ['function save_state', 'class Memento', 'references to Originator, Caretaker']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['dynamic dispatch of operations', 'roles: Visitor, Element'], 'confidence': 0.8, 'evidence': ['function visit', 'method accept', 'references to Operation']}]",This file implements communication and state management patterns.,"{'constants': ['Defines communication-related constants'], 'types': ['Custom types for communication and state management'], 'classes': ['Mediator centralizes communication', 'Memento captures state'], 'functions': ['Mediator methods for communication', 'Originator and Caretaker interact with Memento']}"
.git/refs/heads,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/refs/heads,"[{'name': 'Mediator', 'match_type': 'full', 'implemented_parts': ['communication through Mediator', 'roles: Mediator, Controller, Coordinator, CentralHub', 'methods: mediate, notify, coordinate, send_message'], 'confidence': 1.0, 'evidence': ['function mediate', 'class CentralHub', 'references to Controller, Coordinator']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['state capture and restoration', 'roles: Originator, Memento, Caretaker'], 'confidence': 0.9, 'evidence': ['function save_state', 'class Memento', 'references to Originator, Caretaker']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['dynamic dispatch of operations', 'roles: Visitor, Element'], 'confidence': 0.8, 'evidence': ['function visit', 'method accept', 'references to Operation']}]",This file implements communication and state management patterns.,"{'constants': ['Defines communication-related constants'], 'types': ['Custom types for communication and state management'], 'classes': ['Mediator centralizes communication', 'Memento captures state'], 'functions': ['Mediator methods for communication', 'Originator and Caretaker interact with Memento']}"
.git/refs/remotes/origin/HEAD,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/refs/remotes/origin/HEAD,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralizes communication', 'Mediates between colleagues'], 'confidence': 0.8, 'evidence': ['Communicates through the Mediator', 'Centralizes communication between Colleagues']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'State restoration'], 'confidence': 0.7, 'evidence': ['Creates Memento to capture state', 'Restores state using Memento']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Dynamic dispatch of operations', 'Elements accept visitors'], 'confidence': 0.8, 'evidence': ['Adds operations without modifying element', 'Elements accept visitors']}]",This file implements communication and state management patterns.,"{'constants': ['N/A'], 'types': ['N/A'], 'classes': ['Mediator', 'Memento'], 'functions': ['mediate', 'restore_state', 'accept']}"
.git/refs/remotes/origin,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/refs/remotes/origin,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralizes communication', 'Mediates between colleagues'], 'confidence': 0.8, 'evidence': ['Communicates through the Mediator', 'Centralizes communication between Colleagues']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'State restoration'], 'confidence': 0.7, 'evidence': ['Creates Memento to capture state', 'Restores state using Memento']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Dynamic dispatch of operations', 'Elements accept visitors'], 'confidence': 0.8, 'evidence': ['Adds operations without modifying element', 'Elements accept visitors']}]",This file implements communication and state management patterns.,"{'constants': [], 'types': [], 'classes': ['Mediator', 'Memento'], 'functions': ['mediate', 'restore_state', 'accept']}"
.git/refs/remotes,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/refs/remotes,[],This directory contains Git references for remote repositories.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
.git/refs/tags,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/refs/tags,[],This directory contains Git references to tagged versions of the Spacy NLP library.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
.git/refs,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/refs,[],"This directory contains Git references, likely related to version control or branching.","{'constants': [], 'types': [], 'classes': [], 'functions': []}"
.git/config,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/config,[],This file defines configuration options for Git repository management.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
.git/description,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/description,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Centralizes communication', 'Mediator-Colleague relationship'], 'confidence': 0.75, 'evidence': ['centralizes communication between Colleagues', 'Mediator method for sending messages']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'Memento-Originator relationship'], 'confidence': 0.85, 'evidence': ['creates Memento to capture state', 'Caretaker stores and restores Memento']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Dynamic dispatch', 'Visitor-Element relationship'], 'confidence': 0.7, 'evidence': ['accepts Visitors', 'visit method for adding operations']}]",This file defines communication and state management patterns.,"{'constants': [], 'types': [], 'classes': ['Mediator', 'Memento'], 'functions': ['centralize communication', 'capture state', 'visit', 'accept']}"
.git/HEAD,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/HEAD,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['Mediator role', 'coordinate method'], 'confidence': 0.75, 'evidence': ['class Mediator', 'coordinate method for communication']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'restore_state method'], 'confidence': 0.8, 'evidence': ['class Memento', 'save_state and restore_state methods']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor pattern elements', 'visit method'], 'confidence': 0.7, 'evidence': ['class Element', 'visit method for operations']}]",This file implements communication and state management patterns.,"{'constants': ['Defines communication-related constants'], 'types': ['Custom types for communication and state management'], 'classes': ['Mediator for central communication', 'Memento for state capture'], 'functions': ['Coordinate method for team communication', 'Save and restore state methods']}"
.git/packed-refs,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/packed-refs,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['class AbstractIterator', 'implements iterable interface', 'has next and next methods']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['class Product implements Comparable', 'compareTo method for comparing products']}, {'name': 'Builder', 'match_type': 'partial', 'implemented_parts': ['Builder interface', 'build method'], 'confidence': 0.8, 'evidence': ['class ProductBuilder implements Builder', 'build method creates product object']}]",This file defines interfaces and classes for managing collections of data.,"{'constants': ['Defines constants for collection sizes'], 'types': ['AbstractIterator for iterating over collections'], 'classes': ['Product class represents a data item', 'ProductBuilder class builds product objects'], 'functions': ['build creates product object from builder', 'compareTo compares products']}"
.git,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Originator', 'Memento', 'restore_state method'], 'confidence': 0.8, 'evidence': ['class Memento', 'save_state and restore_state methods']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor pattern elements', 'visit method'], 'confidence': 0.7, 'evidence': ['class Element', 'visit method for operations']}, {'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'hasNext method', 'next method'], 'confidence': 0.9, 'evidence': ['class AbstractIterator', 'implements iterable interface', 'has next and next methods']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compareTo method'], 'confidence': 1.0, 'evidence': ['class Product implements Comparable', 'compareTo method for comparing products']}, {'name': 'Builder', 'match_type': 'partial', 'implemented_parts': ['Builder interface', 'build method'], 'confidence': 0.8, 'evidence': ['class ProductBuilder implements Builder', 'build method creates product object']}]",This file implements communication and state management patterns.,"{'constants': ['Defines communication-related constants'], 'types': ['Custom types for communication and state management'], 'classes': ['Mediator for central communication', 'Memento for state capture'], 'functions': ['Coordinate method for team communication', 'Save and restore state methods']}"
.github/workflows/main.yml,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.github/workflows/main.yml,"[{'name': 'Memento Pattern', 'match_type': 'partial', 'implemented_parts': ['create_memento', 'get_memento'], 'confidence': 0.9, 'evidence': [""Methods named 'create_memento' and 'get_memento', suggesting snapshot creation and retrieval"", ""Use of terms 'memento' and 'state' consistent with pattern vocabulary""]}]",This file implements the Memento pattern for state management.,"{'constants': [], 'types': [], 'classes': [], 'functions': ['create_memento', 'get_memento']}"
