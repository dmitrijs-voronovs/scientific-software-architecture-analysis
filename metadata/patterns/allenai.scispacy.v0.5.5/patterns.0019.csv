filename,type,author,repo,version,wiki,url,patterns,purpose,summary
.git/hooks/applypatch-msg.sample,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/hooks/applypatch-msg.sample,[],This file defines a hook script to check the commit log message.,"{'constants': [], 'types': [], 'classes': [], 'functions': ['executes a commit message editor']}"
.git/hooks/commit-msg.sample,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/hooks/commit-msg.sample,"[{'name': 'Hook script', 'match_type': 'partial', 'implemented_parts': ['Command-line script', 'Git hook', 'File manipulation'], 'confidence': 0.9, 'evidence': ['shebang line', 'git command usage', 'file editing']}, {'name': 'Duplicate detection', 'match_type': 'full', 'implemented_parts': ['Regular expression', 'Sorting', 'Uniqueness check'], 'confidence': 1.0, 'evidence': ['grep command with regex', 'sort and uniq commands']}]",This file is a Git commit hook that checks for duplicate Signed-off-by lines in the commit message.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
.git/hooks/fsmonitor-watchman.sample,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/hooks/fsmonitor-watchman.sample,"[{'name': 'Logger', 'match_type': 'partial', 'implemented_parts': ['Logging interface', 'error method'], 'confidence': 0.9, 'evidence': ['interface Logger', 'error method signature']}, {'name': 'Repository', 'match_type': 'full', 'implemented_parts': ['CRUD methods', 'data storage'], 'confidence': 1.0, 'evidence': ['SQL queries', 'data models']}]",This file manages data access and retrieval operations.,"{'constants': ['Defines logging levels'], 'types': ['Data models for different entities'], 'classes': ['Repository class handles CRUD operations'], 'functions': ['get retrieves data', 'create inserts data', 'update modifies data', 'delete deletes data']}"
.git/hooks/post-update.sample,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/hooks/post-update.sample,"[{'name': 'Command', 'match_type': 'partial', 'implemented_parts': ['Receiver', 'Command', 'execute method'], 'confidence': 0.9, 'evidence': ['receiver receives command', 'execute method performs action']}]",This file defines a command system for executing actions.,"{'constants': ['Defines command-related constants'], 'functions': ['execute commands', 'register commands']}"
.git/hooks/pre-applypatch.sample,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/hooks/pre-applypatch.sample,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Caretaker', 'Memento', 'save/restore methods'], 'confidence': 0.7, 'evidence': ['create_memento', 'get_memento', 'save_state', 'restore_state']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor pattern', 'accept method'], 'confidence': 0.8, 'evidence': ['visit method', 'accepts Visitor', 'apply method']}]",This file implements a pre-commit hook to verify changes before commit.,"{'constants': [], 'types': [], 'classes': [], 'functions': ['executes precommit hook']}"
.git/hooks/pre-commit.sample,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/hooks/pre-commit.sample,"[{'name': 'Iterator pattern', 'match_type': 'partial', 'implemented_parts': ['iterator method', 'next method'], 'confidence': 0.9, 'evidence': ['class has an iterable method', 'next method iterates over elements']}, {'name': 'Comparable pattern', 'match_type': 'full', 'implemented_parts': ['compare method'], 'confidence': 1.0, 'evidence': ['class defines a compare method', 'method checks equality of objects']}]",This file implements an iterator class for iterating over lists.,"{'constants': ['Defines constants for comparison'], 'types': ['Custom iterator type'], 'classes': ['Iterator class provides iterative functionality'], 'functions': ['iterate iterates over elements', 'compare checks equality of iterables']}"
.git/hooks/pre-merge-commit.sample,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/hooks/pre-merge-commit.sample,"[{'name': 'Memento Pattern', 'match_type': 'partial', 'implemented_parts': ['Caretaker stores and restores Memento'], 'confidence': 0.75, 'evidence': ['Caretaker class', 'Memento data structure', 'save_state/restore_state methods']}, {'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations to Element without modifying it'], 'confidence': 0.85, 'evidence': ['Visitor class', 'AcceptVisitor method', 'visit operation']}]",This file implements pre-commit hook script to verify changes before merging.,"{'constants': [], 'types': [], 'classes': [], 'functions': ['runs hook script before merge']}"
.git/hooks/pre-push.sample,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/hooks/pre-push.sample,"[{'name': 'Hook Script', 'match_type': 'partial', 'implemented_parts': ['Remote detection', 'Commit validation', 'Exit with non-zero status'], 'confidence': 0.9, 'evidence': ['remote and url arguments', 'git hash-object command', 'exit code non-zero']}, {'name': 'WIP Commit Detection', 'match_type': 'partial', 'implemented_parts': ['grep command', 'commit variable', 'exit with non-zero status'], 'confidence': 0.8, 'evidence': [""grep command with 'WIP' keyword"", 'non-empty commit variable', 'exit code non-zero']}]",This pre-push hook verifies commits before pushing to remote.,"{'constants': ['Zero hash for empty object'], 'types': ['Remote and URL arguments'], 'classes': [], 'functions': ['git hash-object', 'grep', 'exit']}"
.git/hooks/pre-rebase.sample,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/hooks/pre-rebase.sample,"[{'name': 'Branch Rebase Detection', 'match_type': 'partial', 'implemented_parts': ['Topic branch rebase detection'], 'confidence': 0.95, 'evidence': ['git rev-list command comparisons']}, {'name': 'Topic Branch Deletion', 'match_type': 'partial', 'implemented_parts': ['Topic branch deletion based on merge status'], 'confidence': 0.9, 'evidence': ['git rev-list command to check merge status']}]",This code snippet defines automated rules for managing Git topic branches.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
.git/hooks/pre-receive.sample,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/hooks/pre-receive.sample,"[{'name': 'Command Handler', 'match_type': 'partial', 'implemented_parts': ['Command', 'Receiver', 'handle method'], 'confidence': 0.9, 'evidence': ['method handle receives command', 'dispatch method in Receiver']}, {'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iteratable', 'Iterator', 'next method'], 'confidence': 0.8, 'evidence': ['class implements Iterable', 'next method iterates over elements']}]",This file defines interfaces for handling commands and iterating over elements.,"{'constants': ['Defines command-related constants'], 'types': ['Command interface', 'Receiver interface'], 'classes': ['Command handler class manages commands', 'Iterator class for iterating over elements'], 'functions': ['handle command method', 'next element method']}"
.git/hooks/prepare-commit-msg.sample,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/hooks/prepare-commit-msg.sample,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method'], 'confidence': 0.9, 'evidence': ['interface definition', 'iterator object', 'while loop']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['Comparison methods', 'equals method'], 'confidence': 1.0, 'evidence': ['generic type parameter', 'comparison operators', 'hash table implementation']}]",This file defines an iterator pattern for iterating over collections of data.,"{'constants': ['Defines constants for iterator states'], 'types': ['Custom iterator type'], 'classes': ['Iterator class implements the iterator interface'], 'functions': ['next iterates over collection', 'compare checks equality']}"
.git/hooks/push-to-checkout.sample,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/hooks/push-to-checkout.sample,"[{'name': 'Dependency Injection', 'match_type': 'partial', 'implemented_parts': ['Constructor injection', 'Field injection'], 'confidence': 0.9, 'evidence': ['constructor arguments', 'field annotations']}, {'name': 'MVC Architecture', 'match_type': 'full', 'implemented_parts': ['Model-View-Controller separation', 'Route handling'], 'confidence': 1.0, 'evidence': ['Model layer handling data', 'View layer displaying results', 'Controller handling request']}]",This file implements a web application using a Model-View-Controller (MVC) architecture.,"{'constants': ['Defines application-related constants'], 'types': ['Models represent data', 'Views display data', 'Controllers handle requests'], 'classes': ['UserController interacts with model and view'], 'functions': ['Route dispatcher', 'Controller methods handle actions']}"
.git/hooks/update.sample,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/hooks/update.sample,"[{'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method'], 'confidence': 0.9, 'evidence': ['interface with next method', 'concrete implementation']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compare method'], 'confidence': 1.0, 'evidence': ['generic type parameter', 'comparison logic']}]",This file defines an iterator pattern for iterating over collections of data.,"{'constants': ['Defines iterator-related constants'], 'types': ['Custom iterator type'], 'classes': ['Iterator interface defines iteration contract'], 'functions': ['compare elements for sorting']}"
.git/hooks,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/hooks,"[{'name': 'Dependency Injection', 'match_type': 'partial', 'implemented_parts': ['Constructor injection', 'Field injection'], 'confidence': 0.9, 'evidence': ['constructor arguments', 'field annotations']}, {'name': 'MVC Architecture', 'match_type': 'full', 'implemented_parts': ['Model-View-Controller separation', 'Route handling'], 'confidence': 1.0, 'evidence': ['Model layer handling data', 'View layer displaying results', 'Controller handling request']}, {'name': 'Iterator', 'match_type': 'partial', 'implemented_parts': ['Iterator interface', 'next method'], 'confidence': 0.9, 'evidence': ['interface with next method', 'concrete implementation']}, {'name': 'Comparable', 'match_type': 'full', 'implemented_parts': ['compare method'], 'confidence': 1.0, 'evidence': ['generic type parameter', 'comparison logic']}]",This file implements a web application using a Model-View-Controller (MVC) architecture and defines an iterator pattern for iterating over collections of data.,"{'constants': ['Defines application-related constants'], 'types': ['Models represent data', 'Views display data', 'Controllers handle requests'], 'classes': ['UserController interacts with model and view'], 'functions': ['Route dispatcher', 'Controller methods handle actions']}"
.git/info/exclude,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/info/exclude,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['coordination', 'central communication', 'mediator role'], 'confidence': 0.9, 'evidence': ['common terms: mediator, coordination, central communication', 'relationships: Originator interacts with Mediator to send messages']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['state capture', 'storage and restoration'], 'confidence': 0.8, 'evidence': ['common terms: memento, state, snapshot', 'methods: save_state, restore_state']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['operation insertion', 'element interaction'], 'confidence': 0.7, 'evidence': ['common terms: visitor, operation', 'methods: visit, accept']}]",This file defines patterns for common design structures.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
.git/info,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/info,"[{'name': 'Mediator', 'match_type': 'partial', 'implemented_parts': ['coordination', 'central communication', 'mediator role'], 'confidence': 0.9, 'evidence': ['common terms: mediator, coordination, central communication', 'relationships: Originator interacts with Mediator to send messages']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['state capture', 'storage and restoration'], 'confidence': 0.8, 'evidence': ['common terms: memento, state, snapshot', 'methods: save_state, restore_state']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['operation insertion', 'element interaction'], 'confidence': 0.7, 'evidence': ['common terms: visitor, operation', 'methods: visit, accept']}]",This directory defines patterns for common design structures.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
.git/logs/refs/heads/main,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/logs/refs/heads/main,"[{'name': 'MementoPattern', 'match_type': 'partial', 'implemented_parts': ['Caretaker', 'Memento', 'save/restore methods'], 'confidence': 0.9, 'evidence': ['save_state method', 'restore_state method', 'Caretaker class']}, {'name': 'VisitorPattern', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'accept method'], 'confidence': 0.8, 'evidence': ['visit method', 'accept method', 'Element class']}]",This file utilizes the Memento and Visitor design patterns to manage state and allow for dynamic operations.,"{'constants': ['Defines constants related to state management'], 'types': ['Mementos for storing state', 'Visitors for performing actions'], 'classes': ['Caretaker for state management', 'Element for receiving actions'], 'functions': ['save/restore state methods', 'accept operation']}"
.git/logs/refs/heads,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/logs/refs/heads,"[{'name': 'MementoPattern', 'match_type': 'partial', 'implemented_parts': ['Caretaker', 'Memento', 'save/restore methods'], 'confidence': 0.9, 'evidence': ['save_state method', 'restore_state method', 'Caretaker class']}, {'name': 'VisitorPattern', 'match_type': 'partial', 'implemented_parts': ['Visitor', 'Element', 'accept method'], 'confidence': 0.8, 'evidence': ['visit method', 'accept method', 'Element class']}]",This file utilizes the Memento and Visitor design patterns to manage state and allow for dynamic operations.,"{'constants': ['Defines constants related to state management'], 'types': ['Mementos for storing state', 'Visitors for performing actions'], 'classes': ['Caretaker for state management', 'Element for receiving actions'], 'functions': ['save/restore state methods', 'accept operation']}"
.git/logs/refs/remotes/origin/HEAD,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/logs/refs/remotes/origin/HEAD,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Caretaker', 'Memento', 'save/restore state methods'], 'confidence': 0.75, 'evidence': ['class Memento', 'store/restore state methods', 'namesake analogy to state snapshots']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor pattern', 'accept method'], 'confidence': 0.85, 'evidence': ['Visitor class', 'accept method with operation parameter', 'element interaction through accept']}]",This file implements pattern-based state management using Memento and Visitor patterns.,"{'constants': ['Defines state-related constants'], 'types': ['Memento object', 'Visitor interface'], 'classes': ['Caretaker class manages state', 'Memento class stores state'], 'functions': ['save/restore state methods', 'accept method for visitor pattern']}"
.git/logs/refs/remotes/origin,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.git/logs/refs/remotes/origin,"[{'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['Caretaker', 'Memento', 'save/restore state methods'], 'confidence': 0.75, 'evidence': ['class Memento', 'store/restore state methods', 'namesake analogy to state snapshots']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Visitor pattern', 'accept method'], 'confidence': 0.85, 'evidence': ['Visitor class', 'accept method with operation parameter', 'element interaction through accept']}]",This file implements pattern-based state management using Memento and Visitor patterns.,"{'constants': ['Defines state-related constants'], 'types': ['Memento object', 'Visitor interface'], 'classes': ['Caretaker class manages state', 'Memento class stores state'], 'functions': ['save/restore state methods', 'accept method for visitor pattern']}"
