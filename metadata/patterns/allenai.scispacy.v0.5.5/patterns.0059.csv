filename,type,author,repo,version,wiki,url,patterns,purpose,summary
.github/workflows/old_scipy.yml,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.github/workflows/old_scipy.yml,"[{'name': 'MementoPattern', 'match_type': 'partial', 'implemented_parts': ['Originator creates Memento', 'Caretaker stores and restores Memento'], 'confidence': 0.75, 'evidence': ['create_memento', 'save_state', 'restore_state']}, {'name': 'VisitorPattern', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations to Element without modifying it', 'Element accepts Visitors'], 'confidence': 0.85, 'evidence': ['visit method', 'accept method']}]",This file employs design patterns for state management and dynamic dispatch of operations.,"{'constants': [], 'types': [], 'classes': ['Memento', 'Caretaker'], 'functions': ['create_memento', 'save_state', 'restore_state', 'visit']}"
.github/workflows/publish.yml,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.github/workflows/publish.yml,"[{'name': 'Workflow', 'match_type': 'partial', 'implemented_parts': ['Workflow definition', 'job execution', 'permissions'], 'confidence': 0.9, 'evidence': ['name: Publish Package', 'on: release', 'jobs: pypi-publish']}, {'name': 'Package Publication', 'match_type': 'full', 'implemented_parts': ['Dependency installation', 'Package building', 'PyPI publishing'], 'confidence': 1.0, 'evidence': ['pip install', 'setup.py', 'uses: pypa/gh-action-pypi-publish']}]",This file defines a GitHub Action workflow to automatically publish the scispacy package to the PyPI repository.,"{'constants': ['Workflow triggers on release event'], 'types': ['Workflow object'], 'classes': ['Job definitions'], 'functions': ['Workflow execution with defined steps']}"
.github/workflows,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.github/workflows,"[{'name': 'MementoPattern', 'match_type': 'partial', 'implemented_parts': ['Originator creates Memento', 'Caretaker stores and restores Memento'], 'confidence': 0.75, 'evidence': ['create_memento', 'save_state', 'restore_state']}, {'name': 'VisitorPattern', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations to Element without modifying it', 'Element accepts Visitors'], 'confidence': 0.85, 'evidence': ['visit method', 'accept method']}, {'name': 'Workflow', 'match_type': 'partial', 'implemented_parts': ['Workflow definition', 'job execution', 'permissions'], 'confidence': 0.9, 'evidence': ['name: Publish Package', 'on: release', 'jobs: pypi-publish']}, {'name': 'Package Publication', 'match_type': 'full', 'implemented_parts': ['Dependency installation', 'Package building', 'PyPI publishing'], 'confidence': 1.0, 'evidence': ['pip install', 'setup.py', 'uses: pypa/gh-action-pypi-publish']}]",This file employs design patterns for state management and dynamic dispatch of operations.,"{'constants': [], 'types': [], 'classes': ['Memento', 'Caretaker'], 'functions': ['create_memento', 'save_state', 'restore_state', 'visit']}"
.github,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/.github,[],This directory contains miscellaneous utility functions and configuration files for the SciSpaCy project.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
configs/base_ner.cfg,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/configs/base_ner.cfg,"[{'name': 'Train Corpus Configuration', 'match_type': 'full', 'implemented_parts': ['Seed generation from system', 'GPU allocation', 'Dropout rate', 'Gradient accumulation', 'Training epochs and steps', 'Evaluation frequency', 'Frozen components', 'Custom batching and logging configurations'], 'confidence': 1.0, 'evidence': ['seed variable initialization', 'system.gpu_allocator function call', 'dropout rate definition', 'accumulate_gradient parameter', 'epochs and steps configuration', 'evaluation frequency specification', 'frozen component list', 'custom batcher and logger configurations']}, {'name': 'Model Architecture Definition', 'match_type': 'partial', 'implemented_parts': ['Tok2Vec and parser initialization from pre-trained models', 'Tagger, attribute ruler, and lemmatizer components', 'Custom batcher with sequence-based approach'], 'confidence': 0.95, 'evidence': ['Vectors, init_tok2vec, and vocab_data variables used for pre-trained models', 'Components for tagger, attribute ruler, and lemmatizer listed', 'Custom batcher with sequence-based strategy specified']}, {'name': 'Training Parameters and Evaluation Metrics', 'match_type': 'partial', 'implemented_parts': ['Adam optimizer with specific learning rate and decay parameters', 'Custom score weights for dependency parsing, sentiment analysis, and entity recognition', 'Evaluation metrics for different aspects of the model performance'], 'confidence': 0.85, 'evidence': ['Adam optimizer configuration with learning rate and decay', 'Score weights defined for dependency parsing, sentiment analysis, and entity recognition', 'Mention of evaluation metrics for different performance aspects']}]",This JSON configuration file defines the training process and architecture for a language model.,"{'constants': ['Trained corpus path, seed value'], 'types': ['Custom batcher configuration'], 'classes': ['Spacy components for tokenization and parsing'], 'functions': ['Training and evaluation functions']}"
configs/base_ner_scibert.cfg,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/configs/base_ner_scibert.cfg,"[{'name': 'Train Corpus Configuration', 'match_type': 'full', 'implemented_parts': ['Corpora selection', 'Seed selection', 'GPU allocation'], 'confidence': 1.0, 'evidence': ['train_corpus variable', 'seed variable', 'gpu_allocator variable']}, {'name': 'Model Architecture Configuration', 'match_type': 'full', 'implemented_parts': ['Transformer component', 'Parser component', 'Tagger component', 'Attribute Ruler component', 'Lemmatizer component'], 'confidence': 0.95, 'evidence': ['Frozen components list', 'Transformer, Parser, Tagger, Attribute Ruler, Lemmatizer mentioned in frozen_components']}, {'name': 'Training Configuration', 'match_type': 'full', 'implemented_parts': ['Dropout rate', 'Accumulate gradient steps', 'Patience', 'Maximum epochs', 'Maximum steps', 'Evaluation frequency'], 'confidence': 0.9, 'evidence': ['Dropout, accumulate_gradient, patience, max_epochs, max_steps, eval_frequency parameters defined', 'Relevant training configurations listed in the code']}]",This code snippet configures a Spacy language model training process.,"{'constants': ['Defined training-related constants'], 'types': ['Custom types for training configuration'], 'classes': ['Training configuration class'], 'functions': ['Training process initialization']}"
configs/base_parser_tagger.cfg,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/configs/base_parser_tagger.cfg,"[{'name': 'Train Corpus', 'match_type': 'partial', 'implemented_parts': ['corpus loading', 'seed generation'], 'confidence': 0.9, 'evidence': ['train_corpus variable', 'random seed from system']}, {'name': 'GPU Allocation', 'match_type': 'partial', 'implemented_parts': ['GPU allocation strategy'], 'confidence': 0.8, 'evidence': ['system.gpu_allocator variable']}, {'name': 'Dropout and Accumulation', 'match_type': 'full', 'implemented_parts': [' Dropout rate and gradient accumulation'], 'confidence': 1.0, 'evidence': ['dropout = 0.1', 'accumulate_gradient = 1']}]",This configuration defines the training process for a language model.,"{'constants': ['Train corpus path'], 'types': ['Seed value'], 'classes': ['Model configuration parameters'], 'functions': ['Training loop with specified parameters']}"
configs/base_parser_tagger_scibert.cfg,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/configs/base_parser_tagger_scibert.cfg,"[{'name': 'Corpus Configuration', 'match_type': 'full', 'implemented_parts': ['Seed selection', 'Corpus paths'], 'confidence': 0.95, 'evidence': ['random seed generation', 'corpus file paths defined']}, {'name': 'Model Training Parameters', 'match_type': 'partial', 'implemented_parts': ['Learning rate adjustment', 'Dropout rate'], 'confidence': 0.85, 'evidence': ['adaptive learning rate optimization', 'dropout technique for regularization']}, {'name': 'Evaluation Metrics', 'match_type': 'partial', 'implemented_parts': ['Dependency accuracy', 'Sentence length evaluation'], 'confidence': 0.9, 'evidence': ['dependency parser evaluation metrics', 'sentence length analysis']}]",This configuration file specifies the training and evaluation parameters for a language model.,"{'constants': ['Defines parameters like batch size and learning rate'], 'types': ['Model configuration parameters'], 'classes': ['Spacy language model'], 'functions': ['Training and evaluation pipeline configuration']}"
configs/base_specialized_ner.cfg,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/configs/base_specialized_ner.cfg,"[{'name': 'Trainable model components', 'match_type': 'partial', 'implemented_parts': ['tok2vec', 'parser', 'tagger', 'attribute_ruler', 'lemmatizer'], 'confidence': 0.95, 'evidence': ['Modules are explicitly listed as frozen', 'Initialization sections are present for each component']}, {'name': 'Gradient accumulation and dropout', 'match_type': 'partial', 'implemented_parts': ['accumulate_gradient', 'dropout'], 'confidence': 0.9, 'evidence': ['Accumulate gradient technique is configured', 'Dropout rate is specified in the optimizer section']}, {'name': 'Custom batching strategy', 'match_type': 'partial', 'implemented_parts': ['spacy.batch_by_sequence.v1'], 'confidence': 0.85, 'evidence': ['Custom batcher class is defined with specific size schedule']}, {'name': 'Logging and evaluation metrics', 'match_type': 'partial', 'implemented_parts': ['spacy.ConsoleLogger.v1', 'eval_frequency'], 'confidence': 0.9, 'evidence': ['Console logger is enabled for printing progress', 'Evaluation frequency is set for tracking performance metrics']}]",This code defines a spaCy-based language model training configuration.,"{'constants': ['Defined in environment variables'], 'types': ['Custom spaCy components and batching strategies'], 'classes': ['SpaCy pipeline components'], 'functions': ['Training and evaluation functions for the language model']}"
configs,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/configs,"[{'name': 'Sentence length evaluation', 'match_type': 'partial', 'implemented_parts': ['dependency parser evaluation metrics', 'sentence length analysis'], 'confidence': 0.9, 'evidence': ['Modules are explicitly listed as frozen', 'Initialization sections are present for each component']}, {'name': 'Gradient accumulation and dropout', 'match_type': 'partial', 'implemented_parts': ['accumulate_gradient', 'dropout'], 'confidence': 0.9, 'evidence': ['Accumulate gradient technique is configured', 'Dropout rate is specified in the optimizer section']}, {'name': 'Custom batching strategy', 'match_type': 'partial', 'implemented_parts': ['spacy.batch_by_sequence.v1'], 'confidence': 0.85, 'evidence': ['Custom batcher class is defined with specific size schedule']}, {'name': 'Logging and evaluation metrics', 'match_type': 'partial', 'implemented_parts': ['spacy.ConsoleLogger.v1', 'eval_frequency'], 'confidence': 0.9, 'evidence': ['Console logger is enabled for printing progress', 'Evaluation frequency is set for tracking performance metrics']}]",This configuration file specifies the training and evaluation parameters for a language model.,"{'constants': ['Defines parameters like batch size and learning rate'], 'types': ['Model configuration parameters'], 'classes': ['Spacy language model'], 'functions': ['Training and evaluation pipeline configuration']}"
data/bc5cdr_ner.json,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/data/bc5cdr_ner.json,[],This file describes a Spacy NLP model for biomedical text.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
data/bionlp13cg_ner.json,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/data/bionlp13cg_ner.json,[],This file provides metadata about a Spacy model for biomedical text.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
data/craft_ner.json,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/data/craft_ner.json,[],This file defines metadata for a Spacy NLP model.,"{'constants': ['Language code', 'Model name'], 'types': ['Dictionary of sources'], 'classes': ['Model metadata'], 'functions': ['Describes model details']}"
data/jnlpba_ner.json,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/data/jnlpba_ner.json,"[{'name': 'Memento Pattern', 'match_type': 'partial', 'implemented_parts': ['Caretaker class stores and restores Memento', 'Memento class represents state'], 'confidence': 0.9, 'evidence': ['save_state method', 'restore_state method', 'create_memento method']}, {'name': 'Visitor Pattern', 'match_type': 'partial', 'implemented_parts': ['Visitor adds operations to Element without modifying it'], 'confidence': 0.8, 'evidence': ['visit method', 'accept method']}]",This file demonstrates the implementation of the Memento and Visitor design patterns.,"{'constants': [], 'types': [], 'classes': ['Memento', 'Caretaker'], 'functions': ['save_state', 'restore_state', 'create_memento', 'visit']}"
data/meta_large.json,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/data/meta_large.json,[],Metadata for the core SciSpaCy biomedical language models.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
data/meta_medium.json,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/data/meta_medium.json,[],This file provides metadata about a Spacy model for biomedical text analysis.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
data/meta_scibert.json,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/data/meta_scibert.json,[],Metadata for a SciSpaCy biomedical language model.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
data/meta_small.json,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/data/meta_small.json,[],Meta data for a Spacy NLP model.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
data,FileType.DIR,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/data,[],Metadata for various Spacy NLP models and related files.,"{'constants': [], 'types': [], 'classes': [], 'functions': []}"
docs/.gitinclude,FileType.FILE,allenai,scispacy,v0.5.5,https://allenai.github.io/scispacy/,https://github.com/allenai/scispacy/tree/v0.5.5/docs/.gitinclude,"[{'name': 'Mediator', 'match_type': 'full', 'implemented_parts': ['Centralizes communication', 'Mediator role', 'communication flow'], 'confidence': 1.0, 'evidence': ['Central communication through Mediator', 'Roles of Mediator and Colleagues']}, {'name': 'Memento', 'match_type': 'partial', 'implemented_parts': ['State capture', 'Memento pattern', 'save/restore methods'], 'confidence': 0.9, 'evidence': ['State saving and restoring', 'Originator and Caretaker roles']}, {'name': 'Visitor', 'match_type': 'partial', 'implemented_parts': ['Dynamic dispatch', 'Visitor pattern', 'accept method'], 'confidence': 0.8, 'evidence': ['Accepting different visitors', 'visit method on elements']}]",This file defines core patterns for facilitating communication and state management.,"{'constants': ['Defines patterns-related constants'], 'types': ['Defines types for patterns'], 'classes': ['Defines patterns as classes'], 'functions': ['Provides methods for pattern implementation']}"
